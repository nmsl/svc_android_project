!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
display_order	AVC/h264_baseline_decoder/lib_baseline/AVCdisplay.c	/^void display_order (SPS *sps_id, LIST_MMO *Current_pic, int *address_pic, int *x_size, int *y_size, $/;"	f
AVC_DISPLAY_H	AVC/h264_baseline_decoder/lib_baseline/AVCdisplay.h	36;"	d
SkipP	AVC/h264_baseline_decoder/lib_baseline/BitstreamSkip.c	/^void SkipP(SLICE *Slice, const SPS *Sps, RESIDU *CurrResidu, DATA *Block, unsigned char *SliceTable, $/;"	f
BITSTREAM_H	AVC/h264_baseline_decoder/lib_baseline/BitstreamSkip.h	37;"	d
ERRORDETECTION_H	AVC/h264_baseline_decoder/lib_baseline/ErrorsDetection.h	39;"	d
ErrorsCheckBMbType	AVC/h264_baseline_decoder/lib_baseline/ErrorsDetection.h	/^static __inline int ErrorsCheckBMbType(int MbType)$/;"	f
ErrorsCheckIMbType	AVC/h264_baseline_decoder/lib_baseline/ErrorsDetection.h	/^static __inline int ErrorsCheckIMbType(int MbType)$/;"	f
ErrorsCheckIntraChromaPredMode	AVC/h264_baseline_decoder/lib_baseline/ErrorsDetection.h	/^static __inline int ErrorsCheckIntraChromaPredMode(unsigned char *Mode)$/;"	f
ErrorsCheckMbType	AVC/h264_baseline_decoder/lib_baseline/ErrorsDetection.h	/^static __inline int ErrorsCheckMbType(int MbType, int Limit)$/;"	f
ErrorsCheckPMbType	AVC/h264_baseline_decoder/lib_baseline/ErrorsDetection.h	/^static __inline int ErrorsCheckPMbType(int MbType)$/;"	f
ErrorsCheckRefLx	AVC/h264_baseline_decoder/lib_baseline/ErrorsDetection.h	/^static __inline int ErrorsCheckRefLx(char *RefLx, int NumRefLx)$/;"	f
ErrorsCheckSubMbType	AVC/h264_baseline_decoder/lib_baseline/ErrorsDetection.h	/^static __inline int ErrorsCheckSubMbType(unsigned char *SubMbType, int MaxSubMbType)$/;"	f
ErrorsCheckSubRefLx	AVC/h264_baseline_decoder/lib_baseline/ErrorsDetection.h	/^static __inline int ErrorsCheckSubRefLx(char *RefLx, int NumRefLx)$/;"	f
FinishFrame	AVC/h264_baseline_decoder/lib_baseline/FinishFrame.c	/^void FinishFrame(SPS *Sps, PPS *Pps, LIST_MMO *Current_pic, SLICE *Slice, int EndOfSlice, unsigned char *SliceTab, DATA *TabBlbock, $/;"	f
FinishFrameError	AVC/h264_baseline_decoder/lib_baseline/FinishFrame.c	/^void FinishFrameError(SPS *sps_id, LIST_MMO *Current_pic, int *Crop, int *ImgToDisplay, int *AdressPic, $/;"	f
FINSIH_FRAME_H	AVC/h264_baseline_decoder/lib_baseline/FinishFrame.h	37;"	d
IDR_picture	AVC/h264_baseline_decoder/lib_baseline/IDR_picture.c	/^void IDR_picture( const SPS *Sps, const PPS * Pps, const SLICE *Slice, const unsigned char *SliceTable, $/;"	f
IDR_PICTURE_H	AVC/h264_baseline_decoder/lib_baseline/IDR_picture.h	36;"	d
EDGE_SIZE	AVC/h264_baseline_decoder/lib_baseline/Images_set_edges.c	41;"	d	file:
EDGE_SIZE2	AVC/h264_baseline_decoder/lib_baseline/Images_set_edges.c	42;"	d	file:
ImageSetEdges	AVC/h264_baseline_decoder/lib_baseline/Images_set_edges.c	/^void ImageSetEdges ( unsigned char * RESTRICT y,  unsigned char * RESTRICT u, unsigned char *RESTRICT v$/;"	f
RESTRICT	AVC/h264_baseline_decoder/lib_baseline/Images_set_edges.c	46;"	d	file:
RESTRICT	AVC/h264_baseline_decoder/lib_baseline/Images_set_edges.c	48;"	d	file:
set_value_to_bottom	AVC/h264_baseline_decoder/lib_baseline/Images_set_edges.c	/^void set_value_to_bottom  ( const unsigned char * RESTRICT src, unsigned char * RESTRICT dst$/;"	f
set_value_to_buff_side	AVC/h264_baseline_decoder/lib_baseline/Images_set_edges.c	/^void set_value_to_buff_side ( const unsigned char * RESTRICT src, const unsigned char * RESTRICT dst$/;"	f
set_value_to_top	AVC/h264_baseline_decoder/lib_baseline/Images_set_edges.c	/^void set_value_to_top ( const unsigned char * RESTRICT src, unsigned char * RESTRICT dst$/;"	f
Nal_unit	AVC/h264_baseline_decoder/lib_baseline/Nal.c	/^void Nal_unit (unsigned char *data_in, int *nal_unit_type, int *nal_ref_idc)$/;"	f
decoderh264_init	AVC/h264_baseline_decoder/lib_baseline/Nal.c	/^void decoderh264_init(int pic_width, int pic_height){$/;"	f
get_NalBytesInNalunit	AVC/h264_baseline_decoder/lib_baseline/Nal.c	/^ int get_NalBytesInNalunit ( unsigned char *data, unsigned char *rbsp_byte, int *NumBytesInRBSP)$/;"	f
get_NalBytesInNalunit_wo_emulation_start_code	AVC/h264_baseline_decoder/lib_baseline/Nal.c	/^ int get_NalBytesInNalunit_wo_emulation_start_code ( unsigned char *data,  unsigned char *rbsp_byte, int *NumBytesInRBSP)$/;"	f
readnal_without_start_code	AVC/h264_baseline_decoder/lib_baseline/Nal.c	/^int readnal_without_start_code(unsigned char *data, const int length, unsigned char *rbsp_byte)$/;"	f
search_start_code	AVC/h264_baseline_decoder/lib_baseline/Nal.c	/^int search_start_code ( unsigned char *data, int *offset)$/;"	f
DIV6	AVC/h264_baseline_decoder/lib_baseline/Quantization.c	/^const unsigned char DIV6 [72] = { 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11};$/;"	v
Default_W	AVC/h264_baseline_decoder/lib_baseline/Quantization.c	/^const short  Default_W  [6][3] = {{ 10, 13, 16 }, { 11, 14, 18 }, { 13, 16, 20 }, { 14, 18, 23 }, { 16, 20, 25 }, { 18, 23, 29 }};$/;"	v
Default_W8	AVC/h264_baseline_decoder/lib_baseline/Quantization.c	/^static short Default_W8 [6][6]= {{20,18,32,19,25,24}, {22,19,35,21,28,26}, {26,23,42,24,33,31}, {28,25,45,26,35,33}, {32,28,51,30,40,38}, {36,32,58,34,46,43},};$/;"	v	file:
W8_scan	AVC/h264_baseline_decoder/lib_baseline/Quantization.c	/^static const short W8_scan[16] = { 0,3,4,3, 3,1,5,1, 4,5,2,5, 3,1,5,1};$/;"	v	file:
div6	AVC/h264_baseline_decoder/lib_baseline/Quantization.c	/^const unsigned char div6 [52] = { 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8 };$/;"	v
init_quantization	AVC/h264_baseline_decoder/lib_baseline/Quantization.c	/^void init_quantization (W_TABLES *quantif, int scaling_matrix_present, short scaling4[][16], short scaling8[6][64] )$/;"	f
rem6	AVC/h264_baseline_decoder/lib_baseline/Quantization.c	/^const unsigned char rem6 [52] = { 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3 };$/;"	v
ARG_INPUTFILE	AVC/h264_baseline_decoder/lib_baseline/Read_H264.c	/^static char *ARG_INPUTFILE 	= 0;$/;"	v	file:
Filesize	AVC/h264_baseline_decoder/lib_baseline/Read_H264.c	/^int Filesize ( FILE *f )$/;"	f
LOGE	AVC/h264_baseline_decoder/lib_baseline/Read_H264.c	57;"	d	file:
LOG_TAG	AVC/h264_baseline_decoder/lib_baseline/Read_H264.c	56;"	d	file:
READ_NO_END_	AVC/h264_baseline_decoder/lib_baseline/Read_H264.c	39;"	d	file:
ReadAuH264	AVC/h264_baseline_decoder/lib_baseline/Read_H264.c	/^void ReadAuH264 (int NbBytesToRead, unsigned char *buffer, int ReadNewBytes, int *NbBytesTreated)$/;"	f
RemainBytes	AVC/h264_baseline_decoder/lib_baseline/Read_H264.c	/^int	RemainBytes = 0;$/;"	v
StreamBuffer	AVC/h264_baseline_decoder/lib_baseline/Read_H264.c	/^char* StreamBuffer 		= NULL;$/;"	v
StreamBufferPos	AVC/h264_baseline_decoder/lib_baseline/Read_H264.c	/^int StreamBufferPos 	= 0;$/;"	v
currentBufferPos	AVC/h264_baseline_decoder/lib_baseline/Read_H264.c	/^int currentBufferPos 	= 0;$/;"	v
file_size	AVC/h264_baseline_decoder/lib_baseline/Read_H264.c	/^int file_size 			= 0;$/;"	v
getFileSizePtr	AVC/h264_baseline_decoder/lib_baseline/Read_H264.c	/^int* getFileSizePtr(){return &file_size;}$/;"	f
getStreamBufferPosPtr	AVC/h264_baseline_decoder/lib_baseline/Read_H264.c	/^int* getStreamBufferPosPtr(){return &StreamBufferPos;}$/;"	f
getStreamBufferPtr	AVC/h264_baseline_decoder/lib_baseline/Read_H264.c	/^char** getStreamBufferPtr(){return &StreamBuffer;}$/;"	f
nb_octet_already_read	AVC/h264_baseline_decoder/lib_baseline/Read_H264.c	/^int nb_octet_already_read 	= 0;$/;"	v
nb_repeat	AVC/h264_baseline_decoder/lib_baseline/Read_H264.c	/^static int nb_repeat 		= 0;$/;"	v	file:
ptfile	AVC/h264_baseline_decoder/lib_baseline/Read_H264.c	/^static FILE *ptfile ;$/;"	v	file:
readh264	AVC/h264_baseline_decoder/lib_baseline/Read_H264.c	/^void readh264 ( const int nb_octets_to_read_temp, int NalRbspBytes, int *nb_octets_already_read, unsigned char *buffer)$/;"	f
readh264_init	AVC/h264_baseline_decoder/lib_baseline/Read_H264.c	/^int readh264_init ( int argc, char *argv [] )$/;"	f
readh264_init_TI	AVC/h264_baseline_decoder/lib_baseline/Read_H264.c	/^int readh264_init_TI ( int argc, char *argv [], FILE* ofile, unsigned int* frame_num) \/\/RAL$/;"	f
t0	AVC/h264_baseline_decoder/lib_baseline/Read_H264.c	/^double t16, t15, t0, t1;$/;"	v
t1	AVC/h264_baseline_decoder/lib_baseline/Read_H264.c	/^double t16, t15, t0, t1;$/;"	v
t15	AVC/h264_baseline_decoder/lib_baseline/Read_H264.c	/^double t16, t15, t0, t1;$/;"	v
t16	AVC/h264_baseline_decoder/lib_baseline/Read_H264.c	/^double t16, t15, t0, t1;$/;"	v
READ_H264_H	AVC/h264_baseline_decoder/lib_baseline/Read_h264.h	36;"	d
C_SLICE_GROUPMAP	AVC/h264_baseline_decoder/lib_baseline/SliceGroupMap.h	35;"	d
NextMbAddress	AVC/h264_baseline_decoder/lib_baseline/SliceGroupMap.h	/^static __inline short NextMbAddress ( const short ai_iN,  const int ai_iPicSizeInMbs, const int aio_pstSliceGroupMap [ ]){$/;"	f
Next_MbAddress	AVC/h264_baseline_decoder/lib_baseline/SliceGroupMap.h	/^static __inline short Next_MbAddress ( const short ai_iN,  const short ai_iPicSizeInMbs, const short PicWiInMbs, $/;"	f
C_TRANSFORM	AVC/h264_baseline_decoder/lib_baseline/Transform.c	34;"	d	file:
ict_4x4_dc_lum	AVC/h264_baseline_decoder/lib_baseline/Transform.c	/^void ict_4x4_dc_lum ( const short * RESTRICT  block, short * RESTRICT  dst)$/;"	f
ict_4x4_residual_C	AVC/h264_baseline_decoder/lib_baseline/Transform.c	/^void ict_4x4_residual_C ( short * RESTRICT  block, unsigned char * RESTRICT  image, const short PicWidthInPix){$/;"	f
SPACKU4	AVC/h264_baseline_decoder/lib_baseline/Transform.h	58;"	d
SPACKU4	AVC/h264_baseline_decoder/lib_baseline/Transform.h	62;"	d
TRANSFORM_H	AVC/h264_baseline_decoder/lib_baseline/Transform.h	39;"	d
ict_4x4_dc_chroma	AVC/h264_baseline_decoder/lib_baseline/Transform.h	/^static __inline void ict_4x4_dc_chroma ( const short * RESTRICT  block, short * RESTRICT  dst)$/;"	f
ict_4x4_residual	AVC/h264_baseline_decoder/lib_baseline/Transform.h	45;"	d
ict_4x4_residual	AVC/h264_baseline_decoder/lib_baseline/Transform.h	51;"	d
ict_4x4_residual	AVC/h264_baseline_decoder/lib_baseline/Transform.h	52;"	d
ict_4x4_residual	AVC/h264_baseline_decoder/lib_baseline/Transform.h	59;"	d
ict_4x4_residual	AVC/h264_baseline_decoder/lib_baseline/Transform.h	60;"	d
ict_4x4_residual_MMX	AVC/h264_baseline_decoder/lib_baseline/Transform.h	/^static __inline void ict_4x4_residual_MMX ( short * RESTRICT  block, unsigned char * RESTRICT  image, const short PicWidthInPix)$/;"	f
ict_4x4_residual_TI	AVC/h264_baseline_decoder/lib_baseline/Transform.h	/^static __inline void ict_4x4_residual_TI ( short * RESTRICT  block, unsigned char * RESTRICT  image, const short PicWidthInPix){$/;"	f
HEADER_H	AVC/h264_baseline_decoder/lib_baseline/bitstream.h	35;"	d
bytes_aligned	AVC/h264_baseline_decoder/lib_baseline/bitstream.h	/^static __inline int bytes_aligned (  int position )$/;"	f
get32bits	AVC/h264_baseline_decoder/lib_baseline/bitstream.h	/^static  __inline unsigned int get32bits ( const unsigned char *  tab,  int *position )$/;"	f
getNbits	AVC/h264_baseline_decoder/lib_baseline/bitstream.h	/^static  __inline unsigned int getNbits ( const unsigned char *tab,  int *position, const int n )$/;"	f
log_base2	AVC/h264_baseline_decoder/lib_baseline/bitstream.h	/^static __inline int log_base2 ( int a )$/;"	f
rbsp_trailing_bits	AVC/h264_baseline_decoder/lib_baseline/bitstream.h	/^static __inline void rbsp_trailing_bits (int *position )$/;"	f
read_me	AVC/h264_baseline_decoder/lib_baseline/bitstream.h	/^static __inline int read_me ( const unsigned char *tab,  int *pos, int mode )$/;"	f
read_se	AVC/h264_baseline_decoder/lib_baseline/bitstream.h	/^static __inline int read_se ( const unsigned char *  tab,  int *pos )$/;"	f
read_te	AVC/h264_baseline_decoder/lib_baseline/bitstream.h	/^static __inline int read_te ( const unsigned char *  tab,  int *pos, int x )$/;"	f
read_ue	AVC/h264_baseline_decoder/lib_baseline/bitstream.h	41;"	d
read_ue	AVC/h264_baseline_decoder/lib_baseline/bitstream.h	45;"	d
read_ue	AVC/h264_baseline_decoder/lib_baseline/bitstream.h	46;"	d
read_ue_TI	AVC/h264_baseline_decoder/lib_baseline/bitstream.h	/^static __inline int read_ue_TI ( const unsigned char *  tab,  int *pos )$/;"	f
show32bits	AVC/h264_baseline_decoder/lib_baseline/bitstream.h	42;"	d
show32bits	AVC/h264_baseline_decoder/lib_baseline/bitstream.h	48;"	d
show32bits	AVC/h264_baseline_decoder/lib_baseline/bitstream.h	49;"	d
show32bits	AVC/h264_baseline_decoder/lib_baseline/bitstream.h	55;"	d
show32bits	AVC/h264_baseline_decoder/lib_baseline/bitstream.h	56;"	d
show32bits_C	AVC/h264_baseline_decoder/lib_baseline/bitstream.h	/^static  __inline int show32bits_C ( const unsigned char *  tab,  const int position )$/;"	f
show32bits_MMX	AVC/h264_baseline_decoder/lib_baseline/bitstream.h	/^static  __inline int show32bits_MMX ( const unsigned char *  tab,  const int position )$/;"	f
show32bits_TI	AVC/h264_baseline_decoder/lib_baseline/bitstream.h	/^static  __inline int show32bits_TI ( const unsigned char *  tab,  const int position )$/;"	f
show3Bytes_Nal	AVC/h264_baseline_decoder/lib_baseline/bitstream.h	/^static  __inline unsigned int show3Bytes_Nal ( const unsigned char *tab, const int pos_char){$/;"	f
showNbits	AVC/h264_baseline_decoder/lib_baseline/bitstream.h	/^static  __inline unsigned int showNbits ( const unsigned char *  tab, const int position, const int n )$/;"	f
showNbits_64	AVC/h264_baseline_decoder/lib_baseline/bitstream.h	/^static  __inline __m64 showNbits_64 (const unsigned char *tab, const int position, const int n)$/;"	f
showNbits_9max	AVC/h264_baseline_decoder/lib_baseline/bitstream.h	/^static  __inline unsigned int showNbits_9max ( const unsigned char *tab, const int position, const int n )$/;"	f
build_table	AVC/h264_baseline_decoder/lib_baseline/cavlc.c	/^int build_table ( VLC_TYPE *vlc, int table_nb_bits, int nb_codes, const int *bits, const int *codes, int code_prefix, int n_prefix, int position, int *table )$/;"	f
chroma_dc_coeff_token_bits	AVC/h264_baseline_decoder/lib_baseline/cavlc.c	/^const int    chroma_dc_coeff_token_bits [4 * 5] = { 1, 0, 0, 0, 7, 1, 0, 0, 4, 6, 1, 0, 3, 3, 2, 5, 2, 3, 2, 0, };$/;"	v
chroma_dc_coeff_token_len	AVC/h264_baseline_decoder/lib_baseline/cavlc.c	/^const int    chroma_dc_coeff_token_len [4 * 5] = { 2, 0, 0, 0, 6, 1, 0, 0, 6, 6, 3, 0, 6, 7, 7, 6, 6, 8, 8, 7, };$/;"	v
chroma_dc_total_zeros_bits	AVC/h264_baseline_decoder/lib_baseline/cavlc.c	/^const int    chroma_dc_total_zeros_bits [3][4]  = {{ 1, 1, 1, 0, }, { 1, 1, 0, 0, }, { 1, 0, 0, 0, }, } ;$/;"	v
chroma_dc_total_zeros_len	AVC/h264_baseline_decoder/lib_baseline/cavlc.c	/^const int    chroma_dc_total_zeros_len [3][4] = {{ 1, 2, 3, 3, }, { 1, 2, 2, 0, }, { 1, 1, 0, 0, }, } ;$/;"	v
coeff_token_bits	AVC/h264_baseline_decoder/lib_baseline/cavlc.c	/^const int    coeff_token_bits [4][4 * 17] = {{ 1, 0, 0, 0, 5, 1, 0, 0, 7, 4, 1, 0, 7, 6, 5, 3, 7, 6, 5, 3, 7, 6, 5, 4, 15, 6, 5, 4, 11, 14, 5, 4, 8, 10, 13, 4, 15$/;"	v
coeff_token_len	AVC/h264_baseline_decoder/lib_baseline/cavlc.c	/^const int    coeff_token_len [4][4 * 17] = {{ 1, 0, 0, 0, 6, 2, 0, 0, 8, 6, 3, 0, 9, 8, 7, 5, 10, 9, 8, 6, 11, 10, 9, 7, 13, 11, 10, 8, 13, 13, 11, 9, 13$/;"	v
coeff_token_table_index	AVC/h264_baseline_decoder/lib_baseline/cavlc.c	/^const int    coeff_token_table_index [17] = { 0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3 };$/;"	v
decode_init_vlc	AVC/h264_baseline_decoder/lib_baseline/cavlc.c	/^void decode_init_vlc(VLC_TABLES *Vlc){$/;"	f
golomb_to_inter	AVC/h264_baseline_decoder/lib_baseline/cavlc.c	/^const char golomb_to_inter [48]  = { 0, 16, 1, 2, 4, 8, 32, 3, 5, 10, 12, 15, 47, 7, 11, 13, 14, 6, 9, 31, 35, 37, 42, 44, 33, 34, 36, 40, 39, 43$/;"	v
golomb_to_intra4x4	AVC/h264_baseline_decoder/lib_baseline/cavlc.c	/^const char golomb_to_intra4x4 [48] = { 47, 31, 15, 0, 23, 27, 29, 30, 7, 11, 13, 14, 39, 43, 45, 46, 16, 3, 5, 10, 12, 19, 21, 26, 28, 35, 37, 42, 44$/;"	v
ietr_log2_tab	AVC/h264_baseline_decoder/lib_baseline/cavlc.c	/^const int    ietr_log2_tab [256] = { 0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7 };$/;"	v
init_coeff_token_vlc_adress	AVC/h264_baseline_decoder/lib_baseline/cavlc.c	/^void init_coeff_token_vlc_adress ( int ao_tiCoeff_token_vlc_adress [ ] )$/;"	f
init_vlc	AVC/h264_baseline_decoder/lib_baseline/cavlc.c	/^int init_vlc ( VLC_TYPE *vlc, int nb_bits, int nb_codes, const int *bits, const int *codes)$/;"	f
read_ue_C	AVC/h264_baseline_decoder/lib_baseline/cavlc.c	/^\/*static __inline*\/ int read_ue_C ( const unsigned char *tab,  int *pos )$/;"	f
residual	AVC/h264_baseline_decoder/lib_baseline/cavlc.c	/^void residual (const unsigned char *ai_pcData, int *position, RESIDU *Residu, const VLC_TABLES *Vlc,  unsigned char NonZeroCountCache [ ]){$/;"	f
residual_block_cavlc_16_C	AVC/h264_baseline_decoder/lib_baseline/cavlc.c	/^void residual_block_cavlc_16_C( short *ao_piCoeffLevel, const int ai_iMaxNumCoeff, const unsigned char *RESTRICT ai_poData, int *position, $/;"	f
residual_block_cavlc_4_C	AVC/h264_baseline_decoder/lib_baseline/cavlc.c	/^void residual_block_cavlc_4_C ( short * ao_piCoeffLevel, const unsigned char * RESTRICT ai_poData, int * position , const VLC_TABLES *vlc)$/;"	f
residual_block_cavlc_64	AVC/h264_baseline_decoder/lib_baseline/cavlc.c	/^void residual_block_cavlc_64( short *   ao_piCoeffLevel, const int scantable[], const unsigned char * RESTRICT ai_poData, int * position, $/;"	f
run_bits	AVC/h264_baseline_decoder/lib_baseline/cavlc.c	/^const int    run_bits [7][16] = {{ 1, 0 }, { 1, 1, 0 }, { 3, 2, 1, 0 }, { 3, 2, 1, 1, 0 }, { 3, 2, 3, 2, 1, 0 }, { 3, 0, 1, 3, 2, 5, 4 } , { 7, 6, 5, 4, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1 }, };$/;"	v
run_len	AVC/h264_baseline_decoder/lib_baseline/cavlc.c	/^const int    run_len [7][16]  = {{ 1, 1 }, { 1, 2, 2 }, { 2, 2, 2, 2 }, { 2, 2, 2, 3, 3 }, { 2, 2, 3, 3, 3, 3 }, { 2, 3, 3, 3, 3, 3, 3 } , { 3, 3, 3, 3, 3, 3, 3, 4, 5, 6, 7, 8, 9, 10, 11 }, };$/;"	v
total_zeros_bits	AVC/h264_baseline_decoder/lib_baseline/cavlc.c	/^const int    total_zeros_bits [16][16] = {{ 1, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 1 }$/;"	v
total_zeros_len	AVC/h264_baseline_decoder/lib_baseline/cavlc.c	/^const int    total_zeros_len [16][16]  = {{ 1, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 9 }, { 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 6, 6, 6, 6 }$/;"	v
zigzag_scan8x8_cavlc	AVC/h264_baseline_decoder/lib_baseline/cavlc.c	/^const int zigzag_scan8x8_cavlc[64]={ 0+0*8, 1+1*8, 1+2*8, 2+2*8, 4+1*8, 0+5*8, 3+3*8, 7+0*8, 3+4*8, 1+7*8, 5+3*8, 6+3*8, 2+7*8, 6+4*8, 5+6*8, 7+5*8,$/;"	v
CAVLC_H	AVC/h264_baseline_decoder/lib_baseline/cavlc.h	35;"	d
MapUnsignedToShort	AVC/h264_baseline_decoder/lib_baseline/cavlc.h	/^static __inline short MapUnsignedToShort (const int levelCode){$/;"	f
TotalCoeff	AVC/h264_baseline_decoder/lib_baseline/cavlc.h	/^static __inline int TotalCoeff ( const int ai_iCoeff_token ){$/;"	f
TrailingOnes	AVC/h264_baseline_decoder/lib_baseline/cavlc.h	/^static __inline int TrailingOnes ( const int ai_iCoeff_token ){$/;"	f
getCoeffTokenIndex	AVC/h264_baseline_decoder/lib_baseline/cavlc.h	/^static  __inline int getCoeffTokenIndex(const int ai_iPred_non_zero_count)$/;"	f
pred_non_zero_count	AVC/h264_baseline_decoder/lib_baseline/cavlc.h	/^static __inline int pred_non_zero_count ( const short ai_iN, const unsigned char ai_piNon_zero_count_cache [ ] )$/;"	f
read_ceMax_depth1	AVC/h264_baseline_decoder/lib_baseline/cavlc.h	/^static  __inline int read_ceMax_depth1 ( const unsigned char *  ai_pcData,  int * const aio_piPosition, const VLC_TYPE ai_pstTable [ ], const int ai_iBits)$/;"	f
read_ceMax_depth2	AVC/h264_baseline_decoder/lib_baseline/cavlc.h	/^static  __inline short read_ceMax_depth2 ( const unsigned char *  ai_pcData, int *aio_piPosition, const VLC_TYPE ai_pstTable [ ])$/;"	f
read_levelprefix	AVC/h264_baseline_decoder/lib_baseline/cavlc.h	/^static __inline unsigned int read_levelprefix ( const unsigned char * ai_poData,  int *aio_piPosition,  int *ao_piRestBits)$/;"	f
residual_block_cavlc_16	AVC/h264_baseline_decoder/lib_baseline/cavlc.h	47;"	d
residual_block_cavlc_16	AVC/h264_baseline_decoder/lib_baseline/cavlc.h	54;"	d
residual_block_cavlc_16	AVC/h264_baseline_decoder/lib_baseline/cavlc.h	55;"	d
residual_block_cavlc_4	AVC/h264_baseline_decoder/lib_baseline/cavlc.h	48;"	d
residual_block_cavlc_4	AVC/h264_baseline_decoder/lib_baseline/cavlc.h	58;"	d
residual_block_cavlc_4	AVC/h264_baseline_decoder/lib_baseline/cavlc.h	59;"	d
residual_block_cavlc_16_MMX	AVC/h264_baseline_decoder/lib_baseline/cavlc_mmx.c	/^void residual_block_cavlc_16_MMX( short *   ao_piCoeffLevel, const int ai_iMaxNumCoeff, const unsigned char *ai_poData, int *   position$/;"	f
residual_block_cavlc_4_MMX	AVC/h264_baseline_decoder/lib_baseline/cavlc_mmx.c	/^void residual_block_cavlc_4_MMX ( short * ao_piCoeffLevel, const unsigned char * ai_poData, int * position , const VLC_TABLES *vlc)$/;"	f
ADD	AVC/h264_baseline_decoder/lib_baseline/clip.h	40;"	d
CLIP255	AVC/h264_baseline_decoder/lib_baseline/clip.h	47;"	d
CLIP255	AVC/h264_baseline_decoder/lib_baseline/clip.h	51;"	d
CLIP255_16	AVC/h264_baseline_decoder/lib_baseline/clip.h	59;"	d
CLIP3	AVC/h264_baseline_decoder/lib_baseline/clip.h	46;"	d
CLIP3	AVC/h264_baseline_decoder/lib_baseline/clip.h	52;"	d
CLIP3_16	AVC/h264_baseline_decoder/lib_baseline/clip.h	58;"	d
CLIP_H	AVC/h264_baseline_decoder/lib_baseline/clip.h	36;"	d
MAX	AVC/h264_baseline_decoder/lib_baseline/clip.h	39;"	d
MAX16	AVC/h264_baseline_decoder/lib_baseline/clip.h	45;"	d
MAX16	AVC/h264_baseline_decoder/lib_baseline/clip.h	50;"	d
MIN	AVC/h264_baseline_decoder/lib_baseline/clip.h	38;"	d
MIN16	AVC/h264_baseline_decoder/lib_baseline/clip.h	44;"	d
MIN16	AVC/h264_baseline_decoder/lib_baseline/clip.h	49;"	d
SUB	AVC/h264_baseline_decoder/lib_baseline/clip.h	41;"	d
DATA_H	AVC/h264_baseline_decoder/lib_baseline/data.h	35;"	d
GetMbPosition	AVC/h264_baseline_decoder/lib_baseline/data.h	/^static __inline void GetMbPosition ( short iCurrMbAddr, short PicWidthInMbs, short *iMb_x, short *iMb_y )$/;"	f
SCAN8	AVC/h264_baseline_decoder/lib_baseline/data.h	97;"	d
b_mb_type_info	AVC/h264_baseline_decoder/lib_baseline/data.h	/^static const PMbInfo b_mb_type_info[23]={$/;"	v
divide	AVC/h264_baseline_decoder/lib_baseline/data.h	/^static __inline int divide ( int num, int den ) \/\/ num and den ranges are 15 bits$/;"	f
i_mb_type_info	AVC/h264_baseline_decoder/lib_baseline/data.h	/^static   const IMbInfo i_mb_type_info [27]= { $/;"	v
p_mb_type_info	AVC/h264_baseline_decoder/lib_baseline/data.h	/^static const PMbInfo p_mb_type_info[5]={{Pred_L0   , Pred_L0 , NA      , 1, 3},$/;"	v
qP_tab	AVC/h264_baseline_decoder/lib_baseline/data.h	/^static short	 qP_tab[58]={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,29,30,31,32,32,33,34,34,35,35,36,36,37,37,37,38,38,38,39,39,39,39,39,39,39,39,39,39};$/;"	v
sub_num_b_part	AVC/h264_baseline_decoder/lib_baseline/data.h	/^static const int sub_num_b_part[13]={4, 1, 1, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4};$/;"	v
sub_num_p_part	AVC/h264_baseline_decoder/lib_baseline/data.h	/^static const int sub_num_p_part[5]={1, 2, 2, 4, 0};$/;"	v
zigzag_scan	AVC/h264_baseline_decoder/lib_baseline/data.h	/^static const short zigzag_scan [16 + 2 * 4] = { 4 + 1 * 8, 5 + 1 * 8, 4 + 2 * 8, 5 + 2 * 8, 6 + 1 * 8, 7 + 1 * 8,  6 + 2 * 8, 7 + 2 * 8$/;"	v
zigzag_scan8x8	AVC/h264_baseline_decoder/lib_baseline/data.h	/^static const int zigzag_scan8x8[64]={ 0 + 0 * 8, 1 + 0 * 8, 0 + 1 * 8, 0 + 2 * 8, 1 + 1 * 8, 2 + 0 * 8, 3 + 0 * 8, 2 + 1 * 8$/;"	v
C_MB_I	AVC/h264_baseline_decoder/lib_baseline/decode_MB_I.c	33;"	d	file:
decode_I_Intra16x16_lum	AVC/h264_baseline_decoder/lib_baseline/decode_MB_I.c	/^void decode_I_Intra16x16_lum (unsigned char *image, const short PicWidthInPix, const RESIDU *CurrResidu,$/;"	f
decode_I_Intra4x4_lum	AVC/h264_baseline_decoder/lib_baseline/decode_MB_I.c	/^void decode_I_Intra4x4_lum ( unsigned char *image, const short PicWidthInPix, const RESIDU *residu, const short W4x4_intra [6][16],const mb4x4_mode_pf *mb4x4_mode)$/;"	f
decode_I_Intra8x8_lum	AVC/h264_baseline_decoder/lib_baseline/decode_MB_I.c	/^void decode_I_Intra8x8_lum ( unsigned char *image, const short PicWidthInPix, const RESIDU *residu, const short W8x8_intra [6][64] )$/;"	f
decode_I_chroma	AVC/h264_baseline_decoder/lib_baseline/decode_MB_I.c	/^void decode_I_chroma ( unsigned char * image_Cb, unsigned char *image_Cr, short PicWidth, const PPS *pps, $/;"	f
decode_MB_I	AVC/h264_baseline_decoder/lib_baseline/decode_MB_I.c	/^void decode_MB_I (unsigned char *image, unsigned char *image_Cb, unsigned char *image_Cr, const PPS *pps, $/;"	f
C_MB_P	AVC/h264_baseline_decoder/lib_baseline/decode_MB_P.c	34;"	d	file:
ComputeResidual	AVC/h264_baseline_decoder/lib_baseline/decode_MB_P.c	/^void ComputeResidual(const PPS *Pps, RESIDU *CurrResidu, const short PicWidthInPix, unsigned char *Y,$/;"	f
DecodeResidual4x4	AVC/h264_baseline_decoder/lib_baseline/decode_MB_P.c	/^void DecodeResidual4x4 ( unsigned char *image, RESIDU *residu, const short PicWidthInPix,  const short W4x4_inter [6][16])$/;"	f
DecodeResidual8x8	AVC/h264_baseline_decoder/lib_baseline/decode_MB_P.c	/^void DecodeResidual8x8 ( unsigned char *Y, RESIDU *CurrResidu, const short PicWidthInPix, const short W8x8 [6][64])$/;"	f
DecodeResidualChroma	AVC/h264_baseline_decoder/lib_baseline/decode_MB_P.c	/^void DecodeResidualChroma (unsigned char *image_Cb, unsigned char *image_Cr, const PPS *pps, const RESIDU *residu, const short PicWidthInPix, const W_TABLES *quantif)$/;"	f
MB_I_H	AVC/h264_baseline_decoder/lib_baseline/decode_mb_I.h	36;"	d
MB_P_H	AVC/h264_baseline_decoder/lib_baseline/decode_mb_P.h	37;"	d
CurrentDisplay	AVC/h264_baseline_decoder/lib_baseline/display_management.c	/^void CurrentDisplay(MMO *CurrMmo, LAYER_MMO *LayerMmo, LIST_MMO *Frame, int *address_pic){$/;"	f
FindBestFrame	AVC/h264_baseline_decoder/lib_baseline/display_management.c	/^POC_PARAMS* FindBestFrame(MMO *mmo, POC_PARAMS *FrameList, int *BestPos, int MinPoc){$/;"	f
SetAsDisplayed	AVC/h264_baseline_decoder/lib_baseline/display_management.c	/^char SetAsDisplayed(LAYER_MMO *LayerMmo, int best_poc, int address_pic)$/;"	f
StorePicture	AVC/h264_baseline_decoder/lib_baseline/display_management.c	/^void StorePicture(POC_PARAMS *Frame, LIST_MMO *Current_pic, SPS *sps, int layer_number){$/;"	f
DISPLAY_MANAG_H	AVC/h264_baseline_decoder/lib_baseline/display_management.h	35;"	d
CLIP3_OPTIM	AVC/h264_baseline_decoder/lib_baseline/edge_filter.c	53;"	d	file:
alpha_table	AVC/h264_baseline_decoder/lib_baseline/edge_filter.c	/^const unsigned char alpha_table[52] = {$/;"	v
beta_table	AVC/h264_baseline_decoder/lib_baseline/edge_filter.c	/^const unsigned char beta_table[52] = {$/;"	v
filter_mb_edgech	AVC/h264_baseline_decoder/lib_baseline/edge_filter.c	/^void filter_mb_edgech(unsigned char pix[],  int index_a, int index_b, const int stride, char bS[4])$/;"	f
filter_mb_edgecv	AVC/h264_baseline_decoder/lib_baseline/edge_filter.c	/^void filter_mb_edgecv(unsigned char pix[],  int index_a, int index_b, const int stride, char bS[4])$/;"	f
filter_mb_edgeh	AVC/h264_baseline_decoder/lib_baseline/edge_filter.c	/^void filter_mb_edgeh( unsigned char pix[], const int stride, char bS[4], int index_a, int index_b) {$/;"	f
filter_mb_edgev	AVC/h264_baseline_decoder/lib_baseline/edge_filter.c	/^void filter_mb_edgev(unsigned char pix[],const  int stride, char bS[4], int index_a, int index_b )$/;"	f
strong_horizontal_chroma_C	AVC/h264_baseline_decoder/lib_baseline/edge_filter.c	/^void strong_horizontal_chroma_C(unsigned char pix[], const int xstride	, const unsigned char alpha, const unsigned char beta)$/;"	f
strong_horizontal_luma_C	AVC/h264_baseline_decoder/lib_baseline/edge_filter.c	/^void strong_horizontal_luma_C(unsigned char pix[], const int stride, const unsigned char alpha, const unsigned char beta)$/;"	f
strong_vertical_chroma_C	AVC/h264_baseline_decoder/lib_baseline/edge_filter.c	/^void strong_vertical_chroma_C(unsigned char pix[],const unsigned int ystride, const unsigned char alpha, const unsigned char beta)$/;"	f
strong_vertical_luma_C	AVC/h264_baseline_decoder/lib_baseline/edge_filter.c	/^void strong_vertical_luma_C ( unsigned char pix[], const unsigned int stride,	 const unsigned char alpha, const unsigned char beta)$/;"	f
tc0_table	AVC/h264_baseline_decoder/lib_baseline/edge_filter.c	/^const unsigned char tc0_table[52][3] = {$/;"	v
weak_horizontal_chroma_C	AVC/h264_baseline_decoder/lib_baseline/edge_filter.c	/^void weak_horizontal_chroma_C(unsigned char pix[], const int xstride, const unsigned char alpha	, const unsigned char beta, const unsigned char tc0)$/;"	f
weak_horizontal_luma_C	AVC/h264_baseline_decoder/lib_baseline/edge_filter.c	/^void weak_horizontal_luma_C(unsigned char pix[], const int xstride, const unsigned char alpha, const unsigned char beta, const unsigned char tc0){$/;"	f
weak_vertical_chroma_C	AVC/h264_baseline_decoder/lib_baseline/edge_filter.c	/^void weak_vertical_chroma_C(unsigned char pix[], const int ystride, const unsigned char alpha, const unsigned char beta, const unsigned char tc0)$/;"	f
weak_vertical_luma_C	AVC/h264_baseline_decoder/lib_baseline/edge_filter.c	/^void weak_vertical_luma_C(unsigned char pix[], const int ystride,const unsigned char alpha	, const unsigned char beta, const unsigned char tc0)$/;"	f
C_EDGE_FILTER	AVC/h264_baseline_decoder/lib_baseline/edge_filter.h	39;"	d
strong_horizontal_chroma	AVC/h264_baseline_decoder/lib_baseline/edge_filter.h	53;"	d
strong_horizontal_chroma	AVC/h264_baseline_decoder/lib_baseline/edge_filter.h	66;"	d
strong_horizontal_chroma	AVC/h264_baseline_decoder/lib_baseline/edge_filter.h	78;"	d
strong_horizontal_luma	AVC/h264_baseline_decoder/lib_baseline/edge_filter.h	47;"	d
strong_horizontal_luma	AVC/h264_baseline_decoder/lib_baseline/edge_filter.h	62;"	d
strong_horizontal_luma	AVC/h264_baseline_decoder/lib_baseline/edge_filter.h	72;"	d
strong_vertical_chroma	AVC/h264_baseline_decoder/lib_baseline/edge_filter.h	50;"	d
strong_vertical_chroma	AVC/h264_baseline_decoder/lib_baseline/edge_filter.h	64;"	d
strong_vertical_chroma	AVC/h264_baseline_decoder/lib_baseline/edge_filter.h	75;"	d
strong_vertical_luma	AVC/h264_baseline_decoder/lib_baseline/edge_filter.h	44;"	d
strong_vertical_luma	AVC/h264_baseline_decoder/lib_baseline/edge_filter.h	60;"	d
strong_vertical_luma	AVC/h264_baseline_decoder/lib_baseline/edge_filter.h	69;"	d
weak_horizontal_chroma	AVC/h264_baseline_decoder/lib_baseline/edge_filter.h	52;"	d
weak_horizontal_chroma	AVC/h264_baseline_decoder/lib_baseline/edge_filter.h	65;"	d
weak_horizontal_chroma	AVC/h264_baseline_decoder/lib_baseline/edge_filter.h	77;"	d
weak_horizontal_chroma	AVC/h264_baseline_decoder/lib_baseline/edge_filter.h	87;"	d
weak_horizontal_chroma	AVC/h264_baseline_decoder/lib_baseline/edge_filter.h	90;"	d
weak_horizontal_luma	AVC/h264_baseline_decoder/lib_baseline/edge_filter.h	46;"	d
weak_horizontal_luma	AVC/h264_baseline_decoder/lib_baseline/edge_filter.h	61;"	d
weak_horizontal_luma	AVC/h264_baseline_decoder/lib_baseline/edge_filter.h	71;"	d
weak_horizontal_luma	AVC/h264_baseline_decoder/lib_baseline/edge_filter.h	85;"	d
weak_horizontal_luma	AVC/h264_baseline_decoder/lib_baseline/edge_filter.h	92;"	d
weak_vertical_chroma	AVC/h264_baseline_decoder/lib_baseline/edge_filter.h	49;"	d
weak_vertical_chroma	AVC/h264_baseline_decoder/lib_baseline/edge_filter.h	63;"	d
weak_vertical_chroma	AVC/h264_baseline_decoder/lib_baseline/edge_filter.h	74;"	d
weak_vertical_luma	AVC/h264_baseline_decoder/lib_baseline/edge_filter.h	43;"	d
weak_vertical_luma	AVC/h264_baseline_decoder/lib_baseline/edge_filter.h	59;"	d
weak_vertical_luma	AVC/h264_baseline_decoder/lib_baseline/edge_filter.h	68;"	d
weak_vertical_luma	AVC/h264_baseline_decoder/lib_baseline/edge_filter.h	86;"	d
weak_vertical_luma	AVC/h264_baseline_decoder/lib_baseline/edge_filter.h	91;"	d
weak_horizontal_chroma_MMX	AVC/h264_baseline_decoder/lib_baseline/edge_filter_MMX.c	/^void weak_horizontal_chroma_MMX(unsigned char pix[], const int xstride, const unsigned char alpha	, const unsigned char beta, const unsigned char tc0)$/;"	f
weak_horizontal_luma_MMX	AVC/h264_baseline_decoder/lib_baseline/edge_filter_MMX.c	/^void weak_horizontal_luma_MMX(unsigned char pix[], const int xstride, const unsigned char alpha, const unsigned char beta, const unsigned char tc0){$/;"	f
weak_vertical_luma_MMX	AVC/h264_baseline_decoder/lib_baseline/edge_filter_MMX.c	/^void weak_vertical_luma_MMX(unsigned char pix[], const int ystride,const unsigned char alpha	, const unsigned char beta, const unsigned char tc0)$/;"	f
CLIP3_OPTIM	AVC/h264_baseline_decoder/lib_baseline/edge_filter_TI.c	45;"	d	file:
strong_horizontal_chroma_TI	AVC/h264_baseline_decoder/lib_baseline/edge_filter_TI.c	/^void strong_horizontal_chroma_TI(unsigned char pix[], const int xstride	, const unsigned char alpha, const unsigned char beta)$/;"	f
strong_horizontal_luma_TI	AVC/h264_baseline_decoder/lib_baseline/edge_filter_TI.c	/^void strong_horizontal_luma_TI(unsigned char pix[], const int stride, const unsigned char alpha, const unsigned char beta)$/;"	f
strong_vertical_chroma	AVC/h264_baseline_decoder/lib_baseline/edge_filter_TI.c	/^void strong_vertical_chroma(unsigned char pix[],const unsigned int ystride, const unsigned char alpha, const unsigned char beta)$/;"	f
strong_vertical_luma_TI	AVC/h264_baseline_decoder/lib_baseline/edge_filter_TI.c	/^void strong_vertical_luma_TI ( unsigned char pix[], const unsigned int stride,	 const unsigned char alpha, const unsigned char beta)$/;"	f
weak_horizontal_chroma_TI	AVC/h264_baseline_decoder/lib_baseline/edge_filter_TI.c	/^void weak_horizontal_chroma_TI(unsigned char pix[], const int xstride, const unsigned char alpha	, const unsigned char beta, const unsigned char tc0)$/;"	f
weak_horizontal_luma_TI	AVC/h264_baseline_decoder/lib_baseline/edge_filter_TI.c	/^void weak_horizontal_luma_TI(unsigned char pix[], int xstride, const unsigned char alpha, const unsigned char beta, const unsigned char tc0){$/;"	f
weak_vertical_chroma_TI	AVC/h264_baseline_decoder/lib_baseline/edge_filter_TI.c	/^void weak_vertical_chroma_TI(unsigned char pix[], const int ystride, const unsigned char alpha, const unsigned char beta, const unsigned char tc0)$/;"	f
weak_vertical_luma_TI	AVC/h264_baseline_decoder/lib_baseline/edge_filter_TI.c	/^void weak_vertical_luma_TI(unsigned char pix[], int ystride,const unsigned char alpha	, const unsigned char beta, const unsigned char tc0)$/;"	f
FillNonZeroCount	AVC/h264_baseline_decoder/lib_baseline/fill_caches.c	/^void FillNonZeroCount(const DATA *CurrBlock, const int MbStride,const int top_type, $/;"	f
fill_caches	AVC/h264_baseline_decoder/lib_baseline/fill_caches.c	/^void fill_caches (const SLICE *Slice, const RESIDU *CurrResidu, const int EntropyCodingModeFlog, $/;"	f
fill_caches_I	AVC/h264_baseline_decoder/lib_baseline/fill_caches.c	/^void fill_caches_I (const SLICE *Slice, const RESIDU *CurrResidu, const int EntropyCodingModeFlog, $/;"	f
fill_caches_motion_vector	AVC/h264_baseline_decoder/lib_baseline/fill_caches.c	/^void fill_caches_motion_vector( const SLICE *Slice, const int ai_iB_stride, const int ai_iB8_stride, $/;"	f
FILL_CACHES_H	AVC/h264_baseline_decoder/lib_baseline/fill_caches.h	38;"	d
FillMvCacheLeftPosition	AVC/h264_baseline_decoder/lib_baseline/fill_caches.h	/^static __inline void FillMvCacheLeftPosition(short MvCache[][2], short *MvdL0, int Stride){$/;"	f
FillMvCacheTopPosition	AVC/h264_baseline_decoder/lib_baseline/fill_caches.h	/^static __inline void FillMvCacheTopPosition(short MvCache[][2], short *MvdL0){$/;"	f
FillRefCacheLeftPosition	AVC/h264_baseline_decoder/lib_baseline/fill_caches.h	/^static __inline void FillRefCacheLeftPosition(short *RefCache, short FirstBlock, short ThirdBlock){$/;"	f
FillRefCacheTopPosition	AVC/h264_baseline_decoder/lib_baseline/fill_caches.h	/^static __inline void FillRefCacheTopPosition(short *RefCache, short FirstBlock, short SecondBlock){$/;"	f
init_mb_IPCM	AVC/h264_baseline_decoder/lib_baseline/fill_caches.h	/^static __inline void init_mb_IPCM ( unsigned char NonZeroCountCache [ ] )$/;"	f
init_mb_skip	AVC/h264_baseline_decoder/lib_baseline/fill_caches.h	/^static __inline void init_mb_skip ( unsigned char NonZeroCountCache [] )$/;"	f
HorizontalEdgeFilter	AVC/h264_baseline_decoder/lib_baseline/filter.c	/^void HorizontalEdgeFilter(int FilterIdc, int edge, short PicWidthInMbs, int qp, int qPCb, int qPCr,$/;"	f
VerticalEdgeFilter	AVC/h264_baseline_decoder/lib_baseline/filter.c	/^void VerticalEdgeFilter(int FilterIdc, int edge, short PicWidthInMbs, int qp, int qpCb, int qpCr,$/;"	f
filter_P	AVC/h264_baseline_decoder/lib_baseline/filter.c	/^void filter_P(const  SPS *aipstsps, const PPS *aipstpps, const SLICE *Slice,  unsigned char *SliceTable,$/;"	f
filter_mb_P	AVC/h264_baseline_decoder/lib_baseline/filter.c	/^void filter_mb_P( unsigned char *image, unsigned char *image_Cb, unsigned char *image_Cr, const  SLICE *Slice, $/;"	f
ref2frm	AVC/h264_baseline_decoder/lib_baseline/filter.c	/^static const char ref2frm[18] = {-1,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};$/;"	v	file:
C_FILTER	AVC/h264_baseline_decoder/lib_baseline/filter.h	37;"	d
bSCheckMvShort	AVC/h264_baseline_decoder/lib_baseline/filter.h	59;"	d
bSCheckMvShort	AVC/h264_baseline_decoder/lib_baseline/filter.h	60;"	d
bSCheckMvShort	AVC/h264_baseline_decoder/lib_baseline/filter.h	69;"	d
bSCheckMvShort	AVC/h264_baseline_decoder/lib_baseline/filter.h	70;"	d
bSCheckMvShort_C	AVC/h264_baseline_decoder/lib_baseline/filter.h	/^static unsigned char __inline bSCheckMvShort_C(short mva[2], short mvb[2]){$/;"	f
bSCheckMvShort_TI	AVC/h264_baseline_decoder/lib_baseline/filter.h	/^static int __inline bSCheckMvShort_TI(short mva[2], short mvb[2])$/;"	f
DisplayDecoderOptions	AVC/h264_baseline_decoder/lib_baseline/help.h	/^void DisplayDecoderOptions()$/;"	f
HELP_H	AVC/h264_baseline_decoder/lib_baseline/help.h	37;"	d
init_vectors	AVC/h264_baseline_decoder/lib_baseline/init_Ptr_Fction.c	/^void init_vectors(STRUCT_PF * aio_pf)$/;"	f
INIT_PTR_H	AVC/h264_baseline_decoder/lib_baseline/init_Ptr_Fction.h	36;"	d
InitListMmo	AVC/h264_baseline_decoder/lib_baseline/init_data.c	/^void InitListMmo( LIST_MMO *mmo){$/;"	f
InitUcharTab	AVC/h264_baseline_decoder/lib_baseline/init_data.c	/^void InitUcharTab (const int ai_iSize, unsigned char Table [ ] )$/;"	f
init_data_block	AVC/h264_baseline_decoder/lib_baseline/init_data.c	/^void init_data_block (const int ai_iSize, DATA ao_tstBlock[ ]){$/;"	f
init_data_residu	AVC/h264_baseline_decoder/lib_baseline/init_data.c	/^void init_data_residu (const int ai_iSize, RESIDU Block[ ]){$/;"	f
init_int	AVC/h264_baseline_decoder/lib_baseline/init_data.c	/^void init_int ( int *a )$/;"	f
init_int_tab	AVC/h264_baseline_decoder/lib_baseline/init_data.c	/^void init_int_tab (const int ai_iSize, int ao_tiPicture_mb_type [ ] )$/;"	f
init_intra_pred	AVC/h264_baseline_decoder/lib_baseline/init_data.c	/^void init_intra_pred( int * mode){$/;"	f
init_mmo	AVC/h264_baseline_decoder/lib_baseline/init_data.c	/^void init_mmo( int num_of_layers, MMO *mmo){$/;"	f
init_non_zero_count_cache	AVC/h264_baseline_decoder/lib_baseline/init_data.c	/^void init_non_zero_count_cache ( unsigned char *non_zero_count_cache, unsigned char val )$/;"	f
init_slice	AVC/h264_baseline_decoder/lib_baseline/init_data.c	/^void init_slice ( SLICE *Slice ){$/;"	f
reinit_slice	AVC/h264_baseline_decoder/lib_baseline/init_data.c	/^void reinit_slice ( SLICE *Slice )$/;"	f
INIT_DATA_H	AVC/h264_baseline_decoder/lib_baseline/init_data.h	36;"	d
init_B_skip_mb	AVC/h264_baseline_decoder/lib_baseline/init_data.h	/^static __inline void init_B_skip_mb( RESIDU *residu, unsigned char LastQp, SLICE *Slice)$/;"	f
init_P_skip_mb	AVC/h264_baseline_decoder/lib_baseline/init_data.h	/^static __inline void init_P_skip_mb(RESIDU *residu, unsigned char LastQp, SLICE *Slice)$/;"	f
init_block	AVC/h264_baseline_decoder/lib_baseline/init_data.h	/^static __inline void init_block (DATA *ao_pstBlock){$/;"	f
init_mv_cache	AVC/h264_baseline_decoder/lib_baseline/init_data.h	/^static __inline void init_mv_cache(short mv_cache[][2]){$/;"	f
init_ref_cache	AVC/h264_baseline_decoder/lib_baseline/init_data.h	/^static __inline void init_ref_cache(short *ref_cache){$/;"	f
init_residu	AVC/h264_baseline_decoder/lib_baseline/init_data.h	/^static __inline void init_residu(RESIDU *Residu){$/;"	f
LOGI	AVC/h264_baseline_decoder/lib_baseline/interpol_0_n.c	42;"	d	file:
LOG_TAG	AVC/h264_baseline_decoder/lib_baseline/interpol_0_n.c	41;"	d	file:
luma_sample_interp_0_0	AVC/h264_baseline_decoder/lib_baseline/interpol_0_n.c	/^void luma_sample_interp_0_0(unsigned char *image, unsigned char *refPicLXl,	const short PicWidthSamples, const short stride){$/;"	f
luma_sample_interp_0_1	AVC/h264_baseline_decoder/lib_baseline/interpol_0_n.c	/^void luma_sample_interp_0_1(unsigned char *image, unsigned char *refPicLXl,	const short PicWidthSamples, const short stride){$/;"	f
luma_sample_interp_0_2	AVC/h264_baseline_decoder/lib_baseline/interpol_0_n.c	/^void luma_sample_interp_0_2(unsigned char image [RESTRICT], unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples, const short stride)$/;"	f
luma_sample_interp_0_3	AVC/h264_baseline_decoder/lib_baseline/interpol_0_n.c	/^void luma_sample_interp_0_3(unsigned char image [RESTRICT], unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples, const short stride)$/;"	f
luma_sample_interp_0_n	AVC/h264_baseline_decoder/lib_baseline/interpol_0_n.c	/^void luma_sample_interp_0_n(unsigned char *ptr_ref, unsigned char *ptr_img, const short PicWidthSamples, const short stride)$/;"	f
INTERPOL_0_N_H	AVC/h264_baseline_decoder/lib_baseline/interpol_0_n.h	36;"	d
luma_sample_interp_1_n	AVC/h264_baseline_decoder/lib_baseline/interpol_0_n.h	/^static __inline void luma_sample_interp_1_n(unsigned char image [RESTRICT],	unsigned char refPicLXl[RESTRICT], const short PicWidthSamples, const short stride)$/;"	f
luma_sample_interp_1_n_2pass	AVC/h264_baseline_decoder/lib_baseline/interpol_0_n.h	/^static __inline void luma_sample_interp_1_n_2pass(unsigned char image [RESTRICT], unsigned char refPicLXl[RESTRICT], const short PicWidthSamples, const short stride)$/;"	f
luma_sample_interp_0_0_TI	AVC/h264_baseline_decoder/lib_baseline/interpol_0_n_TI.c	/^void luma_sample_interp_0_0_TI(unsigned char image [], unsigned char refPicLXl[],	const short PicWidthSamples, const short stride){$/;"	f
luma_sample_interp_0_1_TI	AVC/h264_baseline_decoder/lib_baseline/interpol_0_n_TI.c	/^void luma_sample_interp_0_1_TI(unsigned char image [], unsigned char refPicLXl[],	const short PicWidthSamples, const short stride){$/;"	f
luma_sample_interp_0_2_TI	AVC/h264_baseline_decoder/lib_baseline/interpol_0_n_TI.c	/^void luma_sample_interp_0_2_TI(unsigned char image [RESTRICT], unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples, const short stride)$/;"	f
luma_sample_interp_0_3_TI	AVC/h264_baseline_decoder/lib_baseline/interpol_0_n_TI.c	/^void luma_sample_interp_0_3_TI(unsigned char image [RESTRICT], unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples, const short stride)$/;"	f
luma_sample_interp_2_1	AVC/h264_baseline_decoder/lib_baseline/interpol_2_n.c	/^void luma_sample_interp_2_1(unsigned char image [RESTRICT], unsigned char refPicLXl[RESTRICT], const short PicWidthSamples, const short stride)$/;"	f
luma_sample_interp_2_2	AVC/h264_baseline_decoder/lib_baseline/interpol_2_n.c	/^void luma_sample_interp_2_2(unsigned char image [RESTRICT], unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples, const short stride)$/;"	f
luma_sample_interp_2_3	AVC/h264_baseline_decoder/lib_baseline/interpol_2_n.c	/^void luma_sample_interp_2_3(unsigned char image [RESTRICT], unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples, const short stride)$/;"	f
INTERPOL_2_1_H	AVC/h264_baseline_decoder/lib_baseline/interpol_2_n.h	37;"	d
luma_sample_interp_2_n_2pass	AVC/h264_baseline_decoder/lib_baseline/interpol_2_n.h	/^static __inline void luma_sample_interp_2_n_2pass(unsigned char ptr_mg [RESTRICT], short tmp_res [RESTRICT], const short stride)$/;"	f
luma_sample_interp_2_n_h	AVC/h264_baseline_decoder/lib_baseline/interpol_2_n.h	/^static __inline void luma_sample_interp_2_n_h(unsigned char ptr_ref [RESTRICT], short tmp_res [RESTRICT], const short PicWidthSamples)$/;"	f
luma_sample_interp_2_n_v	AVC/h264_baseline_decoder/lib_baseline/interpol_2_n.h	/^static __inline void luma_sample_interp_2_n_v(unsigned char image [RESTRICT], short tmp_res [RESTRICT], const short stride)$/;"	f
luma_sample_interp_2_1_TI	AVC/h264_baseline_decoder/lib_baseline/interpol_2_n_TI.c	/^void luma_sample_interp_2_1_TI(unsigned char image [RESTRICT], unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples, const short stride)$/;"	f
luma_sample_interp_2_2_TI	AVC/h264_baseline_decoder/lib_baseline/interpol_2_n_TI.c	/^void luma_sample_interp_2_2_TI(unsigned char image [RESTRICT], unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples, const short stride)$/;"	f
luma_sample_interp_2_3_TI	AVC/h264_baseline_decoder/lib_baseline/interpol_2_n_TI.c	/^void luma_sample_interp_2_3_TI(unsigned char image [RESTRICT], unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples, const short stride)$/;"	f
luma_sample_interp_1_0	AVC/h264_baseline_decoder/lib_baseline/interpol_n_0.c	/^void luma_sample_interp_1_0(unsigned char image [RESTRICT], unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples, const short stride)$/;"	f
luma_sample_interp_2_0	AVC/h264_baseline_decoder/lib_baseline/interpol_n_0.c	/^void luma_sample_interp_2_0(unsigned char image [RESTRICT], unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples, const short stride)$/;"	f
luma_sample_interp_3_0	AVC/h264_baseline_decoder/lib_baseline/interpol_n_0.c	/^void luma_sample_interp_3_0(unsigned char image [RESTRICT], unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples, const short stride){$/;"	f
INTERPOL_N_0_H	AVC/h264_baseline_decoder/lib_baseline/interpol_n_0.h	36;"	d
luma_sample_interp_2pass	AVC/h264_baseline_decoder/lib_baseline/interpol_n_0.h	/^static __inline void luma_sample_interp_2pass(unsigned char ptr_rf [RESTRICT], unsigned char ptr_img [RESTRICT], const short PicWidthSamples, const short stride)$/;"	f
luma_sample_interp_n_0	AVC/h264_baseline_decoder/lib_baseline/interpol_n_0.h	/^static __inline void luma_sample_interp_n_0(unsigned char ptr_ref [RESTRICT], unsigned char ptr_imge [RESTRICT], const short PicWidthSamples, const short stride){$/;"	f
luma_sample_interp_1_0_TI	AVC/h264_baseline_decoder/lib_baseline/interpol_n_0_TI.c	/^void luma_sample_interp_1_0_TI(unsigned char image [RESTRICT], unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples, const short stride)$/;"	f
luma_sample_interp_2_0_TI	AVC/h264_baseline_decoder/lib_baseline/interpol_n_0_TI.c	/^void luma_sample_interp_2_0_TI(unsigned char image [RESTRICT], unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples, const short stride)$/;"	f
luma_sample_interp_3_0_TI	AVC/h264_baseline_decoder/lib_baseline/interpol_n_0_TI.c	/^void luma_sample_interp_3_0_TI(unsigned char image [RESTRICT], unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples, const short stride){$/;"	f
luma_sample_interp_1_2	AVC/h264_baseline_decoder/lib_baseline/interpol_n_2.c	/^void luma_sample_interp_1_2(unsigned char image [RESTRICT], unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples, const short stride)$/;"	f
luma_sample_interp_1_2_2pass	AVC/h264_baseline_decoder/lib_baseline/interpol_n_2.c	/^static __inline void luma_sample_interp_1_2_2pass(short tmp_res [RESTRICT], unsigned char ptr_imag[RESTRICT], const short stride)$/;"	f	file:
luma_sample_interp_1_2_h	AVC/h264_baseline_decoder/lib_baseline/interpol_n_2.c	/^void luma_sample_interp_1_2_h(short tmp_res [RESTRICT], unsigned char image[RESTRICT], const short stride)$/;"	f
luma_sample_interp_1_2_v	AVC/h264_baseline_decoder/lib_baseline/interpol_n_2.c	/^void luma_sample_interp_1_2_v(short tmp_res [RESTRICT], unsigned char refPicLXl[RESTRICT], const short PicWidthSamples)$/;"	f
luma_sample_interp_3_2	AVC/h264_baseline_decoder/lib_baseline/interpol_n_2.c	/^void luma_sample_interp_3_2(unsigned char image [RESTRICT], unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples, const short stride)$/;"	f
INTERPOL_N_2_H	AVC/h264_baseline_decoder/lib_baseline/interpol_n_2.h	36;"	d
luma_sample_interp_1_2_TI	AVC/h264_baseline_decoder/lib_baseline/interpol_n_2_TI.c	/^void luma_sample_interp_1_2_TI(unsigned char image [RESTRICT], unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples, const short stride)$/;"	f
luma_sample_interp_3_2_TI	AVC/h264_baseline_decoder/lib_baseline/interpol_n_2_TI.c	/^void luma_sample_interp_3_2_TI(unsigned char image [RESTRICT], unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples, const short stride)$/;"	f
luma_sample_interp_1_1	AVC/h264_baseline_decoder/lib_baseline/interpol_n_n.c	/^void luma_sample_interp_1_1(unsigned char image [RESTRICT],	unsigned char refPicLXl[RESTRICT], const short PicWidthSamples, const short stride)$/;"	f
luma_sample_interp_1_3	AVC/h264_baseline_decoder/lib_baseline/interpol_n_n.c	/^void luma_sample_interp_1_3(unsigned char image [RESTRICT],	unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples, const short stride)$/;"	f
luma_sample_interp_3_1	AVC/h264_baseline_decoder/lib_baseline/interpol_n_n.c	/^void luma_sample_interp_3_1(unsigned char image [RESTRICT],	unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples, const short stride){$/;"	f
luma_sample_interp_3_3	AVC/h264_baseline_decoder/lib_baseline/interpol_n_n.c	/^void luma_sample_interp_3_3(unsigned char image [RESTRICT],	unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples, const short stride){$/;"	f
INTERPOL_N_N_H	AVC/h264_baseline_decoder/lib_baseline/interpol_n_n.h	36;"	d
luma_sample_interp_1_1_TI	AVC/h264_baseline_decoder/lib_baseline/interpol_n_n_TI.c	/^void luma_sample_interp_1_1_TI(unsigned char image [RESTRICT],	unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples	, const short stride){$/;"	f
luma_sample_interp_1_3_TI	AVC/h264_baseline_decoder/lib_baseline/interpol_n_n_TI.c	/^void luma_sample_interp_1_3_TI(unsigned char image [RESTRICT],	unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples, const short stride){$/;"	f
luma_sample_interp_3_1_TI	AVC/h264_baseline_decoder/lib_baseline/interpol_n_n_TI.c	/^void luma_sample_interp_3_1_TI(unsigned char image [RESTRICT],	unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples, const short stride){$/;"	f
luma_sample_interp_3_3_TI	AVC/h264_baseline_decoder/lib_baseline/interpol_n_n_TI.c	/^void luma_sample_interp_3_3_TI(unsigned char image [RESTRICT],	unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples, const short stride){$/;"	f
Interpolate	AVC/h264_baseline_decoder/lib_baseline/interpolation.c	/^void Interpolate(int Ref, short Currentx, short Currenty, short *mvLX, const short OutStride, $/;"	f
chroma_sample_interpolation_C	AVC/h264_baseline_decoder/lib_baseline/interpolation.c	/^void chroma_sample_interpolation_C(unsigned char image_Cb [RESTRICT],	unsigned char image_Cr [RESTRICT], $/;"	f
chroma_sample_interpolation_MMX	AVC/h264_baseline_decoder/lib_baseline/interpolation.c	/^void chroma_sample_interpolation_MMX(unsigned char image_Cb [RESTRICT],	unsigned char image_Cr [RESTRICT], $/;"	f
chroma_sample_interpolation_TI	AVC/h264_baseline_decoder/lib_baseline/interpolation.c	/^void chroma_sample_interpolation_TI(unsigned char image_Cb [RESTRICT],unsigned char image_Cr [RESTRICT],$/;"	f
sample_interpolation	AVC/h264_baseline_decoder/lib_baseline/interpolation.c	/^void sample_interpolation(unsigned char *DpbLuma,unsigned char *DpbCb,	unsigned char *DpbCr, $/;"	f
C_INTERPOLATION	AVC/h264_baseline_decoder/lib_baseline/interpolation.h	37;"	d
chroma_sample_interpolation	AVC/h264_baseline_decoder/lib_baseline/interpolation.h	44;"	d
chroma_sample_interpolation	AVC/h264_baseline_decoder/lib_baseline/interpolation.h	47;"	d
chroma_sample_interpolation	AVC/h264_baseline_decoder/lib_baseline/interpolation.h	48;"	d
chroma_sample_interpolation	AVC/h264_baseline_decoder/lib_baseline/interpolation.h	52;"	d
chroma_sample_interpolation	AVC/h264_baseline_decoder/lib_baseline/interpolation.h	53;"	d
luma_sample_interp_8x8_0_1	AVC/h264_baseline_decoder/lib_baseline/interpolation_0_n.c	/^void luma_sample_interp_8x8_0_1(unsigned char image [RESTRICT], unsigned char refPicLXl[RESTRICT],const short PicWidthSamples, const short stride)$/;"	f
luma_sample_interp_8x8_0_2	AVC/h264_baseline_decoder/lib_baseline/interpolation_0_n.c	/^void luma_sample_interp_8x8_0_2(unsigned char image [RESTRICT], unsigned char refPicLXl[RESTRICT],const short PicWidthSamples, const short stride)$/;"	f
luma_sample_interp_8x8_0_3	AVC/h264_baseline_decoder/lib_baseline/interpolation_0_n.c	/^void luma_sample_interp_8x8_0_3(unsigned char image [RESTRICT], unsigned char refPicLXl[RESTRICT],const short PicWidthSamples, const short stride)$/;"	f
INTERPOLATION_0_N_H	AVC/h264_baseline_decoder/lib_baseline/interpolation_0_n.h	35;"	d
luma_sample_interp_8x8_2_1	AVC/h264_baseline_decoder/lib_baseline/interpolation_2_n.c	/^void luma_sample_interp_8x8_2_1(unsigned char image [RESTRICT], unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples, const short stride)$/;"	f
luma_sample_interp_8x8_2_2	AVC/h264_baseline_decoder/lib_baseline/interpolation_2_n.c	/^void luma_sample_interp_8x8_2_2(unsigned char image [RESTRICT], unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples, const short stride)$/;"	f
luma_sample_interp_8x8_2_3	AVC/h264_baseline_decoder/lib_baseline/interpolation_2_n.c	/^void luma_sample_interp_8x8_2_3(unsigned char image [RESTRICT], unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples, const short stride)$/;"	f
INTERPOLATION_2_N_H	AVC/h264_baseline_decoder/lib_baseline/interpolation_2_n.h	36;"	d
chroma_sample_interpolation_TI	AVC/h264_baseline_decoder/lib_baseline/interpolation_4x4_TI.c	/^void chroma_sample_interpolation_TI(unsigned char image_Cb [RESTRICT],	 unsigned char image_Cr [RESTRICT]$/;"	f
luma_sample_interp_0_0_MMX	AVC/h264_baseline_decoder/lib_baseline/interpolation_4x4_mmx.c	/^void luma_sample_interp_0_0_MMX(unsigned char *image, unsigned char *refPicLXl,	const short PicWidthSamples, const short stride){$/;"	f
luma_sample_interp_0_1_MMX	AVC/h264_baseline_decoder/lib_baseline/interpolation_4x4_mmx.c	/^void luma_sample_interp_0_1_MMX(unsigned char* sortie, unsigned char* image,const short PicWidthInPix,const short OutStride){$/;"	f
luma_sample_interp_0_2_MMX	AVC/h264_baseline_decoder/lib_baseline/interpolation_4x4_mmx.c	/^void luma_sample_interp_0_2_MMX(unsigned char* sortie, unsigned char* image,const short PicWidthInPix,const short OutStride){$/;"	f
luma_sample_interp_0_3_MMX	AVC/h264_baseline_decoder/lib_baseline/interpolation_4x4_mmx.c	/^void luma_sample_interp_0_3_MMX(unsigned char* sortie, unsigned char* image,const short PicWidthInPix,const short OutStride){$/;"	f
luma_sample_interp_1_0_MMX	AVC/h264_baseline_decoder/lib_baseline/interpolation_4x4_mmx.c	/^void luma_sample_interp_1_0_MMX(unsigned char* sortie, unsigned char* image, const short PicWidthInPix,const short OutStride){$/;"	f
luma_sample_interp_1_1_MMX	AVC/h264_baseline_decoder/lib_baseline/interpolation_4x4_mmx.c	/^void luma_sample_interp_1_1_MMX(unsigned char* sortie, unsigned char* image,const short PicWidthInPix,const short OutStride){$/;"	f
luma_sample_interp_1_2_MMX	AVC/h264_baseline_decoder/lib_baseline/interpolation_4x4_mmx.c	/^void luma_sample_interp_1_2_MMX(unsigned char* sortie, unsigned char* image,const short PicWidthInPix,const short OutStride){$/;"	f
luma_sample_interp_1_3_MMX	AVC/h264_baseline_decoder/lib_baseline/interpolation_4x4_mmx.c	/^void luma_sample_interp_1_3_MMX(unsigned char* sortie, unsigned char* image,const short PicWidthInPix,const short OutStride){$/;"	f
luma_sample_interp_2_0_MMX	AVC/h264_baseline_decoder/lib_baseline/interpolation_4x4_mmx.c	/^void luma_sample_interp_2_0_MMX(unsigned char* sortie, unsigned char* image, const short PicWidthInPix,const short OutStride){$/;"	f
luma_sample_interp_2_1_MMX	AVC/h264_baseline_decoder/lib_baseline/interpolation_4x4_mmx.c	/^void luma_sample_interp_2_1_MMX(unsigned char* sortie, unsigned char* image,const short PicWidthInPix,const short OutStride){$/;"	f
luma_sample_interp_2_2_MMX	AVC/h264_baseline_decoder/lib_baseline/interpolation_4x4_mmx.c	/^void luma_sample_interp_2_2_MMX(unsigned char* sortie, unsigned char* image,const short PicWidthInPix,const short OutStride){$/;"	f
luma_sample_interp_2_3_MMX	AVC/h264_baseline_decoder/lib_baseline/interpolation_4x4_mmx.c	/^void luma_sample_interp_2_3_MMX(unsigned char* sortie, unsigned char* image,const short PicWidthInPix,const short OutStride){$/;"	f
luma_sample_interp_3_0_MMX	AVC/h264_baseline_decoder/lib_baseline/interpolation_4x4_mmx.c	/^void luma_sample_interp_3_0_MMX(unsigned char* sortie, unsigned char* image,const short PicWidthInPix,const short OutStride){$/;"	f
luma_sample_interp_3_1_MMX	AVC/h264_baseline_decoder/lib_baseline/interpolation_4x4_mmx.c	/^void luma_sample_interp_3_1_MMX(unsigned char* sortie, unsigned char* image,const short PicWidthInPix,const short OutStride){$/;"	f
luma_sample_interp_3_2_MMX	AVC/h264_baseline_decoder/lib_baseline/interpolation_4x4_mmx.c	/^void luma_sample_interp_3_2_MMX(unsigned char* sortie, unsigned char* image,const short PicWidthInPix,const short OutStride){$/;"	f
luma_sample_interp_3_3_MMX	AVC/h264_baseline_decoder/lib_baseline/interpolation_4x4_mmx.c	/^void luma_sample_interp_3_3_MMX(unsigned char* sortie, unsigned char* image,const short PicWidthInPix,const short OutStride){$/;"	f
SampleInterpolation8x8	AVC/h264_baseline_decoder/lib_baseline/interpolation_8x8.c	/^void SampleInterpolation8x8(unsigned char *DpbLuma, unsigned char *DpbCb, unsigned char *DpbCr, $/;"	f
chroma_SampleInterpolation8x8	AVC/h264_baseline_decoder/lib_baseline/interpolation_8x8.c	/^void chroma_SampleInterpolation8x8(unsigned char *image_Cb, unsigned char *image_Cr, unsigned char *refPicLXCb, $/;"	f
interpolation_8x8	AVC/h264_baseline_decoder/lib_baseline/interpolation_8x8.c	/^void interpolation_8x8(unsigned char *DpbLuma, unsigned char *DpbCb,unsigned char *DpbCr, $/;"	f
INTERPOLATION_8x8_H	AVC/h264_baseline_decoder/lib_baseline/interpolation_8x8.h	35;"	d
luma_sample_interp_8x8_0_0	AVC/h264_baseline_decoder/lib_baseline/interpolation_8x8.h	/^static __inline void luma_sample_interp_8x8_0_0(unsigned char *image, unsigned char *refPicLXl,	const short PicWidthSamples, const short stride){$/;"	f
interpolhline128	AVC/h264_baseline_decoder/lib_baseline/interpolation_8x8_SSE2.c	/^ __m128i interpolhline128(unsigned char* image){$/;"	f
interpolhline_1	AVC/h264_baseline_decoder/lib_baseline/interpolation_8x8_SSE2.c	/^ __m64 interpolhline_1(unsigned char* image){$/;"	f
interpolhline_2	AVC/h264_baseline_decoder/lib_baseline/interpolation_8x8_SSE2.c	/^ __m64 interpolhline_2(unsigned char* image){$/;"	f
interpolhline_3	AVC/h264_baseline_decoder/lib_baseline/interpolation_8x8_SSE2.c	/^ __m64 interpolhline_3(unsigned char* image){$/;"	f
interpolvline128_1	AVC/h264_baseline_decoder/lib_baseline/interpolation_8x8_SSE2.c	/^__m64 interpolvline128_1(	__m128i* temp){$/;"	f
interpolvline128_2	AVC/h264_baseline_decoder/lib_baseline/interpolation_8x8_SSE2.c	/^__m64 interpolvline128_2(__m128i* temp){$/;"	f
interpolvline128_3	AVC/h264_baseline_decoder/lib_baseline/interpolation_8x8_SSE2.c	/^ __m64 interpolvline128_3(__m128i* temp){$/;"	f
interpolvline_1	AVC/h264_baseline_decoder/lib_baseline/interpolation_8x8_SSE2.c	/^ __m64 interpolvline_1(	unsigned char* image,	int PicWidthInPix){$/;"	f
interpolvline_2	AVC/h264_baseline_decoder/lib_baseline/interpolation_8x8_SSE2.c	/^__m64 interpolvline_2(	unsigned char* image,	int PicWidthInPix){$/;"	f
interpolvline_3	AVC/h264_baseline_decoder/lib_baseline/interpolation_8x8_SSE2.c	/^__m64 interpolvline_3(unsigned char* image,	int PicWidthInPix){$/;"	f
luma_sample_interp_8x8_0_0_SSE2	AVC/h264_baseline_decoder/lib_baseline/interpolation_8x8_SSE2.c	/^void luma_sample_interp_8x8_0_0_SSE2(unsigned char* sortie, unsigned char* image,const short PicWidthInPix, const short OutStride){$/;"	f
luma_sample_interp_8x8_0_1_SSE2	AVC/h264_baseline_decoder/lib_baseline/interpolation_8x8_SSE2.c	/^void luma_sample_interp_8x8_0_1_SSE2(unsigned char* sortie, unsigned char* image,const short PicWidthInPix,const short OutStride){$/;"	f
luma_sample_interp_8x8_0_2_SSE2	AVC/h264_baseline_decoder/lib_baseline/interpolation_8x8_SSE2.c	/^void luma_sample_interp_8x8_0_2_SSE2(unsigned char* sortie, unsigned char* image,const short PicWidthInPix,const short OutStride){$/;"	f
luma_sample_interp_8x8_0_3_SSE2	AVC/h264_baseline_decoder/lib_baseline/interpolation_8x8_SSE2.c	/^void luma_sample_interp_8x8_0_3_SSE2(unsigned char* sortie, unsigned char* image,const short PicWidthInPix,const short OutStride){$/;"	f
luma_sample_interp_8x8_1_0_SSE2	AVC/h264_baseline_decoder/lib_baseline/interpolation_8x8_SSE2.c	/^void luma_sample_interp_8x8_1_0_SSE2(unsigned char* sortie, unsigned char* image,const short PicWidthInPix,const short OutStride){$/;"	f
luma_sample_interp_8x8_1_1_SSE2	AVC/h264_baseline_decoder/lib_baseline/interpolation_8x8_SSE2.c	/^void luma_sample_interp_8x8_1_1_SSE2(unsigned char* sortie, unsigned char* image,const short PicWidthInPix,const short OutStride){$/;"	f
luma_sample_interp_8x8_1_2_SSE2	AVC/h264_baseline_decoder/lib_baseline/interpolation_8x8_SSE2.c	/^void luma_sample_interp_8x8_1_2_SSE2(unsigned char* sortie, unsigned char* image,const short PicWidthInPix,const short OutStride){$/;"	f
luma_sample_interp_8x8_1_3_SSE2	AVC/h264_baseline_decoder/lib_baseline/interpolation_8x8_SSE2.c	/^void luma_sample_interp_8x8_1_3_SSE2(unsigned char* sortie, unsigned char* image,const short PicWidthInPix,const short OutStride){$/;"	f
luma_sample_interp_8x8_2_0_SSE2	AVC/h264_baseline_decoder/lib_baseline/interpolation_8x8_SSE2.c	/^void luma_sample_interp_8x8_2_0_SSE2(unsigned char* sortie, unsigned char* image,const short PicWidthInPix,const short OutStride){$/;"	f
luma_sample_interp_8x8_2_1_SSE2	AVC/h264_baseline_decoder/lib_baseline/interpolation_8x8_SSE2.c	/^void luma_sample_interp_8x8_2_1_SSE2(unsigned char* sortie, unsigned char* image,const short PicWidthInPix,const short OutStride){$/;"	f
luma_sample_interp_8x8_2_2_SSE2	AVC/h264_baseline_decoder/lib_baseline/interpolation_8x8_SSE2.c	/^void luma_sample_interp_8x8_2_2_SSE2(unsigned char* sortie, unsigned char* image,const short PicWidthInPix,const short OutStride){$/;"	f
luma_sample_interp_8x8_2_3_SSE2	AVC/h264_baseline_decoder/lib_baseline/interpolation_8x8_SSE2.c	/^void luma_sample_interp_8x8_2_3_SSE2(unsigned char* sortie, unsigned char* image,const short PicWidthInPix,const short OutStride){$/;"	f
luma_sample_interp_8x8_3_0_SSE2	AVC/h264_baseline_decoder/lib_baseline/interpolation_8x8_SSE2.c	/^void luma_sample_interp_8x8_3_0_SSE2(unsigned char* sortie, unsigned char* image,const short PicWidthInPix,const short OutStride){$/;"	f
luma_sample_interp_8x8_3_1_SSE2	AVC/h264_baseline_decoder/lib_baseline/interpolation_8x8_SSE2.c	/^void luma_sample_interp_8x8_3_1_SSE2(unsigned char* sortie, unsigned char* image,const short PicWidthInPix,const short OutStride){$/;"	f
luma_sample_interp_8x8_3_2_SSE2	AVC/h264_baseline_decoder/lib_baseline/interpolation_8x8_SSE2.c	/^void luma_sample_interp_8x8_3_2_SSE2(unsigned char* sortie, unsigned char* image,const short PicWidthInPix,const short OutStride){$/;"	f
luma_sample_interp_8x8_3_3_SSE2	AVC/h264_baseline_decoder/lib_baseline/interpolation_8x8_SSE2.c	/^void luma_sample_interp_8x8_3_3_SSE2(unsigned char* sortie, unsigned char* image,const short PicWidthInPix,const short OutStride){$/;"	f
interpolhline64_1_mmx	AVC/h264_baseline_decoder/lib_baseline/interpolation_mmx.c	/^__m64 interpolhline64_1_mmx(__m64* temp){$/;"	f
interpolhline64_3_mmx	AVC/h264_baseline_decoder/lib_baseline/interpolation_mmx.c	/^__m64 interpolhline64_3_mmx(__m64* temp){$/;"	f
interpolhline64_mmx	AVC/h264_baseline_decoder/lib_baseline/interpolation_mmx.c	/^ __m64 interpolhline64_mmx(unsigned char* image){$/;"	f
interpolhline_mmx_1	AVC/h264_baseline_decoder/lib_baseline/interpolation_mmx.c	/^unsigned int interpolhline_mmx_1(unsigned char* image){$/;"	f
interpolhline_mmx_2	AVC/h264_baseline_decoder/lib_baseline/interpolation_mmx.c	/^unsigned int interpolhline_mmx_2(unsigned char* image){$/;"	f
interpolhline_mmx_3	AVC/h264_baseline_decoder/lib_baseline/interpolation_mmx.c	/^unsigned int interpolhline_mmx_3(unsigned char* image){$/;"	f
interpolvline64_1_mmx	AVC/h264_baseline_decoder/lib_baseline/interpolation_mmx.c	/^unsigned int interpolvline64_1_mmx(__m64* temp){$/;"	f
interpolvline64_2_mmx	AVC/h264_baseline_decoder/lib_baseline/interpolation_mmx.c	/^unsigned int interpolvline64_2_mmx(__m64* temp){$/;"	f
interpolvline64_3_mmx	AVC/h264_baseline_decoder/lib_baseline/interpolation_mmx.c	/^unsigned int interpolvline64_3_mmx(__m64* temp){$/;"	f
interpolvline64_mmx	AVC/h264_baseline_decoder/lib_baseline/interpolation_mmx.c	/^ __m64 interpolvline64_mmx(unsigned char* image, const unsigned short PicWidthInPix){$/;"	f
interpolvline_mmx_1	AVC/h264_baseline_decoder/lib_baseline/interpolation_mmx.c	/^unsigned int interpolvline_mmx_1(unsigned char* image, unsigned char * ref,	int PicWidthInPix){$/;"	f
interpolvline_mmx_2	AVC/h264_baseline_decoder/lib_baseline/interpolation_mmx.c	/^unsigned int interpolvline_mmx_2(unsigned char* image,	int PicWidthInPix){$/;"	f
interpolvline_mmx_3	AVC/h264_baseline_decoder/lib_baseline/interpolation_mmx.c	/^unsigned int interpolvline_mmx_3(unsigned char* image,	int PicWidthInPix){$/;"	f
INTERPOL_MMX_H	AVC/h264_baseline_decoder/lib_baseline/interpolation_mmx.h	36;"	d
luma_sample_interp_8x8_1_0	AVC/h264_baseline_decoder/lib_baseline/interpolation_n_0.c	/^void luma_sample_interp_8x8_1_0(unsigned char image [RESTRICT], unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples, const short stride)$/;"	f
luma_sample_interp_8x8_2_0	AVC/h264_baseline_decoder/lib_baseline/interpolation_n_0.c	/^void luma_sample_interp_8x8_2_0(unsigned char image [RESTRICT], unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples, const short stride)$/;"	f
luma_sample_interp_8x8_3_0	AVC/h264_baseline_decoder/lib_baseline/interpolation_n_0.c	/^void luma_sample_interp_8x8_3_0(unsigned char image [RESTRICT], unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples, const short stride)$/;"	f
INTERPOLATION_N_0_H	AVC/h264_baseline_decoder/lib_baseline/interpolation_n_0.h	35;"	d
luma_sample_interp_8x8_1_2	AVC/h264_baseline_decoder/lib_baseline/interpolation_n_2.c	/^void luma_sample_interp_8x8_1_2(unsigned char image [RESTRICT], unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples, const short stride)$/;"	f
luma_sample_interp_8x8_3_2	AVC/h264_baseline_decoder/lib_baseline/interpolation_n_2.c	/^void luma_sample_interp_8x8_3_2(unsigned char image [RESTRICT], unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples, const short stride)$/;"	f
INTERPOLATION_N_2_H	AVC/h264_baseline_decoder/lib_baseline/interpolation_n_2.h	35;"	d
luma_sample_interp_8x8_1_1	AVC/h264_baseline_decoder/lib_baseline/interpolation_n_n.c	/^void luma_sample_interp_8x8_1_1(unsigned char image [RESTRICT],	unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples,const short stride){$/;"	f
luma_sample_interp_8x8_1_3	AVC/h264_baseline_decoder/lib_baseline/interpolation_n_n.c	/^void luma_sample_interp_8x8_1_3(unsigned char image [RESTRICT],	unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples,const short stride){$/;"	f
luma_sample_interp_8x8_3_1	AVC/h264_baseline_decoder/lib_baseline/interpolation_n_n.c	/^void luma_sample_interp_8x8_3_1(unsigned char image [RESTRICT],	unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples,const short stride){$/;"	f
luma_sample_interp_8x8_3_3	AVC/h264_baseline_decoder/lib_baseline/interpolation_n_n.c	/^void luma_sample_interp_8x8_3_3(unsigned char image [RESTRICT],	unsigned char refPicLXl[RESTRICT],	const short PicWidthSamples,const short stride){$/;"	f
INTERPOLATION_N_N_H	AVC/h264_baseline_decoder/lib_baseline/interpolation_n_n.h	36;"	d
macroblock_layer_I	AVC/h264_baseline_decoder/lib_baseline/macroblock_layer.c	/^char macroblock_layer_I(const PPS *Pps, RESIDU *picture_residu,  const unsigned char *ai_pcData,  int *aio_piPosition, $/;"	f
macroblock_layer_P	AVC/h264_baseline_decoder/lib_baseline/macroblock_layer.c	/^char macroblock_layer_P (const PPS *Pps, RESIDU *picture_residu,  const unsigned char *ai_pcData,  int *aio_piPosition, $/;"	f
MACRO_LAYER_H	AVC/h264_baseline_decoder/lib_baseline/macroblock_layer.h	36;"	d
ParseIPCM	AVC/h264_baseline_decoder/lib_baseline/macroblock_partitionning.c	/^void ParseIPCM(const unsigned char *ai_pcData, int *Position, RESIDU *picture_residu, unsigned char *NonZeroCountCache){$/;"	f
macroblock_I_partitionning	AVC/h264_baseline_decoder/lib_baseline/macroblock_partitionning.c	/^char macroblock_I_partitionning(const PPS *Pps, RESIDU *picture_residu, const unsigned char *ai_pcData, int *aio_piPosition, $/;"	f
macroblock_P_partitionning	AVC/h264_baseline_decoder/lib_baseline/macroblock_partitionning.c	/^char 	macroblock_P_partitionning (const PPS *Pps, RESIDU *Current_residu, const unsigned char *ai_pcData, int *aio_piPosition, $/;"	f
MACRO_PART_H	AVC/h264_baseline_decoder/lib_baseline/macroblock_partitionning.h	36;"	d
GetCavlcPRefList	AVC/h264_baseline_decoder/lib_baseline/mb_pred.c	/^int GetCavlcPRefList(const unsigned char *ai_pcData, int *aio_piPosition, char *refLx,$/;"	f
ReadCavlc16x16MotionVector	AVC/h264_baseline_decoder/lib_baseline/mb_pred.c	/^void ReadCavlc16x16MotionVector(const unsigned char *ai_pcData, int *aio_piPosition, char *RefLx, short *RefCacheLx, short MvCacheLx[][2])$/;"	f
ReadCavlc16x8MotionVector	AVC/h264_baseline_decoder/lib_baseline/mb_pred.c	/^void ReadCavlc16x8MotionVector(const unsigned char *ai_pcData, int *aio_piPosition, char *RefLx, short *RefCacheLx, short MvCacheLx[][2], int Index)$/;"	f
ReadCavlc8x16MotionVector	AVC/h264_baseline_decoder/lib_baseline/mb_pred.c	/^void ReadCavlc8x16MotionVector(const unsigned char *ai_pcData, int *aio_piPosition, char *RefLx, short *RefCacheLx, short MvCacheLx[][2], int Index)$/;"	f
mb_pred_I	AVC/h264_baseline_decoder/lib_baseline/mb_pred.c	/^int mb_pred_I( const unsigned char *ai_pcData, int *aio_piPosition, RESIDU *Residu, short *Mode, short *intra4x4_pred_mode_cache)$/;"	f
mb_pred_P	AVC/h264_baseline_decoder/lib_baseline/mb_pred.c	/^int mb_pred_P ( const unsigned char *ai_pcData, int *aio_piPosition, const SLICE *Slice, $/;"	f
sub_mb_pred_P	AVC/h264_baseline_decoder/lib_baseline/mb_pred.c	/^int sub_mb_pred_P(int *dct_allowed, const unsigned char *RESTRICT Data, int *Position, const SLICE *Slice, $/;"	f
GetCavlcIPredMode	AVC/h264_baseline_decoder/lib_baseline/mb_pred.h	/^static __inline short GetCavlcIPredMode(const unsigned char *Data,  int *Position, short *intra4x4_pred_mode_cache, int luma4x4BlkIdx)$/;"	f
GetCavlcPSubRefLx	AVC/h264_baseline_decoder/lib_baseline/mb_pred.h	/^static __inline int GetCavlcPSubRefLx(const unsigned char *Data,  int *Position, char *RefIdxLx, int NumRefIdxLx){$/;"	f
GetCavlcSubMbType	AVC/h264_baseline_decoder/lib_baseline/mb_pred.h	/^static __inline void GetCavlcSubMbType(const unsigned char *Data,  int *Position, RESIDU *CurrResidu ){$/;"	f
MB_PRED_H	AVC/h264_baseline_decoder/lib_baseline/mb_pred.h	37;"	d
get_predicted	AVC/h264_baseline_decoder/lib_baseline/mb_pred.h	/^static __inline short get_predicted ( short intra4x4_pred_mode_cache [], int index )$/;"	f
IdrFlushDpb	AVC/h264_baseline_decoder/lib_baseline/memory_management.c	/^void IdrFlushDpb(int Nb_Layer, MMO *Mmo, LIST_MMO *RefPicListL0, LIST_MMO *RefPicListL1){$/;"	f
ProvideMemAddress	AVC/h264_baseline_decoder/lib_baseline/memory_management.c	/^void ProvideMemAddress(LIST_MMO *Current_pic, MMO *Mmo, LAYER_MMO *LayerMmo)$/;"	f
avc_calculate_dpb	AVC/h264_baseline_decoder/lib_baseline/memory_management.c	/^void avc_calculate_dpb(const int total_memory, const int mv_memory, MMO *mmo_struct, SPS *sps){$/;"	f
idr_flush_dpb	AVC/h264_baseline_decoder/lib_baseline/memory_management.c	/^void idr_flush_dpb(int Nb_Layer, MMO *Mmo, LIST_MMO *RefPicListL0, LIST_MMO *RefPicListL1){$/;"	f
initialize_address	AVC/h264_baseline_decoder/lib_baseline/memory_management.c	/^void initialize_address(int total_memory, const int mv_memory, int nb_of_layers, int interval, int mv_interval, SPS *sps_id, MMO *Mmo){$/;"	f
optim_memcpy	AVC/h264_baseline_decoder/lib_baseline/memory_management.c	/^void optim_memcpy(	unsigned char* RESTRICT ao_pucDest, const unsigned char* RESTRICT ai_pucOrig, const int ai_iSize)$/;"	f
optim_memcpy_aligned64	AVC/h264_baseline_decoder/lib_baseline/memory_management.c	/^void optim_memcpy_aligned64(unsigned char* RESTRICT ao_pucDest, const unsigned char* RESTRICT ai_pucOrig, const int ai_iSize)$/;"	f
set_decoding_dpb	AVC/h264_baseline_decoder/lib_baseline/memory_management.c	/^void set_decoding_dpb(int interval, int Dpb_depth, int Dpb_display, int nb_of_layers, MMO *Mmo){$/;"	f
MEMORY_MANAG_H	AVC/h264_baseline_decoder/lib_baseline/memory_management.h	35;"	d
motion_vector	AVC/h264_baseline_decoder/lib_baseline/motion_vector.c	/^void motion_vector(short mv_cache[][2], const short MvdLX[2], const short *ref_cache, short mvLX[2], short refldxLX, const int index8, int partwidth)$/;"	f
motion_vector_16x8	AVC/h264_baseline_decoder/lib_baseline/motion_vector.c	/^void motion_vector_16x8(short mv_cache[][2], const short MvdLX[2], const short *ref_cache, short mvLX[2], short refldxLX, const int index8)$/;"	f
motion_vector_8x16	AVC/h264_baseline_decoder/lib_baseline/motion_vector.c	/^void motion_vector_8x16(short mv_cache[][2], const short MvdLX[2], const short *ref_cache, short mvLX[2], short refldxLX, const int index8)$/;"	f
motion_vector_skip	AVC/h264_baseline_decoder/lib_baseline/motion_vector.c	/^void motion_vector_skip(short mv_cache[][2], const short *ref_cache)$/;"	f
C_MOTIONV	AVC/h264_baseline_decoder/lib_baseline/motion_vector.h	37;"	d
MEDIAN	AVC/h264_baseline_decoder/lib_baseline/motion_vector.h	43;"	d
MEDIAN16	AVC/h264_baseline_decoder/lib_baseline/motion_vector.h	44;"	d
motion_pred	AVC/h264_baseline_decoder/lib_baseline/motion_vector.h	/^static __inline void motion_pred(int index8, short mv_cache[][2], short mvpLX[2], const int match_count, const short refldxLX, const int refldxLA , const int refldxLB , const int refldxLC){$/;"	f
NAL_H	AVC/h264_baseline_decoder/lib_baseline/nal.h	36;"	d
C_NEIGHBOURHOOD	AVC/h264_baseline_decoder/lib_baseline/neighbourhood.c	33;"	d	file:
GetNeighbour	AVC/h264_baseline_decoder/lib_baseline/neighbourhood.c	/^void GetNeighbour(short Addr, short iAddr_x, const short PicWidthInMbs, const short PicSizeInMbs, $/;"	f
mbAddrN_8x8	AVC/h264_baseline_decoder/lib_baseline/neighbourhood.c	/^void mbAddrN_8x8(unsigned char * predict_sample, const short PicWidthInPix, int Mask, const short locx, const short locy,  const int mode)$/;"	f
NEIGHBOURHOOD_H	AVC/h264_baseline_decoder/lib_baseline/neighbourhood.h	37;"	d
NeighbourAvail	AVC/h264_baseline_decoder/lib_baseline/neighbourhood.h	/^static __inline int NeighbourAvail ( const int ai_iMbAddr, const int PicSizeInMBs, int ASliceNum, int BSliceNum)$/;"	f
neighbouring_locations_luma	AVC/h264_baseline_decoder/lib_baseline/neighbourhood.h	/^static __inline void neighbouring_locations_luma ( int AvailMask, NEIGHBOUR * block){$/;"	f
Slice_data_P	AVC/h264_baseline_decoder/lib_baseline/non_IDR_picture.c	/^void Slice_data_P( const SPS *Sps, const PPS *Pps, const SLICE *Slice,  const unsigned char *SliceTable, $/;"	f
non_IDR_picture	AVC/h264_baseline_decoder/lib_baseline/non_IDR_picture.c	/^void non_IDR_picture ( 	const SPS *Sps, const PPS *Pps,const SLICE *Slice, const unsigned char *SliceTable, $/;"	f
NON_IDR_PICTURE_H	AVC/h264_baseline_decoder/lib_baseline/non_IDR_picture.h	37;"	d
PocComputation	AVC/h264_baseline_decoder/lib_baseline/pic_list.c	/^short PocComputation(SPS *sps, int IdrPicFlag, int nal_ref_idc, LAYER_MMO *LayerMmo)$/;"	f
direct_ref_list_init	AVC/h264_baseline_decoder/lib_baseline/pic_list.c	/^void direct_ref_list_init( SLICE *Slice, LIST_MMO RefPicListL0[], LIST_MMO RefPicListL1[], $/;"	f
execute_ref_pic_marking	AVC/h264_baseline_decoder/lib_baseline/pic_list.c	/^void execute_ref_pic_marking(LIST_MMO *Curr, MMO *Mmo, int LayerId)$/;"	f
fill_default_ref_list	AVC/h264_baseline_decoder/lib_baseline/pic_list.c	/^void fill_default_ref_list(LAYER_MMO *LayerMmo, LIST_MMO *refPicLXl0, LIST_MMO *refPicLXl1, $/;"	f
fill_frame_num_gap	AVC/h264_baseline_decoder/lib_baseline/pic_list.c	/^void fill_frame_num_gap(MMO *Mmo, LAYER_MMO *LayerMmo, int MaxFrameNum, int num_ref_frames, $/;"	f
pic_order_process	AVC/h264_baseline_decoder/lib_baseline/pic_list.c	/^void pic_order_process(SPS *sps, int IdrPicFlag, int nal_ref_idc, MMO *Mmo, LAYER_MMO *LayerMmo, $/;"	f
PIC_LIST_H	AVC/h264_baseline_decoder/lib_baseline/pic_list.h	35;"	d
remove_all	AVC/h264_baseline_decoder/lib_baseline/picture_management.c	/^void remove_all(MMO *Mmo, LAYER_MMO *LayerMmo){$/;"	f
remove_long	AVC/h264_baseline_decoder/lib_baseline/picture_management.c	/^void remove_long(MMO *Mmo, LAYER_MMO *LayerMmo, int long_term_pic_num){$/;"	f
remove_short	AVC/h264_baseline_decoder/lib_baseline/picture_management.c	/^void remove_short(MMO *Mmo, LAYER_MMO *LayerMmo, int frame_num){$/;"	f
remove_unused	AVC/h264_baseline_decoder/lib_baseline/picture_management.c	/^void remove_unused(MMO *Mmo, LAYER_MMO *LayerMmo){$/;"	f
short_to_long	AVC/h264_baseline_decoder/lib_baseline/picture_management.c	/^void short_to_long(MMO *Mmo, LAYER_MMO *LayerMmo, int frame_num, int Long_Term_Idx){$/;"	f
sliding_window	AVC/h264_baseline_decoder/lib_baseline/picture_management.c	/^void sliding_window(MMO *Mmo, LAYER_MMO *LayerMmo){$/;"	f
sliding_window_forced	AVC/h264_baseline_decoder/lib_baseline/picture_management.c	/^void sliding_window_forced(MMO *Mmo, LAYER_MMO *LayerMmo){$/;"	f
PIC_MANAG_H	AVC/h264_baseline_decoder/lib_baseline/picture_management.h	35;"	d
PPSCut	AVC/h264_baseline_decoder/lib_baseline/pps.c	/^void PPSCut (unsigned char *data, PPS *pps, SPS *sps, int NalBytesInNalunit )$/;"	f
PpsEndOfHeader	AVC/h264_baseline_decoder/lib_baseline/pps.c	/^void PpsEndOfHeader(unsigned char *data, int *Position, PPS *pt_pps)$/;"	f
PpsFirstHeader	AVC/h264_baseline_decoder/lib_baseline/pps.c	/^void PpsFirstHeader(unsigned char *data, int *Position, PPS *pt_pps)$/;"	f
PpsHighProfile	AVC/h264_baseline_decoder/lib_baseline/pps.c	/^void PpsHighProfile(unsigned char *data, int *Position, PPS *pt_pps, SPS *pt_sps)$/;"	f
PpsSliceGroupHeader	AVC/h264_baseline_decoder/lib_baseline/pps.c	/^void PpsSliceGroupHeader(unsigned char *data, int *Position, PPS *pt_pps, unsigned char *SliceGroupId)$/;"	f
PpsSliceGroupHeaderCut	AVC/h264_baseline_decoder/lib_baseline/pps.c	/^void PpsSliceGroupHeaderCut(unsigned char *data, int *Position, PPS *pt_pps)$/;"	f
init_pps	AVC/h264_baseline_decoder/lib_baseline/pps.c	/^void init_pps ( PPS *pps )$/;"	f
pic_parameter_set	AVC/h264_baseline_decoder/lib_baseline/pps.c	/^void pic_parameter_set (unsigned char *data, unsigned char *SliceGroupId, PPS *pps, SPS *sps, int NalBytesInNalunit )$/;"	f
predict_16x16_dci	AVC/h264_baseline_decoder/lib_baseline/prediction_mode.c	/^void predict_16x16_dci ( unsigned char * RESTRICT predict_sample, const short PicWidthInPix, int Mask)$/;"	f
predict_4x4_dci	AVC/h264_baseline_decoder/lib_baseline/prediction_mode.c	/^void predict_4x4_dci( unsigned char * RESTRICT predict_sample,const short PicWidthInPix, int Mask, const short locx, const short locy)$/;"	f
predict_4x4_ddli	AVC/h264_baseline_decoder/lib_baseline/prediction_mode.c	/^void predict_4x4_ddli ( unsigned char * RESTRICT predict_sample,const short PicWidthInPix , int Mask, const short locx, const short locy)$/;"	f
predict_4x4_vli	AVC/h264_baseline_decoder/lib_baseline/prediction_mode.c	/^void predict_4x4_vli ( unsigned char * RESTRICT predict_sample,const short PicWidthInPix , int Mask, const short locx, const short locy)$/;"	f
predict_chr_dci	AVC/h264_baseline_decoder/lib_baseline/prediction_mode.c	/^void predict_chr_dci( unsigned char * predict_sample, const short PicWidthInPix, int Mask){$/;"	f
PRED_MODE_8x8_H	AVC/h264_baseline_decoder/lib_baseline/prediction_mode.h	36;"	d
predict_16x16_dc	AVC/h264_baseline_decoder/lib_baseline/prediction_mode.h	/^static __inline void predict_16x16_dc( unsigned char sample [RESTRICT],	const short PicWidthInPix)$/;"	f
predict_16x16_dc_128	AVC/h264_baseline_decoder/lib_baseline/prediction_mode.h	/^static __inline void predict_16x16_dc_128( unsigned char sample [RESTRICT],	const short PicWidthInPix)$/;"	f
predict_16x16_dc_left	AVC/h264_baseline_decoder/lib_baseline/prediction_mode.h	/^static __inline void predict_16x16_dc_left(	unsigned char sample [RESTRICT], const short PicWidthInPix)$/;"	f
predict_16x16_dc_top	AVC/h264_baseline_decoder/lib_baseline/prediction_mode.h	/^static __inline void predict_16x16_dc_top( unsigned char sample [RESTRICT],	const short PicWidthInPix)$/;"	f
predict_16x16_h	AVC/h264_baseline_decoder/lib_baseline/prediction_mode.h	/^static __inline void predict_16x16_h( unsigned char sample [RESTRICT], const short PicWidthInPix, int Mask)$/;"	f
predict_16x16_p	AVC/h264_baseline_decoder/lib_baseline/prediction_mode.h	/^static __inline void predict_16x16_p( unsigned char sample [RESTRICT], const short PicWidthInPix, int Mask)$/;"	f
predict_16x16_v	AVC/h264_baseline_decoder/lib_baseline/prediction_mode.h	/^static __inline void predict_16x16_v( unsigned char sample [RESTRICT], const short PicWidthInPix, int Mask)$/;"	f
predict_4x4_dc	AVC/h264_baseline_decoder/lib_baseline/prediction_mode.h	/^static __inline void predict_4x4_dc ( unsigned char sample [RESTRICT], NEIGHBOUR * RESTRICT left, NEIGHBOUR * RESTRICT top,	const short PicWidthInPix)$/;"	f
predict_4x4_ddl	AVC/h264_baseline_decoder/lib_baseline/prediction_mode.h	/^static __inline void predict_4x4_ddl( unsigned char sample [RESTRICT], NEIGHBOUR * RESTRICT top_right, const short PicWidthInPix)$/;"	f
predict_4x4_ddr	AVC/h264_baseline_decoder/lib_baseline/prediction_mode.h	/^static __inline void predict_4x4_ddr( unsigned char * RESTRICT sample, const short PicWidthInPix, int Mask, const short locx, const short locy)$/;"	f
predict_4x4_h	AVC/h264_baseline_decoder/lib_baseline/prediction_mode.h	/^static __inline void predict_4x4_h ( unsigned char * RESTRICT sample, const short PicWidthInPix , int Mask, const short locx, const short locy)$/;"	f
predict_4x4_hd	AVC/h264_baseline_decoder/lib_baseline/prediction_mode.h	/^static __inline void predict_4x4_hd ( unsigned char * RESTRICT sample, const short PicWidthInPix, int Mask, const short locx, const short locy)$/;"	f
predict_4x4_hu	AVC/h264_baseline_decoder/lib_baseline/prediction_mode.h	/^static __inline void predict_4x4_hu ( unsigned char * RESTRICT sample, const short PicWidthInPix, int Mask, const short locx, const short locy)$/;"	f
predict_4x4_v	AVC/h264_baseline_decoder/lib_baseline/prediction_mode.h	/^static __inline void predict_4x4_v ( unsigned char * RESTRICT sample, const short PicWidthInPix, int Mask, const short locx, const short locy)$/;"	f
predict_4x4_vl	AVC/h264_baseline_decoder/lib_baseline/prediction_mode.h	/^static __inline void predict_4x4_vl ( unsigned char sample [RESTRICT], NEIGHBOUR *RESTRICT top_right, const short PicWidthInPix)$/;"	f
predict_4x4_vr	AVC/h264_baseline_decoder/lib_baseline/prediction_mode.h	/^static __inline void predict_4x4_vr ( unsigned char * RESTRICT sample, const short PicWidthInPix, int Mask, const short locx, const short locy)$/;"	f
predict_chr_dc	AVC/h264_baseline_decoder/lib_baseline/prediction_mode.h	/^static __inline void predict_chr_dc( unsigned char * RESTRICT sample, const short PicWidthInPix)$/;"	f
predict_chr_dc_128	AVC/h264_baseline_decoder/lib_baseline/prediction_mode.h	/^static __inline void predict_chr_dc_128(unsigned char * RESTRICT sample,const short PicWidthInPix)$/;"	f
predict_chr_dc_left	AVC/h264_baseline_decoder/lib_baseline/prediction_mode.h	/^static __inline void predict_chr_dc_left( unsigned char * RESTRICT sample, const short PicWidthInPix)$/;"	f
predict_chr_dc_top	AVC/h264_baseline_decoder/lib_baseline/prediction_mode.h	/^static __inline void predict_chr_dc_top( unsigned char * RESTRICT sample, const short PicWidthInPix)$/;"	f
predict_chr_h	AVC/h264_baseline_decoder/lib_baseline/prediction_mode.h	/^static __inline void predict_chr_h( unsigned char * RESTRICT sample, const short PicWidthInPix, int Mask)$/;"	f
predict_chr_p	AVC/h264_baseline_decoder/lib_baseline/prediction_mode.h	/^static __inline void predict_chr_p( unsigned char * RESTRICT sample, const short PicWidthInPix, int Mask)$/;"	f
predict_chr_v	AVC/h264_baseline_decoder/lib_baseline/prediction_mode.h	/^static __inline void predict_chr_v( unsigned char * RESTRICT sample, const short PicWidthInPix, int Mask)$/;"	f
predict_8x8_dc	AVC/h264_baseline_decoder/lib_baseline/prediction_mode_8x8.c	/^void predict_8x8_dc (unsigned char * sample, const short PicWidthInPix, int Avail)$/;"	f
predict_8x8_ddl	AVC/h264_baseline_decoder/lib_baseline/prediction_mode_8x8.c	/^void predict_8x8_ddl (unsigned char * sample, const short PicWidthInPix, int Avail)$/;"	f
predict_8x8_ddr	AVC/h264_baseline_decoder/lib_baseline/prediction_mode_8x8.c	/^void predict_8x8_ddr (unsigned char * sample, const short PicWidthInPix, int Avail)$/;"	f
predict_8x8_h	AVC/h264_baseline_decoder/lib_baseline/prediction_mode_8x8.c	/^void predict_8x8_h (unsigned char * sample, const short PicWidthInPix, int Avail)$/;"	f
predict_8x8_hd	AVC/h264_baseline_decoder/lib_baseline/prediction_mode_8x8.c	/^void predict_8x8_hd (unsigned char * sample, const short PicWidthInPix, int Avail)$/;"	f
predict_8x8_hu	AVC/h264_baseline_decoder/lib_baseline/prediction_mode_8x8.c	/^void predict_8x8_hu (unsigned char * sample, const short PicWidthInPix, int Avail)$/;"	f
predict_8x8_v	AVC/h264_baseline_decoder/lib_baseline/prediction_mode_8x8.c	/^void predict_8x8_v (unsigned char * sample, const short PicWidthInPix, int Avail)$/;"	f
predict_8x8_vl	AVC/h264_baseline_decoder/lib_baseline/prediction_mode_8x8.c	/^void predict_8x8_vl (unsigned char * sample, const short PicWidthInPix, int Avail)$/;"	f
predict_8x8_vr	AVC/h264_baseline_decoder/lib_baseline/prediction_mode_8x8.c	/^void predict_8x8_vr (unsigned char * sample, const short PicWidthInPix, int Avail){$/;"	f
PRED_MODE_8x8_H	AVC/h264_baseline_decoder/lib_baseline/prediction_mode_8x8.h	35;"	d
QUANTIZE_H	AVC/h264_baseline_decoder/lib_baseline/quantization.h	39;"	d
SUBC	AVC/h264_baseline_decoder/lib_baseline/quantization.h	49;"	d
div_6	AVC/h264_baseline_decoder/lib_baseline/quantization.h	/^static __inline int div_6 ( int num ) \/\/ num range is 0 - 52 (6 bits)$/;"	f
rescale_4x4_dc_chr	AVC/h264_baseline_decoder/lib_baseline/quantization.h	/^static __inline void rescale_4x4_dc_chr ( const int qp, const short * RESTRICT in, short * RESTRICT out,const short W4x4[][16])$/;"	f
rescale_4x4_dc_lum	AVC/h264_baseline_decoder/lib_baseline/quantization.h	/^static __inline void rescale_4x4_dc_lum ( const int qp, const short * RESTRICT in, short * RESTRICT out,const short W4x4[][16])$/;"	f
rescale_4x4_residual	AVC/h264_baseline_decoder/lib_baseline/quantization.h	/^static __inline void rescale_4x4_residual ( const int qp, const short * RESTRICT in, short * RESTRICT out,	const short W4x4[][16])$/;"	f
rescale_8x8_residual	AVC/h264_baseline_decoder/lib_baseline/quantization.h	/^static __inline void rescale_8x8_residual ( const int qp, const short * RESTRICT in, short * RESTRICT out, const short W8x8[][64])$/;"	f
rescale_residual	AVC/h264_baseline_decoder/lib_baseline/quantization.h	/^static __inline void rescale_residual ( const int qp, const short * RESTRICT in, short * RESTRICT out,	const short W4x4[][16])$/;"	f
refill_motion_vector	AVC/h264_baseline_decoder/lib_baseline/refill.c	/^void refill_motion_vector(int slice_type, int subMbmode, short mv_cache [][2]){$/;"	f
FillMotionVector	AVC/h264_baseline_decoder/lib_baseline/refill.h	/^static __inline void FillMotionVector(short mvdlx[2], short mv_cache[][2], int Mode){$/;"	f
FillRefIdx	AVC/h264_baseline_decoder/lib_baseline/refill.h	/^static __inline void FillRefIdx(short RefIdxLx, short *ref_cache, int Mode){$/;"	f
FillSubMotionVector	AVC/h264_baseline_decoder/lib_baseline/refill.h	/^static __inline void FillSubMotionVector(short MvdLX[2], short mv_cache[][2], int sub_mb_type, int slice_type){$/;"	f
REFILL_H	AVC/h264_baseline_decoder/lib_baseline/refill.h	40;"	d
refill_mv	AVC/h264_baseline_decoder/lib_baseline/refill.h	/^static __inline void refill_mv( int width, int height, short *val, short dst[][2]){$/;"	f
refill_ref	AVC/h264_baseline_decoder/lib_baseline/refill.h	/^static __inline void refill_ref( int width, int height, short val, short *dst){$/;"	f
decode_scaling_list	AVC/h264_baseline_decoder/lib_baseline/scaling_matrix.c	/^void decode_scaling_list(unsigned char *data, int *aio_piPosition,short *factors, int size, const short *jvt_list , const short *fallback_list){$/;"	f
decode_scaling_matrices	AVC/h264_baseline_decoder/lib_baseline/scaling_matrix.c	/^void decode_scaling_matrices(unsigned char *data, int *aio_piPosition,  SPS *sps,int is_sps, short (*scaling_matrix4)[16], short (*scaling_matrix8)[64]){    $/;"	f
default_scaling4	AVC/h264_baseline_decoder/lib_baseline/scaling_matrix.c	/^static const short default_scaling4[2][16] = {$/;"	v	file:
default_scaling8	AVC/h264_baseline_decoder/lib_baseline/scaling_matrix.c	/^static const short default_scaling8[2][64]={$/;"	v	file:
SCALING_MATRIX_X	AVC/h264_baseline_decoder/lib_baseline/scaling_matrix.h	36;"	d
buffering_period	AVC/h264_baseline_decoder/lib_baseline/sei.c	/^void buffering_period(unsigned char *data, SPS sps[], int *pos_bits) {$/;"	f
dec_ref_pic_marking_repetition	AVC/h264_baseline_decoder/lib_baseline/sei.c	/^void dec_ref_pic_marking_repetition(unsigned char *data, int *pos_bits, SPS *sps) {$/;"	f
filler_payload	AVC/h264_baseline_decoder/lib_baseline/sei.c	/^void filler_payload(unsigned char *data, int *pos_bits, int payload_size) {$/;"	f
full_frame_freeze	AVC/h264_baseline_decoder/lib_baseline/sei.c	/^void full_frame_freeze(unsigned char *data, int *pos_bits) {$/;"	f
full_frame_freeze_release	AVC/h264_baseline_decoder/lib_baseline/sei.c	/^void full_frame_freeze_release() {$/;"	f
full_frame_snapshot	AVC/h264_baseline_decoder/lib_baseline/sei.c	/^void full_frame_snapshot(unsigned char *data, int *pos_bits   ) {$/;"	f
init_sei_vectors	AVC/h264_baseline_decoder/lib_baseline/sei.c	/^void init_sei_vectors(SEI *decoder_svc_sei) {$/;"	f
motion_constrained_aio_pstSlice_group_set	AVC/h264_baseline_decoder/lib_baseline/sei.c	/^void motion_constrained_aio_pstSlice_group_set(unsigned char *data, int *pos_bits) {$/;"	f
pan_scan_rect	AVC/h264_baseline_decoder/lib_baseline/sei.c	/^void pan_scan_rect(unsigned char *data, int *pos_bits) {$/;"	f
pic_timing	AVC/h264_baseline_decoder/lib_baseline/sei.c	/^void pic_timing(unsigned char *data, SPS *sps, int *pos_bits) {	$/;"	f
progressive_refinement_segment_end	AVC/h264_baseline_decoder/lib_baseline/sei.c	/^void progressive_refinement_segment_end(unsigned char *data, int *pos_bits) {$/;"	f
progressive_refinement_segment_start	AVC/h264_baseline_decoder/lib_baseline/sei.c	/^void progressive_refinement_segment_start(unsigned char *data, int *pos_bits   ) {$/;"	f
recovery_point	AVC/h264_baseline_decoder/lib_baseline/sei.c	/^void recovery_point(unsigned char *data, int *pos_bits) {$/;"	f
reserved_sei_message	AVC/h264_baseline_decoder/lib_baseline/sei.c	/^void reserved_sei_message(unsigned char *data, int *pos_bits, int payloadSize) {$/;"	f
scalability_info	AVC/h264_baseline_decoder/lib_baseline/sei.c	/^void scalability_info(unsigned char *data, SPS *sps, int *pos_bits, SEI *decoder_svc_sei) {	$/;"	f
scene_info	AVC/h264_baseline_decoder/lib_baseline/sei.c	/^void scene_info(unsigned char *data, int *pos_bits) {$/;"	f
sei_payload	AVC/h264_baseline_decoder/lib_baseline/sei.c	/^void sei_payload (unsigned char *data, int payloadType, int payloadSize, int *pos_bits, SPS sps[], SEI *decoder_svc_sei)$/;"	f
sei_rbsp	AVC/h264_baseline_decoder/lib_baseline/sei.c	/^void sei_rbsp (unsigned char *data, int NalBytesInNalunit, SPS sps[], SEI *decoder_svc_sei)$/;"	f
spare_pic	AVC/h264_baseline_decoder/lib_baseline/sei.c	/^void spare_pic(unsigned char *data, int *pos_bits, SPS *sps) {$/;"	f
sub_seq_characteristics	AVC/h264_baseline_decoder/lib_baseline/sei.c	/^void sub_seq_characteristics(unsigned char *data, int *pos_bits) {$/;"	f
sub_seq_info	AVC/h264_baseline_decoder/lib_baseline/sei.c	/^void sub_seq_info(unsigned char *data, int *pos_bits   ) {$/;"	f
sub_seq_layer_characteristics	AVC/h264_baseline_decoder/lib_baseline/sei.c	/^void sub_seq_layer_characteristics(unsigned char *data, int *pos_bits) {$/;"	f
user_data_registered_itu_t_t35	AVC/h264_baseline_decoder/lib_baseline/sei.c	/^void user_data_registered_itu_t_t35(unsigned char *data, int *pos_bits, int payload_size) {$/;"	f
user_data_unregistered	AVC/h264_baseline_decoder/lib_baseline/sei.c	/^int user_data_unregistered (unsigned char *data, int payloadSize, int *aio_piPosition)$/;"	f
MoreRbsp	AVC/h264_baseline_decoder/lib_baseline/slice_data_vlc.c	/^int MoreRbsp( const unsigned char *ai_pcData, const int *aio_piPosition, const int *ai_piNalBytesInNalunit, $/;"	f
more_rbsp_data	AVC/h264_baseline_decoder/lib_baseline/slice_data_vlc.c	/^int more_rbsp_data ( const unsigned char *ai_pcData, const int *aio_piPosition, const int *ai_piNalBytesInNalunit)$/;"	f
slice_data_I_cavlc	AVC/h264_baseline_decoder/lib_baseline/slice_data_vlc.c	/^char slice_data_I_cavlc(RESIDU *picture_residu, const unsigned char *ai_pcData,  const int *ai_piNalBytesInNalunit, $/;"	f
slice_data_P_cavlc	AVC/h264_baseline_decoder/lib_baseline/slice_data_vlc.c	/^char slice_data_P_cavlc(RESIDU *picture_residu, const unsigned char *Data, const int *ai_piNalBytesInNalunit, $/;"	f
EndOfSliceManagement	AVC/h264_baseline_decoder/lib_baseline/slice_data_vlc.h	/^static __inline int EndOfSliceManagement(SLICE *Slice, int PicSizeInMbs, char ErrorDetection)$/;"	f
SLICE_DATA_H	AVC/h264_baseline_decoder/lib_baseline/slice_data_vlc.h	37;"	d
mapUnitToSlice	AVC/h264_baseline_decoder/lib_baseline/slice_group_map.c	/^void mapUnitToSlice (const SPS *Sps, const PPS *Pps,  unsigned char ao_tiMapUnitToSliceGroupMap [ ], $/;"	f
FrameHeaderData	AVC/h264_baseline_decoder/lib_baseline/slice_header.c	/^void FrameHeaderData(unsigned char *data, int *Position, int NalRefIdc, int IdrFlag, int LayerId, $/;"	f
GetMMCOOperationCode	AVC/h264_baseline_decoder/lib_baseline/slice_header.c	/^void GetMMCOOperationCode(SPS *sps, LAYER_MMO *LayerMmo, unsigned char *data, int *Position)$/;"	f
PredWeightTable	AVC/h264_baseline_decoder/lib_baseline/slice_header.c	/^void PredWeightTable(unsigned char *data, int *Position, PPS *pps_id, SLICE *Slice)$/;"	f
QpAndDeblockProcessing	AVC/h264_baseline_decoder/lib_baseline/slice_header.c	/^void QpAndDeblockProcessing(unsigned char *data, int *Position, SLICE *Slice, PPS *pps_id, SPS *sps_id)$/;"	f
ReferenceListProcessing	AVC/h264_baseline_decoder/lib_baseline/slice_header.c	/^void ReferenceListProcessing(unsigned char *data, int *Position, SLICE *Slice, $/;"	f
SliceManagement	AVC/h264_baseline_decoder/lib_baseline/slice_header.c	/^void SliceManagement(PPS *Pps, SLICE *Slice){$/;"	f
dec_ref_pic_marking	AVC/h264_baseline_decoder/lib_baseline/slice_header.c	/^void dec_ref_pic_marking ( unsigned char *data, int *Position, int nal_unit_type, $/;"	f
direct_dist_scale_factor	AVC/h264_baseline_decoder/lib_baseline/slice_header.c	/^void direct_dist_scale_factor(short dist_scale_factor[], LAYER_MMO *LayerMmo, $/;"	f
ref_pic_list_reordering	AVC/h264_baseline_decoder/lib_baseline/slice_header.c	/^void ref_pic_list_reordering ( unsigned char *data, int *Position, SLICE *Slice, SPS *sps, $/;"	f
slice_header	AVC/h264_baseline_decoder/lib_baseline/slice_header.c	/^void slice_header ( unsigned char *data, int *nal_unit_type, int *nal_ref_idc, $/;"	f
slice_layer_without_partitioning_rbsp	AVC/h264_baseline_decoder/lib_baseline/slice_header.c	/^void slice_layer_without_partitioning_rbsp ( unsigned char *ai_pcData, const int *ai_piNalBytesInNalunit, $/;"	f
SLICE_HEADER_H	AVC/h264_baseline_decoder/lib_baseline/slice_header.h	38;"	d
Extended_SAR	AVC/h264_baseline_decoder/lib_baseline/sps.c	48;"	d	file:
MaxDPB	AVC/h264_baseline_decoder/lib_baseline/sps.c	/^static int MaxDPB [5] [5] = {{396,900,2376,2376},{2376,4752,8100,0},{8100,18000,20480,0},{32768,32768,34816,0},{110400,184320,0}};$/;"	v	file:
get_max_dpb	AVC/h264_baseline_decoder/lib_baseline/sps.c	/^void get_max_dpb(SPS * sps_id){$/;"	f
hrd_parameters	AVC/h264_baseline_decoder/lib_baseline/sps.c	/^void hrd_parameters ( unsigned char *data, int *position, SPS *sps )$/;"	f
init_sps	AVC/h264_baseline_decoder/lib_baseline/sps.c	/^void init_sps (SPS *sps){$/;"	f
seq_parameter_set	AVC/h264_baseline_decoder/lib_baseline/sps.c	/^void seq_parameter_set( unsigned char *data, SPS *sps){$/;"	f
seq_parameter_set_data	AVC/h264_baseline_decoder/lib_baseline/sps.c	/^void seq_parameter_set_data ( unsigned char *data, int *position,  SPS *pt_sps)$/;"	f
vui_parameters	AVC/h264_baseline_decoder/lib_baseline/sps.c	/^void vui_parameters ( unsigned char *data, int *position, SPS *sps )$/;"	f
SPS_H	AVC/h264_baseline_decoder/lib_baseline/sps.h	35;"	d
BL	AVC/h264_baseline_decoder/lib_baseline/symbol.h	72;"	d
B_8x8	AVC/h264_baseline_decoder/lib_baseline/symbol.h	67;"	d
B_BL	AVC/h264_baseline_decoder/lib_baseline/symbol.h	75;"	d
B_Bi	AVC/h264_baseline_decoder/lib_baseline/symbol.h	57;"	d
B_Bi_Bi	AVC/h264_baseline_decoder/lib_baseline/symbol.h	66;"	d
B_Bi_L0	AVC/h264_baseline_decoder/lib_baseline/symbol.h	64;"	d
B_Bi_L1	AVC/h264_baseline_decoder/lib_baseline/symbol.h	65;"	d
B_L0	AVC/h264_baseline_decoder/lib_baseline/symbol.h	55;"	d
B_L0_Bi	AVC/h264_baseline_decoder/lib_baseline/symbol.h	60;"	d
B_L0_L0	AVC/h264_baseline_decoder/lib_baseline/symbol.h	58;"	d
B_L0_L1	AVC/h264_baseline_decoder/lib_baseline/symbol.h	59;"	d
B_L1	AVC/h264_baseline_decoder/lib_baseline/symbol.h	56;"	d
B_L1_Bi	AVC/h264_baseline_decoder/lib_baseline/symbol.h	63;"	d
B_L1_L0	AVC/h264_baseline_decoder/lib_baseline/symbol.h	62;"	d
B_L1_L1	AVC/h264_baseline_decoder/lib_baseline/symbol.h	61;"	d
B_Skip	AVC/h264_baseline_decoder/lib_baseline/symbol.h	68;"	d
B_direct	AVC/h264_baseline_decoder/lib_baseline/symbol.h	54;"	d
CHROMA_DC_BLOCK_INDEX	AVC/h264_baseline_decoder/lib_baseline/symbol.h	91;"	d
CHROMA_DC_COEFF_TOKEN_VLC_BITS	AVC/h264_baseline_decoder/lib_baseline/symbol.h	92;"	d
CHROMA_DC_TOTAL_ZEROS_VLC_BITS	AVC/h264_baseline_decoder/lib_baseline/symbol.h	95;"	d
COEFF_TOKEN_VLC_BITS	AVC/h264_baseline_decoder/lib_baseline/symbol.h	93;"	d
ChromaFormatFactor	AVC/h264_baseline_decoder/lib_baseline/symbol.h	85;"	d
INIT_VLC_LE	AVC/h264_baseline_decoder/lib_baseline/symbol.h	84;"	d
INTRA_16x16	AVC/h264_baseline_decoder/lib_baseline/symbol.h	47;"	d
INTRA_16x16_DC	AVC/h264_baseline_decoder/lib_baseline/symbol.h	122;"	d
INTRA_16x16_DC_128	AVC/h264_baseline_decoder/lib_baseline/symbol.h	126;"	d
INTRA_16x16_DC_LEFT	AVC/h264_baseline_decoder/lib_baseline/symbol.h	124;"	d
INTRA_16x16_DC_TOP	AVC/h264_baseline_decoder/lib_baseline/symbol.h	125;"	d
INTRA_16x16_H	AVC/h264_baseline_decoder/lib_baseline/symbol.h	121;"	d
INTRA_16x16_P	AVC/h264_baseline_decoder/lib_baseline/symbol.h	123;"	d
INTRA_16x16_V	AVC/h264_baseline_decoder/lib_baseline/symbol.h	120;"	d
INTRA_4x4	AVC/h264_baseline_decoder/lib_baseline/symbol.h	45;"	d
INTRA_4x4_DC	AVC/h264_baseline_decoder/lib_baseline/symbol.h	102;"	d
INTRA_4x4_DDL	AVC/h264_baseline_decoder/lib_baseline/symbol.h	103;"	d
INTRA_4x4_DDR	AVC/h264_baseline_decoder/lib_baseline/symbol.h	104;"	d
INTRA_4x4_H	AVC/h264_baseline_decoder/lib_baseline/symbol.h	101;"	d
INTRA_4x4_HD	AVC/h264_baseline_decoder/lib_baseline/symbol.h	106;"	d
INTRA_4x4_HU	AVC/h264_baseline_decoder/lib_baseline/symbol.h	108;"	d
INTRA_4x4_V	AVC/h264_baseline_decoder/lib_baseline/symbol.h	100;"	d
INTRA_4x4_VL	AVC/h264_baseline_decoder/lib_baseline/symbol.h	107;"	d
INTRA_4x4_VR	AVC/h264_baseline_decoder/lib_baseline/symbol.h	105;"	d
INTRA_8x8	AVC/h264_baseline_decoder/lib_baseline/symbol.h	46;"	d
INTRA_8x8_DC	AVC/h264_baseline_decoder/lib_baseline/symbol.h	112;"	d
INTRA_8x8_DDL	AVC/h264_baseline_decoder/lib_baseline/symbol.h	113;"	d
INTRA_8x8_DDR	AVC/h264_baseline_decoder/lib_baseline/symbol.h	114;"	d
INTRA_8x8_H	AVC/h264_baseline_decoder/lib_baseline/symbol.h	111;"	d
INTRA_8x8_HD	AVC/h264_baseline_decoder/lib_baseline/symbol.h	116;"	d
INTRA_8x8_HU	AVC/h264_baseline_decoder/lib_baseline/symbol.h	118;"	d
INTRA_8x8_V	AVC/h264_baseline_decoder/lib_baseline/symbol.h	110;"	d
INTRA_8x8_VL	AVC/h264_baseline_decoder/lib_baseline/symbol.h	117;"	d
INTRA_8x8_VR	AVC/h264_baseline_decoder/lib_baseline/symbol.h	115;"	d
INTRA_CHROMA_DC	AVC/h264_baseline_decoder/lib_baseline/symbol.h	130;"	d
INTRA_CHROMA_DC_128	AVC/h264_baseline_decoder/lib_baseline/symbol.h	136;"	d
INTRA_CHROMA_DC_LEFT	AVC/h264_baseline_decoder/lib_baseline/symbol.h	134;"	d
INTRA_CHROMA_DC_TOP	AVC/h264_baseline_decoder/lib_baseline/symbol.h	135;"	d
INTRA_CHROMA_H	AVC/h264_baseline_decoder/lib_baseline/symbol.h	131;"	d
INTRA_CHROMA_P	AVC/h264_baseline_decoder/lib_baseline/symbol.h	133;"	d
INTRA_CHROMA_V	AVC/h264_baseline_decoder/lib_baseline/symbol.h	132;"	d
INTRA_PCM	AVC/h264_baseline_decoder/lib_baseline/symbol.h	48;"	d
IS_B	AVC/h264_baseline_decoder/lib_baseline/symbol.h	141;"	d
IS_I	AVC/h264_baseline_decoder/lib_baseline/symbol.h	138;"	d
IS_NxN	AVC/h264_baseline_decoder/lib_baseline/symbol.h	139;"	d
IS_P	AVC/h264_baseline_decoder/lib_baseline/symbol.h	140;"	d
I_BL	AVC/h264_baseline_decoder/lib_baseline/symbol.h	73;"	d
LIST_NOT_USED	AVC/h264_baseline_decoder/lib_baseline/symbol.h	87;"	d
LOCX	AVC/h264_baseline_decoder/lib_baseline/symbol.h	147;"	d
LOCY	AVC/h264_baseline_decoder/lib_baseline/symbol.h	148;"	d
LUMA_DC_BLOCK_INDEX	AVC/h264_baseline_decoder/lib_baseline/symbol.h	90;"	d
MAX_POC	AVC/h264_baseline_decoder/lib_baseline/symbol.h	80;"	d
MIN_POC	AVC/h264_baseline_decoder/lib_baseline/symbol.h	79;"	d
MV_CAL	AVC/h264_baseline_decoder/lib_baseline/symbol.h	159;"	d
MaxBSubMbType	AVC/h264_baseline_decoder/lib_baseline/symbol.h	165;"	d
MaxChromaMode	AVC/h264_baseline_decoder/lib_baseline/symbol.h	163;"	d
MaxPSubMbType	AVC/h264_baseline_decoder/lib_baseline/symbol.h	164;"	d
NA	AVC/h264_baseline_decoder/lib_baseline/symbol.h	83;"	d
PART_NOT_AVAILABLE	AVC/h264_baseline_decoder/lib_baseline/symbol.h	88;"	d
PB_BL	AVC/h264_baseline_decoder/lib_baseline/symbol.h	76;"	d
POSX	AVC/h264_baseline_decoder/lib_baseline/symbol.h	154;"	d
POSY	AVC/h264_baseline_decoder/lib_baseline/symbol.h	155;"	d
P_8x8	AVC/h264_baseline_decoder/lib_baseline/symbol.h	51;"	d
P_8x8ref0	AVC/h264_baseline_decoder/lib_baseline/symbol.h	52;"	d
P_BL	AVC/h264_baseline_decoder/lib_baseline/symbol.h	74;"	d
P_Skip	AVC/h264_baseline_decoder/lib_baseline/symbol.h	53;"	d
Pred_L0	AVC/h264_baseline_decoder/lib_baseline/symbol.h	49;"	d
Pred_L1	AVC/h264_baseline_decoder/lib_baseline/symbol.h	50;"	d
RESAMPLE_CAL	AVC/h264_baseline_decoder/lib_baseline/symbol.h	158;"	d
RUN7_VLC_BITS	AVC/h264_baseline_decoder/lib_baseline/symbol.h	97;"	d
RUN_VLC_BITS	AVC/h264_baseline_decoder/lib_baseline/symbol.h	96;"	d
SIGN	AVC/h264_baseline_decoder/lib_baseline/symbol.h	157;"	d
SLICE_TYPE_B	AVC/h264_baseline_decoder/lib_baseline/symbol.h	39;"	d
SLICE_TYPE_I	AVC/h264_baseline_decoder/lib_baseline/symbol.h	40;"	d
SLICE_TYPE_P	AVC/h264_baseline_decoder/lib_baseline/symbol.h	38;"	d
SLICE_TYPE_SI	AVC/h264_baseline_decoder/lib_baseline/symbol.h	42;"	d
SLICE_TYPE_SP	AVC/h264_baseline_decoder/lib_baseline/symbol.h	41;"	d
TOTAL_ZEROS_VLC_BITS	AVC/h264_baseline_decoder/lib_baseline/symbol.h	94;"	d
TRANSFORM_8x8_H	AVC/h264_baseline_decoder/lib_baseline/transform_8x8.h	43;"	d
ict_8x8	AVC/h264_baseline_decoder/lib_baseline/transform_8x8.h	/^static __inline void ict_8x8(short *block, unsigned char *image, const int PicWidthInPix){$/;"	f
AdaptiveBaseModeFlag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char AdaptiveBaseModeFlag;$/;"	m	struct:__anon308
AdaptiveMotionPredictionFlag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char AdaptiveMotionPredictionFlag;$/;"	m	struct:__anon308
AdaptivePredictionFlag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char AdaptivePredictionFlag;$/;"	m	struct:__anon308
AdaptiveResidualPredictionFlag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char AdaptiveResidualPredictionFlag;$/;"	m	struct:__anon308
AlphaOffset	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	char AlphaOffset;$/;"	m	struct:__anon307
AlphaOffsetUpsapmpling	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	char AlphaOffsetUpsapmpling;$/;"	m	struct:__anon307
AuMemory	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	char AuMemory;$/;"	m	struct:__anon312
AuMemoryAddress	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int AuMemoryAddress[NUM_LAYERS * 2];\/\/ParseAU + First AU$/;"	m	struct:__anon312
Avail	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short   Avail ;$/;"	m	struct:__anon314
AvailMask	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int AvailMask;$/;"	m	struct:__anon315
BaseModeFlag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char BaseModeFlag;$/;"	m	struct:__anon315
BetaOffset	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	char BetaOffset;$/;"	m	struct:__anon307
BetaOffsetUpsapmpling	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	char BetaOffsetUpsapmpling;$/;"	m	struct:__anon307
Cbp	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int Cbp;$/;"	m	struct:__anon315
Cbp	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char Cbp;$/;"	m	struct:IMbInfo
ChromaACLevel_Cb	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short ChromaACLevel_Cb [4 * 16];$/;"	m	struct:__anon315
ChromaACLevel_Cr	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short ChromaACLevel_Cr [4 * 16];$/;"	m	struct:__anon315
ChromaDCLevel_Cb	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short ChromaDCLevel_Cb [4];$/;"	m	struct:__anon315
ChromaDCLevel_Cr	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short ChromaDCLevel_Cr [4];$/;"	m	struct:__anon315
Chroma_dc_coeff_token_vlc	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	VLC_TYPE Chroma_dc_coeff_token_vlc [256];$/;"	m	struct:__anon317
Chroma_dc_total_zeros_vlc	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	VLC_TYPE Chroma_dc_total_zeros_vlc [24];$/;"	m	struct:__anon317
Coeff_token_vlc	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	VLC_TYPE Coeff_token_vlc [1388]; $/;"	m	struct:__anon317
Coeff_token_vlc_adress	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int Coeff_token_vlc_adress [4];$/;"	m	struct:__anon317
Crop	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int Crop;$/;"	m	struct:__anon310
CropBottom	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short CropBottom; $/;"	m	struct:__anon306
CropLeft	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short CropLeft; $/;"	m	struct:__anon306
CropRight	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short CropRight;$/;"	m	struct:__anon306
CropTop	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short CropTop;$/;"	m	struct:__anon306
DATA	AVC/h264_baseline_decoder/lib_baseline/type.h	/^}   DATA ;$/;"	t	typeref:struct:__anon313
DefaultBaseModeFlag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char DefaultBaseModeFlag;$/;"	m	struct:__anon308
DefaultMotionPredictionFlag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char DefaultMotionPredictionFlag;$/;"	m	struct:__anon308
DefaultResidualPredictionFlag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char DefaultResidualPredictionFlag;$/;"	m	struct:__anon308
EndOfSequence	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char EndOfSequence;$/;"	m	struct:__anon320
FrameCount	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char FrameCount;$/;"	m	struct:__anon320
FreeMemoryAddress	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int FreeMemoryAddress[NUM_FREE_MEM]; \/\/ 32$/;"	m	struct:__anon312
FreeMvMemory	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	char FreeMvMemory;$/;"	m	struct:__anon311
GapInFrameNumAllowFlag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char GapInFrameNumAllowFlag;$/;"	m	struct:__anon306
IMbInfo	AVC/h264_baseline_decoder/lib_baseline/type.h	/^typedef struct IMbInfo{$/;"	s
IMbInfo	AVC/h264_baseline_decoder/lib_baseline/type.h	/^} IMbInfo;$/;"	t	typeref:struct:IMbInfo
InCropWindow	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char InCropWindow;$/;"	m	struct:__anon315
InterLayerDeblockingFilterFlag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char InterLayerDeblockingFilterFlag;$/;"	m	struct:__anon306
InterLayerDeblockingFilterIdc	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char InterLayerDeblockingFilterIdc;$/;"	m	struct:__anon308
Intra16x16DCLevel	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short Intra16x16DCLevel [16]; \/\/Used also for I prediction mode in case of 4x4 and 8x8 blocks$/;"	m	struct:__anon315
Intra16x16PredMode	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char Intra16x16PredMode ;$/;"	m	struct:__anon315
IntraChromaPredMode	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char IntraChromaPredMode ;$/;"	m	struct:__anon315
Is_Intra4x4	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char Is_Intra4x4;$/;"	m	struct:__anon315
KeyFrame	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char KeyFrame;$/;"	m	struct:__anon309
LAYER_MMO	AVC/h264_baseline_decoder/lib_baseline/type.h	/^} LAYER_MMO;$/;"	t	typeref:struct:__anon311
LIST_MMO	AVC/h264_baseline_decoder/lib_baseline/type.h	/^} LIST_MMO;$/;"	t	typeref:struct:__anon309
LIST_MMO_REFPIC_SIZE	AVC/h264_baseline_decoder/lib_baseline/type.h	112;"	d
LastDecodedPoc	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short LastDecodedPoc;$/;"	m	struct:__anon312
LayerId	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char LayerId;$/;"	m	struct:__anon310
LayerId	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char LayerId;$/;"	m	struct:__anon312
LayerMMO	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	LAYER_MMO LayerMMO[NUM_LAYERS];$/;"	m	struct:__anon312
LongRef	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	LIST_MMO LongRef[MAX_REF]; \/\/ 16$/;"	m	struct:__anon311
LongRefCount	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char LongRefCount;$/;"	m	struct:__anon311
LumaLevel	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short LumaLevel [16 * 16];$/;"	m	struct:__anon315
MAX_MMCO_COUNT	AVC/h264_baseline_decoder/lib_baseline/type.h	109;"	d
MAX_QUALITY_LEVELS	AVC/h264_baseline_decoder/lib_baseline/type.h	117;"	d
MAX_REF	AVC/h264_baseline_decoder/lib_baseline/type.h	129;"	d
MAX_SCALABLE_LAYERS	AVC/h264_baseline_decoder/lib_baseline/type.h	118;"	d
MAX_SIZE_DBP	AVC/h264_baseline_decoder/lib_baseline/type.h	105;"	d
MAX_SLICES_PER_FRAME	AVC/h264_baseline_decoder/lib_baseline/type.h	123;"	d
MAX_SPATIAL_LEVELS	AVC/h264_baseline_decoder/lib_baseline/type.h	115;"	d
MAX_TEMP_LEVELS	AVC/h264_baseline_decoder/lib_baseline/type.h	116;"	d
MMCO	AVC/h264_baseline_decoder/lib_baseline/type.h	/^typedef struct MMCO{$/;"	s
MMCO	AVC/h264_baseline_decoder/lib_baseline/type.h	/^} MMCO;$/;"	t	typeref:struct:MMCO
MMO	AVC/h264_baseline_decoder/lib_baseline/type.h	/^} MMO;$/;"	t	typeref:struct:__anon312
MapColList	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short MapColList[32];$/;"	m	struct:__anon308
MaxHeight	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short MaxHeight;$/;"	m	struct:__anon312
MaxPpsId	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char MaxPpsId;$/;"	m	struct:__anon307
MaxSpsId	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char MaxSpsId;$/;"	m	struct:__anon306
MaxWidth	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short MaxWidth;$/;"	m	struct:__anon312
MbAdaptiveFrameFieldFlag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char MbAdaptiveFrameFieldFlag ;$/;"	m	struct:__anon306
MbBaseAddr	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short MbBaseAddr;$/;"	m	struct:__anon313
MbPartPredMode	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char MbPartPredMode [2];$/;"	m	struct:__anon313
MbType	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char MbType ;$/;"	m	struct:__anon315
MemoryAddress	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int MemoryAddress;$/;"	m	struct:__anon309
MemoryAllocation	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char MemoryAllocation;$/;"	m	struct:__anon312
Mmco	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	MMCO Mmco[MAX_MMCO_COUNT];$/;"	m	struct:__anon311
Mode	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char Mode;$/;"	m	struct:PMbInfo
Mode	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char Mode;$/;"	m	struct:__anon315
MotionPredL0	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	char MotionPredL0[4];$/;"	m	struct:__anon313
MotionPredL1	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	char MotionPredL1[4];$/;"	m	struct:__anon313
MvMemoryAddress	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int MvMemoryAddress;$/;"	m	struct:__anon309
MvMemoryAddress	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int MvMemoryAddress[NUM_MV]; \/\/ 32$/;"	m	struct:__anon311
MvdL0	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short MvdL0 [16][2];$/;"	m	struct:__anon313
MvdL1	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short MvdL1 [16][2];$/;"	m	struct:__anon313
NALSTREAMER	AVC/h264_baseline_decoder/lib_baseline/type.h	/^} NALSTREAMER;$/;"	t	typeref:struct:__anon320
NEIGHBOUR	AVC/h264_baseline_decoder/lib_baseline/type.h	/^}   NEIGHBOUR ;$/;"	t	typeref:struct:__anon314
NUM_FREE_MEM	AVC/h264_baseline_decoder/lib_baseline/type.h	130;"	d
NUM_LAYERS	AVC/h264_baseline_decoder/lib_baseline/type.h	128;"	d
NUM_MV	AVC/h264_baseline_decoder/lib_baseline/type.h	131;"	d
NUM_POC_PARAMS	AVC/h264_baseline_decoder/lib_baseline/type.h	127;"	d
NUM_SLICE_GROUP_MINUS_MAX	AVC/h264_baseline_decoder/lib_baseline/type.h	108;"	d
NalSize	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int NalSize[80];$/;"	m	struct:__anon320
NalToStream	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char NalToStream;$/;"	m	struct:__anon320
NbNal	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char NbNal;$/;"	m	struct:__anon320
NbSlicesLayer	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char NbSlicesLayer[8];$/;"	m	struct:__anon320
NonZeroCount	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char NonZeroCount[48];$/;"	m	struct:__anon313
NumDelayedPics	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char NumDelayedPics;$/;"	m	struct:__anon312
NumFreeAddress	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	char NumFreeAddress;$/;"	m	struct:__anon312
NumMbPart	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char NumMbPart ;$/;"	m	struct:__anon313
PIC_HEIGHT	AVC/h264_baseline_decoder/lib_baseline/type.h	55;"	d
PIC_HEIGHT	AVC/h264_baseline_decoder/lib_baseline/type.h	61;"	d
PIC_HEIGHT	AVC/h264_baseline_decoder/lib_baseline/type.h	65;"	d
PIC_HEIGHT_MB_MAX	AVC/h264_baseline_decoder/lib_baseline/type.h	107;"	d
PIC_WIDTH	AVC/h264_baseline_decoder/lib_baseline/type.h	54;"	d
PIC_WIDTH	AVC/h264_baseline_decoder/lib_baseline/type.h	60;"	d
PIC_WIDTH	AVC/h264_baseline_decoder/lib_baseline/type.h	64;"	d
PIC_WIDTH_MB_MAX	AVC/h264_baseline_decoder/lib_baseline/type.h	106;"	d
PMbInfo	AVC/h264_baseline_decoder/lib_baseline/type.h	/^typedef struct PMbInfo{$/;"	s
PMbInfo	AVC/h264_baseline_decoder/lib_baseline/type.h	/^} PMbInfo;$/;"	t	typeref:struct:PMbInfo
POC_PARAMS	AVC/h264_baseline_decoder/lib_baseline/type.h	/^} POC_PARAMS;$/;"	t	typeref:struct:__anon310
PPS	AVC/h264_baseline_decoder/lib_baseline/type.h	/^}   PPS ;$/;"	t	typeref:struct:__anon307
PPS_BUF_SIZE	AVC/h264_baseline_decoder/lib_baseline/type.h	111;"	d
PicSizeInMbs	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short PicSizeInMbs;$/;"	m	struct:__anon306
PicToDisplay	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char PicToDisplay;$/;"	m	struct:__anon309
Picture	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	LIST_MMO Picture [1];$/;"	m	struct:__anon310
Poc	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short Poc;$/;"	m	struct:__anon320
Prev	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	POC_PARAMS Prev[1];$/;"	m	struct:__anon312
PrevPicOrderCntLsb	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short PrevPicOrderCntLsb;$/;"	m	struct:__anon312
PrevPicOrderCntMsb	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short PrevPicOrderCntMsb;$/;"	m	struct:__anon312
Ptr_interpol_4x4	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	interpol_4x4		Ptr_interpol_4x4[16];$/;"	m	struct:__anon319
Ptr_interpol_8x8	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	interpol_8x8		Ptr_interpol_8x8[16];$/;"	m	struct:__anon319
Ptr_mb16x16_mode	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	mb16x16_mode_pf		Ptr_mb16x16_mode[4];$/;"	m	struct:__anon319
Ptr_mb4x4_mode	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	mb4x4_mode_pf		Ptr_mb4x4_mode[9];$/;"	m	struct:__anon319
Ptr_mbChroma_mode_pf	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	mbChroma_mode_pf	Ptr_mbChroma_mode_pf[4];$/;"	m	struct:__anon319
Qp	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char Qp;$/;"	m	struct:__anon315
QpLf	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char QpLf;$/;"	m	struct:__anon315
REF_CHROMA_BUF_SIZE	AVC/h264_baseline_decoder/lib_baseline/type.h	121;"	d
REF_LUMA_BUF_SIZE	AVC/h264_baseline_decoder/lib_baseline/type.h	120;"	d
RESIDU	AVC/h264_baseline_decoder/lib_baseline/type.h	/^}   RESIDU ;$/;"	t	typeref:struct:__anon315
RESTRICT	AVC/h264_baseline_decoder/lib_baseline/type.h	51;"	d
RESTRICT	AVC/h264_baseline_decoder/lib_baseline/type.h	56;"	d
RESTRICT	AVC/h264_baseline_decoder/lib_baseline/type.h	57;"	d
RefCountL0	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char RefCountL0; $/;"	m	struct:__anon311
RefCountL1	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char RefCountL1;$/;"	m	struct:__anon311
RefIdxL0	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	char RefIdxL0 [4];$/;"	m	struct:__anon313
RefIdxL1	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	char RefIdxL1 [4];$/;"	m	struct:__anon313
ResidualPredictionFlag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char ResidualPredictionFlag;$/;"	m	struct:__anon315
Run7_vlc	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	VLC_TYPE Run7_vlc [96];$/;"	m	struct:__anon317
Run_vlc	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	VLC_TYPE Run_vlc [48];$/;"	m	struct:__anon317
SEI	AVC/h264_baseline_decoder/lib_baseline/type.h	/^} SEI;$/;"	t	typeref:struct:__anon318
SLICE	AVC/h264_baseline_decoder/lib_baseline/type.h	/^}   SLICE;$/;"	t	typeref:struct:__anon308
SPS	AVC/h264_baseline_decoder/lib_baseline/type.h	/^}   SPS ;$/;"	t	typeref:struct:__anon306
SPS_BUF_SIZE	AVC/h264_baseline_decoder/lib_baseline/type.h	110;"	d
STRUCT_PF	AVC/h264_baseline_decoder/lib_baseline/type.h	/^} STRUCT_PF;$/;"	t	typeref:struct:__anon319
ShortRef	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	LIST_MMO ShortRef[MAX_REF]; \/\/ 16$/;"	m	struct:__anon311
ShortRefCount	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char ShortRefCount;$/;"	m	struct:__anon311
SliceNum	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char SliceNum;$/;"	m	struct:__anon315
SubMbType	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char SubMbType [4];$/;"	m	struct:__anon315
SubMode	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char SubMode;$/;"	m	struct:__anon315
TYPE_H	AVC/h264_baseline_decoder/lib_baseline/type.h	43;"	d
TotalAuSize	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int TotalAuSize;$/;"	m	struct:__anon320
TotalDecodedBytes	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int TotalDecodedBytes;$/;"	m	struct:__anon320
Total_zeros_vlc	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	VLC_TYPE Total_zeros_vlc [7680];$/;"	m	struct:__anon317
Transform8x8	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char Transform8x8;$/;"	m	struct:__anon313
Transform8x8	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char Transform8x8;$/;"	m	struct:__anon315
UINT64	AVC/h264_baseline_decoder/lib_baseline/type.h	58;"	d
UINT64	AVC/h264_baseline_decoder/lib_baseline/type.h	62;"	d
VLC_TABLES	AVC/h264_baseline_decoder/lib_baseline/type.h	/^}   VLC_TABLES ;$/;"	t	typeref:struct:__anon317
VLC_TYPE	AVC/h264_baseline_decoder/lib_baseline/type.h	/^}   VLC_TYPE ;$/;"	t	typeref:struct:__anon316
W4x4_Cb_inter	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short W4x4_Cb_inter [6][16] ; $/;"	m	struct:W_TABLES
W4x4_Cb_intra	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short W4x4_Cb_intra [6][16] ;$/;"	m	struct:W_TABLES
W4x4_Cr_inter	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short W4x4_Cr_inter [6][16] ;$/;"	m	struct:W_TABLES
W4x4_Cr_intra	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short W4x4_Cr_intra [6][16] ;$/;"	m	struct:W_TABLES
W4x4_inter	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short W4x4_inter [6][16] ; $/;"	m	struct:W_TABLES
W4x4_intra	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short W4x4_intra [6][16] ;$/;"	m	struct:W_TABLES
W8x8_inter	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short W8x8_inter [6][64] ;$/;"	m	struct:W_TABLES
W8x8_intra	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short W8x8_intra [6][64] ;$/;"	m	struct:W_TABLES
W_TABLES	AVC/h264_baseline_decoder/lib_baseline/type.h	/^typedef struct W_TABLES{$/;"	s
W_TABLES	AVC/h264_baseline_decoder/lib_baseline/type.h	/^} W_TABLES;$/;"	t	typeref:struct:W_TABLES
WeightedBipredIdc	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char WeightedBipredIdc ;$/;"	m	struct:__anon307
WeightedPredFlag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char WeightedPredFlag ;$/;"	m	struct:__anon307
__declspec	AVC/h264_baseline_decoder/lib_baseline/type.h	47;"	d
adaptive_tcoeff_level_prediction_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char adaptive_tcoeff_level_prediction_flag;$/;"	m	struct:__anon306
avg_bitrate	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int avg_bitrate[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
avg_frm_rate	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int avg_frm_rate[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
b8_stride	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short b8_stride ;$/;"	m	struct:__anon308
b8_stride	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short b8_stride;$/;"	m	struct:__anon306
b_stride	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short b_stride ;$/;"	m	struct:__anon306
b_stride	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short b_stride ;$/;"	m	struct:__anon308
base_region_layer_id	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int base_region_layer_id[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
bit_depth_chroma	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char bit_depth_chroma;$/;"	m	struct:__anon306
bit_depth_luma	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char bit_depth_luma;$/;"	m	struct:__anon306
bitrate_info_present_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char bitrate_info_present_flag[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
bitstream_restriction_info_present_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char bitstream_restriction_info_present_flag[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
blk4x4	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int blk4x4;$/;"	m	struct:__anon315
blk4x4_Res	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int blk4x4_Res;$/;"	m	struct:__anon315
bottom_right_tab	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short bottom_right_tab[NUM_SLICE_GROUP_MINUS_MAX];$/;"	m	struct:__anon307
cabac_init_idc	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char cabac_init_idc;$/;"	m	struct:__anon308
chroma_format_idc	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char chroma_format_idc;$/;"	m	struct:__anon306
chroma_phase_x	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	char chroma_phase_x;$/;"	m	struct:__anon306
chroma_phase_y	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	char chroma_phase_y;$/;"	m	struct:__anon306
chroma_qp_index_offset	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	char chroma_qp_index_offset ;$/;"	m	struct:__anon307
code	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short code ;$/;"	m	struct:__anon316
constant_frm_rate_idc	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int constant_frm_rate_idc[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
constrained_intra_pred_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char constrained_intra_pred_flag ;$/;"	m	struct:__anon307
constrained_intra_upsampling_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char constrained_intra_upsampling_flag;$/;"	m	struct:__anon307
conversion_type_idc	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int conversion_type_idc[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
cpb_cnt	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char cpb_cnt;$/;"	m	struct:__anon306
cpb_removal_delay_length	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char cpb_removal_delay_length;$/;"	m	struct:__anon306
deblocking_filter_control_present_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char deblocking_filter_control_present_flag ;$/;"	m	struct:__anon307
delta_pic_order_always_zero_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char delta_pic_order_always_zero_flag ;$/;"	m	struct:__anon306
delta_pic_order_cnt	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short delta_pic_order_cnt[2];$/;"	m	struct:__anon306
delta_pic_order_cnt_bottom	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short delta_pic_order_cnt_bottom;$/;"	m	struct:__anon306
dependency_id	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int dependency_id[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
direct_8x8_inference_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char direct_8x8_inference_flag;	$/;"	m	struct:__anon306
direct_spatial_mv_pred_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char direct_spatial_mv_pred_flag;$/;"	m	struct:__anon308
directly_dependent_layer_id_delta_minus1	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int directly_dependent_layer_id_delta_minus1[MAX_SCALABLE_LAYERS][MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
disable_deblocking_filter_idc	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char disable_deblocking_filter_idc;$/;"	m	struct:__anon308
discardable_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int discardable_flag[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
displayed	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char displayed;$/;"	m	struct:__anon309
dist_scale_factor	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short dist_scale_factor[16];$/;"	m	struct:__anon308
dynamic_rect_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int dynamic_rect_flag[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
empty	AVC/h264_baseline_decoder/lib_baseline/type.h	75;"	d
empty	AVC/h264_baseline_decoder/lib_baseline/type.h	79;"	d
empty	AVC/h264_baseline_decoder/lib_baseline/type.h	85;"	d
empty	AVC/h264_baseline_decoder/lib_baseline/type.h	89;"	d
entropy_coding_mode_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char entropy_coding_mode_flag ;$/;"	m	struct:__anon307
exact_inter_layer_pred_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char exact_inter_layer_pred_flag[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
exact_sample_value_match_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char exact_sample_value_match_flag[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
extended_spatial_scalability	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char extended_spatial_scalability;$/;"	m	struct:__anon306
field_pic_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char field_pic_flag ;$/;"	m	struct:__anon306
first_mb	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short first_mb[MAX_SLICES_PER_FRAME];$/;"	m	struct:__anon308
first_mb_in_roi	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int first_mb_in_roi[MAX_SCALABLE_LAYERS][MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
first_mb_in_slice	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short first_mb_in_slice ;$/;"	m	struct:__anon308
first_mb_in_slice_expected	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short first_mb_in_slice_expected;$/;"	m	struct:__anon308
first_mb_index	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short first_mb_index;$/;"	m	struct:__anon308
frame_mbs_only_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char frame_mbs_only_flag ;$/;"	m	struct:__anon306
frame_num	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short frame_num; $/;"	m	struct:__anon309
frame_num	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short frame_num;$/;"	m	struct:__anon311
frame_num_offset	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short frame_num_offset;$/;"	m	struct:__anon311
frm_height_in_mbs_minus1	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int frm_height_in_mbs_minus1[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
frm_rate_info_present_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char frm_rate_info_present_flag[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
frm_size_info_present_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char frm_size_info_present_flag[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
frm_width_in_mbs_minus1	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int frm_width_in_mbs_minus1[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
grid_height_in_mbs_minus1	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int grid_height_in_mbs_minus1[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
grid_width_in_mbs_minus1	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int grid_width_in_mbs_minus1[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
has_b_frames	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char has_b_frames;$/;"	m	struct:__anon312
horizontal_offset	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int horizontal_offset[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
index	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char index;$/;"	m	struct:__anon311
initial_cpb_removal_delay_length	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char initial_cpb_removal_delay_length;$/;"	m	struct:__anon306
interpol_4x4	AVC/h264_baseline_decoder/lib_baseline/type.h	/^typedef void    (*interpol_4x4)(unsigned char *image_luma, unsigned char *refPicLXl,	const short PicWidthSamples, const short stride);$/;"	t
interpol_8x8	AVC/h264_baseline_decoder/lib_baseline/type.h	/^typedef void    (*interpol_8x8)(unsigned char *image_luma, unsigned char *refPicLXl,	const short PicWidthSamples, const short stride);$/;"	t
iroi_division_info_present_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char iroi_division_info_present_flag[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
iroi_grid_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char iroi_grid_flag[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
is_ghost	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char is_ghost;$/;"	m	struct:__anon310
layer_conversion_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char layer_conversion_flag[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
layer_dependency_info_present_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char layer_dependency_info_present_flag[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
layer_dependency_info_src_layer_id_delta	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int layer_dependency_info_src_layer_id_delta[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
layer_id	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int layer_id[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
layer_output_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char layer_output_flag[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
layer_profile_level_idc	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int layer_profile_level_idc[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
len	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short len ;$/;"	m	struct:__anon316
level_idc	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char level_idc;$/;"	m	struct:__anon306
log2_max_frame_num	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char log2_max_frame_num ;$/;"	m	struct:__anon306
log2_max_mv_length_horizontal	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int log2_max_mv_length_horizontal[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
log2_max_mv_length_vertical	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int log2_max_mv_length_vertical[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
log2_max_pic_order_cnt_lsb	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char log2_max_pic_order_cnt_lsb;$/;"	m	struct:__anon306
long_term	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char long_term;$/;"	m	struct:__anon309
long_term_frame_idx	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short long_term_frame_idx;$/;"	m	struct:MMCO
low_delay	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char low_delay;$/;"	m	struct:__anon312
max_bitrate_calc_window	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int max_bitrate_calc_window[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
max_bitrate_layer	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int max_bitrate_layer[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
max_bitrate_layer_representation	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int max_bitrate_layer_representation[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
max_bits_per_mb_denom	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int max_bits_per_mb_denom[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
max_bytes_per_pic_denom	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int max_bytes_per_pic_denom[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
max_dec_frame_buffering	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int max_dec_frame_buffering[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
max_pic_num	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short max_pic_num;$/;"	m	struct:__anon306
mb16x16_mode_pf	AVC/h264_baseline_decoder/lib_baseline/type.h	/^typedef void (*mb16x16_mode_pf) (unsigned char * predict_sample, const short PicWidthInPix, int Mask);$/;"	t
mb4x4_mode_pf	AVC/h264_baseline_decoder/lib_baseline/type.h	/^typedef void (*mb4x4_mode_pf)	(unsigned char * predict_sample, const short PicWidthInPix, int Mask, const short locx, const short locy) ;$/;"	t
mbChroma_mode_pf	AVC/h264_baseline_decoder/lib_baseline/type.h	/^typedef void (*mbChroma_mode_pf)(unsigned char * predict_sample, const short PicWidthInPix, int Mask);$/;"	t
mb_stride	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short mb_stride ;$/;"	m	struct:__anon308
mb_xy	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short mb_xy;$/;"	m	struct:__anon308
motion_vectors_over_pic_boundaries_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int motion_vectors_over_pic_boundaries_flag[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
nal_hrd_parameters_present_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char nal_hrd_parameters_present_flag;$/;"	m	struct:__anon306
name	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char name;$/;"	m	struct:PMbInfo
nb_img_disp	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char nb_img_disp;$/;"	m	struct:__anon306
nb_img_display	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	char nb_img_display;$/;"	m	struct:__anon312
notDefaultScanIdx	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char notDefaultScanIdx;$/;"	m	struct:__anon308
num_RefIdxL0_active_minus1	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char num_RefIdxL0_active_minus1 ;$/;"	m	struct:__anon307
num_RefIdxL0_active_minus1	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char num_RefIdxL0_active_minus1;$/;"	m	struct:__anon308
num_RefIdxL1_active_minus1	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char num_RefIdxL1_active_minus1 ;$/;"	m	struct:__anon307
num_RefIdxL1_active_minus1	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char num_RefIdxL1_active_minus1;$/;"	m	struct:__anon308
num_decoded_frame	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int num_decoded_frame;$/;"	m	struct:__anon311
num_directly_dependent_layers	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int num_directly_dependent_layers[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
num_free_poc_address	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	char num_free_poc_address;$/;"	m	struct:__anon312
num_of_slices_per_frame	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short num_of_slices_per_frame;$/;"	m	struct:__anon308
num_pic_parameter_set_minus1	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int num_pic_parameter_set_minus1[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
num_ref_frames	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char num_ref_frames;$/;"	m	struct:__anon306
num_ref_frames_in_pic_order_cnt_cycle	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char num_ref_frames_in_pic_order_cnt_cycle;$/;"	m	struct:__anon306
num_reorder_frames	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int num_reorder_frames[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
num_rois_minus1	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int num_rois_minus1[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
num_seq_parameter_set_minus1	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int num_seq_parameter_set_minus1[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
num_slice_groups_minus1	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char num_slice_groups_minus1 ;$/;"	m	struct:__anon307
num_subset_seq_parameter_set_minus1	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int num_subset_seq_parameter_set_minus1[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
offset_for_non_ref_pic	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int offset_for_non_ref_pic;$/;"	m	struct:__anon306
offset_for_ref_frame	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int offset_for_ref_frame[255];$/;"	m	struct:__anon306
offset_for_top_to_bottom_field	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int offset_for_top_to_bottom_field;$/;"	m	struct:__anon306
opcode	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char opcode;$/;"	m	struct:MMCO
parameter_sets_info_present_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char parameter_sets_info_present_flag[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
parameter_sets_info_src_layer_id_delta	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int parameter_sets_info_src_layer_id_delta[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
partcount	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char partcount;$/;"	m	struct:PMbInfo
pic_height_in_map_units	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short pic_height_in_map_units ;$/;"	m	struct:__anon306
pic_id	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short pic_id; $/;"	m	struct:__anon309
pic_init_qp	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char pic_init_qp;$/;"	m	struct:__anon307
pic_order_cnt_lsb	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short pic_order_cnt_lsb;$/;"	m	struct:__anon311
pic_order_cnt_type	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char pic_order_cnt_type ;$/;"	m	struct:__anon306
pic_order_present_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char pic_order_present_flag ;$/;"	m	struct:__anon307
pic_parameter_set_id_delta	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int pic_parameter_set_id_delta[MAX_SCALABLE_LAYERS][256];$/;"	m	struct:__anon318
pic_present_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char pic_present_flag;$/;"	m	struct:__anon306
pic_width_in_mbs	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short pic_width_in_mbs ;$/;"	m	struct:__anon306
poc	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short poc; \/\/ picture order count$/;"	m	struct:__anon309
poc_params	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	POC_PARAMS poc_params[NUM_POC_PARAMS]; \/\/16 + 8 layers$/;"	m	struct:__anon312
pr_avg_bitrate	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int pr_avg_bitrate[NUM_LAYERS][MAX_QUALITY_LEVELS];$/;"	m	struct:__anon318
pr_dependency_id	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int pr_dependency_id[NUM_LAYERS];$/;"	m	struct:__anon318
pr_id	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int pr_id[NUM_LAYERS][MAX_QUALITY_LEVELS];$/;"	m	struct:__anon318
pr_max_bitrate	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int pr_max_bitrate[NUM_LAYERS][MAX_QUALITY_LEVELS];$/;"	m	struct:__anon318
pr_num_dId_minus1	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int pr_num_dId_minus1;$/;"	m	struct:__anon318
pr_num_minus1	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int pr_num_minus1[NUM_LAYERS];$/;"	m	struct:__anon318
pr_profile_level_idc	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int pr_profile_level_idc[NUM_LAYERS][MAX_QUALITY_LEVELS];$/;"	m	struct:__anon318
pred_mode	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char pred_mode;$/;"	m	struct:IMbInfo
prevPicOrderCntLsb	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short prevPicOrderCntLsb;$/;"	m	struct:__anon311
prevPicOrderCntMsb	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short prevPicOrderCntMsb;$/;"	m	struct:__anon311
prev_frame_num	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short prev_frame_num;$/;"	m	struct:__anon311
prev_frame_num_offset	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short prev_frame_num_offset;$/;"	m	struct:__anon311
priority_id	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int priority_id[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
priority_id_setting_uri	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int priority_id_setting_uri[NUM_LAYERS];$/;"	m	struct:__anon318
profile_idc	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char profile_idc;$/;"	m	struct:__anon306
profile_level_info_present_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char profile_level_info_present_flag[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
quality_id	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int quality_id[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
redundant_pic_cnt_present_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char redundant_pic_cnt_present_flag ;$/;"	m	struct:__anon307
ref_count_l0	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	char ref_count_l0;$/;"	m	struct:__anon309
ref_count_l1	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	char ref_count_l1;$/;"	m	struct:__anon309
ref_poc_l0	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short ref_poc_l0[16];\/\/poc of reference frame$/;"	m	struct:__anon309
ref_poc_l1	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short ref_poc_l1[16];$/;"	m	struct:__anon309
reference	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	char reference;$/;"	m	struct:__anon309
region_height	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int region_height[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
region_width	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int region_width[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
rewriting_avg_bitrate	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int rewriting_avg_bitrate[MAX_SCALABLE_LAYERS][2];$/;"	m	struct:__anon318
rewriting_info_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char rewriting_info_flag[MAX_SCALABLE_LAYERS][2];$/;"	m	struct:__anon318
rewriting_max_bitrate	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int rewriting_max_bitrate[MAX_SCALABLE_LAYERS][2];$/;"	m	struct:__anon318
rewriting_profile_level_idc	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int rewriting_profile_level_idc[MAX_SCALABLE_LAYERS][2];$/;"	m	struct:__anon318
roi_height_in_mbs_minus1	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int roi_height_in_mbs_minus1[MAX_SCALABLE_LAYERS][MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
roi_id	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int roi_id[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
roi_width_in_mbs_minus1	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int roi_width_in_mbs_minus1[MAX_SCALABLE_LAYERS][MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
run_length_minus1	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short run_length_minus1 [NUM_SLICE_GROUP_MINUS_MAX];$/;"	m	struct:__anon307
scaled_base_bottom_offset	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short scaled_base_bottom_offset;$/;"	m	struct:__anon306
scaled_base_left_offset	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short scaled_base_left_offset;$/;"	m	struct:__anon306
scaled_base_right_offset	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short scaled_base_right_offset;$/;"	m	struct:__anon306
scaled_base_top_offset	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short scaled_base_top_offset;$/;"	m	struct:__anon306
scaling_matrix4	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short  scaling_matrix4[6][16];$/;"	m	struct:__anon306
scaling_matrix4	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short scaling_matrix4[6][16];$/;"	m	struct:__anon307
scaling_matrix8	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short  scaling_matrix8[2][64];$/;"	m	struct:__anon306
scaling_matrix8	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short scaling_matrix8[2][64];$/;"	m	struct:__anon307
scaling_matrix_present	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short scaling_matrix_present;$/;"	m	struct:__anon306
second_chroma_qp_index_offset	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	char second_chroma_qp_index_offset;$/;"	m	struct:__anon307
seq_parameter_set_id	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char seq_parameter_set_id ;$/;"	m	struct:__anon307
seq_parameter_set_id_delta	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int seq_parameter_set_id_delta[MAX_SCALABLE_LAYERS][32];$/;"	m	struct:__anon318
short_frame_num	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short short_frame_num;$/;"	m	struct:MMCO
slice_cycle_ready	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short slice_cycle_ready;$/;"	m	struct:__anon308
slice_group_change_cycle	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short slice_group_change_cycle ;$/;"	m	struct:__anon308
slice_group_change_direction_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char slice_group_change_direction_flag ;$/;"	m	struct:__anon307
slice_group_change_rate_minus1	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short slice_group_change_rate_minus1 ;$/;"	m	struct:__anon307
slice_group_map_type	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char slice_group_map_type ;$/;"	m	struct:__anon307
slice_header_restriction_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	char slice_header_restriction_flag; $/;"	m	struct:__anon306
slice_num	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char slice_num ;$/;"	m	struct:__anon308
slice_qp_delta	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	char slice_qp_delta ;$/;"	m	struct:__anon308
slice_type	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char slice_type ;$/;"	m	struct:__anon308
slice_type	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char slice_type;$/;"	m	struct:__anon309
sub_pic_layer_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char sub_pic_layer_flag[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
sub_region_layer_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char sub_region_layer_flag[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
subset_seq_parameter_set_id_delta	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int subset_seq_parameter_set_id_delta[MAX_SCALABLE_LAYERS][32];$/;"	m	struct:__anon318
tcoeff_level_prediction_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char tcoeff_level_prediction_flag;$/;"	m	struct:__anon306
temporal_id	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int temporal_id[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
time_offset_length	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char time_offset_length;$/;"	m	struct:__anon306
top_left_tab	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short top_left_tab[NUM_SLICE_GROUP_MINUS_MAX];$/;"	m	struct:__anon307
transform_8x8_mode_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char transform_8x8_mode_flag;$/;"	m	struct:__anon307
type	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char type;$/;"	m	struct:IMbInfo
type_0	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char type_0;$/;"	m	struct:PMbInfo
type_1	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char type_1;$/;"	m	struct:PMbInfo
vertical_offset	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	int vertical_offset[MAX_SCALABLE_LAYERS];$/;"	m	struct:__anon318
vlc_hrd_parameters_present_flag	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	unsigned char vlc_hrd_parameters_present_flag;$/;"	m	struct:__anon306
xBase	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short xBase;$/;"	m	struct:__anon313
xBasePart	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short xBasePart;$/;"	m	struct:__anon313
xN	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short   xN ;$/;"	m	struct:__anon314
x_size	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short x_size;$/;"	m	struct:__anon310
yBase	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short yBase;$/;"	m	struct:__anon313
yBasePart	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short yBasePart;$/;"	m	struct:__anon313
yN	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short   yN ;$/;"	m	struct:__anon314
y_size	AVC/h264_baseline_decoder/lib_baseline/type.h	/^	short y_size;$/;"	m	struct:__anon310
NonZeroCountManagement	AVC/h264_baseline_decoder/lib_baseline/write_back.c	/^void NonZeroCountManagement( const unsigned char *Non_zero_count_cache, const short iMb_x, const short iMb_y, $/;"	f
WriteBackMotionCacheCurrPosition	AVC/h264_baseline_decoder/lib_baseline/write_back.c	/^void WriteBackMotionCacheCurrPosition(const int ai_iB_stride, const int ai_iB8_stride, short ai_tiMv[ ], $/;"	f
write_back_P_skip_motion	AVC/h264_baseline_decoder/lib_baseline/write_back.c	/^void write_back_P_skip_motion( const int ai_iB_stride, const int ai_iB8_stride, short MvdL0[ ], short ai_tiMv_cache[2], short ao_tiRef[ ], const short ai_tiRef_cache)$/;"	f
write_back_motion_C	AVC/h264_baseline_decoder/lib_baseline/write_back.c	/^void write_back_motion_C( const int ai_iB_stride, const int ai_iB8_stride, short MvdL0[ ], short ai_tiMv_cache[ ][2], short ao_tiRef[ ], short ai_tiRef_cache[])$/;"	f
write_back_motion_TI	AVC/h264_baseline_decoder/lib_baseline/write_back.c	/^void write_back_motion_TI( const int ai_iB_stride, const int ai_iB8_stride , short MvdL0[ ],short  ai_tiMv_cache[ ][2], $/;"	f
write_back_motion_cache	AVC/h264_baseline_decoder/lib_baseline/write_back.c	/^void write_back_motion_cache(const int ai_iB_stride, const int ai_iB8_stride, const int ai_iMb_xy, short ai_tiMv[ ], $/;"	f
write_back_motion_cache_interpolation_8x8	AVC/h264_baseline_decoder/lib_baseline/write_back.c	/^void write_back_motion_cache_interpolation_8x8(const int ai_iB_stride, const int ai_iB8_stride, short ai_tiMv[ ], $/;"	f
FillFullRefCacheCurrPosition	AVC/h264_baseline_decoder/lib_baseline/write_back.h	/^static __inline void FillFullRefCacheCurrPosition(short *RefCache, short *Ref)$/;"	f
FillFullRefCurrPosition	AVC/h264_baseline_decoder/lib_baseline/write_back.h	/^static __inline void FillFullRefCurrPosition(short *Ref, const short *RefCache)$/;"	f
FillMvCacheCurrPosition	AVC/h264_baseline_decoder/lib_baseline/write_back.h	/^static __inline void FillMvCacheCurrPosition(short MvCache[][2], short *MvdL0)$/;"	f
FillMvCurrPosition	AVC/h264_baseline_decoder/lib_baseline/write_back.h	/^static __inline void FillMvCurrPosition(short *MvdL0, short MvCache[][2])$/;"	f
FillRefCacheCurrPosition	AVC/h264_baseline_decoder/lib_baseline/write_back.h	/^static __inline void FillRefCacheCurrPosition(short *RefCache, short *Ref)$/;"	f
FillRefCurrPosition	AVC/h264_baseline_decoder/lib_baseline/write_back.h	/^static __inline void FillRefCurrPosition(short *Ref, short *RefCache)$/;"	f
WRITE_BACK_H	AVC/h264_baseline_decoder/lib_baseline/write_back.h	37;"	d
init_skip_non_zero_count	AVC/h264_baseline_decoder/lib_baseline/write_back.h	/^static __inline void init_skip_non_zero_count( const short ai_iMb_x, const short ai_iMb_y, const int ai_iMb_stride,$/;"	f
write_back_cbp	AVC/h264_baseline_decoder/lib_baseline/write_back.h	/^static __inline void write_back_cbp(unsigned char *tab, RESIDU *residu)$/;"	f
write_back_cbp_8x8	AVC/h264_baseline_decoder/lib_baseline/write_back.h	/^static __inline void write_back_cbp_8x8(unsigned char *tab, RESIDU *residu)$/;"	f
write_back_motion	AVC/h264_baseline_decoder/lib_baseline/write_back.h	41;"	d
write_back_motion	AVC/h264_baseline_decoder/lib_baseline/write_back.h	42;"	d
write_back_motion	AVC/h264_baseline_decoder/lib_baseline/write_back.h	44;"	d
write_back_motion	AVC/h264_baseline_decoder/lib_baseline/write_back.h	45;"	d
write_back_non_zero_count	AVC/h264_baseline_decoder/lib_baseline/write_back.h	/^static __inline void write_back_non_zero_count( const unsigned char *ai_tiNon_zero_count_cache, const short ai_iMb_x, const short ai_iMb_y, $/;"	f
SkipB	AVC/h264_main_decoder/lib_main/BitstreamSkipB.c	/^void SkipB(SLICE *Slice, const SPS *Sps, RESIDU *CurrResidu, DATA *Block, unsigned char *SliceTable, short iMb_x, short iMb_y, $/;"	f
DIRECT_PRED_H	AVC/h264_main_decoder/lib_main/BitstreamSkipB.h	37;"	d
mb_pred_P_cabac	AVC/h264_main_decoder/lib_main/CabacMbPred.c	/^char mb_pred_P_cabac ( CABACContext *c, unsigned char *state, SLICE *slice, RESIDU *CurrResidu, $/;"	f
mb_pred_cabac	AVC/h264_main_decoder/lib_main/CabacMbPred.c	/^char mb_pred_cabac ( CABACContext *c, unsigned char *state, SLICE *slice, RESIDU *CurrResidu, DATA *macroblock, $/;"	f
mb_pred_intra_8x8_cabac	AVC/h264_main_decoder/lib_main/CabacMbPred.c	/^void mb_pred_intra_8x8_cabac ( CABACContext *c, unsigned char *state, short *Mode, short *intra4x4_pred_mode_cache)$/;"	f
mb_pred_intra_cabac	AVC/h264_main_decoder/lib_main/CabacMbPred.c	/^void mb_pred_intra_cabac ( CABACContext *c, unsigned char *state, short *Mode, short *intra4x4_pred_mode_cache){    $/;"	f
sub_mb_P_cabac	AVC/h264_main_decoder/lib_main/CabacMbPred.c	/^char sub_mb_P_cabac ( int *dct_allowed, CABACContext *c, unsigned char *state, SLICE *slice, RESIDU *Current_residu, $/;"	f
sub_mb_pred_cabac	AVC/h264_main_decoder/lib_main/CabacMbPred.c	/^char sub_mb_pred_cabac ( int *dct_allowed, CABACContext *c, unsigned char *state, SLICE *slice, RESIDU *Current_residu, $/;"	f
CABAC_MB_PRED_H	AVC/h264_main_decoder/lib_main/CabacMbPred.h	36;"	d
GetCabacIPredMode	AVC/h264_main_decoder/lib_main/CabacMbPred.h	/^static __inline short GetCabacIPredMode(CABACContext *c, unsigned char *state, short *intra4x4_pred_mode_cache, int luma4x4BlkIdx)$/;"	f
decode_cabac_b_mb_sub_type	AVC/h264_main_decoder/lib_main/CabacMbPred.h	/^static __inline unsigned char decode_cabac_b_mb_sub_type( CABACContext *c, unsigned char *state) {$/;"	f
decode_cabac_p_mb_sub_type	AVC/h264_main_decoder/lib_main/CabacMbPred.h	/^static __inline unsigned char decode_cabac_p_mb_sub_type(  CABACContext *c, unsigned char *state) {$/;"	f
GetCabacBRefList	AVC/h264_main_decoder/lib_main/CabacMvAndRef.c	/^int GetCabacBRefList(CABACContext *c, unsigned char *state, char *refLx,short *RefCacheLx, char *MotionPred,$/;"	f
GetCabacBSubRefList	AVC/h264_main_decoder/lib_main/CabacMvAndRef.c	/^int GetCabacBSubRefList(CABACContext *c, unsigned char *state, char *refLx, short *RefCacheLx,$/;"	f
GetCabacPRefList	AVC/h264_main_decoder/lib_main/CabacMvAndRef.c	/^int GetCabacPRefList(CABACContext *c, unsigned char *state, char *refLx, short *RefCacheLx,$/;"	f
ReadAndComputeCabac16x16MotionVector	AVC/h264_main_decoder/lib_main/CabacMvAndRef.c	/^void ReadAndComputeCabac16x16MotionVector( CABACContext *c, unsigned char *state, char *RefLx, short *RefLxCache,$/;"	f
ReadAndComputeCabac16x8MotionVector	AVC/h264_main_decoder/lib_main/CabacMvAndRef.c	/^void ReadAndComputeCabac16x8MotionVector( CABACContext *c, unsigned char *state, char *RefLx, short *RefLxCache,$/;"	f
ReadAndComputeCabac8x16MotionVector	AVC/h264_main_decoder/lib_main/CabacMvAndRef.c	/^void ReadAndComputeCabac8x16MotionVector( CABACContext *c, unsigned char *state, char *RefLx, short *RefLxCache,$/;"	f
ReadAndComputeCabac8x8MotionVector	AVC/h264_main_decoder/lib_main/CabacMvAndRef.c	/^void ReadAndComputeCabac8x8MotionVector( CABACContext *c, unsigned char *state, int mbPartIdx, int sub_mb_type, char *RefLx, $/;"	f
CABACMVREF_H	AVC/h264_main_decoder/lib_main/CabacMvAndRef.h	35;"	d
GetCabacPSubRefIdx	AVC/h264_main_decoder/lib_main/CabacMvAndRef.h	/^static __inline int GetCabacPSubRefIdx(CABACContext *c, unsigned char *state, char *RefIdxLx, short *CabacRefCacheLx, char *MotionPred, int NumRefLx)$/;"	f
ReadCabacMotionVector	AVC/h264_main_decoder/lib_main/CabacMvAndRef.h	/^static __inline void ReadCabacMotionVector(CABACContext *c, unsigned char *state, short MvCacheLx[][2], $/;"	f
ReadCabacSubMotionVector	AVC/h264_main_decoder/lib_main/CabacMvAndRef.h	/^static __inline void ReadCabacSubMotionVector(CABACContext *c, unsigned char *state, short MvCacheLx[][2], short *MvdLX, $/;"	f
SpatialPrediction	AVC/h264_main_decoder/lib_main/Direct_prediction.c	/^void SpatialPrediction(short mv_cache_l0[][2], short *ref_cache_l0, short *mvl0, short *ref)$/;"	f
spatial_direct_prediction	AVC/h264_main_decoder/lib_main/Direct_prediction.c	/^void spatial_direct_prediction(short mv_cache_l0[][2], short mv_cache_l1[][2], short *mv_l0, short mv_l1[], short *ref_cache_l0, $/;"	f
spatial_direct_prediction_l0	AVC/h264_main_decoder/lib_main/Direct_prediction.c	/^void spatial_direct_prediction_l0(short mv_cache_l0[][2], short *mv_l0, short mv_l1[], short *ref_cache_l0, short *ref_cache_l1, $/;"	f
spatial_direct_prediction_l1	AVC/h264_main_decoder/lib_main/Direct_prediction.c	/^void spatial_direct_prediction_l1(short mv_cache_l1[][2], short *mv_l0, short mv_l1[], short *ref_cache_l0, short *ref_cache_l1, $/;"	f
temporal_direct_prediction	AVC/h264_main_decoder/lib_main/Direct_prediction.c	/^void temporal_direct_prediction(short mv_cache_l0[][2], short mv_cache_l1[][2], short *mv_l0, short *ref_cache_l0, short *ref_cache_l1, $/;"	f
temporal_direct_prediction_l0	AVC/h264_main_decoder/lib_main/Direct_prediction.c	/^void temporal_direct_prediction_l0(short mv_cache_l0[][2], short *mv_l0, short *ref_cache_l0, $/;"	f
temporal_direct_prediction_l1	AVC/h264_main_decoder/lib_main/Direct_prediction.c	/^void temporal_direct_prediction_l1(short mv_cache_l1[][2], short *mv_l0, short *ref_cache_l1, $/;"	f
DIRECT_PRED_H	AVC/h264_main_decoder/lib_main/Direct_prediction.h	36;"	d
fill_caches_cabac	AVC/h264_main_decoder/lib_main/Fill_caches_cabac.c	/^void fill_caches_cabac ( SLICE *slice, CABAC_NEIGH *Neigh, unsigned char *SliceTable, int mb_xy, int qp_delta, RESIDU *residu )$/;"	f
fill_caches_motion_vector_B	AVC/h264_main_decoder/lib_main/Fill_caches_cabac.c	/^void fill_caches_motion_vector_B(SLICE *slice, int b_stride, int b8_stride, short ref_cache_l0 [], short ref_cache_l1 [], $/;"	f
init_mb_skip_mv_ref	AVC/h264_main_decoder/lib_main/Fill_caches_cabac.c	/^void init_mb_skip_mv_ref(short MvdL0[], short ref[],int b_stride, int b8_stride){$/;"	f
write_back_main_interpolation	AVC/h264_main_decoder/lib_main/Fill_caches_cabac.c	/^void write_back_main_interpolation(const int ai_iB_stride, const int ai_iB8_stride$/;"	f
write_back_main_interpolation_8x8	AVC/h264_main_decoder/lib_main/Fill_caches_cabac.c	/^void write_back_main_interpolation_8x8(const int ai_iB_stride, const int ai_iB8_stride$/;"	f
write_back_motion_cache_B	AVC/h264_main_decoder/lib_main/Fill_caches_cabac.c	/^void write_back_motion_cache_B( const int ai_iB_stride, const int ai_iB8_stride, const int ai_iMb_xy$/;"	f
FinishFrameMainDecoder	AVC/h264_main_decoder/lib_main/FinishFrameMain.c	/^void FinishFrameMainDecoder(SPS *Sps, PPS *Pps, LIST_MMO *Current_pic, SLICE *Slice, int EndOfSlice, unsigned char *SliceTab, $/;"	f
GetBoudaryStrenght_C	AVC/h264_main_decoder/lib_main/Loop_Filter_B.c	/^char GetBoudaryStrenght_C( short mv_cache_l0[][2], short mv_cache_l1[][2], short *ref_cache_l0, short *ref_cache_l1, $/;"	f
GetBoudaryStrenght_TI	AVC/h264_main_decoder/lib_main/Loop_Filter_B.c	/^char GetBoudaryStrenght_TI( short mv_cache_l0[][2], short mv_cache_l1[][2], short *ref_cache_l0, short *ref_cache_l1, $/;"	f
filter_B	AVC/h264_main_decoder/lib_main/Loop_Filter_B.c	/^void filter_B( SPS *Sps, PPS *pps,SLICE *slice, LIST_MMO *Current_pic, unsigned char *SliceTable, DATA *Tab_Block, $/;"	f
filter_mb_B	AVC/h264_main_decoder/lib_main/Loop_Filter_B.c	/^void filter_mb_B( unsigned char *image, unsigned char *image_Cb, unsigned char *image_Cr, SLICE *slice, PPS *pps, $/;"	f
GetBoudaryStrenght	AVC/h264_main_decoder/lib_main/Loop_Filter_B.h	44;"	d
GetBoudaryStrenght	AVC/h264_main_decoder/lib_main/Loop_Filter_B.h	46;"	d
LOOP_FILTER_H	AVC/h264_main_decoder/lib_main/Loop_Filter_B.h	35;"	d
set_image_4x4_C	AVC/h264_main_decoder/lib_main/SetImage4x4.c	/^void set_image_4x4_C(unsigned char *aio_tImage, unsigned char aio_tImage_Cb[], unsigned char aio_tImage_Cr[], $/;"	f
set_image_4x4_GDEM	AVC/h264_main_decoder/lib_main/SetImage4x4.c	/^void set_image_4x4_GDEM(unsigned char aio_tImage[RESTRICT], unsigned char aio_tImage_Cb[RESTRICT], unsigned char aio_tImage_Cr[RESTRICT], $/;"	f
set_image_4x4_MMX	AVC/h264_main_decoder/lib_main/SetImage4x4.c	/^void set_image_4x4_MMX(unsigned char *aio_tImage , unsigned char aio_tImage_Cb[], unsigned char aio_tImage_Cr[], $/;"	f
set_image_8x8_C	AVC/h264_main_decoder/lib_main/SetImage8x8.c	/^void set_image_8x8_C(unsigned char aio_tImage[RESTRICT] , unsigned char aio_tImage_Cb[RESTRICT], unsigned char aio_tImage_Cr[RESTRICT], $/;"	f
set_image_8x8_GDEM	AVC/h264_main_decoder/lib_main/SetImage8x8.c	/^void set_image_8x8_GDEM(unsigned char aio_tImage[RESTRICT] , unsigned char aio_tImage_Cb[RESTRICT], unsigned char aio_tImage_Cr[RESTRICT], $/;"	f
set_image_8x8_MMX	AVC/h264_main_decoder/lib_main/SetImage8x8.c	/^void set_image_8x8_MMX(unsigned char *aio_tImage , unsigned char aio_tImage_Cb[], unsigned char aio_tImage_Cr[], $/;"	f
init_cabac_decoder	AVC/h264_main_decoder/lib_main/cabac.c	/^void init_cabac_decoder(CABACContext *c, unsigned char *buf, int buf_size){$/;"	f
init_cabac_states	AVC/h264_main_decoder/lib_main/cabac.c	/^void init_cabac_states(CABACContext *c, unsigned char (*lps_range)[4],unsigned char *mps_state, unsigned char *lps_state, int state_count){$/;"	f
CABAC_H	AVC/h264_main_decoder/lib_main/cabac.h	38;"	d
CABAC_MASK_	AVC/h264_main_decoder/lib_main/cabac.h	277;"	d
SHL_CABAC_BITS__0x200_	AVC/h264_main_decoder/lib_main/cabac.h	276;"	d
get_cabac	AVC/h264_main_decoder/lib_main/cabac.h	47;"	d
get_cabac	AVC/h264_main_decoder/lib_main/cabac.h	51;"	d
get_cabac_TI	AVC/h264_main_decoder/lib_main/cabac.h	/^static __inline int get_cabac_TI(CABACContext *c, unsigned char * const state)$/;"	f
get_cabac_bypass	AVC/h264_main_decoder/lib_main/cabac.h	46;"	d
get_cabac_bypass	AVC/h264_main_decoder/lib_main/cabac.h	50;"	d
get_cabac_bypass_TI	AVC/h264_main_decoder/lib_main/cabac.h	/^static int get_cabac_bypass_TI(CABACContext *c){$/;"	f
get_cabac_bypass_c	AVC/h264_main_decoder/lib_main/cabac.h	/^static __inline  int get_cabac_bypass_c(CABACContext *c){$/;"	f
get_cabac_c	AVC/h264_main_decoder/lib_main/cabac.h	/^static __inline int get_cabac_c(CABACContext *c, unsigned char *state){$/;"	f
get_cabac_terminate	AVC/h264_main_decoder/lib_main/cabac.h	48;"	d
get_cabac_terminate	AVC/h264_main_decoder/lib_main/cabac.h	52;"	d
get_cabac_terminate_TI	AVC/h264_main_decoder/lib_main/cabac.h	/^static __inline int get_cabac_terminate_TI(CABACContext *c, int iCurrMbAddr, int PicSizeInMbs)$/;"	f
get_cabac_terminate_c	AVC/h264_main_decoder/lib_main/cabac.h	/^static __inline int get_cabac_terminate_c(CABACContext *c, int iCurrMbAddr, int PicSizeInMbs){$/;"	f
refill	AVC/h264_main_decoder/lib_main/cabac.h	/^static __inline void refill(CABACContext *c){$/;"	f
renorm_cabac_decoder	AVC/h264_main_decoder/lib_main/cabac.h	/^static __inline void renorm_cabac_decoder(CABACContext *c){$/;"	f
renorm_cabac_decoder_once	AVC/h264_main_decoder/lib_main/cabac.h	/^static __inline void renorm_cabac_decoder_once(CABACContext *c){$/;"	f
CABAC_TABLES_H	AVC/h264_main_decoder/lib_main/cabac_table.h	36;"	d
slice_data_B_cavlc	AVC/h264_main_decoder/lib_main/cavlc_main.c	/^void slice_data_B_cavlc ( RESIDU *picture_residu, const unsigned char *ai_pcData, const int *ai_piNalBytesInNalunit, $/;"	f
vector_main_init	AVC/h264_main_decoder/lib_main/cavlc_main.c	/^void vector_main_init ( MAIN_STRUCT_PF pf [3] )$/;"	f
CAVLC_MAIN_H	AVC/h264_main_decoder/lib_main/cavlc_main.h	36;"	d
FILL_CABAC	AVC/h264_main_decoder/lib_main/fill_caches_cabac.h	37;"	d
sample_interpolation_main	AVC/h264_main_decoder/lib_main/interpolation_main.c	/^void sample_interpolation_main(unsigned char *DpbLuma, unsigned char *DpbCb,unsigned char *DpbCr, $/;"	f
INTERPOL_MAIN_H	AVC/h264_main_decoder/lib_main/interpolation_main.h	35;"	d
set_image_4x4	AVC/h264_main_decoder/lib_main/interpolation_main.h	45;"	d
set_image_4x4	AVC/h264_main_decoder/lib_main/interpolation_main.h	47;"	d
set_image_4x4	AVC/h264_main_decoder/lib_main/interpolation_main.h	50;"	d
set_image_4x4	AVC/h264_main_decoder/lib_main/interpolation_main.h	52;"	d
SampleInterpolationMain8x8	AVC/h264_main_decoder/lib_main/interpolation_main_8x8.c	/^void SampleInterpolationMain8x8(unsigned char *DpbLuma, unsigned char *DpbCb,unsigned char *DpbCr, $/;"	f
chroma_SampleInterpolationMain8x8	AVC/h264_main_decoder/lib_main/interpolation_main_8x8.c	/^void chroma_SampleInterpolationMain8x8(unsigned char *image_Cb, unsigned char *image_Cr, unsigned char *refPicLXCb, $/;"	f
interpolation_main_8x8	AVC/h264_main_decoder/lib_main/interpolation_main_8x8.c	/^void interpolation_main_8x8(unsigned char *DpbLuma, unsigned char *DpbCb,unsigned char *DpbCr, $/;"	f
INTERPOL_MAIN_8x8_H	AVC/h264_main_decoder/lib_main/interpolation_main_8x8.h	38;"	d
set_image_8x8	AVC/h264_main_decoder/lib_main/interpolation_main_8x8.h	47;"	d
set_image_8x8	AVC/h264_main_decoder/lib_main/interpolation_main_8x8.h	49;"	d
set_image_8x8	AVC/h264_main_decoder/lib_main/interpolation_main_8x8.h	52;"	d
set_image_8x8	AVC/h264_main_decoder/lib_main/interpolation_main_8x8.h	54;"	d
decode_cabac_intra_mb_type	AVC/h264_main_decoder/lib_main/macroblock_cabac.c	/^int  decode_cabac_intra_mb_type(CABACContext *c, unsigned char *state, RESIDU *Residu, int intra_slice, const int mb_stride){$/;"	f
decode_cabac_mb_type	AVC/h264_main_decoder/lib_main/macroblock_cabac.c	/^int decode_cabac_mb_type( CABACContext *c, unsigned char *state, RESIDU *CurrResidu, $/;"	f
macroblock_layer_B_cabac	AVC/h264_main_decoder/lib_main/macroblock_cabac.c	/^char macroblock_layer_B_cabac (RESIDU *picture_residu, SLICE *slice, DATA *Tab_block, unsigned char *non_zero_count_cache, $/;"	f
macroblock_layer_I_cabac	AVC/h264_main_decoder/lib_main/macroblock_cabac.c	/^char  macroblock_layer_I_cabac (RESIDU *picture_residu, SLICE *slice, DATA *Tab_block, unsigned char *non_zero_count_cache, $/;"	f
macroblock_layer_P_cabac	AVC/h264_main_decoder/lib_main/macroblock_cabac.c	/^char macroblock_layer_P_cabac (RESIDU *picture_residu, SLICE *slice, DATA *Tab_block, unsigned char *non_zero_count_cache, $/;"	f
MACRO_CABAC_P	AVC/h264_main_decoder/lib_main/macroblock_cabac.h	36;"	d
macroblock_B_partitionning	AVC/h264_main_decoder/lib_main/macroblock_layer_main.c	/^char macroblock_B_partitionning (const PPS *Pps, RESIDU *Current_residu, const unsigned char *ai_pcData, $/;"	f
macroblock_layer_B	AVC/h264_main_decoder/lib_main/macroblock_layer_main.c	/^char macroblock_layer_B (const PPS *Pps, RESIDU *picture_residu,  const unsigned char *ai_pcData,  int *aio_piPosition, $/;"	f
MACRO_MAYER_MAIN_H	AVC/h264_main_decoder/lib_main/macroblock_layer_main.h	36;"	d
CABACContext	AVC/h264_main_decoder/lib_main/main_data.h	/^typedef struct CABACContext{$/;"	s
CABACContext	AVC/h264_main_decoder/lib_main/main_data.h	/^}CABACContext;$/;"	t	typeref:struct:CABACContext
CABAC_BITS	AVC/h264_main_decoder/lib_main/main_data.h	42;"	d
CABAC_MASK	AVC/h264_main_decoder/lib_main/main_data.h	43;"	d
CABAC_NEIGH	AVC/h264_main_decoder/lib_main/main_data.h	/^}CABAC_NEIGH;$/;"	t	typeref:struct:__anon304
Cbp_a	AVC/h264_main_decoder/lib_main/main_data.h	/^	int Cbp_a;$/;"	m	struct:__anon304
Cbp_b	AVC/h264_main_decoder/lib_main/main_data.h	/^	int Cbp_b;$/;"	m	struct:__anon304
MAIN_DATA_H	AVC/h264_main_decoder/lib_main/main_data.h	38;"	d
MAIN_STRUCT_PF	AVC/h264_main_decoder/lib_main/main_data.h	/^} MAIN_STRUCT_PF;$/;"	t	typeref:struct:__anon305
baseline_vectors	AVC/h264_main_decoder/lib_main/main_data.h	/^	STRUCT_PF		    baseline_vectors[1];$/;"	m	struct:__anon305
bytestream	AVC/h264_main_decoder/lib_main/main_data.h	/^    unsigned char *bytestream;$/;"	m	struct:CABACContext
bytestream_end	AVC/h264_main_decoder/lib_main/main_data.h	/^    unsigned char *bytestream_end;$/;"	m	struct:CABACContext
bytestream_start	AVC/h264_main_decoder/lib_main/main_data.h	/^    unsigned char *bytestream_start;$/;"	m	struct:CABACContext
intra_chroma_pred_mode_left	AVC/h264_main_decoder/lib_main/main_data.h	/^    int intra_chroma_pred_mode_left ;$/;"	m	struct:__anon304
intra_chroma_pred_mode_top	AVC/h264_main_decoder/lib_main/main_data.h	/^    int intra_chroma_pred_mode_top ;$/;"	m	struct:__anon304
last_cbp	AVC/h264_main_decoder/lib_main/main_data.h	/^	int last_cbp;$/;"	m	struct:__anon304
last_qp_diff	AVC/h264_main_decoder/lib_main/main_data.h	/^	int last_qp_diff;$/;"	m	struct:__anon304
low	AVC/h264_main_decoder/lib_main/main_data.h	/^    int low;$/;"	m	struct:CABACContext
lps_range	AVC/h264_main_decoder/lib_main/main_data.h	/^    unsigned char lps_range[2*65][4];   \/\/\/< rangeTabLPS$/;"	m	struct:CABACContext
lps_state	AVC/h264_main_decoder/lib_main/main_data.h	/^    unsigned char lps_state[2*64];      \/\/\/< transIdxLPS$/;"	m	struct:CABACContext
mps_state	AVC/h264_main_decoder/lib_main/main_data.h	/^    unsigned char mps_state[2*64];      \/\/\/< transIdxMPS$/;"	m	struct:CABACContext
outstanding_count	AVC/h264_main_decoder/lib_main/main_data.h	/^    int outstanding_count;  \/\/>> ne sert a rien, a verifier$/;"	m	struct:CABACContext
range	AVC/h264_main_decoder/lib_main/main_data.h	/^    int range;$/;"	m	struct:CABACContext
mb_cabac_B_partionning	AVC/h264_main_decoder/lib_main/mb_cabac_partionning.c	/^char mb_cabac_B_partionning (RESIDU *picture_residu, SLICE *slice, DATA *Tab_block, unsigned char *non_zero_count_cache, $/;"	f
mb_cabac_I_partionning	AVC/h264_main_decoder/lib_main/mb_cabac_partionning.c	/^char mb_cabac_I_partionning (RESIDU *picture_residu, SLICE *slice, DATA *Tab_block,	DATA *block, $/;"	f
mb_cabac_P_partionning	AVC/h264_main_decoder/lib_main/mb_cabac_partionning.c	/^char mb_cabac_P_partionning (RESIDU *picture_residu, SLICE *slice, DATA *Tab_block, DATA *block, $/;"	f
MACRO_CABAC_PART_H	AVC/h264_main_decoder/lib_main/mb_cabac_partionning.h	36;"	d
GetCavlcBMotionVector	AVC/h264_main_decoder/lib_main/mb_pred_main.c	/^void GetCavlcBMotionVector(const unsigned char * RESTRICT Data, int *Position, int sub_mb_type, $/;"	f
GetCavlcBRefList	AVC/h264_main_decoder/lib_main/mb_pred_main.c	/^char GetCavlcBRefList(const unsigned char *ai_pcData, int *aio_piPosition, char *refLx,$/;"	f
mb_pred_B	AVC/h264_main_decoder/lib_main/mb_pred_main.c	/^char mb_pred_B ( const unsigned char *ai_pcData, int *aio_piPosition, const SLICE *Slice, DATA *aio_pstMacroblock, $/;"	f
motion_vector_B_skip	AVC/h264_main_decoder/lib_main/mb_pred_main.c	/^void motion_vector_B_skip(short aio_tmv_cache_l0 [][2], short aio_tmv_cache_l1 [][2], short *aio_tref_cache_l0, $/;"	f
sub_mb_b_name	AVC/h264_main_decoder/lib_main/mb_pred_main.c	/^const int sub_mb_b_name[13]={B_direct, Pred_L0, Pred_L1, B_Bi, Pred_L0, Pred_L0, Pred_L1, Pred_L1, B_Bi, B_Bi, Pred_L0, Pred_L1, B_Bi};$/;"	v
sub_mb_pred_B	AVC/h264_main_decoder/lib_main/mb_pred_main.c	/^char sub_mb_pred_B ( int *dct_allowed, const unsigned char *RESTRICT Data, int *Position, $/;"	f
GetCavlcBRefLx	AVC/h264_main_decoder/lib_main/mb_pred_main.h	/^static __inline int GetCavlcBRefLx(const unsigned char *Data, int *Position, unsigned char *SubMbType, char *RefIdxLx, int NumRefIdxLx, int PredLx){$/;"	f
MB_PRED_MAIN_H	AVC/h264_main_decoder/lib_main/mb_pred_main.h	36;"	d
DC_scan	AVC/h264_main_decoder/lib_main/residual_cabac.c	/^static const int DC_scan[4] = {0,1,2,3};$/;"	v	file:
DECODE_SIGNIFICANCE	AVC/h264_main_decoder/lib_main/residual_cabac.c	72;"	d	file:
coeff_abs_level_m1_offset	AVC/h264_main_decoder/lib_main/residual_cabac.c	/^static const int coeff_abs_level_m1_offset[6] = { 227+0, 227+10, 227+20, 227+30, 227+39, 426 };$/;"	v	file:
get_cabac_cbf_ctx	AVC/h264_main_decoder/lib_main/residual_cabac.c	/^int get_cabac_cbf_ctx(unsigned char non_zero_count_cache[],int cat, int idx, int left_cbp, int top_cbp ) {$/;"	f
last_coeff_flag_offset_8x8	AVC/h264_main_decoder/lib_main/residual_cabac.c	/^static const int last_coeff_flag_offset_8x8[63] = {$/;"	v	file:
last_significant_coeff_flag_field_offset	AVC/h264_main_decoder/lib_main/residual_cabac.c	/^static const int last_significant_coeff_flag_field_offset[2] = { 166, 338 };$/;"	v	file:
last_significant_coeff_flag_offset	AVC/h264_main_decoder/lib_main/residual_cabac.c	/^static const int last_significant_coeff_flag_offset[6] = { 0, 15, 29, 44, 47, 251 };$/;"	v	file:
residual_block_cabac	AVC/h264_main_decoder/lib_main/residual_cabac.c	/^int residual_block_cabac( CABACContext *c, unsigned char *state,  short *coeffLevel, unsigned char non_zero_count_cache[], $/;"	f
residual_cabac	AVC/h264_main_decoder/lib_main/residual_cabac.c	/^void residual_cabac (CABACContext *c, unsigned char *state, RESIDU *CurrResidu, CABAC_NEIGH *neigh, unsigned char non_zero_count_cache [], int *cbp){$/;"	f
scantable	AVC/h264_main_decoder/lib_main/residual_cabac.c	/^static const int scantable [16] = { 0, 1, 4, 8, 5, 2, 3, 6, 9, 12, 13, 10, 7, 11, 14, 15 };$/;"	v	file:
significant_coeff_flag_field_offset	AVC/h264_main_decoder/lib_main/residual_cabac.c	/^static const int significant_coeff_flag_field_offset[2] = { 105, 277 };$/;"	v	file:
significant_coeff_flag_offset	AVC/h264_main_decoder/lib_main/residual_cabac.c	/^static const int significant_coeff_flag_offset[6] = { 0, 15, 29, 44, 47, 297 };$/;"	v	file:
significant_coeff_flag_offset_8x8	AVC/h264_main_decoder/lib_main/residual_cabac.c	/^static const int significant_coeff_flag_offset_8x8[63] = {$/;"	v	file:
slice_layer_cabac	AVC/h264_main_decoder/lib_main/slice_cabac.c	/^void slice_layer_cabac ( unsigned char *data, int *NalBytesInNalunit, int *aio_piPosition, SPS *sps, PPS *pps, $/;"	f
slice_layer_cavlc	AVC/h264_main_decoder/lib_main/slice_cabac.c	/^void slice_layer_cavlc ( unsigned char *ai_pcData, const int *ai_piNalBytesInNalunit, const int *aio_piPosition, $/;"	f
non_IDR_main	AVC/h264_main_decoder/lib_main/slice_data_B.c	/^void non_IDR_main ( SPS *ai_stSps, PPS *ai_stPps , SLICE *ai_stSlice,  unsigned char *ai_tSliceTable, $/;"	f
slice_data_B	AVC/h264_main_decoder/lib_main/slice_data_B.c	/^void slice_data_B (const SPS *ai_stSps, const PPS *ai_stPps, SLICE *ai_stSlice, const unsigned char *ai_tSliceTable, $/;"	f
CabacDecoderInitAVC	AVC/h264_main_decoder/lib_main/slice_data_cabac.c	/^void CabacDecoderInitAVC(CABACContext *cabac, unsigned char *Data, const int *NalBytesInNalunit, $/;"	f
cabac_context_init_I	AVC/h264_main_decoder/lib_main/slice_data_cabac.c	/^int cabac_context_init_I[467][2] =$/;"	v
cabac_context_init_PB	AVC/h264_main_decoder/lib_main/slice_data_cabac.c	/^int cabac_context_init_PB[3][467][2] =$/;"	v
cabac_state	AVC/h264_main_decoder/lib_main/slice_data_cabac.c	/^unsigned char cabac_state[467];$/;"	v
lps_range	AVC/h264_main_decoder/lib_main/slice_data_cabac.c	/^unsigned char lps_range[64][4]= {{128,176,208,240}, {128,167,197,227}, {128,158,187,216}, {123,150,178,205},$/;"	v
lps_state	AVC/h264_main_decoder/lib_main/slice_data_cabac.c	/^unsigned char lps_state[64]= {$/;"	v
mps_state	AVC/h264_main_decoder/lib_main/slice_data_cabac.c	/^unsigned char mps_state[64]= {$/;"	v
slice_data_B_cabac	AVC/h264_main_decoder/lib_main/slice_data_cabac.c	/^char slice_data_B_cabac ( RESIDU *picture_residu, unsigned char *data,int *NalBytesInNalunit, SPS *sps, $/;"	f
slice_data_I_cabac	AVC/h264_main_decoder/lib_main/slice_data_cabac.c	/^char slice_data_I_cabac ( RESIDU *picture_residu, unsigned char *data, int *NalBytesInNalunit, $/;"	f
slice_data_P_cabac	AVC/h264_main_decoder/lib_main/slice_data_cabac.c	/^char slice_data_P_cabac (RESIDU *picture_residu, unsigned char *data,int *NalBytesInNalunit, SPS *sps, $/;"	f
SLICE_DATA_CABAC_H	AVC/h264_main_decoder/lib_main/slice_data_cabac.h	37;"	d
block_idx_xy	AVC/h264_main_decoder/lib_main/vlc_cabac.c	/^static const int block_idx_xy[4][4] = {$/;"	v	file:
decode_cabac_mb_cbp_chroma	AVC/h264_main_decoder/lib_main/vlc_cabac.c	/^int decode_cabac_mb_cbp_chroma( CABACContext *c, unsigned char *state, CABAC_NEIGH *neigh) {$/;"	f
decode_cabac_mb_cbp_luma	AVC/h264_main_decoder/lib_main/vlc_cabac.c	/^int decode_cabac_mb_cbp_luma( CABACContext *c, unsigned char *state, int AvailMask, CABAC_NEIGH *neigh, int mb_x, int mb_y) {$/;"	f
decode_cabac_mb_chroma_pre_mode	AVC/h264_main_decoder/lib_main/vlc_cabac.c	/^unsigned char decode_cabac_mb_chroma_pre_mode( CABACContext *c, unsigned char *state, int AvailMask, CABAC_NEIGH *neigh) {$/;"	f
decode_cabac_mb_dqp	AVC/h264_main_decoder/lib_main/vlc_cabac.c	/^int decode_cabac_mb_dqp(  CABACContext *c, unsigned char *state, CABAC_NEIGH *neigh	, int mb_type_left) {$/;"	f
decode_cabac_mb_mvd	AVC/h264_main_decoder/lib_main/vlc_cabac.c	/^short decode_cabac_mb_mvd(CABACContext *c, unsigned char *state, int mva, int mvb, int l) {$/;"	f
decode_cabac_mb_ref	AVC/h264_main_decoder/lib_main/vlc_cabac.c	/^unsigned char decode_cabac_mb_ref(  CABACContext *c, unsigned char *state, int refa, int refb) {$/;"	f
decode_cabac_mb_skip	AVC/h264_main_decoder/lib_main/vlc_cabac.c	/^int decode_cabac_mb_skip( CABACContext *c, unsigned char *state, int AvailMask, unsigned char *SliceTable, $/;"	f
get_mv_neighbourhood	AVC/h264_main_decoder/lib_main/vlc_cabac.c	/^void get_mv_neighbourhood( int *mva, int *mvb, short mv_cache[][2], int sub_mb_type, int mbPartIdx, int SubMbPart, int compIdx, int slice_type){$/;"	f
locx_8x8	AVC/h264_main_decoder/lib_main/vlc_cabac.c	/^static const int locx_8x8[16] = { 0, 1, 0, 1, 2, 3, 2, 3, 0, 1, 0, 1, 2, 3, 2, 3};$/;"	v	file:
locy_8x8	AVC/h264_main_decoder/lib_main/vlc_cabac.c	/^static const int locy_8x8[16] = {0, 0, 1, 1, 0, 0, 1, 1, 2, 2, 3, 3, 2, 2, 3, 3};$/;"	v	file:
VL_CABAC	AVC/h264_main_decoder/lib_main/vlc_cabac.h	36;"	d
decode_cabac_mb_transform_size	AVC/h264_main_decoder/lib_main/vlc_cabac.h	/^static __inline int decode_cabac_mb_transform_size(CABACContext *c, unsigned char *state, DATA *Tab_block, int AvailMask, int mb_xy, int mb_stride ){$/;"	f
APPDIR	Android.mk	/^APPDIR := $(shell readlink $(LOCAL_PATH)\/src)$/;"	m
APP_SUBDIRS	Android.mk	/^APP_SUBDIRS := $(patsubst $(LOCAL_PATH)\/%, %, $(shell find $(LOCAL_PATH)\/$(APPDIR) -path '*\/.svn' -prune -o -type d -print))$/;"	m
LOCAL_LDLIBS	Android.mk	/^LOCAL_LDLIBS := -lm -llog -ljnigraphics$/;"	m
LOCAL_PATH	Android.mk	/^LOCAL_PATH := $(call my-dir)$/;"	m
LOCAL_STATIC_LIBRARIES	Android.mk	/^LOCAL_STATIC_LIBRARIES := andprof cpufeatures$/;"	m
APP_ABI	Application.mk	/^APP_ABI := armeabi-v7a$/;"	m
SkipB	BitstreamSkipB.s	/^SkipB:$/;"	l
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
GetHost	SVC/GetHttpStream.c	/^void GetHost(char * src, char * web, char * file, int * port) {$/;"	f
GetHttpStream	SVC/GetHttpStream.c	/^int GetHttpStream(char* url, char* bufOut, int* size) {$/;"	f
LOGE	SVC/GetHttpStream.c	17;"	d	file:
LOG_TAG	SVC/GetHttpStream.c	16;"	d	file:
Rstrchr	SVC/GetHttpStream.c	/^char * Rstrchr(char * s, char x) {$/;"	f
ToLowerCase	SVC/GetHttpStream.c	/^void ToLowerCase(char * s) {$/;"	f
__GET_HTTP_STREAM__	SVC/GetHttpStream.h	2;"	d
BufferReallocMutex	SVC/PC.c	/^CRITICAL_SECTION BufferReallocMutex = PTHREAD_MUTEX_INITIALIZER;            \/\/ protect race condition when copy downloaded data to StreamBuffer$/;"	v
CONDITION_VARIABLE	SVC/PC.c	33;"	d	file:
CRITICAL_SECTION	SVC/PC.c	34;"	d	file:
CanDownloadCond	SVC/PC.c	/^static CONDITION_VARIABLE CanDownloadCond   = PTHREAD_COND_INITIALIZER;     \/\/ related condition$/;"	v	file:
CanPlayCond	SVC/PC.c	/^static CONDITION_VARIABLE CanPlayCond       = PTHREAD_COND_INITIALIZER;     \/\/ related condition$/;"	v	file:
CurrentDisplay	SVC/PC.c	/^static int      CurrentDisplay = 0;$/;"	v	file:
CurrentDisplayCond	SVC/PC.c	/^static CONDITION_VARIABLE   CurrentDisplayCond  = PTHREAD_COND_INITIALIZER;$/;"	v	file:
CurrentDisplayMutex	SVC/PC.c	/^static CRITICAL_SECTION     CurrentDisplayMutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
DataSizeMutex	SVC/PC.c	/^CRITICAL_SECTION DataSizeMutex      = PTHREAD_MUTEX_INITIALIZER;            \/\/ protect race condition when set the available data size$/;"	v
DeleteConditionVariable	SVC/PC.c	36;"	d	file:
DeleteCriticalSection	SVC/PC.c	37;"	d	file:
DirtyMutex	SVC/PC.c	/^static CRITICAL_SECTION     DirtyMutex          = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
Display	SVC/PC.c	/^    void  (*Display)(struct _FrameStore* thz);$/;"	m	struct:_FrameStore	file:
DisplaySingle	SVC/PC.c	/^    void  (*DisplaySingle)(struct _FrameStore* thz);$/;"	m	struct:_FrameStore	file:
Display_1_Extract_1_Image_Y_o	SVC/PC.c	/^    image_type Display_1_Extract_1_Image_Y_o[3279368];$/;"	m	struct:__anon7	file:
Display_1_Extract_Image_Y_o	SVC/PC.c	/^    image_type Display_1_Extract_Image_Y_o[3279368];$/;"	m	struct:__anon7	file:
DownloadMutex	SVC/PC.c	/^static CRITICAL_SECTION DownloadMutex       = PTHREAD_MUTEX_INITIALIZER;    \/\/ lock until free size of StreamBuffer can put new data$/;"	v	file:
DqIdNextNal_Nal_o	SVC/PC.c	/^    NAL DqIdNextNal_Nal_o[1];$/;"	m	struct:__anon7	file:
EachFrame	SVC/PC.c	/^} EachFrame;$/;"	t	typeref:struct:__anon8	file:
EndOfStream	SVC/PC.c	/^    int EndOfStream;$/;"	m	struct:__anon7	file:
EnhIDRMutex	SVC/PC.c	/^CRITICAL_SECTION EnhIDRMutex        = PTHREAD_MUTEX_INITIALIZER;            \/\/ protect when set enh_IDRindex$/;"	v
EnterCriticalSection	SVC/PC.c	38;"	d	file:
FrameBufferCond	SVC/PC.c	/^static CONDITION_VARIABLE   FrameBufferCond     = PTHREAD_COND_INITIALIZER;$/;"	v	file:
FrameBufferMutex	SVC/PC.c	/^static CRITICAL_SECTION     FrameBufferMutex    = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
FrameCounterMutex	SVC/PC.c	/^CRITICAL_SECTION FrameCounterMutex = PTHREAD_MUTEX_INITIALIZER; \/\/ protect race condition when set the FramecCounter$/;"	v
FrameStore	SVC/PC.c	/^} FrameStore;$/;"	t	typeref:struct:_FrameStore	file:
FrameStoreConstructor	SVC/PC.c	/^void FrameStoreConstructor(struct _FrameStore* this) {$/;"	f
FrameStoreDeConstructor	SVC/PC.c	/^void FrameStoreDeConstructor(struct _FrameStore* this) {$/;"	f
FrameStoreList	SVC/PC.c	/^static FrameStore* FrameStoreList;$/;"	v	file:
FrameStore_Display	SVC/PC.c	/^void FrameStore_Display(struct _FrameStore* this) {$/;"	f
FrameStore_DisplaySingle	SVC/PC.c	/^void FrameStore_DisplaySingle(struct _FrameStore* this) {$/;"	f
FrameStore_checkResolution	SVC/PC.c	/^void FrameStore_checkResolution(struct _FrameStore* this) {$/;"	f
FrameStore_computeAvgDecodingTime	SVC/PC.c	/^void FrameStore_computeAvgDecodingTime(struct _FrameStore *this) {$/;"	f
FrameStore_fillFrame	SVC/PC.c	/^int FrameStore_fillFrame(struct _FrameStore* this, unsigned char* Y, unsigned char* U, unsigned char* V) {$/;"	f
FrameStore_frameDestory	SVC/PC.c	/^void FrameStore_frameDestory(struct _FrameStore* this) {$/;"	f
FrameStore_frameInit	SVC/PC.c	/^void FrameStore_frameInit(struct _FrameStore* this, EachFrame* newFrame, int i) {$/;"	f
FrameStore_getAvgDecodingTime	SVC/PC.c	/^float FrameStore_getAvgDecodingTime(struct _FrameStore *this) {$/;"	f
FrameStore_isEmpty	SVC/PC.c	/^int FrameStore_isEmpty(struct _FrameStore* this) {$/;"	f
FrameStore_setDecodingDelay	SVC/PC.c	/^void FrameStore_setDecodingDelay (struct _FrameStore *this) {$/;"	f
FrameStore_setStartTime	SVC/PC.c	/^void FrameStore_setStartTime (struct _FrameStore *this) {$/;"	f
GetNalBytesAu_NalStreamer	SVC/PC.c	/^    NALSTREAMER GetNalBytesAu_NalStreamer[1];$/;"	m	struct:__anon7	file:
GetNalBytesAu_PPS	SVC/PC.c	/^    PPS GetNalBytesAu_PPS[255];$/;"	m	struct:__anon7	file:
GetNalBytesAu_SPS	SVC/PC.c	/^    SPS GetNalBytesAu_SPS[32];$/;"	m	struct:__anon7	file:
GetNalBytesAu_StreamType	SVC/PC.c	/^    ConfigSVC GetNalBytesAu_StreamType[1];$/;"	m	struct:__anon7	file:
GetNalBytesAu_rbsp_o	SVC/PC.c	/^    stream GetNalBytesAu_rbsp_o[1622016];$/;"	m	struct:__anon7	file:
GetNalBytesAu_rbsp_o_size	SVC/PC.c	/^    int GetNalBytesAu_rbsp_o_size[1];$/;"	m	struct:__anon7	file:
IDRindex	SVC/PC.c	/^    int IDRindex;$/;"	m	struct:_FrameStore	file:
InitializeConditionVariable	SVC/PC.c	39;"	d	file:
InitializeCriticalSection	SVC/PC.c	40;"	d	file:
Java_test_svc_Main_nativeClear	SVC/PC.c	/^Java_test_svc_Main_nativeClear(JNIEnv * env, jobject obj) {$/;"	f
Java_test_svc_Main_nativeDecodeSVC	SVC/PC.c	/^Java_test_svc_Main_nativeDecodeSVC(JNIEnv * env, jobject obj, jobjectArray bitmapArray, jint bitmapNum) {$/;"	f
Java_test_svc_Main_nativeGetAvgDecodingTime	SVC/PC.c	/^Java_test_svc_Main_nativeGetAvgDecodingTime(JNIEnv * env, jobject obj) {$/;"	f
Java_test_svc_Main_nativeGetDecodeDelay	SVC/PC.c	/^Java_test_svc_Main_nativeGetDecodeDelay(JNIEnv * env, jobject obj) {$/;"	f
Java_test_svc_Main_nativeGetHeight	SVC/PC.c	/^Java_test_svc_Main_nativeGetHeight(JNIEnv * env, jobject obj) {$/;"	f
Java_test_svc_Main_nativeGetLayerID	SVC/PC.c	/^Java_test_svc_Main_nativeGetLayerID(JNIEnv * env, jobject obj) {$/;"	f
Java_test_svc_Main_nativeGetNetworkDelay	SVC/PC.c	/^Java_test_svc_Main_nativeGetNetworkDelay(JNIEnv * env, jobject obj) {$/;"	f
Java_test_svc_Main_nativeGetSwitchGOP	SVC/PC.c	/^Java_test_svc_Main_nativeGetSwitchGOP(JNIEnv * env, jobject obj) {$/;"	f
Java_test_svc_Main_nativeGetTemporalID	SVC/PC.c	/^Java_test_svc_Main_nativeGetTemporalID(JNIEnv * env, jobject obj) {$/;"	f
Java_test_svc_Main_nativeGetThroughput	SVC/PC.c	/^Java_test_svc_Main_nativeGetThroughput(JNIEnv * env, jobject obj) {$/;"	f
Java_test_svc_Main_nativeGetWidth	SVC/PC.c	/^Java_test_svc_Main_nativeGetWidth(JNIEnv * env, jobject obj) {$/;"	f
Java_test_svc_Main_nativeSetFilePath	SVC/PC.c	/^Java_test_svc_Main_nativeSetFilePath(JNIEnv * env, jobject obj, jstring BaseUrl, jstring Prefix) {$/;"	f
Java_test_svc_Main_nativeSetLayerID	SVC/PC.c	/^Java_test_svc_Main_nativeSetLayerID(JNIEnv * env, jobject obj, jint layerID) {$/;"	f
Java_test_svc_Main_nativeSetStartTime	SVC/PC.c	/^Java_test_svc_Main_nativeSetStartTime(JNIEnv * env, jobject obj) {$/;"	f
Java_test_svc_Main_nativeSetTemporalID	SVC/PC.c	/^Java_test_svc_Main_nativeSetTemporalID(JNIEnv * env, jobject obj, jint temporalID) {$/;"	f
Java_test_svc_Main_nativeSetThreadNum	SVC/PC.c	/^Java_test_svc_Main_nativeSetThreadNum(JNIEnv * env, jobject obj, jint threadNum) {$/;"	f
JoinThread	SVC/PC.c	41;"	d	file:
LAYER_ID	SVC/PC.c	/^static int      LAYER_ID;$/;"	v	file:
LOGD	SVC/PC.c	27;"	d	file:
LOGE	SVC/PC.c	30;"	d	file:
LOGI	SVC/PC.c	28;"	d	file:
LOGV	SVC/PC.c	26;"	d	file:
LOGW	SVC/PC.c	29;"	d	file:
LOG_TAG	SVC/PC.c	25;"	d	file:
Layer_changed	SVC/PC.c	/^static int      *Layer_changed = NULL;         \/\/ if it's True then change layer ID$/;"	v	file:
LeaveCriticalSection	SVC/PC.c	42;"	d	file:
MaxFileSize	SVC/PC.c	65;"	d	file:
PortableSleep	SVC/PC.c	43;"	d	file:
RGB	SVC/PC.c	/^    unsigned char* RGB;$/;"	m	struct:__anon8	file:
ReadAU_DataFile_o	SVC/PC.c	/^    uchar ReadAU_DataFile_o[1622016];$/;"	m	struct:__anon7	file:
ReadAU_ReadBytes	SVC/PC.c	/^    int ReadAU_ReadBytes[1];$/;"	m	struct:__anon7	file:
ReadAU_pos_o	SVC/PC.c	/^    int ReadAU_pos_o[1];$/;"	m	struct:__anon7	file:
RepeatSegments	SVC/PC.c	66;"	d	file:
SVCinfo	SVC/PC.c	/^} SVCinfo;$/;"	t	typeref:struct:__anon7	file:
SVCinfoList	SVC/PC.c	/^static SVCinfo* SVCinfoList;$/;"	v	file:
StopDecodeSpace	SVC/PC.c	64;"	d	file:
StopDownloadSpace	SVC/PC.c	63;"	d	file:
StreamBufferMutex	SVC/PC.c	/^static CRITICAL_SECTION StreamBufferMutex   = PTHREAD_MUTEX_INITIALIZER;    \/\/ lock until data enough$/;"	v	file:
TEMPORAL_ID	SVC/PC.c	/^static int      TEMPORAL_ID;$/;"	v	file:
THREAD_NUM	SVC/PC.c	/^static int       THREAD_NUM  = 1;$/;"	v	file:
Temporal_changed	SVC/PC.c	/^static int      *Temporal_changed = NULL;      \/\/ if is True then change temporal ID$/;"	v	file:
ThreadFinishSignal	SVC/PC.c	/^static int ThreadFinishSignal;$/;"	v	file:
ThreadList	SVC/PC.c	/^static pthread_t *ThreadList = NULL;$/;"	v	file:
Thread_Decoding	SVC/PC.c	/^void* Thread_Decoding(void *argu) {$/;"	f
WaitConditionVariableCS	SVC/PC.c	44;"	d	file:
WakeAllConditionVariable	SVC/PC.c	45;"	d	file:
WakeConditionVariable	SVC/PC.c	46;"	d	file:
_FrameStore	SVC/PC.c	/^typedef struct _FrameStore {$/;"	s	file:
alloc_size	SVC/PC.c	/^    int alloc_size;$/;"	m	struct:__anon8	file:
attr	SVC/PC.c	/^pthread_attr_t attr;$/;"	v
base_url	SVC/PC.c	/^char    *base_url       = NULL;$/;"	v
bitmapFilledCounter	SVC/PC.c	/^static int bitmapFilledCounter, bitmapFilledMax;$/;"	v	file:
bitmapFilledMax	SVC/PC.c	/^static int bitmapFilledCounter, bitmapFilledMax;$/;"	v	file:
byte	SVC/PC.c	/^typedef unsigned char       byte;   \/\/ Byte is a char$/;"	t	file:
checkResolution	SVC/PC.c	/^    void  (*checkResolution)(struct _FrameStore* thz);$/;"	m	struct:_FrameStore	file:
computeAvgDecodingTime	SVC/PC.c	/^    void  (*computeAvgDecodingTime) (struct _FrameStore *thz);$/;"	m	struct:_FrameStore	file:
data_size	SVC/PC.c	/^int     data_size       = 0;$/;"	v
decoder_svc_MvBuffer_1_Mv	SVC/PC.c	/^    short decoder_svc_MvBuffer_1_Mv[11489280];$/;"	m	struct:__anon7	file:
decoder_svc_MvBuffer_1_Ref	SVC/PC.c	/^    short decoder_svc_MvBuffer_1_Ref[5744640];$/;"	m	struct:__anon7	file:
decoder_svc_MvBuffer_Mv	SVC/PC.c	/^    short decoder_svc_MvBuffer_Mv[11489280];$/;"	m	struct:__anon7	file:
decoder_svc_MvBuffer_Ref	SVC/PC.c	/^    short decoder_svc_MvBuffer_Ref[5744640];$/;"	m	struct:__anon7	file:
decoder_svc_NalUnit_NalRefIdc_io	SVC/PC.c	/^    int decoder_svc_NalUnit_NalRefIdc_io[1];$/;"	m	struct:__anon7	file:
decoder_svc_NalUnit_NalUnitType_io	SVC/PC.c	/^    int decoder_svc_NalUnit_NalUnitType_io[1];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_NalDecodingProcess_Set_Pos_Pos	SVC/PC.c	/^    int decoder_svc_Nal_Compute_NalDecodingProcess_Set_Pos_Pos[1];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_NalDecodingProcess_SliceHeader_entropy_coding_flag	SVC/PC.c	/^    int decoder_svc_Nal_Compute_NalDecodingProcess_SliceHeader_entropy_coding_flag[1];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_NalDecodingProcess_SliceHeader_pps_id	SVC/PC.c	/^    PPS decoder_svc_Nal_Compute_NalDecodingProcess_SliceHeader_pps_id[1];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_NalDecodingProcess_SliceHeader_quantif	SVC/PC.c	/^    W_TABLES decoder_svc_Nal_Compute_NalDecodingProcess_SliceHeader_quantif[1];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_NalDecodingProcess_SliceHeader_sps_id	SVC/PC.c	/^    SPS decoder_svc_Nal_Compute_NalDecodingProcess_SliceHeader_sps_id[1];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_NalDecodingProcess_Slice_type_SliceType_o	SVC/PC.c	/^    int decoder_svc_Nal_Compute_NalDecodingProcess_Slice_type_SliceType_o[1];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_NalDecodingProcess_slice_layer_CABAC_mv_cabac_l0_o	SVC/PC.c	/^    short decoder_svc_Nal_Compute_NalDecodingProcess_slice_layer_CABAC_mv_cabac_l0_o[261120];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_NalDecodingProcess_slice_layer_CABAC_mv_cabac_l1_o	SVC/PC.c	/^    short decoder_svc_Nal_Compute_NalDecodingProcess_slice_layer_CABAC_mv_cabac_l1_o[261120];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_NalDecodingProcess_slice_layer_CABAC_ref_cabac_l0_o	SVC/PC.c	/^    short decoder_svc_Nal_Compute_NalDecodingProcess_slice_layer_CABAC_ref_cabac_l0_o[32640];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_NalDecodingProcess_slice_layer_CABAC_ref_cabac_l1_o	SVC/PC.c	/^    short decoder_svc_Nal_Compute_NalDecodingProcess_slice_layer_CABAC_ref_cabac_l1_o[32640];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_SetPos_Pos	SVC/PC.c	/^    int decoder_svc_Nal_Compute_SetPos_Pos[1];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_SliceHeaderIDR_entropy_coding_flag	SVC/PC.c	/^    int decoder_svc_Nal_Compute_SliceHeaderIDR_entropy_coding_flag[1];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_SliceHeaderIDR_pps_id	SVC/PC.c	/^    PPS decoder_svc_Nal_Compute_SliceHeaderIDR_pps_id[1];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_SliceHeaderIDR_quantif	SVC/PC.c	/^    W_TABLES decoder_svc_Nal_Compute_SliceHeaderIDR_quantif[1];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_SliceHeaderIDR_sps_id	SVC/PC.c	/^    SPS decoder_svc_Nal_Compute_SliceHeaderIDR_sps_id[1];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_nal_unit_header_svc_ext_20_pos_o	SVC/PC.c	/^    int decoder_svc_Nal_Compute_nal_unit_header_svc_ext_20_pos_o[1];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_sei_rbsp_Sei	SVC/PC.c	/^    SEI decoder_svc_Nal_Compute_sei_rbsp_Sei[1];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_seq_parameter_set_IdOfsps_o	SVC/PC.c	/^    int decoder_svc_Nal_Compute_seq_parameter_set_IdOfsps_o[1];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_B_svc_Upsampling_tmp	SVC/PC.c	/^    short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_B_svc_Upsampling_tmp[2088960];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_B_svc_px	SVC/PC.c	/^    short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_B_svc_px[1920];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_B_svc_py	SVC/PC.c	/^    short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_B_svc_py[1088];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_B_svc_xk16	SVC/PC.c	/^    short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_B_svc_xk16[1920];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_B_svc_xp16	SVC/PC.c	/^    short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_B_svc_xp16[1920];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_B_svc_yk16	SVC/PC.c	/^    short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_B_svc_yk16[1088];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_B_svc_yp16	SVC/PC.c	/^    short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_B_svc_yp16[1088];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_P_svc_Upsampling_tmp	SVC/PC.c	/^    short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_P_svc_Upsampling_tmp[2088960];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_P_svc_px	SVC/PC.c	/^    short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_P_svc_px[1920];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_P_svc_py	SVC/PC.c	/^    short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_P_svc_py[1088];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_P_svc_xk16	SVC/PC.c	/^    short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_P_svc_xk16[1920];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_P_svc_xp16	SVC/PC.c	/^    short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_P_svc_xp16[1920];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_P_svc_yk16	SVC/PC.c	/^    short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_P_svc_yk16[1088];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_P_svc_yp16	SVC/PC.c	/^    short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_P_svc_yp16[1088];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Slice_Layer_SliceLayerCabac_mv_cabac_l0_o	SVC/PC.c	/^    short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Slice_Layer_SliceLayerCabac_mv_cabac_l0_o[261120];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Slice_Layer_SliceLayerCabac_mv_cabac_l1_o	SVC/PC.c	/^    short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Slice_Layer_SliceLayerCabac_mv_cabac_l1_o[261120];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Slice_Layer_SliceLayerCabac_ref_cabac_l0_o	SVC/PC.c	/^    short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Slice_Layer_SliceLayerCabac_ref_cabac_l0_o[32640];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Slice_Layer_SliceLayerCabac_ref_cabac_l1_o	SVC/PC.c	/^    short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Slice_Layer_SliceLayerCabac_ref_cabac_l1_o[32640];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Slice_type_SliceType_o	SVC/PC.c	/^    int decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Slice_type_SliceType_o[1];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_slice_header_21_entropy_coding_flag	SVC/PC.c	/^    int decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_slice_header_21_entropy_coding_flag[1];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_slice_header_21_pps_id	SVC/PC.c	/^    PPS decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_slice_header_21_pps_id[1];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_slice_header_21_quantif	SVC/PC.c	/^    W_TABLES decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_slice_header_21_quantif[1];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_slice_header_21_sps_id	SVC/PC.c	/^    SPS decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_slice_header_21_sps_id[1];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_slice_layer_main_CABAC_mv_cabac_l0_o	SVC/PC.c	/^    short decoder_svc_Nal_Compute_slice_layer_main_CABAC_mv_cabac_l0_o[261120];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_slice_layer_main_CABAC_mv_cabac_l1_o	SVC/PC.c	/^    short decoder_svc_Nal_Compute_slice_layer_main_CABAC_mv_cabac_l1_o[261120];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_slice_layer_main_CABAC_ref_cabac_l0_o	SVC/PC.c	/^    short decoder_svc_Nal_Compute_slice_layer_main_CABAC_ref_cabac_l0_o[32640];$/;"	m	struct:__anon7	file:
decoder_svc_Nal_Compute_slice_layer_main_CABAC_ref_cabac_l1_o	SVC/PC.c	/^    short decoder_svc_Nal_Compute_slice_layer_main_CABAC_ref_cabac_l1_o[32640];$/;"	m	struct:__anon7	file:
decoder_svc_PictureBuffer_RefU	SVC/PC.c	/^    uchar decoder_svc_PictureBuffer_RefU[12570880];$/;"	m	struct:__anon7	file:
decoder_svc_PictureBuffer_RefV	SVC/PC.c	/^    uchar decoder_svc_PictureBuffer_RefV[12570880];$/;"	m	struct:__anon7	file:
decoder_svc_PictureBuffer_RefY	SVC/PC.c	/^    uchar decoder_svc_PictureBuffer_RefY[50283520];$/;"	m	struct:__anon7	file:
decoder_svc_ResiduBuffer_RefU	SVC/PC.c	/^    short decoder_svc_ResiduBuffer_RefU[2186240];$/;"	m	struct:__anon7	file:
decoder_svc_ResiduBuffer_RefV	SVC/PC.c	/^    short decoder_svc_ResiduBuffer_RefV[2186240];$/;"	m	struct:__anon7	file:
decoder_svc_ResiduBuffer_RefY	SVC/PC.c	/^    short decoder_svc_ResiduBuffer_RefY[8744960];$/;"	m	struct:__anon7	file:
decoder_svc_Residu_Block	SVC/PC.c	/^    DATA decoder_svc_Residu_Block[8160];$/;"	m	struct:__anon7	file:
decoder_svc_Residu_Current_pic	SVC/PC.c	/^    LIST_MMO decoder_svc_Residu_Current_pic[1];$/;"	m	struct:__anon7	file:
decoder_svc_Residu_MbToSliceGroupMap	SVC/PC.c	/^    uchar decoder_svc_Residu_MbToSliceGroupMap[8160];$/;"	m	struct:__anon7	file:
decoder_svc_Residu_Mmo	SVC/PC.c	/^    MMO decoder_svc_Residu_Mmo[1];$/;"	m	struct:__anon7	file:
decoder_svc_Residu_PPS	SVC/PC.c	/^    PPS decoder_svc_Residu_PPS[255];$/;"	m	struct:__anon7	file:
decoder_svc_Residu_RefL0	SVC/PC.c	/^    LIST_MMO decoder_svc_Residu_RefL0[16];$/;"	m	struct:__anon7	file:
decoder_svc_Residu_RefL1	SVC/PC.c	/^    LIST_MMO decoder_svc_Residu_RefL1[16];$/;"	m	struct:__anon7	file:
decoder_svc_Residu_Residu	SVC/PC.c	/^    RESIDU decoder_svc_Residu_Residu[32640];$/;"	m	struct:__anon7	file:
decoder_svc_Residu_SPS	SVC/PC.c	/^    SPS decoder_svc_Residu_SPS[32];$/;"	m	struct:__anon7	file:
decoder_svc_Residu_Slice	SVC/PC.c	/^    SLICE decoder_svc_Residu_Slice[1];$/;"	m	struct:__anon7	file:
decoder_svc_Residu_SliceGroupId	SVC/PC.c	/^    uchar decoder_svc_Residu_SliceGroupId[8160];$/;"	m	struct:__anon7	file:
decoder_svc_Residu_SliceTab	SVC/PC.c	/^    uchar decoder_svc_Residu_SliceTab[8160];$/;"	m	struct:__anon7	file:
decoder_svc_Svc_Vectors_PC_Svc_Vectors	SVC/PC.c	/^    SVC_VECTORS decoder_svc_Svc_Vectors_PC_Svc_Vectors[1];$/;"	m	struct:__anon7	file:
decoder_svc_VideoParameter_Crop	SVC/PC.c	/^    int decoder_svc_VideoParameter_Crop[1];$/;"	m	struct:__anon7	file:
decoder_svc_VideoParameter_EndOfSlice	SVC/PC.c	/^    int decoder_svc_VideoParameter_EndOfSlice[1];$/;"	m	struct:__anon7	file:
decoder_svc_VideoParameter_ImgToDisplay	SVC/PC.c	/^    int decoder_svc_VideoParameter_ImgToDisplay[1];$/;"	m	struct:__anon7	file:
decoder_svc_VideoParameter_address_pic_o	SVC/PC.c	/^    int decoder_svc_VideoParameter_address_pic_o[1];$/;"	m	struct:__anon7	file:
decoder_svc_VideoParameter_xsize_o	SVC/PC.c	/^    int decoder_svc_VideoParameter_xsize_o[1];$/;"	m	struct:__anon7	file:
decoder_svc_VideoParameter_ysize_o	SVC/PC.c	/^    int decoder_svc_VideoParameter_ysize_o[1];$/;"	m	struct:__anon7	file:
decoder_svc_VlcTab_PC_o	SVC/PC.c	/^    VLC_TABLES decoder_svc_VlcTab_PC_o[1];$/;"	m	struct:__anon7	file:
decoder_svc_slice_main_vector_PC_Main_vector_o	SVC/PC.c	/^    MAIN_STRUCT_PF decoder_svc_slice_main_vector_PC_Main_vector_o[1];$/;"	m	struct:__anon7	file:
decodingTimeMS	SVC/PC.c	/^    unsigned long long decodingTimeMS;$/;"	m	struct:_FrameStore	file:
displayCounter	SVC/PC.c	/^    int displayCounter;$/;"	m	struct:_FrameStore	file:
displayTimes	SVC/PC.c	/^int     displayTimes    = 0;$/;"	v
displayedFrames	SVC/PC.c	/^    int displayedFrames;$/;"	m	struct:_FrameStore	file:
download_enhance	SVC/PC.c	/^static int      download_enhance;       \/\/ set number means to start downloading which enhancement layer.$/;"	v	file:
dpb_type	SVC/PC.c	49;"	d	file:
edge	SVC/PC.c	/^    int edge;$/;"	m	struct:_FrameStore	file:
end_decode_time	SVC/PC.c	/^    struct timeval end_decode_time;$/;"	m	struct:_FrameStore	typeref:struct:_FrameStore::timeval	file:
enh_IDRindex	SVC/PC.c	/^static int enh_IDRindex[2];$/;"	v	file:
fileStreamInit	SVC/PC.c	/^void fileStreamInit() {$/;"	f
fillFrame	SVC/PC.c	/^    int   (*fillFrame)(struct _FrameStore* thz, unsigned char* Y, unsigned char* U, unsigned char* V);$/;"	m	struct:_FrameStore	file:
firstDecodeThread	SVC/PC.c	/^int firstDecodeThread = -1;$/;"	v
flagError	SVC/PC.c	/^static int flagError;$/;"	v	file:
fps	SVC/PC.c	/^    int fps;$/;"	m	struct:_FrameStore	file:
frameAllocated	SVC/PC.c	/^    int frameAllocated;$/;"	m	struct:_FrameStore	file:
frameCounter	SVC/PC.c	/^    int frameCounter;$/;"	m	struct:_FrameStore	file:
frameDestory	SVC/PC.c	/^    void  (*frameDestory)(struct _FrameStore* thz);$/;"	m	struct:_FrameStore	file:
frameHeight	SVC/PC.c	/^    int frameWidth, frameHeight;$/;"	m	struct:_FrameStore	file:
frameInit	SVC/PC.c	/^    void  (*frameInit)(struct _FrameStore* thz, EachFrame* newFrame, int i);$/;"	m	struct:_FrameStore	file:
frameList	SVC/PC.c	/^    EachFrame frameList[100]; \/\/ hard code it, I don't want to realloc it, there is no vector in C...$/;"	m	struct:_FrameStore	file:
frameWidth	SVC/PC.c	/^    int frameWidth, frameHeight;$/;"	m	struct:_FrameStore	file:
framecounter	SVC/PC.c	/^static int framecounter;$/;"	v	file:
getAvgDecodingTime	SVC/PC.c	/^    float (*getAvgDecodingTime) (struct _FrameStore *thz);$/;"	m	struct:_FrameStore	file:
getMinBytes	SVC/PC.c	/^static int getMinBytes = 1622016;   \/\/ default 1622016, each run will get this to do some operations.$/;"	v	file:
getStreams	SVC/PC.c	/^void* getStreams() {$/;"	f
hasStarTime	SVC/PC.c	/^    int hasStarTime;$/;"	m	struct:_FrameStore	file:
i	SVC/PC.c	/^static int i;$/;"	v	file:
iFrame	SVC/PC.c	/^    int iFrame;$/;"	m	struct:__anon7	file:
image_type	SVC/PC.c	50;"	d	file:
info	SVC/PC.c	/^static AndroidBitmapInfo info;$/;"	v	file:
init	SVC/PC.c	/^static int init = 0;$/;"	v	file:
initialize	SVC/PC.c	/^void initialize(int threadID) {$/;"	f
isEmpty	SVC/PC.c	/^    int   (*isEmpty)(struct _FrameStore* thz);$/;"	m	struct:_FrameStore	file:
network_delay	SVC/PC.c	/^long                    network_delay   = 0;$/;"	v
pixels	SVC/PC.c	/^static void* pixels[64];$/;"	v	file:
pre_download_enhance	SVC/PC.c	/^static int      pre_download_enhance;   \/\/ set the number previous enhancement layer.$/;"	v	file:
prec_synchro	SVC/PC.c	51;"	d	file:
prefix	SVC/PC.c	/^char    *prefix         = NULL;$/;"	v
request_thread	SVC/PC.c	/^static pthread_t request_thread;$/;"	v	file:
retrieveFrame	SVC/PC.c	/^int retrieveFrame(int threadID) {$/;"	f
seqBuf	SVC/PC.c	/^char    *seqBuf         = NULL;$/;"	v
setDecodingDelay	SVC/PC.c	/^    void  (*setDecodingDelay) (struct _FrameStore *thz);$/;"	m	struct:_FrameStore	file:
setStartTime	SVC/PC.c	/^    void  (*setStartTime) (struct _FrameStore *thz);$/;"	m	struct:_FrameStore	file:
start_decode_time	SVC/PC.c	/^    struct timeval start_decode_time;$/;"	m	struct:_FrameStore	typeref:struct:_FrameStore::timeval	file:
stream	SVC/PC.c	52;"	d	file:
streamFromHttp	SVC/PC.c	/^void streamFromHttp (int displayTimes) {$/;"	f
tempDecodingTime	SVC/PC.c	/^    unsigned long long tempDecodingTime;$/;"	m	struct:_FrameStore	file:
threadIDs	SVC/PC.c	/^static int       *threadIDs  = NULL;$/;"	v	file:
threadNo	SVC/PC.c	/^    int threadNo;$/;"	m	struct:_FrameStore	file:
time_start	SVC/PC.c	/^static struct timeval   time_start; \/\/ Used for getting network delay$/;"	v	typeref:struct:timeval	file:
time_start_download	SVC/PC.c	/^static struct timeval   time_start_download;$/;"	v	typeref:struct:timeval	file:
toRGB565	SVC/PC.c	/^void toRGB565(byte yuvs[], int width, int height, byte rgbs[], int sw, int sh) {$/;"	f
totalDataSize	SVC/PC.c	/^static float            totalDataSize   = 0;$/;"	v	file:
uchar	SVC/PC.c	53;"	d	file:
uint	SVC/PC.c	54;"	d	file:
ulong	SVC/PC.c	55;"	d	file:
ushort	SVC/PC.c	56;"	d	file:
waitForDisplay	SVC/PC.c	/^    int waitForDisplay;$/;"	m	struct:_FrameStore	file:
word16	SVC/PC.c	/^typedef unsigned short int  word16; \/\/ 16-bit word is a short int$/;"	t	file:
word32	SVC/PC.c	/^typedef unsigned int        word32; \/\/ 32-bit word is an int$/;"	t	file:
BufferReallocMutex	SVC/PC.h	/^CRITICAL_SECTION BufferReallocMutex = PTHREAD_MUTEX_INITIALIZER;			\/\/ protect race condition when copy downloaded data to StreamBuffer$/;"	v
CONDITION_VARIABLE	SVC/PC.h	19;"	d
CRITICAL_SECTION	SVC/PC.h	18;"	d
CanDownloadCond	SVC/PC.h	/^static CONDITION_VARIABLE CanDownloadCond 	= PTHREAD_COND_INITIALIZER;		\/\/ related condition$/;"	v
CanPlayCond	SVC/PC.h	/^static CONDITION_VARIABLE CanPlayCond 		= PTHREAD_COND_INITIALIZER;		\/\/ related condition$/;"	v
CurrentDisplay	SVC/PC.h	/^static int 		CurrentDisplay = 0;$/;"	v
CurrentDisplayCond	SVC/PC.h	/^static CONDITION_VARIABLE 	CurrentDisplayCond 	= PTHREAD_COND_INITIALIZER;$/;"	v
CurrentDisplayMutex	SVC/PC.h	/^static CRITICAL_SECTION 	CurrentDisplayMutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v
DataSizeMutex	SVC/PC.h	/^CRITICAL_SECTION DataSizeMutex 		= PTHREAD_MUTEX_INITIALIZER;			\/\/ protect race condition when set the available data size$/;"	v
DeleteConditionVariable	SVC/PC.h	28;"	d
DeleteCriticalSection	SVC/PC.h	24;"	d
DirtyMutex	SVC/PC.h	/^static CRITICAL_SECTION 	DirtyMutex 			= PTHREAD_MUTEX_INITIALIZER;$/;"	v
Display	SVC/PC.h	/^	void (*Display)(struct _FrameStore* thz);$/;"	m	struct:_FrameStore
DisplaySingle	SVC/PC.h	/^	void (*DisplaySingle)(struct _FrameStore* thz);$/;"	m	struct:_FrameStore
Display_1_Extract_1_Image_Y_o	SVC/PC.h	/^	image_type Display_1_Extract_1_Image_Y_o[3279368];$/;"	m	struct:__anon5
Display_1_Extract_Image_Y_o	SVC/PC.h	/^	image_type Display_1_Extract_Image_Y_o[3279368];$/;"	m	struct:__anon5
DownloadMutex	SVC/PC.h	/^static CRITICAL_SECTION DownloadMutex 		= PTHREAD_MUTEX_INITIALIZER;	\/\/ lock until free size of StreamBuffer can put new data$/;"	v
DqIdNextNal_Nal_o	SVC/PC.h	/^	NAL DqIdNextNal_Nal_o[1];$/;"	m	struct:__anon5
EachFrame	SVC/PC.h	/^} EachFrame;$/;"	t	typeref:struct:__anon6
EndOfStream	SVC/PC.h	/^	int EndOfStream;$/;"	m	struct:__anon5
EnhIDRMutex	SVC/PC.h	/^CRITICAL_SECTION EnhIDRMutex 		= PTHREAD_MUTEX_INITIALIZER;			\/\/ protect when set enh_IDRindex$/;"	v
EnterCriticalSection	SVC/PC.h	25;"	d
FrameBufferCond	SVC/PC.h	/^static CONDITION_VARIABLE 	FrameBufferCond 	= PTHREAD_COND_INITIALIZER;$/;"	v
FrameBufferMutex	SVC/PC.h	/^static CRITICAL_SECTION 	FrameBufferMutex 	= PTHREAD_MUTEX_INITIALIZER;$/;"	v
FrameCounterMutex	SVC/PC.h	/^CRITICAL_SECTION FrameCounterMutex = PTHREAD_MUTEX_INITIALIZER; \/\/ protect race condition when set the FramecCounter$/;"	v
FrameStore	SVC/PC.h	/^} FrameStore;$/;"	t	typeref:struct:_FrameStore
FrameStoreList	SVC/PC.h	/^static FrameStore* FrameStoreList;$/;"	v
GetNalBytesAu_NalStreamer	SVC/PC.h	/^	NALSTREAMER GetNalBytesAu_NalStreamer[1];$/;"	m	struct:__anon5
GetNalBytesAu_PPS	SVC/PC.h	/^	PPS GetNalBytesAu_PPS[255];$/;"	m	struct:__anon5
GetNalBytesAu_SPS	SVC/PC.h	/^	SPS GetNalBytesAu_SPS[32];$/;"	m	struct:__anon5
GetNalBytesAu_StreamType	SVC/PC.h	/^	ConfigSVC GetNalBytesAu_StreamType[1];$/;"	m	struct:__anon5
GetNalBytesAu_rbsp_o	SVC/PC.h	/^	stream GetNalBytesAu_rbsp_o[1622016];$/;"	m	struct:__anon5
GetNalBytesAu_rbsp_o_size	SVC/PC.h	/^	int GetNalBytesAu_rbsp_o_size[1];$/;"	m	struct:__anon5
H_PC_H	SVC/PC.h	2;"	d
IDRindex	SVC/PC.h	/^	int IDRindex;$/;"	m	struct:_FrameStore
InitializeConditionVariable	SVC/PC.h	27;"	d
InitializeCriticalSection	SVC/PC.h	23;"	d
JoinThread	SVC/PC.h	22;"	d
LAYER_ID	SVC/PC.h	/^static int 		LAYER_ID;$/;"	v
Layer_changed	SVC/PC.h	/^static int 		*Layer_changed;			\/\/ if it's True then change layer ID$/;"	v
LeaveCriticalSection	SVC/PC.h	26;"	d
MaxFileSize	SVC/PC.h	50;"	d
PortableSleep	SVC/PC.h	21;"	d
RGB	SVC/PC.h	/^	unsigned char* RGB;$/;"	m	struct:__anon6
ReadAU_DataFile_o	SVC/PC.h	/^	uchar ReadAU_DataFile_o[1622016];$/;"	m	struct:__anon5
ReadAU_ReadBytes	SVC/PC.h	/^	int ReadAU_ReadBytes[1];$/;"	m	struct:__anon5
ReadAU_pos_o	SVC/PC.h	/^	int ReadAU_pos_o[1];$/;"	m	struct:__anon5
RepeatSegments	SVC/PC.h	51;"	d
SVCinfo	SVC/PC.h	/^} SVCinfo;$/;"	t	typeref:struct:__anon5
SVCinfoList	SVC/PC.h	/^static SVCinfo* SVCinfoList;$/;"	v
StopDecodeSpace	SVC/PC.h	49;"	d
StopDownloadSpace	SVC/PC.h	48;"	d
StreamBufferMutex	SVC/PC.h	/^static CRITICAL_SECTION StreamBufferMutex 	= PTHREAD_MUTEX_INITIALIZER;	\/\/ lock until data enough$/;"	v
TEMPORAL_ID	SVC/PC.h	/^static int 		TEMPORAL_ID;$/;"	v
THREAD_NUM	SVC/PC.h	/^static int 				THREAD_NUM		= 1;$/;"	v
Temporal_changed	SVC/PC.h	/^static int 		*Temporal_changed; 		\/\/ if is True then change temporal ID$/;"	v
ThreadFinishSignal	SVC/PC.h	/^static int ThreadFinishSignal;$/;"	v
ThreadList	SVC/PC.h	/^static pthread_t 		*ThreadList 	= NULL;$/;"	v
WaitConditionVariableCS	SVC/PC.h	29;"	d
WakeAllConditionVariable	SVC/PC.h	31;"	d
WakeConditionVariable	SVC/PC.h	30;"	d
_FrameStore	SVC/PC.h	/^typedef struct _FrameStore {$/;"	s
attr	SVC/PC.h	/^pthread_attr_t attr;$/;"	v
base_url	SVC/PC.h	/^char 	*base_url 		= NULL;$/;"	v
bitmapFilledCounter	SVC/PC.h	/^static int bitmapFilledCounter, bitmapFilledMax;$/;"	v
bitmapFilledMax	SVC/PC.h	/^static int bitmapFilledCounter, bitmapFilledMax;$/;"	v
byte	SVC/PC.h	/^typedef unsigned char 		byte; 	\/\/ Byte is a char$/;"	t
checkResolution	SVC/PC.h	/^	void (*checkResolution)(struct _FrameStore* thz);$/;"	m	struct:_FrameStore
data_size	SVC/PC.h	/^int 	data_size 		= 0;$/;"	v
decoder_svc_MvBuffer_1_Mv	SVC/PC.h	/^	short decoder_svc_MvBuffer_1_Mv[11489280];$/;"	m	struct:__anon5
decoder_svc_MvBuffer_1_Ref	SVC/PC.h	/^	short decoder_svc_MvBuffer_1_Ref[5744640];$/;"	m	struct:__anon5
decoder_svc_MvBuffer_Mv	SVC/PC.h	/^	short decoder_svc_MvBuffer_Mv[11489280];$/;"	m	struct:__anon5
decoder_svc_MvBuffer_Ref	SVC/PC.h	/^	short decoder_svc_MvBuffer_Ref[5744640];$/;"	m	struct:__anon5
decoder_svc_NalUnit_NalRefIdc_io	SVC/PC.h	/^	int decoder_svc_NalUnit_NalRefIdc_io[1];$/;"	m	struct:__anon5
decoder_svc_NalUnit_NalUnitType_io	SVC/PC.h	/^	int decoder_svc_NalUnit_NalUnitType_io[1];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_NalDecodingProcess_Set_Pos_Pos	SVC/PC.h	/^	int decoder_svc_Nal_Compute_NalDecodingProcess_Set_Pos_Pos[1];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_NalDecodingProcess_SliceHeader_entropy_coding_flag	SVC/PC.h	/^	int decoder_svc_Nal_Compute_NalDecodingProcess_SliceHeader_entropy_coding_flag[1];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_NalDecodingProcess_SliceHeader_pps_id	SVC/PC.h	/^	PPS decoder_svc_Nal_Compute_NalDecodingProcess_SliceHeader_pps_id[1];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_NalDecodingProcess_SliceHeader_quantif	SVC/PC.h	/^	W_TABLES decoder_svc_Nal_Compute_NalDecodingProcess_SliceHeader_quantif[1];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_NalDecodingProcess_SliceHeader_sps_id	SVC/PC.h	/^	SPS decoder_svc_Nal_Compute_NalDecodingProcess_SliceHeader_sps_id[1];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_NalDecodingProcess_Slice_type_SliceType_o	SVC/PC.h	/^	int decoder_svc_Nal_Compute_NalDecodingProcess_Slice_type_SliceType_o[1];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_NalDecodingProcess_slice_layer_CABAC_mv_cabac_l0_o	SVC/PC.h	/^	short decoder_svc_Nal_Compute_NalDecodingProcess_slice_layer_CABAC_mv_cabac_l0_o[261120];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_NalDecodingProcess_slice_layer_CABAC_mv_cabac_l1_o	SVC/PC.h	/^	short decoder_svc_Nal_Compute_NalDecodingProcess_slice_layer_CABAC_mv_cabac_l1_o[261120];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_NalDecodingProcess_slice_layer_CABAC_ref_cabac_l0_o	SVC/PC.h	/^	short decoder_svc_Nal_Compute_NalDecodingProcess_slice_layer_CABAC_ref_cabac_l0_o[32640];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_NalDecodingProcess_slice_layer_CABAC_ref_cabac_l1_o	SVC/PC.h	/^	short decoder_svc_Nal_Compute_NalDecodingProcess_slice_layer_CABAC_ref_cabac_l1_o[32640];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_SetPos_Pos	SVC/PC.h	/^	int decoder_svc_Nal_Compute_SetPos_Pos[1];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_SliceHeaderIDR_entropy_coding_flag	SVC/PC.h	/^	int decoder_svc_Nal_Compute_SliceHeaderIDR_entropy_coding_flag[1];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_SliceHeaderIDR_pps_id	SVC/PC.h	/^	PPS decoder_svc_Nal_Compute_SliceHeaderIDR_pps_id[1];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_SliceHeaderIDR_quantif	SVC/PC.h	/^	W_TABLES decoder_svc_Nal_Compute_SliceHeaderIDR_quantif[1];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_SliceHeaderIDR_sps_id	SVC/PC.h	/^	SPS decoder_svc_Nal_Compute_SliceHeaderIDR_sps_id[1];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_nal_unit_header_svc_ext_20_pos_o	SVC/PC.h	/^	int decoder_svc_Nal_Compute_nal_unit_header_svc_ext_20_pos_o[1];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_sei_rbsp_Sei	SVC/PC.h	/^	SEI decoder_svc_Nal_Compute_sei_rbsp_Sei[1];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_seq_parameter_set_IdOfsps_o	SVC/PC.h	/^	int decoder_svc_Nal_Compute_seq_parameter_set_IdOfsps_o[1];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_B_svc_Upsampling_tmp	SVC/PC.h	/^	short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_B_svc_Upsampling_tmp[2088960];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_B_svc_px	SVC/PC.h	/^	short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_B_svc_px[1920];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_B_svc_py	SVC/PC.h	/^	short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_B_svc_py[1088];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_B_svc_xk16	SVC/PC.h	/^	short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_B_svc_xk16[1920];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_B_svc_xp16	SVC/PC.h	/^	short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_B_svc_xp16[1920];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_B_svc_yk16	SVC/PC.h	/^	short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_B_svc_yk16[1088];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_B_svc_yp16	SVC/PC.h	/^	short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_B_svc_yp16[1088];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_P_svc_Upsampling_tmp	SVC/PC.h	/^	short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_P_svc_Upsampling_tmp[2088960];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_P_svc_px	SVC/PC.h	/^	short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_P_svc_px[1920];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_P_svc_py	SVC/PC.h	/^	short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_P_svc_py[1088];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_P_svc_xk16	SVC/PC.h	/^	short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_P_svc_xk16[1920];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_P_svc_xp16	SVC/PC.h	/^	short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_P_svc_xp16[1920];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_P_svc_yk16	SVC/PC.h	/^	short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_P_svc_yk16[1088];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_P_svc_yp16	SVC/PC.h	/^	short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Decode_IPB_svc_Decode_P_svc_yp16[1088];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Slice_Layer_SliceLayerCabac_mv_cabac_l0_o	SVC/PC.h	/^	short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Slice_Layer_SliceLayerCabac_mv_cabac_l0_o[261120];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Slice_Layer_SliceLayerCabac_mv_cabac_l1_o	SVC/PC.h	/^	short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Slice_Layer_SliceLayerCabac_mv_cabac_l1_o[261120];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Slice_Layer_SliceLayerCabac_ref_cabac_l0_o	SVC/PC.h	/^	short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Slice_Layer_SliceLayerCabac_ref_cabac_l0_o[32640];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Slice_Layer_SliceLayerCabac_ref_cabac_l1_o	SVC/PC.h	/^	short decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Slice_Layer_SliceLayerCabac_ref_cabac_l1_o[32640];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Slice_type_SliceType_o	SVC/PC.h	/^	int decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_Slice_type_SliceType_o[1];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_slice_header_21_entropy_coding_flag	SVC/PC.h	/^	int decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_slice_header_21_entropy_coding_flag[1];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_slice_header_21_pps_id	SVC/PC.h	/^	PPS decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_slice_header_21_pps_id[1];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_slice_header_21_quantif	SVC/PC.h	/^	W_TABLES decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_slice_header_21_quantif[1];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_slice_header_21_sps_id	SVC/PC.h	/^	SPS decoder_svc_Nal_Compute_slice_layer_in_scalable_ext_20_slice_header_21_sps_id[1];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_slice_layer_main_CABAC_mv_cabac_l0_o	SVC/PC.h	/^	short decoder_svc_Nal_Compute_slice_layer_main_CABAC_mv_cabac_l0_o[261120];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_slice_layer_main_CABAC_mv_cabac_l1_o	SVC/PC.h	/^	short decoder_svc_Nal_Compute_slice_layer_main_CABAC_mv_cabac_l1_o[261120];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_slice_layer_main_CABAC_ref_cabac_l0_o	SVC/PC.h	/^	short decoder_svc_Nal_Compute_slice_layer_main_CABAC_ref_cabac_l0_o[32640];$/;"	m	struct:__anon5
decoder_svc_Nal_Compute_slice_layer_main_CABAC_ref_cabac_l1_o	SVC/PC.h	/^	short decoder_svc_Nal_Compute_slice_layer_main_CABAC_ref_cabac_l1_o[32640];$/;"	m	struct:__anon5
decoder_svc_PictureBuffer_RefU	SVC/PC.h	/^	uchar decoder_svc_PictureBuffer_RefU[12570880];$/;"	m	struct:__anon5
decoder_svc_PictureBuffer_RefV	SVC/PC.h	/^	uchar decoder_svc_PictureBuffer_RefV[12570880];$/;"	m	struct:__anon5
decoder_svc_PictureBuffer_RefY	SVC/PC.h	/^	uchar decoder_svc_PictureBuffer_RefY[50283520];$/;"	m	struct:__anon5
decoder_svc_ResiduBuffer_RefU	SVC/PC.h	/^	short decoder_svc_ResiduBuffer_RefU[2186240];$/;"	m	struct:__anon5
decoder_svc_ResiduBuffer_RefV	SVC/PC.h	/^	short decoder_svc_ResiduBuffer_RefV[2186240];$/;"	m	struct:__anon5
decoder_svc_ResiduBuffer_RefY	SVC/PC.h	/^	short decoder_svc_ResiduBuffer_RefY[8744960];$/;"	m	struct:__anon5
decoder_svc_Residu_Block	SVC/PC.h	/^	DATA decoder_svc_Residu_Block[8160];$/;"	m	struct:__anon5
decoder_svc_Residu_Current_pic	SVC/PC.h	/^	LIST_MMO decoder_svc_Residu_Current_pic[1];$/;"	m	struct:__anon5
decoder_svc_Residu_MbToSliceGroupMap	SVC/PC.h	/^	uchar decoder_svc_Residu_MbToSliceGroupMap[8160];$/;"	m	struct:__anon5
decoder_svc_Residu_Mmo	SVC/PC.h	/^	MMO decoder_svc_Residu_Mmo[1];$/;"	m	struct:__anon5
decoder_svc_Residu_PPS	SVC/PC.h	/^	PPS decoder_svc_Residu_PPS[255];$/;"	m	struct:__anon5
decoder_svc_Residu_RefL0	SVC/PC.h	/^	LIST_MMO decoder_svc_Residu_RefL0[16];$/;"	m	struct:__anon5
decoder_svc_Residu_RefL1	SVC/PC.h	/^	LIST_MMO decoder_svc_Residu_RefL1[16];$/;"	m	struct:__anon5
decoder_svc_Residu_Residu	SVC/PC.h	/^	RESIDU decoder_svc_Residu_Residu[32640];$/;"	m	struct:__anon5
decoder_svc_Residu_SPS	SVC/PC.h	/^	SPS decoder_svc_Residu_SPS[32];$/;"	m	struct:__anon5
decoder_svc_Residu_Slice	SVC/PC.h	/^	SLICE decoder_svc_Residu_Slice[1];$/;"	m	struct:__anon5
decoder_svc_Residu_SliceGroupId	SVC/PC.h	/^	uchar decoder_svc_Residu_SliceGroupId[8160];$/;"	m	struct:__anon5
decoder_svc_Residu_SliceTab	SVC/PC.h	/^	uchar decoder_svc_Residu_SliceTab[8160];$/;"	m	struct:__anon5
decoder_svc_Svc_Vectors_PC_Svc_Vectors	SVC/PC.h	/^	SVC_VECTORS decoder_svc_Svc_Vectors_PC_Svc_Vectors[1];$/;"	m	struct:__anon5
decoder_svc_VideoParameter_Crop	SVC/PC.h	/^	int decoder_svc_VideoParameter_Crop[1];$/;"	m	struct:__anon5
decoder_svc_VideoParameter_EndOfSlice	SVC/PC.h	/^	int decoder_svc_VideoParameter_EndOfSlice[1];$/;"	m	struct:__anon5
decoder_svc_VideoParameter_ImgToDisplay	SVC/PC.h	/^	int decoder_svc_VideoParameter_ImgToDisplay[1];$/;"	m	struct:__anon5
decoder_svc_VideoParameter_address_pic_o	SVC/PC.h	/^	int decoder_svc_VideoParameter_address_pic_o[1];$/;"	m	struct:__anon5
decoder_svc_VideoParameter_xsize_o	SVC/PC.h	/^	int decoder_svc_VideoParameter_xsize_o[1];$/;"	m	struct:__anon5
decoder_svc_VideoParameter_ysize_o	SVC/PC.h	/^	int decoder_svc_VideoParameter_ysize_o[1];$/;"	m	struct:__anon5
decoder_svc_VlcTab_PC_o	SVC/PC.h	/^	VLC_TABLES decoder_svc_VlcTab_PC_o[1];$/;"	m	struct:__anon5
decoder_svc_slice_main_vector_PC_Main_vector_o	SVC/PC.h	/^	MAIN_STRUCT_PF decoder_svc_slice_main_vector_PC_Main_vector_o[1];$/;"	m	struct:__anon5
decodingTimeMS	SVC/PC.h	/^	unsigned long long decodingTimeMS;$/;"	m	struct:_FrameStore
displayCounter	SVC/PC.h	/^	int displayCounter;$/;"	m	struct:_FrameStore
displayTimes	SVC/PC.h	/^int 	displayTimes 	= 0;$/;"	v
download_enhance	SVC/PC.h	/^static int 		download_enhance;		\/\/ set number means to start downloading which enhancement layer.$/;"	v
dpb_type	SVC/PC.h	41;"	d
edge	SVC/PC.h	/^	int edge;$/;"	m	struct:_FrameStore
end_decode_time	SVC/PC.h	/^	struct timeval end_decode_time;$/;"	m	struct:_FrameStore	typeref:struct:_FrameStore::timeval
enh_IDRindex	SVC/PC.h	/^static int enh_IDRindex[2];$/;"	v
fillFrame	SVC/PC.h	/^	int  (*fillFrame)(struct _FrameStore* thz, unsigned char* Y, unsigned char* U, unsigned char* V);$/;"	m	struct:_FrameStore
firstDecodeThread	SVC/PC.h	/^int firstDecodeThread = -1;$/;"	v
flagError	SVC/PC.h	/^static int flagError;$/;"	v
fps	SVC/PC.h	/^	int fps;$/;"	m	struct:_FrameStore
frameAllocated	SVC/PC.h	/^	int frameAllocated;$/;"	m	struct:_FrameStore
frameCounter	SVC/PC.h	/^	int frameCounter;$/;"	m	struct:_FrameStore
frameDestory	SVC/PC.h	/^	void (*frameDestory)(struct _FrameStore* thz);$/;"	m	struct:_FrameStore
frameHeight	SVC/PC.h	/^	int frameWidth, frameHeight;$/;"	m	struct:_FrameStore
frameInit	SVC/PC.h	/^	void (*frameInit)(struct _FrameStore* thz, EachFrame* newFrame);$/;"	m	struct:_FrameStore
frameList	SVC/PC.h	/^	EachFrame frameList[100]; \/\/ hard code it, I don't want to realloc it, there is no vector in C...$/;"	m	struct:_FrameStore
frameWidth	SVC/PC.h	/^	int frameWidth, frameHeight;$/;"	m	struct:_FrameStore
framecounter	SVC/PC.h	/^static int framecounter;$/;"	v
getMinBytes	SVC/PC.h	/^static int getMinBytes = 1622016;	\/\/ default 1622016, each run will get this to do some operations.$/;"	v
i	SVC/PC.h	/^static int i;$/;"	v
iFrame	SVC/PC.h	/^	int iFrame;$/;"	m	struct:__anon5
image_type	SVC/PC.h	40;"	d
info	SVC/PC.h	/^static AndroidBitmapInfo info;$/;"	v
init	SVC/PC.h	/^static int init = 0;$/;"	v
isEmpty	SVC/PC.h	/^	int  (*isEmpty)(struct _FrameStore* thz);$/;"	m	struct:_FrameStore
network_delay	SVC/PC.h	/^long 					network_delay 	= 0;$/;"	v
pixels	SVC/PC.h	/^static void* pixels[64];$/;"	v
pre_download_enhance	SVC/PC.h	/^static int 		pre_download_enhance; 	\/\/ set the number previous enhancement layer.$/;"	v
prec_synchro	SVC/PC.h	38;"	d
prefix	SVC/PC.h	/^char 	*prefix 		= NULL;$/;"	v
request_thread	SVC/PC.h	/^static pthread_t 		request_thread;$/;"	v
seqBuf	SVC/PC.h	/^char 	*seqBuf 		= NULL;$/;"	v
start_decode_time	SVC/PC.h	/^	struct timeval start_decode_time;$/;"	m	struct:_FrameStore	typeref:struct:_FrameStore::timeval
stream	SVC/PC.h	39;"	d
tempDecodingTime	SVC/PC.h	/^	unsigned long long tempDecodingTime;$/;"	m	struct:_FrameStore
time_start	SVC/PC.h	/^static struct timeval 	time_start;	\/\/ Used for getting network delay$/;"	v	typeref:struct:timeval
time_start_download	SVC/PC.h	/^static struct timeval	time_start_download;$/;"	v	typeref:struct:timeval
totalDataSize	SVC/PC.h	/^static float 			totalDataSize 	= 0;$/;"	v
uchar	SVC/PC.h	34;"	d
uint	SVC/PC.h	37;"	d
ulong	SVC/PC.h	36;"	d
ushort	SVC/PC.h	35;"	d
waitForDisplay	SVC/PC.h	/^	int waitForDisplay;$/;"	m	struct:_FrameStore
word16	SVC/PC.h	/^typedef unsigned short int 	word16; \/\/ 16-bit word is a short int$/;"	t
word32	SVC/PC.h	/^typedef unsigned int 		word32; \/\/ 32-bit word is an int$/;"	t
DecodeIPart	SVC/lib_svc/BL.c	/^void DecodeIPart(const NAL *Nal, const PPS *Pps, const SPS *Sps, REFPART *RefPartition, $/;"	f
GetNonDiadicSample	SVC/lib_svc/BL.c	/^void GetNonDiadicSample(const int ResidualPrediction, short RefIdc, short cX, short cY, const short PicWidthInPix$/;"	f
PaddIPart	SVC/lib_svc/BL.c	/^void PaddIPart(const NAL *Nal, REFPART *RefPartition, unsigned char *Lpix, unsigned char *Cbpix, unsigned char *Crpix){$/;"	f
BL_H	SVC/lib_svc/BL.h	36;"	d
ComputeCurrentResidual	SVC/lib_svc/BL_residual.c	/^void ComputeCurrentResidual(const NAL *Nal, RESIDU *CurrResidu, RESIDU *BaseResidu, const PPS *Pps, const W_TABLES *Quantif, $/;"	f
ComputeResidualImage	SVC/lib_svc/BL_residual.c	/^void ComputeResidualImage(const PPS *Pps, RESIDU *CurrResidu, const short PicWidthInPix, $/;"	f
BL_RES_H	SVC/lib_svc/BL_residual.h	36;"	d
Decode_B_BL	SVC/lib_svc/B_BL.c	/^void Decode_B_BL(const PPS * Pps, const SPS * Sps, const NAL *Nal, RESIDU *CurrResidu,  RESIDU *base_residu, const STRUCT_PF *baseline_vector, $/;"	f
B_BL_H	SVC/lib_svc/B_BL.h	35;"	d
BackBottomEdge	SVC/lib_svc/BackEdge.c	/^void BackBottomEdge(const NAL *Nal, int AvailMask, unsigned char *tmp_luma, unsigned char *base_luma, $/;"	f
BackBottomLeftEdge	SVC/lib_svc/BackEdge.c	/^void BackBottomLeftEdge(const NAL *Nal, int AvailMask, unsigned char *tmp_luma, unsigned char *base_luma, $/;"	f
BackBottomRightEdge	SVC/lib_svc/BackEdge.c	/^void BackBottomRightEdge(const NAL *Nal, int AvailMask, unsigned char *tmp_luma, unsigned char *base_luma, $/;"	f
BackLeftEdge	SVC/lib_svc/BackEdge.c	/^void BackLeftEdge(const NAL *Nal, int AvailMask, unsigned char *tmp_luma, unsigned char *base_luma, $/;"	f
BackRightEdge	SVC/lib_svc/BackEdge.c	/^void BackRightEdge(const NAL *Nal, int AvailMask, unsigned char *tmp_luma, unsigned char *base_luma, $/;"	f
BackTopEdge	SVC/lib_svc/BackEdge.c	/^void BackTopEdge(const NAL *Nal, int AvailMask, unsigned char *tmp_luma, unsigned char *base_luma, $/;"	f
BackTopLeftEdge	SVC/lib_svc/BackEdge.c	/^void BackTopLeftEdge(const NAL *Nal, int AvailMask, unsigned char *tmp_luma, unsigned char *base_luma, $/;"	f
BackTopRightEdge	SVC/lib_svc/BackEdge.c	/^void BackTopRightEdge(const NAL *Nal, int AvailMask, unsigned char *tmp_luma, unsigned char *base_luma, $/;"	f
BACK_EDGE_H	SVC/lib_svc/BackEdge.h	35;"	d
CabacBPartionning	SVC/lib_svc/CabacBMacroblock.c	/^char CabacBPartionning (CABACContext *cabac, unsigned char *cabac_state, SLICE *Slice, RESIDU *CurrentResidu, DATA  *TabBlock, $/;"	f
CABAC_B_MACRO_H	SVC/lib_svc/CabacBMacroblock.h	36;"	d
CabacIPartionning	SVC/lib_svc/CabacIPartionning.c	/^char CabacIPartionning (CABACContext *cabac, unsigned char *cabac_state, SLICE *slice, const NAL *Nal, RESIDU *CurrentResidu, $/;"	f
CabacPPartionning	SVC/lib_svc/CabacPMacroblock.c	/^char CabacPPartionning (CABACContext *cabac, unsigned char *cabac_state, SLICE *Slice, RESIDU *CurrentResidu, DATA *TabBlock, $/;"	f
KeyboardEvent	SVC/lib_svc/ChooseLayer.c	/^int KeyboardEvent(){$/;"	f
choose_layer	SVC/lib_svc/ChooseLayer.c	/^void choose_layer (ConfigSVC *Config)$/;"	f
get_layer	SVC/lib_svc/ChooseLayer.c	/^void get_layer(int argc, char **argv, ConfigSVC *Config)$/;"	f
ComputeCurrentCoeff	SVC/lib_svc/CoeffLevelPrediction.c	/^void ComputeCurrentCoeff(const NAL *Nal, RESIDU *CurrResidu, RESIDU *BaseResidu, const PPS *Pps, const W_TABLES *quantif)$/;"	f
RescaleCurrentCoeff	SVC/lib_svc/CoeffLevelPrediction.c	/^void RescaleCurrentCoeff(RESIDU *CurrResidu, RESIDU *BaseResidu, const PPS *Pps, const W_TABLES *quantif, short SpatialEnhancement){$/;"	f
SCoeffResidualAddPic	SVC/lib_svc/CoeffLevelPrediction.c	/^void SCoeffResidualAddPic(const NAL *Nal, RESIDU *CurrResidu, RESIDU *BaseResidu, const PPS *Pps, const short PicWidthInPix, $/;"	f
SCoeffResidualAddRes	SVC/lib_svc/CoeffLevelPrediction.c	/^void SCoeffResidualAddRes(const NAL *Nal, RESIDU *CurrResidu, RESIDU *BaseResidu, const PPS *Pps, const short PicWidthInPix, $/;"	f
ScoeffSRescale4x4	SVC/lib_svc/CoeffLevelPrediction.c	/^void ScoeffSRescale4x4(RESIDU *CurrResidu, const short W4x4_inter [6][16])$/;"	f
ScoeffSRescale8x8	SVC/lib_svc/CoeffLevelPrediction.c	/^void ScoeffSRescale8x8(RESIDU *CurrResidu, const short W8x8inter [6][64])$/;"	f
ScoeffSRescaleChr4x4	SVC/lib_svc/CoeffLevelPrediction.c	/^void ScoeffSRescaleChr4x4(RESIDU *CurrResidu, const PPS* Pps, const W_TABLES *Quantif)$/;"	f
TCoeffResidual	SVC/lib_svc/CoeffLevelPrediction.c	/^void TCoeffResidual(RESIDU *CurrResidu, RESIDU *BaseResidu, const PPS *Pps, const short PicWidthInPix, $/;"	f
COEFF_LEVEL_PRED_H	SVC/lib_svc/CoeffLevelPrediction.h	35;"	d
TCoeffRescaleACChr	SVC/lib_svc/CoeffLevelPrediction.h	/^static __inline void TCoeffRescaleACChr  ( const int qp, const short * RESTRICT in, short * RESTRICT out){$/;"	f
TCoeffRescaleACLuma	SVC/lib_svc/CoeffLevelPrediction.h	/^static __inline void TCoeffRescaleACLuma  ( const int qp, const short * RESTRICT in, short * RESTRICT out){$/;"	f
TCoeffRescaleDCChr	SVC/lib_svc/CoeffLevelPrediction.h	/^static __inline void TCoeffRescaleDCChr ( const int qp, const short * RESTRICT in, short * RESTRICT out){$/;"	f
TCoeffRescaleDCLuma	SVC/lib_svc/CoeffLevelPrediction.h	/^static __inline void TCoeffRescaleDCLuma ( const int qp, const short * RESTRICT in, short * RESTRICT out){$/;"	f
UpdateChrCbp	SVC/lib_svc/CoeffLevelPrediction.h	/^static __inline void UpdateChrCbp(RESIDU *CurrResidu, const RESIDU *BaseResidu){$/;"	f
UpdateLevel	SVC/lib_svc/CoeffLevelPrediction.h	/^static __inline void UpdateLevel(RESIDU *CurrResidu){$/;"	f
UpdateLumaCbp	SVC/lib_svc/CoeffLevelPrediction.h	/^static __inline void UpdateLumaCbp(RESIDU *CurrResidu, const RESIDU *BaseResidu){$/;"	f
GetBasePosition	SVC/lib_svc/Coordonates.c	/^short GetBasePosition(short x, short y, short *x_base, short *y_base, short *x_mbPartIdx, short *y_mbPartIdx, $/;"	f
GetBasePositionB	SVC/lib_svc/Coordonates.c	/^short GetBasePositionB(const int Direct8x8xFlag, short x, short y, short *x_base, short *y_base, short *x_mbPartIdx, short *y_mbPartIdx, $/;"	f
GetRefIdc	SVC/lib_svc/Coordonates.c	/^void GetRefIdc(const NAL *Nal, short x, short y, REFPART *RefPartition, RESIDU *BaseResidu){$/;"	f
InitializeBaseIndex	SVC/lib_svc/Coordonates.c	/^unsigned char InitializeBaseIndex(const NAL *Nal, short x, short y, REFPART RefPartition[16], RESIDU *BaseResidu, RESIDU *Residu)$/;"	f
NxNPartIdx	SVC/lib_svc/Coordonates.c	/^const short NxNPartIdx[5][4] =$/;"	v
SetInterIntra	SVC/lib_svc/Coordonates.c	/^void SetInterIntra(const NAL *Nal, short x, short y, REFPART RefPartition[16], RESIDU *BaseResidu)$/;"	f
COORDONATES_H	SVC/lib_svc/Coordonates.h	36;"	d
FullMotionPred	SVC/lib_svc/Coordonates.h	/^static __inline void FullMotionPred(const int MbType, const int Mode, const char *MotionPredFlag, char *MotionPred)$/;"	f
GetBaseMbAddr	SVC/lib_svc/Coordonates.h	/^static __inline short GetBaseMbAddr(const NAL *Nal, DATA *Macroblock, const short x, const short y){$/;"	f
GetBaseMbCoord	SVC/lib_svc/Coordonates.h	/^static __inline void GetBaseMbCoord(const DATA *Macroblock, short *x_base, short *y_base,$/;"	f
GetBaseType	SVC/lib_svc/Coordonates.h	/^static __inline unsigned char GetBaseType(const NAL *Nal, RESIDU *residu, DATA *Macroblock, const short x, const short y){$/;"	f
AVCErrorConcealment	SVC/lib_svc/ErrorConcealment.c	/^void AVCErrorConcealment(NAL *Nal, const SPS *Sps, SLICE *Slice, unsigned char *SliceTable, RESIDU *Residu,$/;"	f
AVCPBErrorConcealment	SVC/lib_svc/ErrorConcealment.c	/^void AVCPBErrorConcealment(const SPS *Sps, SLICE *Slice, unsigned char *SliceTable, RESIDU *Residu,$/;"	f
ErrorSetMbType	SVC/lib_svc/ErrorConcealment.c	/^void ErrorSetMbType(const SPS *Sps, SLICE *Slice, NAL *Nal, RESIDU *Residu, DATA *Macroblocks, unsigned char *SliceTable, unsigned char MbType)$/;"	f
SVCErrorConcealment	SVC/lib_svc/ErrorConcealment.c	/^void SVCErrorConcealment(NAL *Nal, const SPS *Sps, SLICE *Slice, unsigned char *SliceTable, $/;"	f
DetecMissingTopLayer	SVC/lib_svc/ErrorDetection.c	/^void DetecMissingTopLayer(NAL *Nal, SPS *sps, PPS *pps, LIST_MMO *Current_pic, MMO *Mmo, $/;"	f
DetectPocProblem	SVC/lib_svc/ErrorDetection.c	/^void DetectPocProblem(NAL *Nal, MMO *Mmo, LIST_MMO *Current_pic, LAYER_MMO *LayerMmo, SPS *sps)$/;"	f
DetectSliceError	SVC/lib_svc/ErrorDetection.c	/^void DetectSliceError(NAL *Nal, SPS *sps, PPS *pps, LIST_MMO *Current_pic, MMO *Mmo, $/;"	f
DetectUnDoneExecuteRefPic	SVC/lib_svc/ErrorDetection.c	/^void DetectUnDoneExecuteRefPic(NAL *Nal, MMO *Mmo)$/;"	f
DetectUnusedReferenceFrame	SVC/lib_svc/ErrorDetection.c	/^void DetectUnusedReferenceFrame(NAL *Nal, MMO *Mmo)$/;"	f
RemoveDisplayError	SVC/lib_svc/ErrorDetection.c	/^void RemoveDisplayError(MMO *Mmo, NAL *Nal)$/;"	f
fill_caches_full_ref	SVC/lib_svc/Fill_caches_svc.c	/^void fill_caches_full_ref(  const SLICE *Slice, const int ai_iB_stride, const int ai_iB8_stride, short aio_tiRef_cache_l0 [ RESTRICT ], $/;"	f
fill_caches_motion_vector_B_full_ref	SVC/lib_svc/Fill_caches_svc.c	/^void fill_caches_motion_vector_B_full_ref(  SLICE *slice, int b_stride, int b8_stride, short ref_cache_l0 [], short ref_cache_l1 [], $/;"	f
fill_caches_motion_vector_full_ref	SVC/lib_svc/Fill_caches_svc.c	/^void fill_caches_motion_vector_full_ref(  const SLICE *Slice, const int ai_iB_stride, const int ai_iB8_stride, $/;"	f
fill_caches_svc	SVC/lib_svc/Fill_caches_svc.c	/^void fill_caches_svc ( const SLICE *Slice, const RESIDU *residu, const RESIDU *BaseResidu, const int EntropyCodingModeFlog, $/;"	f
mergeMotionData	SVC/lib_svc/Fill_caches_svc.c	/^void mergeMotionData(int *mb_mode, int macroblock_mode[4], short *mv_l0, short *ref_l0, short base_index_l0[], $/;"	f
FinishFrameSVC	SVC/lib_svc/FinishFrameSVC.c	/^void FinishFrameSVC(const int NbMacro, NAL *Nal, SPS *Sps, PPS *Pps, LIST_MMO *Current_pic, SLICE *Slice, int EndOfSlice, $/;"	f
FinishFrameSVCError	SVC/lib_svc/FinishFrameSVC.c	/^void FinishFrameSVCError(int Execute, NAL *Nal, SPS *StructSPS, PPS *Pps, LIST_MMO *Current_pic, int *Crop, $/;"	f
DecodeITCoeff	SVC/lib_svc/I_BL.c	/^void DecodeITCoeff(RESIDU *CurrResidu, const RESIDU *BaseResidu, const PPS *Pps, const short PicWidthInPix, $/;"	f
MbIPad	SVC/lib_svc/I_BL.c	/^void MbIPad(const NAL *Nal, const PPS *Pps, const SPS *Sps, short BaseMbAddr, short x, short y, $/;"	f
I_BL_H	SVC/lib_svc/I_BL.h	35;"	d
GetBaseFilter	SVC/lib_svc/InterLayerPrediction.c	/^void GetBaseFilter(const NAL *Nal, const SLICE *Slice, const PPS *Pps, const SPS *Sps,  RESIDU *BaseResidu, $/;"	f
GetBasePrediction	SVC/lib_svc/InterLayerPrediction.c	/^void GetBasePrediction(const NAL *Nal, const SLICE *Slice, const PPS *Pps, const SPS *Sps, const SPS *Sps_id, $/;"	f
GetBaseSample	SVC/lib_svc/InterLayerPrediction.c	/^void GetBaseSample(unsigned char *Y, unsigned char *U, unsigned char *V, unsigned char *DpbLuma, $/;"	f
INTER_LAYER_PRED	SVC/lib_svc/InterLayerPrediction.h	35;"	d
Deblocking_base_layer	SVC/lib_svc/Loop_filter_ext.c	/^void Deblocking_base_layer(const SPS *Sps, const PPS *pps, const RESIDU *residu, const NAL *Nal, int DeblockingFilterIdc, $/;"	f
Loop_filter_avc	SVC/lib_svc/Loop_filter_ext.c	/^void Loop_filter_avc(const int size_mb, int layer_id, SPS *Sps, PPS *pps, SLICE *slice, LIST_MMO *Current_pic, $/;"	f
Loop_filter_svc	SVC/lib_svc/Loop_filter_ext.c	/^void Loop_filter_svc(const int size_mb, const NAL *Nal, SPS *Sps, PPS *pps, SLICE *Slice, LIST_MMO *Current_pic, $/;"	f
LOOP_FILTER_EXT_H	SVC/lib_svc/Loop_filter_ext.h	35;"	d
SetLoopFilterQp	SVC/lib_svc/Loop_filter_ext.h	/^static __inline void SetLoopFilterQp(RESIDU *CurrResidu, const NAL *Nal, short iCurrMbAddr){$/;"	f
B_svc_16x16	SVC/lib_svc/Mb_B_svc.c	/^void B_svc_16x16( short MvCache_l0 [][2], short MvCache_l1 [][2], short *RefCache_l0, short *RefCache_l1, $/;"	f
B_svc_16x8	SVC/lib_svc/Mb_B_svc.c	/^void B_svc_16x8 (short MvCache_l0 [][2], short MvCache_l1 [][2], short *RefCache_l0, short *RefCache_l1, $/;"	f
B_svc_8x16	SVC/lib_svc/Mb_B_svc.c	/^void B_svc_8x16(short MvCache_l0 [][2], short MvCache_l1 [][2], short *RefCache_l0, short *RefCache_l1, $/;"	f
B_svc_8x8	SVC/lib_svc/Mb_B_svc.c	/^void B_svc_8x8(short MvCache_l0 [][2], short MvCache_l1 [][2], short *RefCache_l0, short *RefCache_l1, $/;"	f
B_svc_Skip	SVC/lib_svc/Mb_B_svc.c	/^void B_svc_Skip(short MvCache_l0 [][2], short MvCache_l1 [][2], short *RefCache_l0, short *RefCache_l1, $/;"	f
Sub_B_svc_4x4	SVC/lib_svc/Mb_B_svc.c	/^void Sub_B_svc_4x4 (short MvCache_l0 [][2], short MvCache_l1 [][2], short *RefCache_l0, short *RefCache_l1, $/;"	f
Sub_B_svc_4x8	SVC/lib_svc/Mb_B_svc.c	/^void Sub_B_svc_4x8( short MvCache_l0 [][2], short MvCache_l1 [][2], short *RefCache_l0, short *RefCache_l1, $/;"	f
Sub_B_svc_8x4	SVC/lib_svc/Mb_B_svc.c	/^void Sub_B_svc_8x4 ( short MvCache_l0 [][2], short MvCache_l1 [][2], short *RefCache_l0, short *RefCache_l1,$/;"	f
Sub_B_svc_8x8	SVC/lib_svc/Mb_B_svc.c	/^void Sub_B_svc_8x8 ( short MvCache_l0 [][2], short MvCache_l1 [][2], short *RefCache_l0, short *RefCache_l1, $/;"	f
SvcB4x4	SVC/lib_svc/Mb_B_svc.c	/^void SvcB4x4(const NAL *Nal, int mbPartIdx,	 const char *MotionPredLx, const short MvdLx[][2], const char *RefIdxLx, $/;"	f
SvcB4x8	SVC/lib_svc/Mb_B_svc.c	/^void SvcB4x8(const NAL *Nal, int mbPartIdx, const char *MotionPredLx, const short MvdLx[][2], const char *RefIdxLx, $/;"	f
SvcB8x4	SVC/lib_svc/Mb_B_svc.c	/^void SvcB8x4(const NAL *Nal, int mbPartIdx,	 const char *MotionPredLx, const short MvdLx[][2], const char *RefIdxLx, $/;"	f
SvcB8x8	SVC/lib_svc/Mb_B_svc.c	/^void SvcB8x8(const NAL *Nal, int mbPartIdx, const char *MotionPredLx, const short MvdLx[][2], const char *RefIdxLx, $/;"	f
MB_B_H	SVC/lib_svc/Mb_B_svc.h	36;"	d
MbISVCDecoding	SVC/lib_svc/Mb_I_svc.c	/^void MbISVCDecoding(const SPS *Sps, const PPS *Pps, const NAL* Nal, const W_TABLES *Quantif, const STRUCT_PF *BaselineVectors, $/;"	f
MbISnr	SVC/lib_svc/Mb_I_svc.c	/^void MbISnr (const PPS *Pps, const NAL* Nal, const W_TABLES *Quantif, const STRUCT_PF *BaselineVectors, $/;"	f
MbISpatial	SVC/lib_svc/Mb_I_svc.c	/^void MbISpatial (const NAL *Nal, const SPS *Sps, const PPS *Pps, const short PicWidthInPix, const W_TABLES *Quantif, $/;"	f
MB_I_SVC_H	SVC/lib_svc/Mb_I_svc.h	36;"	d
P_svc_16x16	SVC/lib_svc/Mb_P_svc.c	/^void P_svc_16x16 ( short mv_cache [][2], short *ref_cache, const RESIDU *CurrResidu, const DATA *Block, const Sub_P_svc decode_sub[], $/;"	f
P_svc_16x8	SVC/lib_svc/Mb_P_svc.c	/^void P_svc_16x8 ( short mv_cache [][2], short *ref_cache, const RESIDU *CurrResidu, const DATA *Block, const Sub_P_svc decode_sub[], $/;"	f
P_svc_8x16	SVC/lib_svc/Mb_P_svc.c	/^void P_svc_8x16 ( short mv_cache [][2], short *ref_cache, const RESIDU *CurrResidu, const DATA * Block, const Sub_P_svc decode_sub[], $/;"	f
P_svc_8x8	SVC/lib_svc/Mb_P_svc.c	/^void P_svc_8x8( short mv_cache [][2],	short *ref_cache, const RESIDU *CurrResidu, const DATA *Block, const Sub_P_svc decode_sub[], $/;"	f
P_svc_skip	SVC/lib_svc/Mb_P_svc.c	/^void P_svc_skip( short mv_cache [][2], short *ref_cache, const RESIDU *CurrResidu, const DATA *Block, const Sub_P_svc decode_sub[], $/;"	f
Sub_P_svc_4x4	SVC/lib_svc/Mb_P_svc.c	/^void Sub_P_svc_4x4(short mv_cache [][2], short *ref_cache, const DATA * Block, int mbPartIdx, $/;"	f
Sub_P_svc_4x8	SVC/lib_svc/Mb_P_svc.c	/^void Sub_P_svc_4x8(short mv_cache [][2], short *ref_cache, const DATA * Block, int mbPartIdx, $/;"	f
Sub_P_svc_8x4	SVC/lib_svc/Mb_P_svc.c	/^void Sub_P_svc_8x4(short mv_cache [][2], short *ref_cache, const DATA *Block, int mbPartIdx, $/;"	f
Sub_P_svc_8x8	SVC/lib_svc/Mb_P_svc.c	/^void Sub_P_svc_8x8(short mv_cache [][2], short *ref_cache, const DATA * Block, int mbPartIdx, $/;"	f
init_svc_vectors	SVC/lib_svc/Mb_P_svc.c	/^void init_svc_vectors(SVC_VECTORS *svc)$/;"	f
MB_P_SVC_H	SVC/lib_svc/Mb_P_svc.h	37;"	d
SetInterParam	SVC/lib_svc/Mb_P_svc.h	/^static __inline void SetInterParam(const NAL *Nal, short mv_cache[2], short *ref_cache, const short *MvdL0, short *mv_l0, short *ref_bas_l0){$/;"	f
SetInterParamHori	SVC/lib_svc/Mb_P_svc.h	/^static __inline void SetInterParamHori(const NAL *Nal, short mv_cache[][2], short *ref_cache, const short *MvdL0, short *mv_l0, short *ref_bas_l0){$/;"	f
SetInterParamVert	SVC/lib_svc/Mb_P_svc.h	/^static __inline void SetInterParamVert(const NAL *Nal, short mv_cache[][2], short *ref_cache, const short *MvdL0, short *mv_l0, short *ref_bas_l0){$/;"	f
svc_calculate_dpb	SVC/lib_svc/MemoryManagement.c	/^void svc_calculate_dpb(const int total_memory, const int mv_memory, short nb_of_layers, MMO *mmo_struct, SPS *sps, NAL *Nal){$/;"	f
CombineMv	SVC/lib_svc/MergeMvIdx.c	/^void CombineMv(char Mode8x8[4], short mv_cache_l0[][2], const char *MotionPred){$/;"	f
GetRef4x4	SVC/lib_svc/MergeMvIdx.c	/^void GetRef4x4(REFPART RefPartition[16], short RefInded4x4[16], short *ref_l0){$/;"	f
MergeMv	SVC/lib_svc/MergeMvIdx.c	/^void MergeMv(const NAL *Nal, const int Direct8x8Inference, REFPART RefPartition[16], const char *MotionPred, short mv_cache_l0[][2], char Mode[4], short *mv_l0){$/;"	f
MergePartition4x4	SVC/lib_svc/MergeMvIdx.c	/^void MergePartition4x4(REFPART RefPartition[16], short RefIndex8x8[], short RefInded4x4[]){$/;"	f
MergePartition8x8	SVC/lib_svc/MergeMvIdx.c	/^void MergePartition8x8(REFPART RefPartition[16], short RefIndex8x8[]){$/;"	f
SetPartPred	SVC/lib_svc/MergeMvIdx.c	/^void SetPartPred( REFPART RefPartition[16], short *ref_l0){$/;"	f
SetRef8x8	SVC/lib_svc/MergeMvIdx.c	/^void SetRef8x8(short RefIndex8x8[], short RefInded4x4[]){$/;"	f
MERGEMVIDX_H	SVC/lib_svc/MergeMvIdx.h	35;"	d
MinRef	SVC/lib_svc/MergeMvIdx.h	/^static __inline short MinRef(short RefA, short RefB){$/;"	f
MinRef4x4	SVC/lib_svc/MergeMvIdx.h	/^static __inline short MinRef4x4(short RefInded4x4[]){$/;"	f
MvDiff	SVC/lib_svc/MergeMvIdx.h	/^static __inline short MvDiff (short *MvA, short *MvB){$/;"	f
Decode_P_BL	SVC/lib_svc/P_BL.c	/^void Decode_P_BL(const PPS * Pps, const SPS * Sps, const NAL *Nal, RESIDU *CurrResidu, RESIDU *BaseResidu, $/;"	f
P_BL_H	SVC/lib_svc/P_BL.h	37;"	d
IsAuComplete	SVC/lib_svc/ParseAUDecoder.c	/^int IsAuComplete(unsigned char *NalInRbsp, int NalInRBSP, PPS *Pps, SPS *Sps, NAL *Nal, $/;"	f
IsNalHeaderChanged	SVC/lib_svc/ParseAUDecoder.c	/^int IsNalHeaderChanged(NAL *Nal)$/;"	f
ParseFirstAU	SVC/lib_svc/ParseAUDecoder.c	/^void ParseFirstAU(int StreamSize, unsigned char *NalInRbsp, ConfigSVC *StreamType){$/;"	f
Determine8x8Part	SVC/lib_svc/PartitionType.c	/^char Determine8x8Part(REFPART RefPartition[16]){$/;"	f
DetermineMacroPart	SVC/lib_svc/PartitionType.c	/^void DetermineMacroPart(int SliceType, RESIDU *Residu, char Mode8x8[4], REFPART RefPartition[16]){$/;"	f
SetPartionning	SVC/lib_svc/PartitionType.c	/^void SetPartionning(int SliceType, RESIDU *Residu, REFPART RefPartition[16]){$/;"	f
PARTITION_TYPE_H	SVC/lib_svc/PartitionType.h	37;"	d
AddResidual	SVC/lib_svc/ResidualProcessing.c	/^void AddResidual(const NAL *Nal, const PPS * Pps, RESIDU *CurrResidu, RESIDU *BaseResidu, $/;"	f
AddResidualPic	SVC/lib_svc/ResidualProcessing.c	/^void AddResidualPic(const NAL *Nal, const PPS *Pps, RESIDU *CurrResidu, RESIDU *BaseResidu, $/;"	f
AddResidualRes	SVC/lib_svc/ResidualProcessing.c	/^void AddResidualRes(const NAL *Nal, const PPS *Pps, RESIDU *CurrResidu, RESIDU *BaseResidu, $/;"	f
ResidualPrediction	SVC/lib_svc/ResidualProcessing.c	/^void ResidualPrediction(const NAL *Nal, const PPS *Pps, const W_TABLES *Quantif, RESIDU *CurrResidu, $/;"	f
base_layer_residual	SVC/lib_svc/ResidualProcessing.c	/^void base_layer_residual(RESIDU *residu, short *Luma, short *Chroma_Cb, short *Chroma_Cr, $/;"	f
AddCoeff	SVC/lib_svc/ResidualProcessing.h	63;"	d
AddCoeff	SVC/lib_svc/ResidualProcessing.h	69;"	d
AddCoeff256	SVC/lib_svc/ResidualProcessing.h	65;"	d
AddCoeff256	SVC/lib_svc/ResidualProcessing.h	71;"	d
AddCoeff256_C	SVC/lib_svc/ResidualProcessing.h	/^static __inline void AddCoeff256_C(short *Coeff, short *BaseLumaCoeff){$/;"	f
AddCoeff256_TI	SVC/lib_svc/ResidualProcessing.h	/^static __inline void AddCoeff256_TI(short *Coeff, short *BaseLumaCoeff){$/;"	f
AddCoeff64	SVC/lib_svc/ResidualProcessing.h	64;"	d
AddCoeff64	SVC/lib_svc/ResidualProcessing.h	70;"	d
AddCoeff64_C	SVC/lib_svc/ResidualProcessing.h	/^static __inline void AddCoeff64_C(short *Coeff, short *BaseLumaCoeff){$/;"	f
AddCoeff64_TI	SVC/lib_svc/ResidualProcessing.h	/^static __inline void AddCoeff64_TI(short *Coeff, short *BaseLumaCoeff){$/;"	f
AddCoeff_C	SVC/lib_svc/ResidualProcessing.h	/^static __inline void AddCoeff_C(short *Coeff, const short *BaseLumaCoeff){$/;"	f
AddCoeff_TI	SVC/lib_svc/ResidualProcessing.h	/^static __inline void AddCoeff_TI(short *Coeff, const short *BaseLumaCoeff){$/;"	f
RESIDUAL_PROCESS_H	SVC/lib_svc/ResidualProcessing.h	37;"	d
ResetMbResidu	SVC/lib_svc/ResidualProcessing.h	62;"	d
ResetMbResidu	SVC/lib_svc/ResidualProcessing.h	68;"	d
ResetMbResidu_C	SVC/lib_svc/ResidualProcessing.h	/^static __inline void ResetMbResidu_C(short *Residu, short *Residu_Cb, short *Residu_Cr,const short PicWidthInPix)$/;"	f
ResetMbResidu_TI	SVC/lib_svc/ResidualProcessing.h	/^static __inline void ResetMbResidu_TI(short *Residu, short *Residu_Cb, short *Residu_Cr,const short PicWidthInPix)$/;"	f
add_compensed_residual	SVC/lib_svc/ResidualProcessing.h	61;"	d
add_compensed_residual	SVC/lib_svc/ResidualProcessing.h	67;"	d
add_compensed_residual_C	SVC/lib_svc/ResidualProcessing.h	/^static __inline void  add_compensed_residual_C(unsigned char *Y, unsigned char *U, unsigned char *V, short *luma_residu, $/;"	f
add_compensed_residual_TI	SVC/lib_svc/ResidualProcessing.h	/^static __inline void  add_compensed_residual_TI(unsigned char *Y, unsigned char *U, unsigned char *V, short *luma_residu, $/;"	f
SVC_DISPLAY_H	SVC/lib_svc/SVCDisplay.h	36;"	d
CheckMissingLayerToDisplay	SVC/lib_svc/SVCdisplay.c	/^int CheckMissingLayerToDisplay(NAL *Nal, MMO *Mmo)$/;"	f
DisplayOrderSvc	SVC/lib_svc/SVCdisplay.c	/^void DisplayOrderSvc(SPS *sps, LIST_MMO *Current_pic, NAL *Nal, int *address_pic, int *x_size, $/;"	f
FlushSVCFrame	SVC/lib_svc/SVCdisplay.c	/^void FlushSVCFrame(SPS *sps, NAL *Nal, MMO *Mmo, int *x_size, int *y_size, int *Crop, int *ImgToDisplay, int *address_pic)$/;"	f
LOGE	SVC/lib_svc/SVCdisplay.c	39;"	d	file:
LOG_TAG	SVC/lib_svc/SVCdisplay.c	38;"	d	file:
ManageNewPic	SVC/lib_svc/SVCdisplay.c	/^void ManageNewPic(NAL *Nal, MMO *Mmo, LIST_MMO *Current_pic, SPS *Sps, int layer_number, int WantedId)$/;"	f
RemoveAuMemory	SVC/lib_svc/SVCdisplay.c	/^void RemoveAuMemory(MMO* mmo){$/;"	f
SearchFrameToDisplay	SVC/lib_svc/SVCdisplay.c	/^void SearchFrameToDisplay(NAL *Nal, MMO *Mmo, int *x_size, int *y_size, int *Crop, int *ImgToDisplay, int *address_pic)$/;"	f
SearchSamePOC	SVC/lib_svc/SVCdisplay.c	/^int SearchSamePOC(POC_PARAMS *Frame, LIST_MMO *Current_pic, NAL *Nal, int LayerNumber){$/;"	f
UserDefinedSearchFrameToDisplay	SVC/lib_svc/SVCdisplay.c	/^int UserDefinedSearchFrameToDisplay(NAL *Nal, MMO *Mmo, int *x_size, int *y_size, int *Crop, int *ImgToDisplay, int *address_pic)$/;"	f
SliceHeaderCut	SVC/lib_svc/SliceHeaderAnnex.c	/^int SliceHeaderCut(unsigned char *data, SPS *sps, PPS *pps, NAL *Nal, int *position) $/;"	f
NalParamInit	SVC/lib_svc/SliceHeaderExtension.c	/^void NalParamInit(NAL *Nal, PPS *pps, SPS *sps, SPS *pt_sps_id)$/;"	f
SetSpatialUsed	SVC/lib_svc/SliceHeaderExtension.c	/^void SetSpatialUsed(NAL *Nal){$/;"	f
SpatialScalabilityType	SVC/lib_svc/SliceHeaderExtension.c	/^int SpatialScalabilityType(SPS *sps, NAL *Nal ){$/;"	f
SvcReadDefaultParameters	SVC/lib_svc/SliceHeaderExtension.c	/^void SvcReadDefaultParameters(unsigned char *data, int *position, NAL *Nal, SLICE *Slice, SPS *pt_sps_id)$/;"	f
SvcReadLayerPrediction	SVC/lib_svc/SliceHeaderExtension.c	/^void SvcReadLayerPrediction(unsigned char *data, int *position, NAL *Nal, SPS *pt_sps_id, PPS *pt_pps_id, SLICE *Slice, $/;"	f
SvcReadReferenceListProcessing	SVC/lib_svc/SliceHeaderExtension.c	/^void SvcReadReferenceListProcessing(unsigned char *data, int *position, NAL *Nal, SLICE *Slice, SPS *pt_sps_id, $/;"	f
UpdateReferenceListAddress	SVC/lib_svc/SliceHeaderExtension.c	/^void UpdateReferenceListAddress(LAYER_MMO *LayerMmo, LIST_MMO *RefListL0, LIST_MMO *RefListL1, unsigned char QualityId){$/;"	f
SLICE_HEADER_EXT_H	SVC/lib_svc/SliceHeaderExtension.h	35;"	d
search_mv_address	SVC/lib_svc/SliceHeaderExtension.h	/^static __inline int search_mv_address(int poc, const LAYER_MMO *LayerMmo)$/;"	f
search_picture_address	SVC/lib_svc/SliceHeaderExtension.h	/^static __inline int search_picture_address(int poc, const LAYER_MMO *LayerMmo, unsigned char QualityId)$/;"	f
Decode_B_avc	SVC/lib_svc/Slice_data_B_avc.c	/^void Decode_B_avc ( SPS *ai_stSps, PPS *Pps, SLICE *ai_stSlice, unsigned char *ai_tSliceTable, $/;"	f
Decode_B_svc	SVC/lib_svc/Slice_data_B_svc.c	/^void Decode_B_svc ( const int size_Mb, SPS *ai_pstSps, PPS * ai_pstPps, SLICE *Slice, const NAL * Nal, unsigned char *SliceTable, $/;"	f
Decode_I_avc	SVC/lib_svc/Slice_data_I_avc.c	/^void Decode_I_avc( const SPS *Sps, const PPS *Pps, const SLICE *ai_pstSlice, const unsigned char *SliceTable, $/;"	f
Decode_P_avc	SVC/lib_svc/Slice_data_P_avc.c	/^void Decode_P_avc( const SPS *Sps, const PPS *Pps, const SLICE *ai_pstSlice, const unsigned char *SliceTable, $/;"	f
SLICE_DATA_AVC_H	SVC/lib_svc/Slice_data_avc.h	36;"	d
switch_layer	SVC/lib_svc/SwitchAdress.c	/^void switch_layer(NAL *Nal)$/;"	f
SWITCH_ADDRESS_H	SVC/lib_svc/SwitchAdress.h	35;"	d
MbPredBCabacSvc	SVC/lib_svc/VlcCabacSvc.c	/^char MbPredBCabacSvc ( CABACContext *c, unsigned char *state, SLICE *Slice, RESIDU *CurrResidu, DATA *macroblock, $/;"	f
MbPredPCabacSvc	SVC/lib_svc/VlcCabacSvc.c	/^char MbPredPCabacSvc (CABACContext *c, unsigned char *state, SLICE *slice, RESIDU *CurrResidu, DATA *macroblock, $/;"	f
ReadCabac8x8MotionVector	SVC/lib_svc/VlcCabacSvc.c	/^void ReadCabac8x8MotionVector(CABACContext *c, unsigned char *state, RESIDU *CurrentResidu, SLICE *slice, $/;"	f
SubMbBCabacSVC	SVC/lib_svc/VlcCabacSvc.c	/^char SubMbBCabacSVC ( int *dct_allowed, int Dir8x8infFlag, CABACContext *c, unsigned char *state, SLICE *slice, DATA *macroblock, $/;"	f
SubMbPCabacSVC	SVC/lib_svc/VlcCabacSvc.c	/^char SubMbPCabacSVC ( int *dct_allowed, CABACContext *c, unsigned char *state, SLICE *slice, DATA *macroblock, $/;"	f
CabacGetMotionPredFlag	SVC/lib_svc/VlcCabacSvc.h	/^static __inline unsigned char CabacGetMotionPredFlag(CABACContext *c, unsigned char *state, int Idx)$/;"	f
GetCabacSVCBSubMotionPred	SVC/lib_svc/VlcCabacSvc.h	/^static __inline int GetCabacSVCBSubMotionPred(CABACContext *c, unsigned char *state, SLICE *slice, char *MotionPred, $/;"	f
GetCabacSVCPMotionPred	SVC/lib_svc/VlcCabacSvc.h	/^static __inline int GetCabacSVCPMotionPred(CABACContext *c, unsigned char *state, SLICE *slice, DATA *macroblock, $/;"	f
VLC_CABAC_SVC_H	SVC/lib_svc/VlcCabacSvc.h	38;"	d
write_back_motion_cache_B_full_ref_C	SVC/lib_svc/WriteBackSVC.c	/^void write_back_motion_cache_B_full_ref_C( const int ai_iB_stride, const int ai_iB8_stride, const int ai_iMb_xy, $/;"	f
write_back_motion_cache_B_full_ref_TI	SVC/lib_svc/WriteBackSVC.c	/^void write_back_motion_cache_B_full_ref_TI( const int ai_iB_stride, const int ai_iB8_stride, const int ai_iMb_xy, $/;"	f
SVC_WRITE_BACK_H	SVC/lib_svc/WriteBackSVC.h	39;"	d
write_back_P_skip_motion_full_ref	SVC/lib_svc/WriteBackSVC.h	46;"	d
write_back_P_skip_motion_full_ref	SVC/lib_svc/WriteBackSVC.h	50;"	d
write_back_P_skip_motion_full_ref_C	SVC/lib_svc/WriteBackSVC.h	/^static __inline void write_back_P_skip_motion_full_ref_C( const int ai_iB_stride, const int ai_iB8_stride, $/;"	f
write_back_P_skip_motion_full_ref_TI	SVC/lib_svc/WriteBackSVC.h	/^static __inline void write_back_P_skip_motion_full_ref_TI( const int ai_iB_stride, const int ai_iB8_stride , short MvdL0[ ], short ai_tiMv_cache[2], short ao_tiRef[ ])$/;"	f
write_back_full_ref	SVC/lib_svc/WriteBackSVC.h	45;"	d
write_back_full_ref	SVC/lib_svc/WriteBackSVC.h	49;"	d
write_back_full_ref_8x8	SVC/lib_svc/WriteBackSVC.h	/^static __inline void write_back_full_ref_8x8(const int ai_iB_stride, const int ai_iB8_stride, short *ai_tiMv, $/;"	f
write_back_full_ref_C	SVC/lib_svc/WriteBackSVC.h	/^static __inline void write_back_full_ref_C(const int ai_iB_stride, const int ai_iB8_stride, short *ai_tiMv,$/;"	f
write_back_full_ref_TI	SVC/lib_svc/WriteBackSVC.h	/^static __inline void write_back_full_ref_TI(const int ai_iB_stride , const int ai_iB8_stride, short ai_tiMv[ ], short ai_tiMv_cache[ ][2], short *ai_tiRef, short aio_tiRef_cache[ ]){$/;"	f
write_back_motion_cache_B_full_ref	SVC/lib_svc/WriteBackSVC.h	47;"	d
write_back_motion_cache_B_full_ref	SVC/lib_svc/WriteBackSVC.h	51;"	d
write_back_motion_full_ref	SVC/lib_svc/WriteBackSVC.h	/^static __inline void write_back_motion_full_ref( const int ai_iB_stride, const int ai_iB8_stride, short *MvdL0, $/;"	f
BLK4X4_H	SVC/lib_svc/blk4x4.h	35;"	d
PuissanceBlock16	SVC/lib_svc/blk4x4.h	/^static int PuissanceBlock16 [16] = {0, 1, 4, 5, 2, 3, 6, 7, 8, 9, 12, 13, 10, 11, 14, 15};$/;"	v
PuissanceBlock64	SVC/lib_svc/blk4x4.h	/^static int PuissanceBlock64[4] = {0, 2, 8, 10};$/;"	v
UpdateBlk4x4	SVC/lib_svc/blk4x4.h	/^static __inline void UpdateBlk4x4(RESIDU *CurrResidu){$/;"	f
UpdateCoeff16	SVC/lib_svc/blk4x4.h	125;"	d
UpdateCoeff16	SVC/lib_svc/blk4x4.h	43;"	d
UpdateCoeff16_C	SVC/lib_svc/blk4x4.h	/^static __inline int UpdateCoeff16_C(short *CoeffLevel){$/;"	f
UpdateCoeff16_TI	SVC/lib_svc/blk4x4.h	/^static __inline int UpdateCoeff16_TI(short *CoeffLevel){$/;"	f
UpdateCoeff64	SVC/lib_svc/blk4x4.h	126;"	d
UpdateCoeff64	SVC/lib_svc/blk4x4.h	44;"	d
UpdateCoeff64_C	SVC/lib_svc/blk4x4.h	/^static __inline int UpdateCoeff64_C(short *CoeffLevel){$/;"	f
UpdateCoeff64_TI	SVC/lib_svc/blk4x4.h	/^static __inline int UpdateCoeff64_TI(short *CoeffLevel){$/;"	f
blk4x4_coded	SVC/lib_svc/blk4x4.h	123;"	d
blk4x4_coded	SVC/lib_svc/blk4x4.h	41;"	d
blk4x4_coded_C	SVC/lib_svc/blk4x4.h	/^static __inline int blk4x4_coded_C(short *residu, const int PicWidthinPix){$/;"	f
blk4x4_coded_TI	SVC/lib_svc/blk4x4.h	/^static __inline int blk4x4_coded_TI(short *residu, const int PicWidthinPix){$/;"	f
blk8x8_coded	SVC/lib_svc/blk4x4.h	124;"	d
blk8x8_coded	SVC/lib_svc/blk4x4.h	42;"	d
blk8x8_coded_C	SVC/lib_svc/blk4x4.h	/^static __inline int blk8x8_coded_C(short *residu, const int PicWidthinPix){$/;"	f
blk8x8_coded_TI	SVC/lib_svc/blk4x4.h	/^static __inline int blk8x8_coded_TI(short *residu, const int PicWidthinPix){$/;"	f
update_blk4x4Res	SVC/lib_svc/blk4x4.h	/^static __inline void update_blk4x4Res(short *residu, RESIDU *CurrResidu, const int PicWidthinPix){$/;"	f
CabacBMacroblockLayer	SVC/lib_svc/cabac_svc.c	/^char CabacBMacroblockLayer(CABACContext *cabac, unsigned char *cabac_state, const NAL *Nal, SLICE *Slice, RESIDU *TabResidu, $/;"	f
CabacGetBaseModeFlag	SVC/lib_svc/cabac_svc.c	/^unsigned char CabacGetBaseModeFlag( CABACContext *c, unsigned char *state, RESIDU *CurrResidu,  unsigned char *SliceTable, int mb_stride) {$/;"	f
CabacIMacroblockLayer	SVC/lib_svc/cabac_svc.c	/^char CabacIMacroblockLayer(CABACContext *cabac, unsigned char *cabac_state, const NAL *Nal, SLICE *Slice, $/;"	f
CabacPMacroblockLayer	SVC/lib_svc/cabac_svc.c	/^char CabacPMacroblockLayer(CABACContext *cabac, unsigned char *cabac_state, const NAL *Nal, SLICE *Slice, $/;"	f
CABAC_SVC_H	SVC/lib_svc/cabac_svc.h	35;"	d
CabacGetResPredFlag	SVC/lib_svc/cabac_svc.h	/^static __inline unsigned char CabacGetResPredFlag(CABACContext *cabac, unsigned char *cabac_state, int IsBl){$/;"	f
macroblock_layer_in_scalable_extension	SVC/lib_svc/cavlc_svc.c	/^char macroblock_layer_in_scalable_extension(const NAL *Nal, const PPS *Pps, RESIDU *Current_residu, RESIDU *BaseResidu, $/;"	f
mb_pred_svc	SVC/lib_svc/cavlc_svc.c	/^int mb_pred_svc( const unsigned char *ai_pcData, int *position, const SLICE *ai_pstSlice, $/;"	f
sub_mb_pred_svc	SVC/lib_svc/cavlc_svc.c	/^int sub_mb_pred_svc ( const unsigned char *ai_pcData, int *position, const SLICE *ai_pstSlice, $/;"	f
sub_mb_type_name	SVC/lib_svc/cavlc_svc.c	/^static const int sub_mb_type_name[2][13]={{Pred_L0 , Pred_L0, Pred_L0, Pred_L0, Pred_L0, NA, NA, NA, NA, NA, NA, NA, NA}, {B_direct, Pred_L0, Pred_L1, B_Bi   , Pred_L0, Pred_L0, Pred_L1, Pred_L1, B_Bi, B_Bi, Pred_L0, Pred_L1, B_Bi}};$/;"	v	file:
sub_num_part	SVC/lib_svc/cavlc_svc.c	/^static const int sub_num_part[2][13]={{1, 2, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0},	  {4, 1, 1, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4}};$/;"	v	file:
CAVLC_SVC_H	SVC/lib_svc/cavlc_svc.h	36;"	d
ReadMotionPredSVC	SVC/lib_svc/cavlc_svc.h	/^static __inline int ReadMotionPredSVC( const unsigned char *ai_pcData, int *position, char *MotionPreLx, DATA *Macroblock, int Pred_Lx){$/;"	f
read_me_svc	SVC/lib_svc/cavlc_svc.h	/^static __inline char read_me_svc ( const unsigned char *tab, int *pos, int mode, RESIDU *CurrResidu, const int mb_xy, const SLICE *slice, const int x)$/;"	f
EDGE_BOUNDARY_H	SVC/lib_svc/edge_boundary.h	36;"	d
CheckNeighbourBlock	SVC/lib_svc/egde_boundary.c	/^static __inline void CheckNeighbourBlock(int dir, int edge, unsigned char add, int block1, int block2, char bS[4]){$/;"	f	file:
InterExternalEdge	SVC/lib_svc/egde_boundary.c	/^void InterExternalEdge(const int mb_type, const int mbn_type, const int mb_xy, const int mbn_xy, $/;"	f
InterInternalEdge	SVC/lib_svc/egde_boundary.c	/^void InterInternalEdge(const int mb_type, char bS[4], int dir, int edge, int spatial_scalability, const RESIDU *residu){		$/;"	f
external_edge	SVC/lib_svc/egde_boundary.c	/^void external_edge(const int mb_type, const int mbn_type, const int mb_xy, const int mbn_xy, char bS[4], $/;"	f
internal_edge	SVC/lib_svc/egde_boundary.c	/^void internal_edge(const int mb_type, char bS[4], int dir, int edge, int slice_type, int spatial_scalability,$/;"	f
ABS_MV	SVC/lib_svc/fill_caches_svc.h	75;"	d
FILL_H	SVC/lib_svc/fill_caches_svc.h	36;"	d
set_macroblock_mode	SVC/lib_svc/fill_caches_svc.h	/^static __inline void set_macroblock_mode(int *mode, int macroblock_mode[4], int aui4x4Idx[16]){$/;"	f
ICT_SVC	SVC/lib_svc/ict_svc.h	36;"	d
SVC4x4Add	SVC/lib_svc/ict_svc.h	39;"	d
SVC4x4Add	SVC/lib_svc/ict_svc.h	41;"	d
SVC4x4Add_C	SVC/lib_svc/ict_svc.h	/^static __inline void SVC4x4Add_C ( short * RESTRICT  block, short *image,const int PicWidthInPix)$/;"	f
SVC4x4Add_TI	SVC/lib_svc/ict_svc.h	/^static __inline void SVC4x4Add_TI ( short * RESTRICT  block, short *image,const int PicWidthInPix)$/;"	f
SVC4x4Store	SVC/lib_svc/ict_svc.h	/^static __inline void SVC4x4Store (short * RESTRICT  block, short *image,const int PicWidthInPix)$/;"	f
SVC8x8Add	SVC/lib_svc/ict_svc.h	/^static __inline void SVC8x8Add(short *block, short *image, const int PicWidthInPix){$/;"	f
SVC8x8Store	SVC/lib_svc/ict_svc.h	/^static __inline void SVC8x8Store(short *block, short *image, const int PicWidthInPix){$/;"	f
UpsamplinfFilterMb	SVC/lib_svc/macroblock_filter.c	/^void UpsamplinfFilterMb( unsigned char *image, unsigned char *image_Cb , unsigned char *image_Cr, const PPS *pps, $/;"	f
filter_mb_svc	SVC/lib_svc/macroblock_filter.c	/^void filter_mb_svc( unsigned char *image, unsigned char *image_Cb, unsigned char *image_Cr, SLICE *slice, PPS *pps, $/;"	f
MACRO_FILTER_H	SVC/lib_svc/macroblock_filter.h	36;"	d
edges_limit	SVC/lib_svc/mb_padding.c	/^void edges_limit(  const NAL *Nal, int AvailMask, short x_mbPartIdx, short y_mbPartIdx, unsigned char tmp_luma[], unsigned char base_luma[], $/;"	f
BottomBorder	SVC/lib_svc/mb_padding.h	48;"	d
ChromaBlockSize	SVC/lib_svc/mb_padding.h	42;"	d
ChromaStride	SVC/lib_svc/mb_padding.h	50;"	d
LeftBorder	SVC/lib_svc/mb_padding.h	45;"	d
LumaBlockSize	SVC/lib_svc/mb_padding.h	41;"	d
LumaStride	SVC/lib_svc/mb_padding.h	49;"	d
MB_PAD	SVC/lib_svc/mb_padding.h	35;"	d
RightBorder	SVC/lib_svc/mb_padding.h	46;"	d
TopBorder	SVC/lib_svc/mb_padding.h	47;"	d
add_clip_2d	SVC/lib_svc/mb_padding.h	/^static __inline void add_clip_2d(short y_size, short x_size, short src_width, short dst_width, short *src, unsigned char *dst){$/;"	f
copy_1d	SVC/lib_svc/mb_padding.h	/^static __inline void copy_1d(short y_size, short x_size, short src_width, short dst_width, short src_inc, unsigned char *src, unsigned char *dst){$/;"	f
copy_2d	SVC/lib_svc/mb_padding.h	/^static __inline void copy_2d(short y_size, short x_size, short src_width, short dst_width, unsigned char *src, unsigned char *dst){$/;"	f
merge	SVC/lib_svc/mb_padding.h	/^static __inline void merge(short ysize, short xsize, short PicWidthInPix, unsigned char pix[], unsigned char dst[], int corner, int stride, int add){$/;"	f
filter16	SVC/lib_svc/mb_upsample_filter.c	/^static const short filter16[16][4] = {{0,32,0,0},$/;"	v	file:
filter16_chroma	SVC/lib_svc/mb_upsample_filter.c	/^static const short filter16_chroma[16][2] = { \/\/ bilinear$/;"	v	file:
filter16_chroma_optim	SVC/lib_svc/mb_upsample_filter.c	/^static int filter16_chroma_optim[16]= {$/;"	v	file:
filter16_optim	SVC/lib_svc/mb_upsample_filter.c	/^static int filter16_optim[16][2] = {{0x00000020,0},$/;"	v	file:
upsample_mb_chroma	SVC/lib_svc/mb_upsample_filter.c	/^void upsample_mb_chroma(const SPS *sps,const NAL *Nal, unsigned char *Y, unsigned char *aio_tucImage, $/;"	f
upsample_mb_luninance	SVC/lib_svc/mb_upsample_filter.c	/^void upsample_mb_luninance(const SPS *sps, const NAL *Nal, unsigned char *Y, unsigned char *aio_tucImage, $/;"	f
MB_UP_FILTER_H	SVC/lib_svc/mb_upsample_filter.h	36;"	d
ShiftCalculation	SVC/lib_svc/mb_upsample_filter.h	/^static __inline short ShiftCalculation(int level_idc, short PicWidthInPix){$/;"	f
GetBaseBMvNonDiadic	SVC/lib_svc/motion_vector_svc.c	/^void GetBaseBMvNonDiadic(short mv_cache_l0 [][2], short mv_cache_l1 [][2], short ref_cache_l0 [], short ref_cache_l1 [], $/;"	f
SIGN	SVC/lib_svc/motion_vector_svc.c	45;"	d	file:
SvcSkipMotionVector	SVC/lib_svc/motion_vector_svc.c	/^short SvcSkipMotionVector(short mv_cache[][2], const short MvdLX[2], const short *ref_cache, short mvLX[2], int index8, int partwidth)$/;"	f
get_base_B_mv	SVC/lib_svc/motion_vector_svc.c	/^void get_base_B_mv(short mv_cache_l0 [][2], short mv_cache_l1 [][2], short ref_cache_l0 [], short ref_cache_l1 [], $/;"	f
get_base_P_dyadic	SVC/lib_svc/motion_vector_svc.c	/^void get_base_P_dyadic(short mv_cache [][2], short *ref_cache, unsigned char *DpbLuma, unsigned char *DpbCb, unsigned char *DpbCr, $/;"	f
get_base_P_non_dyadic	SVC/lib_svc/motion_vector_svc.c	/^void get_base_P_non_dyadic(short mv_cache [][2], short *ref_cache, unsigned char *DpbLuma, unsigned char *DpbCb, unsigned char *DpbCr, $/;"	f
MOTION_H	SVC/lib_svc/motion_vector_svc.h	37;"	d
GetNalBytesAuSVC	SVC/lib_svc/nal_unit_header_svc_extension.c	/^int GetNalBytesAuSVC (unsigned char *data, unsigned char *rbsp_byte, int *ReadNewByte, ConfigSVC *StreamType, $/;"	f
GetNalBytesInNalunit	SVC/lib_svc/nal_unit_header_svc_extension.c	/^int GetNalBytesInNalunit (unsigned char *data, unsigned char *rbsp_byte, int *NumBytesInRBSP, ConfigSVC *StreamType)$/;"	f
IsPicToDecode	SVC/lib_svc/nal_unit_header_svc_extension.c	/^void IsPicToDecode(NAL *Nal){$/;"	f
LOGE	SVC/lib_svc/nal_unit_header_svc_extension.c	53;"	d	file:
LOG_TAG	SVC/lib_svc/nal_unit_header_svc_extension.c	52;"	d	file:
NalUnitData	SVC/lib_svc/nal_unit_header_svc_extension.c	/^void NalUnitData(unsigned char *Data, int *position, NAL *Nal, int *EndOfSlice)$/;"	f
NalUnitHeader	SVC/lib_svc/nal_unit_header_svc_extension.c	/^void NalUnitHeader (unsigned char *Data, int *position, NAL *Nal, int *EndOfSlice)$/;"	f
NalUnitSVC	SVC/lib_svc/nal_unit_header_svc_extension.c	/^void NalUnitSVC(unsigned char *data_in, int *nal_unit_type, int *nal_ref_idc, NAL *Nal)$/;"	f
NextNalDqId	SVC/lib_svc/nal_unit_header_svc_extension.c	/^void NextNalDqId(ConfigSVC *StreamType, NAL *Nal)$/;"	f
NextNalDqIdPlayer	SVC/lib_svc/nal_unit_header_svc_extension.c	/^void NextNalDqIdPlayer(ConfigSVC *StreamType, NAL *Nal, int *CommandLayer)$/;"	f
PrefixNalUnit	SVC/lib_svc/nal_unit_header_svc_extension.c	/^void PrefixNalUnit(unsigned char *Data, int *NalInRbsp, NAL *Nal, MMO *Mmo, SPS *Sps, int *EndOfSlice)$/;"	f
RemoveEmulationBytes	SVC/lib_svc/nal_unit_header_svc_extension.c	/^int RemoveEmulationBytes(unsigned char *data, unsigned char *rbsp_byte, int *BytesRead)$/;"	f
SetPicToDisplay	SVC/lib_svc/nal_unit_header_svc_extension.c	/^void SetPicToDisplay(NAL *Nal)$/;"	f
SwapRbspBuffer	SVC/lib_svc/nal_unit_header_svc_extension.c	/^void SwapRbspBuffer(unsigned char *rbsp_byte, NALSTREAMER *NalStreamer)$/;"	f
UpdateTempTodisplay	SVC/lib_svc/nal_unit_header_svc_extension.c	/^void UpdateTempTodisplay(NAL *Nal)$/;"	f
init_nal_struct	SVC/lib_svc/nal_unit_header_svc_extension.c	/^void init_nal_struct(NAL *Nal, unsigned char MaxLayer){$/;"	f
NAL_UNIT_H	SVC/lib_svc/nal_unit_header_svc_extension.h	35;"	d
DecRefBasePicMarking	SVC/lib_svc/pic_list_svc.c	/^void DecRefBasePicMarking(unsigned char *data, int *position, MMO *Mmo, SPS *sps, NAL *Nal) {$/;"	f
SetDecRefLayer	SVC/lib_svc/pic_list_svc.c	/^void SetDecRefLayer(NAL *Nal, MMO *Mmo, LAYER_MMO *LayerMmo, int BaseDependency ) $/;"	f
PIC_LIST_SVC_H	SVC/lib_svc/pic_list_svc.h	35;"	d
AddRes4x4	SVC/lib_svc/residual_4x4.c	/^void AddRes4x4 ( short *image, const RESIDU *CurrResidu, const short PicWidthInPix, const short W4x4_inter [6][16])$/;"	f
SCoeff4x4AddPic	SVC/lib_svc/residual_4x4.c	/^void SCoeff4x4AddPic ( unsigned char *image, RESIDU *CurrResidu, const short PicWidthInPix)$/;"	f
SCoeff4x4AddRes	SVC/lib_svc/residual_4x4.c	/^void SCoeff4x4AddRes (short *image, RESIDU *CurrResidu, const short PicWidthInPix)$/;"	f
StoreRes4x4	SVC/lib_svc/residual_4x4.c	/^void StoreRes4x4 ( short *image, const RESIDU *CurrResidu,  const short PicWidthInPix, const short W4x4_inter [6][16])$/;"	f
RES_4x4_H	SVC/lib_svc/residual_4x4.h	35;"	d
AddRes8x8	SVC/lib_svc/residual_8x8.c	/^void AddRes8x8 ( short *image, const RESIDU *CurrResidu, const short PicWidthInPix, const short W8x8_inter [6][64])$/;"	f
SCoeff8x8AddPic	SVC/lib_svc/residual_8x8.c	/^void SCoeff8x8AddPic ( unsigned char *Y, const RESIDU *CurrResidu, const short PicWidthInPix)$/;"	f
SCoeff8x8AddRes	SVC/lib_svc/residual_8x8.c	/^void SCoeff8x8AddRes (short *image, const RESIDU *CurrResidu, const short PicWidthInPix)$/;"	f
SCoeffIntra8x8	SVC/lib_svc/residual_8x8.c	/^void SCoeffIntra8x8 ( unsigned char *Y, const RESIDU *CurrResidu, const short PicWidthInPix, const short W8x8_inter [6][64])$/;"	f
StoreRes8x8	SVC/lib_svc/residual_8x8.c	/^void StoreRes8x8 ( short *image, const RESIDU *CurrResidu, const short PicWidthInPix, const short W8x8_inter [6][64])$/;"	f
RES_8x8_H	SVC/lib_svc/residual_8x8.h	36;"	d
AddResChroma	SVC/lib_svc/residual_chroma.c	/^void AddResChroma (short *image_Cb, short *image_Cr, const RESIDU *CurrResidu, const PPS *Pps, const short PicWidthInPix, const W_TABLES *Quantif)$/;"	f
SCoeffChromaAddPic	SVC/lib_svc/residual_chroma.c	/^void SCoeffChromaAddPic (unsigned char *image_Cb, unsigned char *image_Cr, const RESIDU *CurrResidu, const short PicWidthInPix)$/;"	f
SCoeffChromaAddRes	SVC/lib_svc/residual_chroma.c	/^void SCoeffChromaAddRes (short *image_Cb, short *image_Cr, const RESIDU *CurrResidu, const short PicWidthInPix)$/;"	f
StoreResChroma	SVC/lib_svc/residual_chroma.c	/^void StoreResChroma (short *image_Cb, short *image_Cr, const RESIDU *CurrResidu, const PPS *Pps, const short PicWidthInPix, const W_TABLES *Quantif)$/;"	f
RESIDU_H	SVC/lib_svc/residual_chroma.h	36;"	d
seq_parameter_set_svc_extension	SVC/lib_svc/seq_parameter_set_svc_extension.c	/^void seq_parameter_set_svc_extension (unsigned char *data, int *position, SPS *sps_id)$/;"	f
subset_sps	SVC/lib_svc/seq_parameter_set_svc_extension.c	/^void subset_sps (unsigned char *data, int *NalInRbsp, SPS *sps, NAL *Nal)$/;"	f
svc_vui_parameters_extension	SVC/lib_svc/seq_parameter_set_svc_extension.c	/^void svc_vui_parameters_extension(unsigned char *data, int *position, SPS *sps_id ) {$/;"	f
GetLayerNumber	SVC/lib_svc/set_layer.h	/^static __inline int GetLayerNumber(NAL *Nal, int DQId){$/;"	f
SETLAYER_H	SVC/lib_svc/set_layer.h	36;"	d
SLICE_B_H	SVC/lib_svc/slice_data_B_svc.h	38;"	d
Decode_I_svc	SVC/lib_svc/slice_data_I_svc.c	/^void Decode_I_svc (const int size_Mb, const SPS *ai_pstSps, const PPS *ai_pstPps, const SLICE *Slice, $/;"	f
SLICE_I_H	SVC/lib_svc/slice_data_I_svc.h	35;"	d
Decode_P_svc	SVC/lib_svc/slice_data_P_svc.c	/^void Decode_P_svc ( const int size_Mb, const SPS *ai_pstSps, const PPS *ai_pstPps,const SLICE *Slice, const NAL *Nal, $/;"	f
SLICE_P_H	SVC/lib_svc/slice_data_P_svc.h	36;"	d
B_cabac	SVC/lib_svc/slice_data_cabac.c	/^unsigned char B_cabac ( RESIDU *picture_residu, unsigned char *data,int *NalBytesInNalunit, SPS *sps, PPS *pps, DATA *block, $/;"	f
P_cabac	SVC/lib_svc/slice_data_cabac.c	/^char P_cabac (RESIDU *picture_residu, unsigned char *data,int *NalBytesInNalunit, SPS *sps, PPS *pps, DATA *block, $/;"	f
slice_base_layer_cabac	SVC/lib_svc/slice_data_cabac.c	/^void slice_base_layer_cabac (unsigned char *data, int *NalBytesInNalunit, int *aio_piPosition, SPS *sps, PPS *pps, $/;"	f
B_cavlc	SVC/lib_svc/slice_data_cavlc.c	/^char B_cavlc ( const PPS *pps, RESIDU *picture_residu, const unsigned char *ai_pcData,  const int *ai_piNalBytesInNalunit, $/;"	f
P_cavlc	SVC/lib_svc/slice_data_cavlc.c	/^char P_cavlc(const PPS *pps, RESIDU *picture_residu, const unsigned char *ai_pcData, const int *ai_piNalBytesInNalunit, $/;"	f
slice_base_layer_cavlc	SVC/lib_svc/slice_data_cavlc.c	/^void slice_base_layer_cavlc ( unsigned char *ai_pcData, const int *ai_piNalBytesInNalunit, const int *aio_piPosition, const SPS *Sps, $/;"	f
CabacDecoderInitSVC	SVC/lib_svc/slice_data_svc.c	/^void CabacDecoderInitSVC(CABACContext *cabac, unsigned char *Data, const int *NalBytesInNalunit, int Pos, int slice_QP, int CabacContext[][2]){$/;"	f
SliceDataBCabacSvc	SVC/lib_svc/slice_data_svc.c	/^char SliceDataBCabacSvc(unsigned char *Data,  const int *NalBytesInNalunit, int Pos, const NAL *Nal, const SPS *Sps, $/;"	f
SliceDataICabacSvc	SVC/lib_svc/slice_data_svc.c	/^char SliceDataICabacSvc(unsigned char *Data,  const int *NalBytesInNalunit, int Pos, const NAL *Nal, const SPS *Sps, $/;"	f
SliceDataPCabacSvc	SVC/lib_svc/slice_data_svc.c	/^char SliceDataPCabacSvc(unsigned char *Data,  const int *NalBytesInNalunit, int Pos, const NAL *Nal, const SPS *Sps, $/;"	f
slice_data_cavlc_svc	SVC/lib_svc/slice_data_svc.c	/^char slice_data_cavlc_svc(const NAL *Nal, RESIDU *Current_residu, RESIDU *BaseResidu, const unsigned char *ai_pcData,  $/;"	f
SLICE_DATA_SVC_H	SVC/lib_svc/slice_data_svc.h	36;"	d
is_crop_in_window	SVC/lib_svc/slice_data_svc.h	/^static __inline unsigned char is_crop_in_window(const SPS *Sps, int iMb_x, int iMb_y ){$/;"	f
PacketDropInSlice	SVC/lib_svc/slice_header_svc.c	/^void PacketDropInSlice (SLICE *Slice, int *EndOfSlice){$/;"	f
slice_header_svc	SVC/lib_svc/slice_header_svc.c	/^int slice_header_svc(int NbLayers, unsigned char *data, SPS *sps_id, PPS *pps_id, int *entropy_coding_flag, $/;"	f
SkipSliceDecoding	SVC/lib_svc/slice_layer_in_scalable_extension_rbsp.c	/^void SkipSliceDecoding(NAL *Nal, const SPS *Sps, SLICE *Slice, RESIDU *CurrResidu, RESIDU *BaseResidu, $/;"	f
SkipSliceMacroInit	SVC/lib_svc/slice_layer_in_scalable_extension_rbsp.c	/^void SkipSliceMacroInit (RESIDU *CurrResidu, SLICE *Slice, int BaseMbType)$/;"	f
SliceCabac	SVC/lib_svc/slice_layer_in_scalable_extension_rbsp.c	/^void SliceCabac(const int size_mb, unsigned char *data, int *NalBytesInNalunit, int *position, NAL *Nal, const SPS *Sps, PPS *Pps, $/;"	f
slice_data_in_scalable_extension_cavlc	SVC/lib_svc/slice_layer_in_scalable_extension_rbsp.c	/^void slice_data_in_scalable_extension_cavlc ( const int size_mb, const unsigned char *Data, const int *NalBytesInNalunit, $/;"	f
BLK_4x4	SVC/lib_svc/svc_data.h	51;"	d
BLK_4x8	SVC/lib_svc/svc_data.h	52;"	d
BLK_8x4	SVC/lib_svc/svc_data.h	53;"	d
BLK_8x8	SVC/lib_svc/svc_data.h	54;"	d
EB	SVC/lib_svc/svc_data.h	40;"	d
EI	SVC/lib_svc/svc_data.h	41;"	d
EP	SVC/lib_svc/svc_data.h	39;"	d
IS_BL	SVC/lib_svc/svc_data.h	43;"	d
IS_B_L0	SVC/lib_svc/svc_data.h	48;"	d
IS_B_L1	SVC/lib_svc/svc_data.h	49;"	d
IS_B_SVC	SVC/lib_svc/svc_data.h	47;"	d
IS_INTER_BL	SVC/lib_svc/svc_data.h	44;"	d
IS_I_SVC	SVC/lib_svc/svc_data.h	45;"	d
IS_P_SVC	SVC/lib_svc/svc_data.h	46;"	d
MBLK_16x16	SVC/lib_svc/svc_data.h	57;"	d
MBLK_16x8	SVC/lib_svc/svc_data.h	58;"	d
MBLK_8x16	SVC/lib_svc/svc_data.h	59;"	d
MBLK_8x8	SVC/lib_svc/svc_data.h	60;"	d
MBLK_INTRA_4x4	SVC/lib_svc/svc_data.h	56;"	d
RESCALE_POSITION	SVC/lib_svc/svc_data.h	62;"	d
get_base_neighbourhood	SVC/lib_svc/svc_neighbourhood.c	/^void get_base_neighbourhood( short *Mask, short Addr, const short iAddr_x, const short PicWidthInMbs, $/;"	f
SVC_NEIGHBOUR_H	SVC/lib_svc/svc_neighbourhood.h	35;"	d
svc_neighbour_avail	SVC/lib_svc/svc_neighbourhood.h	/^static __inline int svc_neighbour_avail ( const int ai_iMbAddr, const int PicSizeInMbs)$/;"	f
B_sub_vectors	SVC/lib_svc/svc_type.h	/^	Sub_B_svc B_sub_vectors[13];$/;"	m	struct:__anon4
B_svc	SVC/lib_svc/svc_type.h	/^typedef void    (*B_svc)( short aio_tmv_cache_l0 [][2], short aio_tmv_cache_l1 [][2], short *aio_tref_cache_l0, short *aio_tref_cache_l1$/;"	t
B_vectors	SVC/lib_svc/svc_type.h	/^	B_svc	  B_vectors[5];$/;"	m	struct:__anon4
BaseLayerId	SVC/lib_svc/svc_type.h	/^	int BaseLayerId;			\/\/number of layer of the base nal$/;"	m	struct:__anon3
BaseMemoryAddress	SVC/lib_svc/svc_type.h	/^	int BaseMemoryAddress;			\/\/Memory address of the base layer$/;"	m	struct:__anon3
BaseMvMemoryAddress	SVC/lib_svc/svc_type.h	/^	int BaseMvMemoryAddress;		\/\/MV memory address of the base layer$/;"	m	struct:__anon3
ComDqId	SVC/lib_svc/svc_type.h	/^	unsigned char ComDqId;		\/\/Used to select the DqId to display$/;"	m	struct:__anon3
ComTempId	SVC/lib_svc/svc_type.h	/^	unsigned char ComTempId;	\/\/Used to select the temporal layer to display$/;"	m	struct:__anon3
ConfigSVC	SVC/lib_svc/svc_type.h	/^} ConfigSVC;$/;"	t	typeref:struct:__anon1
DependencyId	SVC/lib_svc/svc_type.h	/^	int DependencyId;$/;"	m	struct:__anon3
DependencyIdMax	SVC/lib_svc/svc_type.h	/^	int DependencyIdMax; \/\/Maximum dependency_Id found in the stream$/;"	m	struct:__anon3
DiscardableFlag	SVC/lib_svc/svc_type.h	/^	int DiscardableFlag;$/;"	m	struct:__anon3
DqId	SVC/lib_svc/svc_type.h	/^	int DqId;					 \/\/DqId of the current nal$/;"	m	struct:__anon3
DqIdMax	SVC/lib_svc/svc_type.h	/^	int DqIdMax;		 \/\/Maximum DqId found in the AU$/;"	m	struct:__anon3
DqIdMax	SVC/lib_svc/svc_type.h	/^	int DqIdMax;		\/\/Max DqId in the stream$/;"	m	struct:__anon1
DqIdToDisplay	SVC/lib_svc/svc_type.h	/^	int DqIdToDisplay;			 \/\/DqId of the nal to display$/;"	m	struct:__anon3
DqIdWanted	SVC/lib_svc/svc_type.h	/^	int DqIdWanted;				 \/\/DqId requested by the user$/;"	m	struct:__anon3
ErrorDetected	SVC/lib_svc/svc_type.h	/^	char ErrorDetected;$/;"	m	struct:__anon3
ErrorDetection	SVC/lib_svc/svc_type.h	/^	char ErrorDetection;$/;"	m	struct:__anon3
FlushRenderer	SVC/lib_svc/svc_type.h	/^	unsigned char FlushRenderer;$/;"	m	struct:__anon3
IdrFlag	SVC/lib_svc/svc_type.h	/^	int IdrFlag;$/;"	m	struct:__anon3
LastDecodedId	SVC/lib_svc/svc_type.h	/^	unsigned char LastDecodedId;\/\/Last decoded ID$/;"	m	struct:__anon3
LastDqId	SVC/lib_svc/svc_type.h	/^	int LastDqId;				 \/\/DqId of the last decoded nal$/;"	m	struct:__anon3
LastDqIdMax	SVC/lib_svc/svc_type.h	/^	int LastDqIdMax;	 \/\/Maximum DqId found in the previous AU$/;"	m	struct:__anon3
LastLayerId	SVC/lib_svc/svc_type.h	/^	int LastLayerId;			\/\/number of layer of the last decoded nal$/;"	m	struct:__anon3
LastMemoryAddress	SVC/lib_svc/svc_type.h	/^	int LastMemoryAddress;			\/\/Memory address of the frame decoded in the last nal$/;"	m	struct:__anon3
LastTemporalId	SVC/lib_svc/svc_type.h	/^	int LastTemporalId;			\/\/Temporal_id of the last decoded nal$/;"	m	struct:__anon3
LayerId	SVC/lib_svc/svc_type.h	/^	unsigned char LayerId;		\/\/number of layer of the current nal$/;"	m	struct:__anon3
LoopFilterForcedIdc	SVC/lib_svc/svc_type.h	/^	short LoopFilterForcedIdc;$/;"	m	struct:__anon3
LoopFilterSpatialScalability	SVC/lib_svc/svc_type.h	/^	short LoopFilterSpatialScalability; \/\/the same size for the common area (crop)$/;"	m	struct:__anon3
MaxNumLayer	SVC/lib_svc/svc_type.h	/^	char MaxNumLayer;	 \/\/Number of different layer allowed by the decoder$/;"	m	struct:__anon3
MaxTemporalId	SVC/lib_svc/svc_type.h	/^	int MaxTemporalId;   \/\/Maximum temporal_id found in the stream$/;"	m	struct:__anon3
MemoryAddress	SVC/lib_svc/svc_type.h	/^	int MemoryAddress;				\/\/Current frame memory address$/;"	m	struct:__anon3
MvCalx	SVC/lib_svc/svc_type.h	/^	int MvCalx[8];$/;"	m	struct:__anon3
MvCaly	SVC/lib_svc/svc_type.h	/^	int MvCaly[8];$/;"	m	struct:__anon3
MvIndex	SVC/lib_svc/svc_type.h	/^	int MvIndex;$/;"	m	struct:__anon2
MvMemoryAddress	SVC/lib_svc/svc_type.h	/^	int MvMemoryAddress;			\/\/Current frame Mv memory address$/;"	m	struct:__anon3
NAL	SVC/lib_svc/svc_type.h	/^}   NAL ;$/;"	t	typeref:struct:__anon3
NalRefIdc	SVC/lib_svc/svc_type.h	/^    int NalRefIdc;$/;"	m	struct:__anon3
NalToSkip	SVC/lib_svc/svc_type.h	/^	int NalToSkip;				 \/\/Nal have to be decoded. Used for temporal scalability 	$/;"	m	struct:__anon3
NalUnitType	SVC/lib_svc/svc_type.h	/^    int NalUnitType;$/;"	m	struct:__anon3
NbSlicesLayer	SVC/lib_svc/svc_type.h	/^	char NbSlicesLayer[8];$/;"	m	struct:__anon1
NbSlicesLayer	SVC/lib_svc/svc_type.h	/^	char NbSlicesLayer[8];$/;"	m	struct:__anon3
NextDqId	SVC/lib_svc/svc_type.h	/^	int NextDqId;		\/\/ Or Max$/;"	m	struct:__anon1
P_sub_vectors	SVC/lib_svc/svc_type.h	/^	Sub_P_svc P_sub_vectors[4];$/;"	m	struct:__anon4
P_svc	SVC/lib_svc/svc_type.h	/^typedef void    (*P_svc)( short mv_cache [][2], short *ref_cache, const RESIDU *CurrResidu, const DATA *Block, const Sub_P_svc decode_sub[]$/;"	t
P_vectors	SVC/lib_svc/svc_type.h	/^	P_svc	  P_vectors[5];$/;"	m	struct:__anon4
PartIdc	SVC/lib_svc/svc_type.h	/^	int PartIdc;$/;"	m	struct:__anon2
PicToDecode	SVC/lib_svc/svc_type.h	/^	int PicToDecode;			 \/\/Frame used for prediction. Several algorithms have to be done for upper layer.$/;"	m	struct:__anon3
PicToDisplay	SVC/lib_svc/svc_type.h	/^	int PicToDisplay;			 \/\/Frame have to be totally decoded (Motion ompensation, ...)$/;"	m	struct:__anon3
QualityId	SVC/lib_svc/svc_type.h	/^	int QualityId;$/;"	m	struct:__anon3
REFPART	SVC/lib_svc/svc_type.h	/^} REFPART;$/;"	t	typeref:struct:__anon2
RefIdc	SVC/lib_svc/svc_type.h	/^	short RefIdc;$/;"	m	struct:__anon2
RefIndex	SVC/lib_svc/svc_type.h	/^	int RefIndex;$/;"	m	struct:__anon2
SCoeffPrediction	SVC/lib_svc/svc_type.h	/^	short SCoeffPrediction;$/;"	m	struct:__anon3
SVC_TYPE_H	SVC/lib_svc/svc_type.h	37;"	d
SVC_VECTORS	SVC/lib_svc/svc_type.h	/^ }SVC_VECTORS;$/;"	t	typeref:struct:__anon4
SetLayer	SVC/lib_svc/svc_type.h	/^	int SetLayer;		\/\/DqID defined$/;"	m	struct:__anon1
SliceSkipFlag	SVC/lib_svc/svc_type.h	/^	short SliceSkipFlag;$/;"	m	struct:__anon3
SpatialScalability	SVC/lib_svc/svc_type.h	/^	short SpatialScalability; \/\/ difference of macroblock$/;"	m	struct:__anon3
SpatialScalabilityType	SVC/lib_svc/svc_type.h	/^	int SpatialScalabilityType;$/;"	m	struct:__anon3
StoreRefBasePicFlag	SVC/lib_svc/svc_type.h	/^	int StoreRefBasePicFlag;$/;"	m	struct:__anon3
Sub_B_svc	SVC/lib_svc/svc_type.h	/^typedef void    (*Sub_B_svc)( short aio_tmv_cache_l0 [][2], short aio_tmv_cache_l1 [][2], short *aio_tref_cache_l0,short *aio_tref_cache_l1	, const DATA *aio_pBlock$/;"	t
Sub_P_svc	SVC/lib_svc/svc_type.h	/^typedef void    (*Sub_P_svc)(short mv_cache [][2], short *ref_cache, const DATA *Block, int mbPartIdx, short *mv_l0, short *ref_bas_l0, const NAL *Nal, REFPART RefPartition[16]);$/;"	t
TCoeffPrediction	SVC/lib_svc/svc_type.h	/^	short TCoeffPrediction;$/;"	m	struct:__anon3
TempToDisplay	SVC/lib_svc/svc_type.h	/^	int TempToDisplay;			\/\/Temporal Id of the nal to display$/;"	m	struct:__anon3
TempWanted	SVC/lib_svc/svc_type.h	/^	int TempWanted;				\/\/Temporal Id requested by the user$/;"	m	struct:__anon3
TemporalCom	SVC/lib_svc/svc_type.h	/^	int TemporalCom;	\/\/Command to define what to do with Temporal Id; 0: nothing, 1: Temporal down, 2: Temporal up, 3: Specific temporal Id$/;"	m	struct:__anon1
TemporalId	SVC/lib_svc/svc_type.h	/^	int TemporalId;				\/\/Temporal Id of the current nal$/;"	m	struct:__anon3
TemporalId	SVC/lib_svc/svc_type.h	/^	int TemporalId;		\/\/TemporalId wanted (only used in case 3)$/;"	m	struct:__anon1
UseRefBasePicFlag	SVC/lib_svc/svc_type.h	/^    int UseRefBasePicFlag;$/;"	m	struct:__anon3
UsedSpatial	SVC/lib_svc/svc_type.h	/^	char UsedSpatial[8][8];$/;"	m	struct:__anon1
UsedSpatial	SVC/lib_svc/svc_type.h	/^	char UsedSpatial[8][8];$/;"	m	struct:__anon3
b8_stride	SVC/lib_svc/svc_type.h	/^	int b8_stride ;$/;"	m	struct:__anon3
b_stride	SVC/lib_svc/svc_type.h	/^	int b_stride ;$/;"	m	struct:__anon3
base_Height	SVC/lib_svc/svc_type.h	/^	short base_Height;$/;"	m	struct:__anon3
base_Width	SVC/lib_svc/svc_type.h	/^	short base_Width;$/;"	m	struct:__anon3
curr_Height	SVC/lib_svc/svc_type.h	/^	short curr_Height;$/;"	m	struct:__anon3
curr_Width	SVC/lib_svc/svc_type.h	/^	short curr_Width;$/;"	m	struct:__anon3
down_Height	SVC/lib_svc/svc_type.h	/^	short down_Height;$/;"	m	struct:__anon3
down_Width	SVC/lib_svc/svc_type.h	/^	short down_Width;$/;"	m	struct:__anon3
is_cropping	SVC/lib_svc/svc_type.h	/^	int is_cropping;$/;"	m	struct:__anon3
layer_base_flag	SVC/lib_svc/svc_type.h	/^    int layer_base_flag;$/;"	m	struct:__anon3
layer_id_table	SVC/lib_svc/svc_type.h	/^	char layer_id_table[8];$/;"	m	struct:__anon1
layer_id_table	SVC/lib_svc/svc_type.h	/^	char layer_id_table[8];$/;"	m	struct:__anon3
left_offset	SVC/lib_svc/svc_type.h	/^	int left_offset ;$/;"	m	struct:__anon3
no_inter_layer_pred_flag	SVC/lib_svc/svc_type.h	/^	int no_inter_layer_pred_flag;$/;"	m	struct:__anon3
non_diadic	SVC/lib_svc/svc_type.h	/^	int non_diadic;$/;"	m	struct:__anon3
pic_parameter_id	SVC/lib_svc/svc_type.h	/^	int pic_parameter_id[8];$/;"	m	struct:__anon3
top_offset	SVC/lib_svc/svc_type.h	/^	int top_offset;$/;"	m	struct:__anon3
up_Height	SVC/lib_svc/svc_type.h	/^	short up_Height;$/;"	m	struct:__anon3
up_Width	SVC/lib_svc/svc_type.h	/^	short up_Width;$/;"	m	struct:__anon3
ChromaHorizontalFilter	SVC/lib_svc/upsample_residu.c	/^void ChromaHorizontalFilter(short *x16, short *k16, short *xp16,short *yp16, const NAL *Nal, $/;"	f
ChromaVerticalFilter	SVC/lib_svc/upsample_residu.c	/^void ChromaVerticalFilter(short *y16, short *k16, short *yp16, const NAL *Nal, short *luma_tmp, short *luma_out){$/;"	f
LumaHorizontalFilter	SVC/lib_svc/upsample_residu.c	/^void LumaHorizontalFilter(short *x16, short *k16, short *xp16,short *yp16, const NAL *Nal, $/;"	f
LumaVerticalFilter	SVC/lib_svc/upsample_residu.c	/^void LumaVerticalFilter(short *y16, short *k16, short *xp16, short *yp16, const NAL *Nal, $/;"	f
Upsample_residu	SVC/lib_svc/upsample_residu.c	/^void Upsample_residu(const int layer_inc, short first_mb_in_slice, const NAL *Nal,const  SPS *sps_id, $/;"	f
UPSAMPLE_RES_H	SVC/lib_svc/upsample_residu.h	37;"	d
init_residu_luma_tab	SVC/lib_svc/upsample_residu.h	/^static __inline void init_residu_luma_tab(int curr_width, int Scale, int Add, int shift, int deltaX, short *x16, short *k16, short *p16){$/;"	f
update_bl4x4_mode	SVC/lib_svc/upsample_residu.h	/^static __inline void update_bl4x4_mode ( RESIDU *current_residu, RESIDU *base_residu, int x_mbPartIdx, int y_mbPartIdx, short *base_index){$/;"	f
ExtractPicture_C	SVC/libview/extract_picture.c	/^void ExtractPicture_C(int xsize, int ysize, int edge, int Crop, unsigned char img_luma_in[], unsigned char img_Cb_in[], $/;"	f
ExtractPicture_C	SVC/libview/extract_picture.c	46;"	d	file:
ExtractPicture_MMX	SVC/libview/extract_picture.c	/^void ExtractPicture_MMX(int xsize, int ysize, int edge, int Crop, unsigned char img_luma_in[], unsigned char img_Cb_in[], $/;"	f
ExtractPicture_MMX	SVC/libview/extract_picture.c	53;"	d	file:
ExtractPicture_SSE2	SVC/libview/extract_picture.c	/^void ExtractPicture_SSE2(int xsize, int ysize, int edge, int Crop, unsigned char img_luma_in[], unsigned char img_Cb_in[], $/;"	f
ExtractPicture_SSE2	SVC/libview/extract_picture.c	51;"	d	file:
OpenFile	SVC/libview/extract_picture.c	/^static int OpenFile = 0;$/;"	v	file:
WRITE_YUV_	SVC/libview/extract_picture.c	37;"	d	file:
WriteOutputVideo	SVC/libview/extract_picture.c	/^void WriteOutputVideo(int xsize, int ysize, unsigned char *img_luma_out, unsigned char *img_Cb_out, unsigned char *img_Cr_out)$/;"	f
extract_picture	SVC/libview/extract_picture.c	49;"	d	file:
extract_picture_preesm	SVC/libview/extract_picture.c	/^void extract_picture_preesm(int *xsize, int *ysize, int edge, int Crop, unsigned char img_luma_in[], unsigned char img_Cb_in[], $/;"	f
pf	SVC/libview/extract_picture.c	/^FILE *pf;$/;"	v
RGBYUV_LOC	SVC/yu2rgb_arm.s	/^RGBYUV_LOC: .long _RGBYUV$/;"	l
_mb_YUV420_to_RGB32	SVC/yu2rgb_arm.s	/^_mb_YUV420_to_RGB32:$/;"	l
exit	SVC/yu2rgb_arm.s	/^exit:$/;"	l
hloop	SVC/yu2rgb_arm.s	/^hloop:$/;"	l
vloop	SVC/yu2rgb_arm.s	/^vloop:$/;"	l
RGBYUV	SVC/yuv2rgb_tables.c	/^const int16_t __attribute__ ((aligned (4))) RGBYUV[768][4] = {$/;"	v
_RGBU	SVC/yuv2rgb_tables.c	36;"	d	file:
_RGBV	SVC/yuv2rgb_tables.c	43;"	d	file:
_RGBY	SVC/yuv2rgb_tables.c	29;"	d	file:
LOCAL_MODULE	android-ndk-profiler.mk	/^LOCAL_MODULE := andprof$/;"	m
LOCAL_SRC_FILES	android-ndk-profiler.mk	/^LOCAL_SRC_FILES := $(TARGET_ARCH_ABI)\/libandprof.a$/;"	m
TARGET_CFLAGS	android-ndk-profiler.mk	/^TARGET_CFLAGS := $(filter-out -ffunction-sections,$(TARGET_CFLAGS))$/;"	m
TARGET_arm_release_CFLAGS	android-ndk-profiler.mk	/^TARGET_arm_release_CFLAGS := $(filter-out -ffunction-sections,$(TARGET_arm_release_CFLAGS))$/;"	m
TARGET_arm_release_CFLAGS	android-ndk-profiler.mk	/^TARGET_arm_release_CFLAGS := $(filter-out -fomit-frame-pointer,$(TARGET_arm_release_CFLAGS))$/;"	m
TARGET_thumb_release_CFLAGS	android-ndk-profiler.mk	/^TARGET_thumb_release_CFLAGS := $(filter-out -ffunction-sections,$(TARGET_thumb_release_CFLAGS))$/;"	m
TARGET_thumb_release_CFLAGS	android-ndk-profiler.mk	/^TARGET_thumb_release_CFLAGS := $(filter-out -fomit-frame-pointer,$(TARGET_thumb_release_CFLAGS))$/;"	m
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
ACCSymbolLookupFn	include/acc/acc.h	/^typedef ACCvoid* (*ACCSymbolLookupFn)(ACCvoid* pContext, const ACCchar * name);$/;"	t
ACC_COMPILE_STATUS	include/acc/acc.h	37;"	d
ACC_INFO_LOG_LENGTH	include/acc/acc.h	38;"	d
ACC_INVALID_ENUM	include/acc/acc.h	32;"	d
ACC_INVALID_OPERATION	include/acc/acc.h	33;"	d
ACC_INVALID_VALUE	include/acc/acc.h	34;"	d
ACC_NO_ERROR	include/acc/acc.h	31;"	d
ACC_OUT_OF_MEMORY	include/acc/acc.h	35;"	d
ACCchar	include/acc/acc.h	/^typedef char                        ACCchar;$/;"	t
ACCenum	include/acc/acc.h	/^typedef unsigned int                ACCenum;$/;"	t
ACCint	include/acc/acc.h	/^typedef int32_t                     ACCint;$/;"	t
ACCscript	include/acc/acc.h	/^typedef struct ACCscript            ACCscript;$/;"	t	typeref:struct:ACCscript
ACCsizei	include/acc/acc.h	/^typedef ssize_t                     ACCsizei;$/;"	t
ACCuint	include/acc/acc.h	/^typedef uint32_t                    ACCuint;$/;"	t
ACCvoid	include/acc/acc.h	/^typedef void                        ACCvoid;$/;"	t
ANDROID_ACC_ACC_H	include/acc/acc.h	18;"	d
AASSET_MODE_BUFFER	include/android/asset_manager.h	/^    AASSET_MODE_BUFFER       = 3$/;"	e	enum:__anon104
AASSET_MODE_RANDOM	include/android/asset_manager.h	/^    AASSET_MODE_RANDOM       = 1,$/;"	e	enum:__anon104
AASSET_MODE_STREAMING	include/android/asset_manager.h	/^    AASSET_MODE_STREAMING    = 2,$/;"	e	enum:__anon104
AASSET_MODE_UNKNOWN	include/android/asset_manager.h	/^    AASSET_MODE_UNKNOWN      = 0,$/;"	e	enum:__anon104
AAsset	include/android/asset_manager.h	/^typedef struct AAsset AAsset;$/;"	t	typeref:struct:AAsset
AAssetDir	include/android/asset_manager.h	/^typedef struct AAssetDir AAssetDir;$/;"	t	typeref:struct:AAssetDir
AAssetManager	include/android/asset_manager.h	/^typedef struct AAssetManager AAssetManager;$/;"	t	typeref:struct:AAssetManager
ANDROID_ASSET_MANAGER_H	include/android/asset_manager.h	19;"	d
ANDROID_ASSET_MANAGER_JNI_H	include/android/asset_manager_jni.h	19;"	d
ANDROID_BITMAP_FORMAT_A_8	include/android/bitmap.h	/^    ANDROID_BITMAP_FORMAT_A_8       = 8,$/;"	e	enum:AndroidBitmapFormat
ANDROID_BITMAP_FORMAT_NONE	include/android/bitmap.h	/^    ANDROID_BITMAP_FORMAT_NONE      = 0,$/;"	e	enum:AndroidBitmapFormat
ANDROID_BITMAP_FORMAT_RGBA_4444	include/android/bitmap.h	/^    ANDROID_BITMAP_FORMAT_RGBA_4444 = 7,$/;"	e	enum:AndroidBitmapFormat
ANDROID_BITMAP_FORMAT_RGBA_8888	include/android/bitmap.h	/^    ANDROID_BITMAP_FORMAT_RGBA_8888 = 1,$/;"	e	enum:AndroidBitmapFormat
ANDROID_BITMAP_FORMAT_RGB_565	include/android/bitmap.h	/^    ANDROID_BITMAP_FORMAT_RGB_565   = 4,$/;"	e	enum:AndroidBitmapFormat
ANDROID_BITMAP_H	include/android/bitmap.h	18;"	d
ANDROID_BITMAP_RESULT_ALLOCATION_FAILED	include/android/bitmap.h	30;"	d
ANDROID_BITMAP_RESULT_BAD_PARAMETER	include/android/bitmap.h	28;"	d
ANDROID_BITMAP_RESULT_JNI_EXCEPTION	include/android/bitmap.h	29;"	d
ANDROID_BITMAP_RESUT_SUCCESS	include/android/bitmap.h	27;"	d
AndroidBitmapFormat	include/android/bitmap.h	/^enum AndroidBitmapFormat {$/;"	g
AndroidBitmapInfo	include/android/bitmap.h	/^} AndroidBitmapInfo;$/;"	t	typeref:struct:__anon92
flags	include/android/bitmap.h	/^    uint32_t    flags;      \/\/ 0 for now$/;"	m	struct:__anon92
format	include/android/bitmap.h	/^    int32_t     format;$/;"	m	struct:__anon92
height	include/android/bitmap.h	/^    uint32_t    height;$/;"	m	struct:__anon92
stride	include/android/bitmap.h	/^    uint32_t    stride;$/;"	m	struct:__anon92
width	include/android/bitmap.h	/^    uint32_t    width;$/;"	m	struct:__anon92
ACONFIGURATION_DENSITY	include/android/configuration.h	/^    ACONFIGURATION_DENSITY = 0x0100,$/;"	e	enum:__anon106
ACONFIGURATION_DENSITY_DEFAULT	include/android/configuration.h	/^    ACONFIGURATION_DENSITY_DEFAULT = 0,$/;"	e	enum:__anon106
ACONFIGURATION_DENSITY_HIGH	include/android/configuration.h	/^    ACONFIGURATION_DENSITY_HIGH = 240,$/;"	e	enum:__anon106
ACONFIGURATION_DENSITY_LOW	include/android/configuration.h	/^    ACONFIGURATION_DENSITY_LOW = 120,$/;"	e	enum:__anon106
ACONFIGURATION_DENSITY_MEDIUM	include/android/configuration.h	/^    ACONFIGURATION_DENSITY_MEDIUM = 160,$/;"	e	enum:__anon106
ACONFIGURATION_DENSITY_NONE	include/android/configuration.h	/^    ACONFIGURATION_DENSITY_NONE = 0xffff,$/;"	e	enum:__anon106
ACONFIGURATION_KEYBOARD	include/android/configuration.h	/^    ACONFIGURATION_KEYBOARD = 0x0010,$/;"	e	enum:__anon106
ACONFIGURATION_KEYBOARD_12KEY	include/android/configuration.h	/^    ACONFIGURATION_KEYBOARD_12KEY  = 0x0003,$/;"	e	enum:__anon106
ACONFIGURATION_KEYBOARD_ANY	include/android/configuration.h	/^    ACONFIGURATION_KEYBOARD_ANY  = 0x0000,$/;"	e	enum:__anon106
ACONFIGURATION_KEYBOARD_HIDDEN	include/android/configuration.h	/^    ACONFIGURATION_KEYBOARD_HIDDEN = 0x0020,$/;"	e	enum:__anon106
ACONFIGURATION_KEYBOARD_NOKEYS	include/android/configuration.h	/^    ACONFIGURATION_KEYBOARD_NOKEYS  = 0x0001,$/;"	e	enum:__anon106
ACONFIGURATION_KEYBOARD_QWERTY	include/android/configuration.h	/^    ACONFIGURATION_KEYBOARD_QWERTY  = 0x0002,$/;"	e	enum:__anon106
ACONFIGURATION_KEYSHIDDEN_ANY	include/android/configuration.h	/^    ACONFIGURATION_KEYSHIDDEN_ANY = 0x0000,$/;"	e	enum:__anon106
ACONFIGURATION_KEYSHIDDEN_NO	include/android/configuration.h	/^    ACONFIGURATION_KEYSHIDDEN_NO = 0x0001,$/;"	e	enum:__anon106
ACONFIGURATION_KEYSHIDDEN_SOFT	include/android/configuration.h	/^    ACONFIGURATION_KEYSHIDDEN_SOFT = 0x0003,$/;"	e	enum:__anon106
ACONFIGURATION_KEYSHIDDEN_YES	include/android/configuration.h	/^    ACONFIGURATION_KEYSHIDDEN_YES = 0x0002,$/;"	e	enum:__anon106
ACONFIGURATION_LOCALE	include/android/configuration.h	/^    ACONFIGURATION_LOCALE = 0x0004,$/;"	e	enum:__anon106
ACONFIGURATION_MCC	include/android/configuration.h	/^    ACONFIGURATION_MCC = 0x0001,$/;"	e	enum:__anon106
ACONFIGURATION_MNC	include/android/configuration.h	/^    ACONFIGURATION_MNC = 0x0002,$/;"	e	enum:__anon106
ACONFIGURATION_NAVHIDDEN_ANY	include/android/configuration.h	/^    ACONFIGURATION_NAVHIDDEN_ANY = 0x0000,$/;"	e	enum:__anon106
ACONFIGURATION_NAVHIDDEN_NO	include/android/configuration.h	/^    ACONFIGURATION_NAVHIDDEN_NO = 0x0001,$/;"	e	enum:__anon106
ACONFIGURATION_NAVHIDDEN_YES	include/android/configuration.h	/^    ACONFIGURATION_NAVHIDDEN_YES = 0x0002,$/;"	e	enum:__anon106
ACONFIGURATION_NAVIGATION	include/android/configuration.h	/^    ACONFIGURATION_NAVIGATION = 0x0040,$/;"	e	enum:__anon106
ACONFIGURATION_NAVIGATION_ANY	include/android/configuration.h	/^    ACONFIGURATION_NAVIGATION_ANY  = 0x0000,$/;"	e	enum:__anon106
ACONFIGURATION_NAVIGATION_DPAD	include/android/configuration.h	/^    ACONFIGURATION_NAVIGATION_DPAD  = 0x0002,$/;"	e	enum:__anon106
ACONFIGURATION_NAVIGATION_NONAV	include/android/configuration.h	/^    ACONFIGURATION_NAVIGATION_NONAV  = 0x0001,$/;"	e	enum:__anon106
ACONFIGURATION_NAVIGATION_TRACKBALL	include/android/configuration.h	/^    ACONFIGURATION_NAVIGATION_TRACKBALL  = 0x0003,$/;"	e	enum:__anon106
ACONFIGURATION_NAVIGATION_WHEEL	include/android/configuration.h	/^    ACONFIGURATION_NAVIGATION_WHEEL  = 0x0004,$/;"	e	enum:__anon106
ACONFIGURATION_ORIENTATION	include/android/configuration.h	/^    ACONFIGURATION_ORIENTATION = 0x0080,$/;"	e	enum:__anon106
ACONFIGURATION_ORIENTATION_ANY	include/android/configuration.h	/^    ACONFIGURATION_ORIENTATION_ANY  = 0x0000,$/;"	e	enum:__anon106
ACONFIGURATION_ORIENTATION_LAND	include/android/configuration.h	/^    ACONFIGURATION_ORIENTATION_LAND = 0x0002,$/;"	e	enum:__anon106
ACONFIGURATION_ORIENTATION_PORT	include/android/configuration.h	/^    ACONFIGURATION_ORIENTATION_PORT = 0x0001,$/;"	e	enum:__anon106
ACONFIGURATION_ORIENTATION_SQUARE	include/android/configuration.h	/^    ACONFIGURATION_ORIENTATION_SQUARE = 0x0003,$/;"	e	enum:__anon106
ACONFIGURATION_SCREENLONG_ANY	include/android/configuration.h	/^    ACONFIGURATION_SCREENLONG_ANY = 0x00,$/;"	e	enum:__anon106
ACONFIGURATION_SCREENLONG_NO	include/android/configuration.h	/^    ACONFIGURATION_SCREENLONG_NO = 0x1,$/;"	e	enum:__anon106
ACONFIGURATION_SCREENLONG_YES	include/android/configuration.h	/^    ACONFIGURATION_SCREENLONG_YES = 0x2,$/;"	e	enum:__anon106
ACONFIGURATION_SCREENSIZE_ANY	include/android/configuration.h	/^    ACONFIGURATION_SCREENSIZE_ANY  = 0x00,$/;"	e	enum:__anon106
ACONFIGURATION_SCREENSIZE_LARGE	include/android/configuration.h	/^    ACONFIGURATION_SCREENSIZE_LARGE = 0x03,$/;"	e	enum:__anon106
ACONFIGURATION_SCREENSIZE_NORMAL	include/android/configuration.h	/^    ACONFIGURATION_SCREENSIZE_NORMAL = 0x02,$/;"	e	enum:__anon106
ACONFIGURATION_SCREENSIZE_SMALL	include/android/configuration.h	/^    ACONFIGURATION_SCREENSIZE_SMALL = 0x01,$/;"	e	enum:__anon106
ACONFIGURATION_SCREENSIZE_XLARGE	include/android/configuration.h	/^    ACONFIGURATION_SCREENSIZE_XLARGE = 0x04,$/;"	e	enum:__anon106
ACONFIGURATION_SCREEN_LAYOUT	include/android/configuration.h	/^    ACONFIGURATION_SCREEN_LAYOUT = 0x0800,$/;"	e	enum:__anon106
ACONFIGURATION_SCREEN_SIZE	include/android/configuration.h	/^    ACONFIGURATION_SCREEN_SIZE = 0x0200,$/;"	e	enum:__anon106
ACONFIGURATION_TOUCHSCREEN	include/android/configuration.h	/^    ACONFIGURATION_TOUCHSCREEN = 0x0008,$/;"	e	enum:__anon106
ACONFIGURATION_TOUCHSCREEN_ANY	include/android/configuration.h	/^    ACONFIGURATION_TOUCHSCREEN_ANY  = 0x0000,$/;"	e	enum:__anon106
ACONFIGURATION_TOUCHSCREEN_FINGER	include/android/configuration.h	/^    ACONFIGURATION_TOUCHSCREEN_FINGER  = 0x0003,$/;"	e	enum:__anon106
ACONFIGURATION_TOUCHSCREEN_NOTOUCH	include/android/configuration.h	/^    ACONFIGURATION_TOUCHSCREEN_NOTOUCH  = 0x0001,$/;"	e	enum:__anon106
ACONFIGURATION_TOUCHSCREEN_STYLUS	include/android/configuration.h	/^    ACONFIGURATION_TOUCHSCREEN_STYLUS  = 0x0002,$/;"	e	enum:__anon106
ACONFIGURATION_UI_MODE	include/android/configuration.h	/^    ACONFIGURATION_UI_MODE = 0x1000,$/;"	e	enum:__anon106
ACONFIGURATION_UI_MODE_NIGHT_ANY	include/android/configuration.h	/^    ACONFIGURATION_UI_MODE_NIGHT_ANY = 0x00,$/;"	e	enum:__anon106
ACONFIGURATION_UI_MODE_NIGHT_NO	include/android/configuration.h	/^    ACONFIGURATION_UI_MODE_NIGHT_NO = 0x1,$/;"	e	enum:__anon106
ACONFIGURATION_UI_MODE_NIGHT_YES	include/android/configuration.h	/^    ACONFIGURATION_UI_MODE_NIGHT_YES = 0x2,$/;"	e	enum:__anon106
ACONFIGURATION_UI_MODE_TYPE_ANY	include/android/configuration.h	/^    ACONFIGURATION_UI_MODE_TYPE_ANY = 0x00,$/;"	e	enum:__anon106
ACONFIGURATION_UI_MODE_TYPE_CAR	include/android/configuration.h	/^    ACONFIGURATION_UI_MODE_TYPE_CAR = 0x03,$/;"	e	enum:__anon106
ACONFIGURATION_UI_MODE_TYPE_DESK	include/android/configuration.h	/^    ACONFIGURATION_UI_MODE_TYPE_DESK = 0x02,$/;"	e	enum:__anon106
ACONFIGURATION_UI_MODE_TYPE_NORMAL	include/android/configuration.h	/^    ACONFIGURATION_UI_MODE_TYPE_NORMAL = 0x01,$/;"	e	enum:__anon106
ACONFIGURATION_VERSION	include/android/configuration.h	/^    ACONFIGURATION_VERSION = 0x0400,$/;"	e	enum:__anon106
AConfiguration	include/android/configuration.h	/^typedef struct AConfiguration AConfiguration;$/;"	t	typeref:struct:AConfiguration
ANDROID_CONFIGURATION_H	include/android/configuration.h	18;"	d
AINPUT_EVENT_TYPE_KEY	include/android/input.h	/^    AINPUT_EVENT_TYPE_KEY = 1,$/;"	e	enum:__anon111
AINPUT_EVENT_TYPE_MOTION	include/android/input.h	/^    AINPUT_EVENT_TYPE_MOTION = 2$/;"	e	enum:__anon111
AINPUT_KEYBOARD_TYPE_ALPHABETIC	include/android/input.h	/^    AINPUT_KEYBOARD_TYPE_ALPHABETIC = 2,$/;"	e	enum:__anon119
AINPUT_KEYBOARD_TYPE_NONE	include/android/input.h	/^    AINPUT_KEYBOARD_TYPE_NONE = 0,$/;"	e	enum:__anon119
AINPUT_KEYBOARD_TYPE_NON_ALPHABETIC	include/android/input.h	/^    AINPUT_KEYBOARD_TYPE_NON_ALPHABETIC = 1,$/;"	e	enum:__anon119
AINPUT_MOTION_RANGE_ORIENTATION	include/android/input.h	/^    AINPUT_MOTION_RANGE_ORIENTATION = 8,$/;"	e	enum:__anon120
AINPUT_MOTION_RANGE_PRESSURE	include/android/input.h	/^    AINPUT_MOTION_RANGE_PRESSURE = 2,$/;"	e	enum:__anon120
AINPUT_MOTION_RANGE_SIZE	include/android/input.h	/^    AINPUT_MOTION_RANGE_SIZE = 3,$/;"	e	enum:__anon120
AINPUT_MOTION_RANGE_TOOL_MAJOR	include/android/input.h	/^    AINPUT_MOTION_RANGE_TOOL_MAJOR = 6,$/;"	e	enum:__anon120
AINPUT_MOTION_RANGE_TOOL_MINOR	include/android/input.h	/^    AINPUT_MOTION_RANGE_TOOL_MINOR = 7,$/;"	e	enum:__anon120
AINPUT_MOTION_RANGE_TOUCH_MAJOR	include/android/input.h	/^    AINPUT_MOTION_RANGE_TOUCH_MAJOR = 4,$/;"	e	enum:__anon120
AINPUT_MOTION_RANGE_TOUCH_MINOR	include/android/input.h	/^    AINPUT_MOTION_RANGE_TOUCH_MINOR = 5,$/;"	e	enum:__anon120
AINPUT_MOTION_RANGE_X	include/android/input.h	/^    AINPUT_MOTION_RANGE_X = 0,$/;"	e	enum:__anon120
AINPUT_MOTION_RANGE_Y	include/android/input.h	/^    AINPUT_MOTION_RANGE_Y = 1,$/;"	e	enum:__anon120
AINPUT_SOURCE_ANY	include/android/input.h	/^    AINPUT_SOURCE_ANY = 0xffffff00,$/;"	e	enum:__anon118
AINPUT_SOURCE_CLASS_BUTTON	include/android/input.h	/^    AINPUT_SOURCE_CLASS_BUTTON = 0x00000001,$/;"	e	enum:__anon117
AINPUT_SOURCE_CLASS_MASK	include/android/input.h	/^    AINPUT_SOURCE_CLASS_MASK = 0x000000ff,$/;"	e	enum:__anon117
AINPUT_SOURCE_CLASS_NAVIGATION	include/android/input.h	/^    AINPUT_SOURCE_CLASS_NAVIGATION = 0x00000004,$/;"	e	enum:__anon117
AINPUT_SOURCE_CLASS_POINTER	include/android/input.h	/^    AINPUT_SOURCE_CLASS_POINTER = 0x00000002,$/;"	e	enum:__anon117
AINPUT_SOURCE_CLASS_POSITION	include/android/input.h	/^    AINPUT_SOURCE_CLASS_POSITION = 0x00000008,$/;"	e	enum:__anon117
AINPUT_SOURCE_DPAD	include/android/input.h	/^    AINPUT_SOURCE_DPAD = 0x00000200 | AINPUT_SOURCE_CLASS_BUTTON,$/;"	e	enum:__anon118
AINPUT_SOURCE_KEYBOARD	include/android/input.h	/^    AINPUT_SOURCE_KEYBOARD = 0x00000100 | AINPUT_SOURCE_CLASS_BUTTON,$/;"	e	enum:__anon118
AINPUT_SOURCE_MOUSE	include/android/input.h	/^    AINPUT_SOURCE_MOUSE = 0x00002000 | AINPUT_SOURCE_CLASS_POINTER,$/;"	e	enum:__anon118
AINPUT_SOURCE_TOUCHPAD	include/android/input.h	/^    AINPUT_SOURCE_TOUCHPAD = 0x00100000 | AINPUT_SOURCE_CLASS_POSITION,$/;"	e	enum:__anon118
AINPUT_SOURCE_TOUCHSCREEN	include/android/input.h	/^    AINPUT_SOURCE_TOUCHSCREEN = 0x00001000 | AINPUT_SOURCE_CLASS_POINTER,$/;"	e	enum:__anon118
AINPUT_SOURCE_TRACKBALL	include/android/input.h	/^    AINPUT_SOURCE_TRACKBALL = 0x00010000 | AINPUT_SOURCE_CLASS_NAVIGATION,$/;"	e	enum:__anon118
AINPUT_SOURCE_UNKNOWN	include/android/input.h	/^    AINPUT_SOURCE_UNKNOWN = 0x00000000,$/;"	e	enum:__anon118
AInputEvent	include/android/input.h	/^typedef struct AInputEvent AInputEvent;$/;"	t	typeref:struct:AInputEvent
AInputQueue	include/android/input.h	/^typedef struct AInputQueue AInputQueue;$/;"	t	typeref:struct:AInputQueue
AKEY_EVENT_ACTION_DOWN	include/android/input.h	/^    AKEY_EVENT_ACTION_DOWN = 0,$/;"	e	enum:__anon112
AKEY_EVENT_ACTION_MULTIPLE	include/android/input.h	/^    AKEY_EVENT_ACTION_MULTIPLE = 2$/;"	e	enum:__anon112
AKEY_EVENT_ACTION_UP	include/android/input.h	/^    AKEY_EVENT_ACTION_UP = 1,$/;"	e	enum:__anon112
AKEY_EVENT_FLAG_CANCELED	include/android/input.h	/^    AKEY_EVENT_FLAG_CANCELED = 0x20,$/;"	e	enum:__anon113
AKEY_EVENT_FLAG_CANCELED_LONG_PRESS	include/android/input.h	/^    AKEY_EVENT_FLAG_CANCELED_LONG_PRESS = 0x100,$/;"	e	enum:__anon113
AKEY_EVENT_FLAG_EDITOR_ACTION	include/android/input.h	/^    AKEY_EVENT_FLAG_EDITOR_ACTION = 0x10,$/;"	e	enum:__anon113
AKEY_EVENT_FLAG_FROM_SYSTEM	include/android/input.h	/^    AKEY_EVENT_FLAG_FROM_SYSTEM = 0x8,$/;"	e	enum:__anon113
AKEY_EVENT_FLAG_KEEP_TOUCH_MODE	include/android/input.h	/^    AKEY_EVENT_FLAG_KEEP_TOUCH_MODE = 0x4,$/;"	e	enum:__anon113
AKEY_EVENT_FLAG_LONG_PRESS	include/android/input.h	/^    AKEY_EVENT_FLAG_LONG_PRESS = 0x80,$/;"	e	enum:__anon113
AKEY_EVENT_FLAG_SOFT_KEYBOARD	include/android/input.h	/^    AKEY_EVENT_FLAG_SOFT_KEYBOARD = 0x2,$/;"	e	enum:__anon113
AKEY_EVENT_FLAG_TRACKING	include/android/input.h	/^    AKEY_EVENT_FLAG_TRACKING = 0x200$/;"	e	enum:__anon113
AKEY_EVENT_FLAG_VIRTUAL_HARD_KEY	include/android/input.h	/^    AKEY_EVENT_FLAG_VIRTUAL_HARD_KEY = 0x40,$/;"	e	enum:__anon113
AKEY_EVENT_FLAG_WOKE_HERE	include/android/input.h	/^    AKEY_EVENT_FLAG_WOKE_HERE = 0x1,$/;"	e	enum:__anon113
AKEY_STATE_DOWN	include/android/input.h	/^    AKEY_STATE_DOWN = 1,$/;"	e	enum:__anon109
AKEY_STATE_UNKNOWN	include/android/input.h	/^    AKEY_STATE_UNKNOWN = -1,$/;"	e	enum:__anon109
AKEY_STATE_UP	include/android/input.h	/^    AKEY_STATE_UP = 0,$/;"	e	enum:__anon109
AKEY_STATE_VIRTUAL	include/android/input.h	/^    AKEY_STATE_VIRTUAL = 2$/;"	e	enum:__anon109
AMETA_ALT_LEFT_ON	include/android/input.h	/^    AMETA_ALT_LEFT_ON = 0x10,$/;"	e	enum:__anon110
AMETA_ALT_ON	include/android/input.h	/^    AMETA_ALT_ON = 0x02,$/;"	e	enum:__anon110
AMETA_ALT_RIGHT_ON	include/android/input.h	/^    AMETA_ALT_RIGHT_ON = 0x20,$/;"	e	enum:__anon110
AMETA_NONE	include/android/input.h	/^    AMETA_NONE = 0,$/;"	e	enum:__anon110
AMETA_SHIFT_LEFT_ON	include/android/input.h	/^    AMETA_SHIFT_LEFT_ON = 0x40,$/;"	e	enum:__anon110
AMETA_SHIFT_ON	include/android/input.h	/^    AMETA_SHIFT_ON = 0x01,$/;"	e	enum:__anon110
AMETA_SHIFT_RIGHT_ON	include/android/input.h	/^    AMETA_SHIFT_RIGHT_ON = 0x80,$/;"	e	enum:__anon110
AMETA_SYM_ON	include/android/input.h	/^    AMETA_SYM_ON = 0x04$/;"	e	enum:__anon110
AMOTION_EVENT_ACTION_CANCEL	include/android/input.h	/^    AMOTION_EVENT_ACTION_CANCEL = 3,$/;"	e	enum:__anon114
AMOTION_EVENT_ACTION_DOWN	include/android/input.h	/^    AMOTION_EVENT_ACTION_DOWN = 0,$/;"	e	enum:__anon114
AMOTION_EVENT_ACTION_MASK	include/android/input.h	/^    AMOTION_EVENT_ACTION_MASK = 0xff,$/;"	e	enum:__anon114
AMOTION_EVENT_ACTION_MOVE	include/android/input.h	/^    AMOTION_EVENT_ACTION_MOVE = 2,$/;"	e	enum:__anon114
AMOTION_EVENT_ACTION_OUTSIDE	include/android/input.h	/^    AMOTION_EVENT_ACTION_OUTSIDE = 4,$/;"	e	enum:__anon114
AMOTION_EVENT_ACTION_POINTER_DOWN	include/android/input.h	/^    AMOTION_EVENT_ACTION_POINTER_DOWN = 5,$/;"	e	enum:__anon114
AMOTION_EVENT_ACTION_POINTER_INDEX_MASK	include/android/input.h	/^    AMOTION_EVENT_ACTION_POINTER_INDEX_MASK  = 0xff00,$/;"	e	enum:__anon114
AMOTION_EVENT_ACTION_POINTER_INDEX_SHIFT	include/android/input.h	198;"	d
AMOTION_EVENT_ACTION_POINTER_UP	include/android/input.h	/^    AMOTION_EVENT_ACTION_POINTER_UP = 6$/;"	e	enum:__anon114
AMOTION_EVENT_ACTION_UP	include/android/input.h	/^    AMOTION_EVENT_ACTION_UP = 1,$/;"	e	enum:__anon114
AMOTION_EVENT_EDGE_FLAG_BOTTOM	include/android/input.h	/^    AMOTION_EVENT_EDGE_FLAG_BOTTOM = 0x02,$/;"	e	enum:__anon116
AMOTION_EVENT_EDGE_FLAG_LEFT	include/android/input.h	/^    AMOTION_EVENT_EDGE_FLAG_LEFT = 0x04,$/;"	e	enum:__anon116
AMOTION_EVENT_EDGE_FLAG_NONE	include/android/input.h	/^    AMOTION_EVENT_EDGE_FLAG_NONE = 0,$/;"	e	enum:__anon116
AMOTION_EVENT_EDGE_FLAG_RIGHT	include/android/input.h	/^    AMOTION_EVENT_EDGE_FLAG_RIGHT = 0x08$/;"	e	enum:__anon116
AMOTION_EVENT_EDGE_FLAG_TOP	include/android/input.h	/^    AMOTION_EVENT_EDGE_FLAG_TOP = 0x01,$/;"	e	enum:__anon116
AMOTION_EVENT_FLAG_WINDOW_IS_OBSCURED	include/android/input.h	/^    AMOTION_EVENT_FLAG_WINDOW_IS_OBSCURED = 0x1,$/;"	e	enum:__anon115
_ANDROID_INPUT_H	include/android/input.h	18;"	d
AKEYCODE_0	include/android/keycodes.h	/^    AKEYCODE_0               = 7,$/;"	e	enum:__anon90
AKEYCODE_1	include/android/keycodes.h	/^    AKEYCODE_1               = 8,$/;"	e	enum:__anon90
AKEYCODE_2	include/android/keycodes.h	/^    AKEYCODE_2               = 9,$/;"	e	enum:__anon90
AKEYCODE_3	include/android/keycodes.h	/^    AKEYCODE_3               = 10,$/;"	e	enum:__anon90
AKEYCODE_4	include/android/keycodes.h	/^    AKEYCODE_4               = 11,$/;"	e	enum:__anon90
AKEYCODE_5	include/android/keycodes.h	/^    AKEYCODE_5               = 12,$/;"	e	enum:__anon90
AKEYCODE_6	include/android/keycodes.h	/^    AKEYCODE_6               = 13,$/;"	e	enum:__anon90
AKEYCODE_7	include/android/keycodes.h	/^    AKEYCODE_7               = 14,$/;"	e	enum:__anon90
AKEYCODE_8	include/android/keycodes.h	/^    AKEYCODE_8               = 15,$/;"	e	enum:__anon90
AKEYCODE_9	include/android/keycodes.h	/^    AKEYCODE_9               = 16,$/;"	e	enum:__anon90
AKEYCODE_A	include/android/keycodes.h	/^    AKEYCODE_A               = 29,$/;"	e	enum:__anon90
AKEYCODE_ALT_LEFT	include/android/keycodes.h	/^    AKEYCODE_ALT_LEFT        = 57,$/;"	e	enum:__anon90
AKEYCODE_ALT_RIGHT	include/android/keycodes.h	/^    AKEYCODE_ALT_RIGHT       = 58,$/;"	e	enum:__anon90
AKEYCODE_APOSTROPHE	include/android/keycodes.h	/^    AKEYCODE_APOSTROPHE      = 75,$/;"	e	enum:__anon90
AKEYCODE_AT	include/android/keycodes.h	/^    AKEYCODE_AT              = 77,$/;"	e	enum:__anon90
AKEYCODE_B	include/android/keycodes.h	/^    AKEYCODE_B               = 30,$/;"	e	enum:__anon90
AKEYCODE_BACK	include/android/keycodes.h	/^    AKEYCODE_BACK            = 4,$/;"	e	enum:__anon90
AKEYCODE_BACKSLASH	include/android/keycodes.h	/^    AKEYCODE_BACKSLASH       = 73,$/;"	e	enum:__anon90
AKEYCODE_BUTTON_A	include/android/keycodes.h	/^    AKEYCODE_BUTTON_A        = 96,$/;"	e	enum:__anon90
AKEYCODE_BUTTON_B	include/android/keycodes.h	/^    AKEYCODE_BUTTON_B        = 97,$/;"	e	enum:__anon90
AKEYCODE_BUTTON_C	include/android/keycodes.h	/^    AKEYCODE_BUTTON_C        = 98,$/;"	e	enum:__anon90
AKEYCODE_BUTTON_L1	include/android/keycodes.h	/^    AKEYCODE_BUTTON_L1       = 102,$/;"	e	enum:__anon90
AKEYCODE_BUTTON_L2	include/android/keycodes.h	/^    AKEYCODE_BUTTON_L2       = 104,$/;"	e	enum:__anon90
AKEYCODE_BUTTON_MODE	include/android/keycodes.h	/^    AKEYCODE_BUTTON_MODE     = 110,$/;"	e	enum:__anon90
AKEYCODE_BUTTON_R1	include/android/keycodes.h	/^    AKEYCODE_BUTTON_R1       = 103,$/;"	e	enum:__anon90
AKEYCODE_BUTTON_R2	include/android/keycodes.h	/^    AKEYCODE_BUTTON_R2       = 105,$/;"	e	enum:__anon90
AKEYCODE_BUTTON_SELECT	include/android/keycodes.h	/^    AKEYCODE_BUTTON_SELECT   = 109,$/;"	e	enum:__anon90
AKEYCODE_BUTTON_START	include/android/keycodes.h	/^    AKEYCODE_BUTTON_START    = 108,$/;"	e	enum:__anon90
AKEYCODE_BUTTON_THUMBL	include/android/keycodes.h	/^    AKEYCODE_BUTTON_THUMBL   = 106,$/;"	e	enum:__anon90
AKEYCODE_BUTTON_THUMBR	include/android/keycodes.h	/^    AKEYCODE_BUTTON_THUMBR   = 107,$/;"	e	enum:__anon90
AKEYCODE_BUTTON_X	include/android/keycodes.h	/^    AKEYCODE_BUTTON_X        = 99,$/;"	e	enum:__anon90
AKEYCODE_BUTTON_Y	include/android/keycodes.h	/^    AKEYCODE_BUTTON_Y        = 100,$/;"	e	enum:__anon90
AKEYCODE_BUTTON_Z	include/android/keycodes.h	/^    AKEYCODE_BUTTON_Z        = 101,$/;"	e	enum:__anon90
AKEYCODE_C	include/android/keycodes.h	/^    AKEYCODE_C               = 31,$/;"	e	enum:__anon90
AKEYCODE_CALL	include/android/keycodes.h	/^    AKEYCODE_CALL            = 5,$/;"	e	enum:__anon90
AKEYCODE_CAMERA	include/android/keycodes.h	/^    AKEYCODE_CAMERA          = 27,$/;"	e	enum:__anon90
AKEYCODE_CLEAR	include/android/keycodes.h	/^    AKEYCODE_CLEAR           = 28,$/;"	e	enum:__anon90
AKEYCODE_COMMA	include/android/keycodes.h	/^    AKEYCODE_COMMA           = 55,$/;"	e	enum:__anon90
AKEYCODE_D	include/android/keycodes.h	/^    AKEYCODE_D               = 32,$/;"	e	enum:__anon90
AKEYCODE_DEL	include/android/keycodes.h	/^    AKEYCODE_DEL             = 67,$/;"	e	enum:__anon90
AKEYCODE_DPAD_CENTER	include/android/keycodes.h	/^    AKEYCODE_DPAD_CENTER     = 23,$/;"	e	enum:__anon90
AKEYCODE_DPAD_DOWN	include/android/keycodes.h	/^    AKEYCODE_DPAD_DOWN       = 20,$/;"	e	enum:__anon90
AKEYCODE_DPAD_LEFT	include/android/keycodes.h	/^    AKEYCODE_DPAD_LEFT       = 21,$/;"	e	enum:__anon90
AKEYCODE_DPAD_RIGHT	include/android/keycodes.h	/^    AKEYCODE_DPAD_RIGHT      = 22,$/;"	e	enum:__anon90
AKEYCODE_DPAD_UP	include/android/keycodes.h	/^    AKEYCODE_DPAD_UP         = 19,$/;"	e	enum:__anon90
AKEYCODE_E	include/android/keycodes.h	/^    AKEYCODE_E               = 33,$/;"	e	enum:__anon90
AKEYCODE_ENDCALL	include/android/keycodes.h	/^    AKEYCODE_ENDCALL         = 6,$/;"	e	enum:__anon90
AKEYCODE_ENTER	include/android/keycodes.h	/^    AKEYCODE_ENTER           = 66,$/;"	e	enum:__anon90
AKEYCODE_ENVELOPE	include/android/keycodes.h	/^    AKEYCODE_ENVELOPE        = 65,$/;"	e	enum:__anon90
AKEYCODE_EQUALS	include/android/keycodes.h	/^    AKEYCODE_EQUALS          = 70,$/;"	e	enum:__anon90
AKEYCODE_EXPLORER	include/android/keycodes.h	/^    AKEYCODE_EXPLORER        = 64,$/;"	e	enum:__anon90
AKEYCODE_F	include/android/keycodes.h	/^    AKEYCODE_F               = 34,$/;"	e	enum:__anon90
AKEYCODE_FOCUS	include/android/keycodes.h	/^    AKEYCODE_FOCUS           = 80,   \/\/ *Camera* focus$/;"	e	enum:__anon90
AKEYCODE_G	include/android/keycodes.h	/^    AKEYCODE_G               = 35,$/;"	e	enum:__anon90
AKEYCODE_GRAVE	include/android/keycodes.h	/^    AKEYCODE_GRAVE           = 68,$/;"	e	enum:__anon90
AKEYCODE_H	include/android/keycodes.h	/^    AKEYCODE_H               = 36,$/;"	e	enum:__anon90
AKEYCODE_HEADSETHOOK	include/android/keycodes.h	/^    AKEYCODE_HEADSETHOOK     = 79,$/;"	e	enum:__anon90
AKEYCODE_HOME	include/android/keycodes.h	/^    AKEYCODE_HOME            = 3,$/;"	e	enum:__anon90
AKEYCODE_I	include/android/keycodes.h	/^    AKEYCODE_I               = 37,$/;"	e	enum:__anon90
AKEYCODE_J	include/android/keycodes.h	/^    AKEYCODE_J               = 38,$/;"	e	enum:__anon90
AKEYCODE_K	include/android/keycodes.h	/^    AKEYCODE_K               = 39,$/;"	e	enum:__anon90
AKEYCODE_L	include/android/keycodes.h	/^    AKEYCODE_L               = 40,$/;"	e	enum:__anon90
AKEYCODE_LEFT_BRACKET	include/android/keycodes.h	/^    AKEYCODE_LEFT_BRACKET    = 71,$/;"	e	enum:__anon90
AKEYCODE_M	include/android/keycodes.h	/^    AKEYCODE_M               = 41,$/;"	e	enum:__anon90
AKEYCODE_MEDIA_FAST_FORWARD	include/android/keycodes.h	/^    AKEYCODE_MEDIA_FAST_FORWARD = 90,$/;"	e	enum:__anon90
AKEYCODE_MEDIA_NEXT	include/android/keycodes.h	/^    AKEYCODE_MEDIA_NEXT      = 87,$/;"	e	enum:__anon90
AKEYCODE_MEDIA_PLAY_PAUSE	include/android/keycodes.h	/^    AKEYCODE_MEDIA_PLAY_PAUSE= 85,$/;"	e	enum:__anon90
AKEYCODE_MEDIA_PREVIOUS	include/android/keycodes.h	/^    AKEYCODE_MEDIA_PREVIOUS  = 88,$/;"	e	enum:__anon90
AKEYCODE_MEDIA_REWIND	include/android/keycodes.h	/^    AKEYCODE_MEDIA_REWIND    = 89,$/;"	e	enum:__anon90
AKEYCODE_MEDIA_STOP	include/android/keycodes.h	/^    AKEYCODE_MEDIA_STOP      = 86,$/;"	e	enum:__anon90
AKEYCODE_MENU	include/android/keycodes.h	/^    AKEYCODE_MENU            = 82,$/;"	e	enum:__anon90
AKEYCODE_MINUS	include/android/keycodes.h	/^    AKEYCODE_MINUS           = 69,$/;"	e	enum:__anon90
AKEYCODE_MUTE	include/android/keycodes.h	/^    AKEYCODE_MUTE            = 91,$/;"	e	enum:__anon90
AKEYCODE_N	include/android/keycodes.h	/^    AKEYCODE_N               = 42,$/;"	e	enum:__anon90
AKEYCODE_NOTIFICATION	include/android/keycodes.h	/^    AKEYCODE_NOTIFICATION    = 83,$/;"	e	enum:__anon90
AKEYCODE_NUM	include/android/keycodes.h	/^    AKEYCODE_NUM             = 78,$/;"	e	enum:__anon90
AKEYCODE_O	include/android/keycodes.h	/^    AKEYCODE_O               = 43,$/;"	e	enum:__anon90
AKEYCODE_P	include/android/keycodes.h	/^    AKEYCODE_P               = 44,$/;"	e	enum:__anon90
AKEYCODE_PAGE_DOWN	include/android/keycodes.h	/^    AKEYCODE_PAGE_DOWN       = 93,$/;"	e	enum:__anon90
AKEYCODE_PAGE_UP	include/android/keycodes.h	/^    AKEYCODE_PAGE_UP         = 92,$/;"	e	enum:__anon90
AKEYCODE_PERIOD	include/android/keycodes.h	/^    AKEYCODE_PERIOD          = 56,$/;"	e	enum:__anon90
AKEYCODE_PICTSYMBOLS	include/android/keycodes.h	/^    AKEYCODE_PICTSYMBOLS     = 94,$/;"	e	enum:__anon90
AKEYCODE_PLUS	include/android/keycodes.h	/^    AKEYCODE_PLUS            = 81,$/;"	e	enum:__anon90
AKEYCODE_POUND	include/android/keycodes.h	/^    AKEYCODE_POUND           = 18,$/;"	e	enum:__anon90
AKEYCODE_POWER	include/android/keycodes.h	/^    AKEYCODE_POWER           = 26,$/;"	e	enum:__anon90
AKEYCODE_Q	include/android/keycodes.h	/^    AKEYCODE_Q               = 45,$/;"	e	enum:__anon90
AKEYCODE_R	include/android/keycodes.h	/^    AKEYCODE_R               = 46,$/;"	e	enum:__anon90
AKEYCODE_RIGHT_BRACKET	include/android/keycodes.h	/^    AKEYCODE_RIGHT_BRACKET   = 72,$/;"	e	enum:__anon90
AKEYCODE_S	include/android/keycodes.h	/^    AKEYCODE_S               = 47,$/;"	e	enum:__anon90
AKEYCODE_SEARCH	include/android/keycodes.h	/^    AKEYCODE_SEARCH          = 84,$/;"	e	enum:__anon90
AKEYCODE_SEMICOLON	include/android/keycodes.h	/^    AKEYCODE_SEMICOLON       = 74,$/;"	e	enum:__anon90
AKEYCODE_SHIFT_LEFT	include/android/keycodes.h	/^    AKEYCODE_SHIFT_LEFT      = 59,$/;"	e	enum:__anon90
AKEYCODE_SHIFT_RIGHT	include/android/keycodes.h	/^    AKEYCODE_SHIFT_RIGHT     = 60,$/;"	e	enum:__anon90
AKEYCODE_SLASH	include/android/keycodes.h	/^    AKEYCODE_SLASH           = 76,$/;"	e	enum:__anon90
AKEYCODE_SOFT_LEFT	include/android/keycodes.h	/^    AKEYCODE_SOFT_LEFT       = 1,$/;"	e	enum:__anon90
AKEYCODE_SOFT_RIGHT	include/android/keycodes.h	/^    AKEYCODE_SOFT_RIGHT      = 2,$/;"	e	enum:__anon90
AKEYCODE_SPACE	include/android/keycodes.h	/^    AKEYCODE_SPACE           = 62,$/;"	e	enum:__anon90
AKEYCODE_STAR	include/android/keycodes.h	/^    AKEYCODE_STAR            = 17,$/;"	e	enum:__anon90
AKEYCODE_SWITCH_CHARSET	include/android/keycodes.h	/^    AKEYCODE_SWITCH_CHARSET  = 95,$/;"	e	enum:__anon90
AKEYCODE_SYM	include/android/keycodes.h	/^    AKEYCODE_SYM             = 63,$/;"	e	enum:__anon90
AKEYCODE_T	include/android/keycodes.h	/^    AKEYCODE_T               = 48,$/;"	e	enum:__anon90
AKEYCODE_TAB	include/android/keycodes.h	/^    AKEYCODE_TAB             = 61,$/;"	e	enum:__anon90
AKEYCODE_U	include/android/keycodes.h	/^    AKEYCODE_U               = 49,$/;"	e	enum:__anon90
AKEYCODE_UNKNOWN	include/android/keycodes.h	/^    AKEYCODE_UNKNOWN         = 0,$/;"	e	enum:__anon90
AKEYCODE_V	include/android/keycodes.h	/^    AKEYCODE_V               = 50,$/;"	e	enum:__anon90
AKEYCODE_VOLUME_DOWN	include/android/keycodes.h	/^    AKEYCODE_VOLUME_DOWN     = 25,$/;"	e	enum:__anon90
AKEYCODE_VOLUME_UP	include/android/keycodes.h	/^    AKEYCODE_VOLUME_UP       = 24,$/;"	e	enum:__anon90
AKEYCODE_W	include/android/keycodes.h	/^    AKEYCODE_W               = 51,$/;"	e	enum:__anon90
AKEYCODE_X	include/android/keycodes.h	/^    AKEYCODE_X               = 52,$/;"	e	enum:__anon90
AKEYCODE_Y	include/android/keycodes.h	/^    AKEYCODE_Y               = 53,$/;"	e	enum:__anon90
AKEYCODE_Z	include/android/keycodes.h	/^    AKEYCODE_Z               = 54,$/;"	e	enum:__anon90
_ANDROID_KEYCODES_H	include/android/keycodes.h	18;"	d
ANDROID_LOG_DEBUG	include/android/log.h	/^    ANDROID_LOG_DEBUG,$/;"	e	enum:android_LogPriority
ANDROID_LOG_DEFAULT	include/android/log.h	/^    ANDROID_LOG_DEFAULT,    \/* only for SetMinPriority() *\/$/;"	e	enum:android_LogPriority
ANDROID_LOG_ERROR	include/android/log.h	/^    ANDROID_LOG_ERROR,$/;"	e	enum:android_LogPriority
ANDROID_LOG_FATAL	include/android/log.h	/^    ANDROID_LOG_FATAL,$/;"	e	enum:android_LogPriority
ANDROID_LOG_INFO	include/android/log.h	/^    ANDROID_LOG_INFO,$/;"	e	enum:android_LogPriority
ANDROID_LOG_SILENT	include/android/log.h	/^    ANDROID_LOG_SILENT,     \/* only for SetMinPriority(); must be last *\/$/;"	e	enum:android_LogPriority
ANDROID_LOG_UNKNOWN	include/android/log.h	/^    ANDROID_LOG_UNKNOWN = 0,$/;"	e	enum:android_LogPriority
ANDROID_LOG_VERBOSE	include/android/log.h	/^    ANDROID_LOG_VERBOSE,$/;"	e	enum:android_LogPriority
ANDROID_LOG_WARN	include/android/log.h	/^    ANDROID_LOG_WARN,$/;"	e	enum:android_LogPriority
_ANDROID_LOG_H	include/android/log.h	18;"	d
android_LogPriority	include/android/log.h	/^typedef enum android_LogPriority {$/;"	g
android_LogPriority	include/android/log.h	/^} android_LogPriority;$/;"	t	typeref:enum:android_LogPriority
ALOOPER_EVENT_ERROR	include/android/looper.h	/^    ALOOPER_EVENT_ERROR = 1 << 2,$/;"	e	enum:__anon95
ALOOPER_EVENT_HANGUP	include/android/looper.h	/^    ALOOPER_EVENT_HANGUP = 1 << 3,$/;"	e	enum:__anon95
ALOOPER_EVENT_INPUT	include/android/looper.h	/^    ALOOPER_EVENT_INPUT = 1 << 0,$/;"	e	enum:__anon95
ALOOPER_EVENT_INVALID	include/android/looper.h	/^    ALOOPER_EVENT_INVALID = 1 << 4,$/;"	e	enum:__anon95
ALOOPER_EVENT_OUTPUT	include/android/looper.h	/^    ALOOPER_EVENT_OUTPUT = 1 << 1,$/;"	e	enum:__anon95
ALOOPER_POLL_CALLBACK	include/android/looper.h	/^    ALOOPER_POLL_CALLBACK = -2,$/;"	e	enum:__anon94
ALOOPER_POLL_ERROR	include/android/looper.h	/^    ALOOPER_POLL_ERROR = -4,$/;"	e	enum:__anon94
ALOOPER_POLL_TIMEOUT	include/android/looper.h	/^    ALOOPER_POLL_TIMEOUT = -3,$/;"	e	enum:__anon94
ALOOPER_POLL_WAKE	include/android/looper.h	/^    ALOOPER_POLL_WAKE = -1,$/;"	e	enum:__anon94
ALOOPER_PREPARE_ALLOW_NON_CALLBACKS	include/android/looper.h	/^    ALOOPER_PREPARE_ALLOW_NON_CALLBACKS = 1<<0$/;"	e	enum:__anon93
ALooper	include/android/looper.h	/^typedef struct ALooper ALooper;$/;"	t	typeref:struct:ALooper
ALooper_callbackFunc	include/android/looper.h	/^typedef int (*ALooper_callbackFunc)(int fd, int events, void* data);$/;"	t
ANDROID_LOOPER_H	include/android/looper.h	19;"	d
ANATIVEACTIVITY_HIDE_SOFT_INPUT_IMPLICIT_ONLY	include/android/native_activity.h	/^    ANATIVEACTIVITY_HIDE_SOFT_INPUT_IMPLICIT_ONLY = 0x0001,$/;"	e	enum:__anon108
ANATIVEACTIVITY_HIDE_SOFT_INPUT_NOT_ALWAYS	include/android/native_activity.h	/^    ANATIVEACTIVITY_HIDE_SOFT_INPUT_NOT_ALWAYS = 0x0002,$/;"	e	enum:__anon108
ANATIVEACTIVITY_SHOW_SOFT_INPUT_FORCED	include/android/native_activity.h	/^    ANATIVEACTIVITY_SHOW_SOFT_INPUT_FORCED = 0x0002,$/;"	e	enum:__anon107
ANATIVEACTIVITY_SHOW_SOFT_INPUT_IMPLICIT	include/android/native_activity.h	/^    ANATIVEACTIVITY_SHOW_SOFT_INPUT_IMPLICIT = 0x0001,$/;"	e	enum:__anon107
ANDROID_NATIVE_ACTIVITY_H	include/android/native_activity.h	19;"	d
ANativeActivity	include/android/native_activity.h	/^typedef struct ANativeActivity {$/;"	s
ANativeActivity	include/android/native_activity.h	/^} ANativeActivity;$/;"	t	typeref:struct:ANativeActivity
ANativeActivityCallbacks	include/android/native_activity.h	/^typedef struct ANativeActivityCallbacks {$/;"	s
ANativeActivityCallbacks	include/android/native_activity.h	/^} ANativeActivityCallbacks;$/;"	t	typeref:struct:ANativeActivityCallbacks
ANativeActivity_createFunc	include/android/native_activity.h	/^typedef void ANativeActivity_createFunc(ANativeActivity* activity,$/;"	t
assetManager	include/android/native_activity.h	/^    AAssetManager* assetManager;$/;"	m	struct:ANativeActivity
callbacks	include/android/native_activity.h	/^    struct ANativeActivityCallbacks* callbacks;$/;"	m	struct:ANativeActivity	typeref:struct:ANativeActivity::ANativeActivityCallbacks
clazz	include/android/native_activity.h	/^    jobject clazz;$/;"	m	struct:ANativeActivity
env	include/android/native_activity.h	/^    JNIEnv* env;$/;"	m	struct:ANativeActivity
externalDataPath	include/android/native_activity.h	/^    const char* externalDataPath;$/;"	m	struct:ANativeActivity
instance	include/android/native_activity.h	/^    void* instance;$/;"	m	struct:ANativeActivity
internalDataPath	include/android/native_activity.h	/^    const char* internalDataPath;$/;"	m	struct:ANativeActivity
onConfigurationChanged	include/android/native_activity.h	/^    void (*onConfigurationChanged)(ANativeActivity* activity);$/;"	m	struct:ANativeActivityCallbacks
onContentRectChanged	include/android/native_activity.h	/^    void (*onContentRectChanged)(ANativeActivity* activity, const ARect* rect);$/;"	m	struct:ANativeActivityCallbacks
onDestroy	include/android/native_activity.h	/^    void (*onDestroy)(ANativeActivity* activity);$/;"	m	struct:ANativeActivityCallbacks
onInputQueueCreated	include/android/native_activity.h	/^    void (*onInputQueueCreated)(ANativeActivity* activity, AInputQueue* queue);$/;"	m	struct:ANativeActivityCallbacks
onInputQueueDestroyed	include/android/native_activity.h	/^    void (*onInputQueueDestroyed)(ANativeActivity* activity, AInputQueue* queue);$/;"	m	struct:ANativeActivityCallbacks
onLowMemory	include/android/native_activity.h	/^    void (*onLowMemory)(ANativeActivity* activity);$/;"	m	struct:ANativeActivityCallbacks
onNativeWindowCreated	include/android/native_activity.h	/^    void (*onNativeWindowCreated)(ANativeActivity* activity, ANativeWindow* window);$/;"	m	struct:ANativeActivityCallbacks
onNativeWindowDestroyed	include/android/native_activity.h	/^    void (*onNativeWindowDestroyed)(ANativeActivity* activity, ANativeWindow* window);$/;"	m	struct:ANativeActivityCallbacks
onNativeWindowRedrawNeeded	include/android/native_activity.h	/^    void (*onNativeWindowRedrawNeeded)(ANativeActivity* activity, ANativeWindow* window);$/;"	m	struct:ANativeActivityCallbacks
onNativeWindowResized	include/android/native_activity.h	/^    void (*onNativeWindowResized)(ANativeActivity* activity, ANativeWindow* window);$/;"	m	struct:ANativeActivityCallbacks
onPause	include/android/native_activity.h	/^    void (*onPause)(ANativeActivity* activity);$/;"	m	struct:ANativeActivityCallbacks
onResume	include/android/native_activity.h	/^    void (*onResume)(ANativeActivity* activity);$/;"	m	struct:ANativeActivityCallbacks
onSaveInstanceState	include/android/native_activity.h	/^    void* (*onSaveInstanceState)(ANativeActivity* activity, size_t* outSize);$/;"	m	struct:ANativeActivityCallbacks
onStart	include/android/native_activity.h	/^    void (*onStart)(ANativeActivity* activity);$/;"	m	struct:ANativeActivityCallbacks
onStop	include/android/native_activity.h	/^    void (*onStop)(ANativeActivity* activity);$/;"	m	struct:ANativeActivityCallbacks
onWindowFocusChanged	include/android/native_activity.h	/^    void (*onWindowFocusChanged)(ANativeActivity* activity, int hasFocus);$/;"	m	struct:ANativeActivityCallbacks
sdkVersion	include/android/native_activity.h	/^    int32_t sdkVersion;$/;"	m	struct:ANativeActivity
vm	include/android/native_activity.h	/^    JavaVM* vm;$/;"	m	struct:ANativeActivity
ANDROID_NATIVE_WINDOW_H	include/android/native_window.h	18;"	d
ANativeWindow	include/android/native_window.h	/^typedef struct ANativeWindow ANativeWindow;$/;"	t	typeref:struct:ANativeWindow
ANativeWindow_Buffer	include/android/native_window.h	/^typedef struct ANativeWindow_Buffer {$/;"	s
ANativeWindow_Buffer	include/android/native_window.h	/^} ANativeWindow_Buffer;$/;"	t	typeref:struct:ANativeWindow_Buffer
WINDOW_FORMAT_RGBA_8888	include/android/native_window.h	/^    WINDOW_FORMAT_RGBA_8888          = 1,$/;"	e	enum:__anon105
WINDOW_FORMAT_RGBX_8888	include/android/native_window.h	/^    WINDOW_FORMAT_RGBX_8888          = 2,$/;"	e	enum:__anon105
WINDOW_FORMAT_RGB_565	include/android/native_window.h	/^    WINDOW_FORMAT_RGB_565            = 4,$/;"	e	enum:__anon105
bits	include/android/native_window.h	/^    void* bits;$/;"	m	struct:ANativeWindow_Buffer
format	include/android/native_window.h	/^    int32_t format;$/;"	m	struct:ANativeWindow_Buffer
height	include/android/native_window.h	/^    int32_t height;$/;"	m	struct:ANativeWindow_Buffer
reserved	include/android/native_window.h	/^    uint32_t reserved[6];$/;"	m	struct:ANativeWindow_Buffer
stride	include/android/native_window.h	/^    int32_t stride;$/;"	m	struct:ANativeWindow_Buffer
width	include/android/native_window.h	/^    int32_t width;$/;"	m	struct:ANativeWindow_Buffer
ANDROID_NATIVE_WINDOW_JNI_H	include/android/native_window_jni.h	18;"	d
ANDROID_OBB_H	include/android/obb.h	19;"	d
AOBBINFO_OVERLAY	include/android/obb.h	/^    AOBBINFO_OVERLAY = 0x0001,$/;"	e	enum:__anon103
AObbInfo	include/android/obb.h	/^typedef struct AObbInfo AObbInfo;$/;"	t	typeref:struct:AObbInfo
ANDROID_RECT_H	include/android/rect.h	19;"	d
ARect	include/android/rect.h	/^typedef struct ARect {$/;"	s
ARect	include/android/rect.h	/^} ARect;$/;"	t	typeref:struct:ARect
bottom	include/android/rect.h	/^    int32_t bottom;$/;"	m	struct:ARect
left	include/android/rect.h	/^    int32_t left;$/;"	m	struct:ARect
right	include/android/rect.h	/^    int32_t right;$/;"	m	struct:ARect
top	include/android/rect.h	/^    int32_t top;$/;"	m	struct:ARect
ANDROID_SENSOR_H	include/android/sensor.h	19;"	d
ASENSOR_MAGNETIC_FIELD_EARTH_MAX	include/android/sensor.h	82;"	d
ASENSOR_MAGNETIC_FIELD_EARTH_MIN	include/android/sensor.h	84;"	d
ASENSOR_STANDARD_GRAVITY	include/android/sensor.h	80;"	d
ASENSOR_STATUS_ACCURACY_HIGH	include/android/sensor.h	/^    ASENSOR_STATUS_ACCURACY_HIGH    = 3$/;"	e	enum:__anon97
ASENSOR_STATUS_ACCURACY_LOW	include/android/sensor.h	/^    ASENSOR_STATUS_ACCURACY_LOW     = 1,$/;"	e	enum:__anon97
ASENSOR_STATUS_ACCURACY_MEDIUM	include/android/sensor.h	/^    ASENSOR_STATUS_ACCURACY_MEDIUM  = 2,$/;"	e	enum:__anon97
ASENSOR_STATUS_UNRELIABLE	include/android/sensor.h	/^    ASENSOR_STATUS_UNRELIABLE       = 0,$/;"	e	enum:__anon97
ASENSOR_TYPE_ACCELEROMETER	include/android/sensor.h	/^    ASENSOR_TYPE_ACCELEROMETER      = 1,$/;"	e	enum:__anon96
ASENSOR_TYPE_GYROSCOPE	include/android/sensor.h	/^    ASENSOR_TYPE_GYROSCOPE          = 4,$/;"	e	enum:__anon96
ASENSOR_TYPE_LIGHT	include/android/sensor.h	/^    ASENSOR_TYPE_LIGHT              = 5,$/;"	e	enum:__anon96
ASENSOR_TYPE_MAGNETIC_FIELD	include/android/sensor.h	/^    ASENSOR_TYPE_MAGNETIC_FIELD     = 2,$/;"	e	enum:__anon96
ASENSOR_TYPE_PROXIMITY	include/android/sensor.h	/^    ASENSOR_TYPE_PROXIMITY          = 8$/;"	e	enum:__anon96
ASensor	include/android/sensor.h	/^typedef struct ASensor ASensor;$/;"	t	typeref:struct:ASensor
ASensorEvent	include/android/sensor.h	/^typedef struct ASensorEvent {$/;"	s
ASensorEvent	include/android/sensor.h	/^} ASensorEvent;$/;"	t	typeref:struct:ASensorEvent
ASensorEventQueue	include/android/sensor.h	/^typedef struct ASensorEventQueue ASensorEventQueue;$/;"	t	typeref:struct:ASensorEventQueue
ASensorList	include/android/sensor.h	/^typedef ASensorRef const* ASensorList;$/;"	t
ASensorManager	include/android/sensor.h	/^typedef struct ASensorManager ASensorManager;$/;"	t	typeref:struct:ASensorManager
ASensorRef	include/android/sensor.h	/^typedef ASensor const* ASensorRef;$/;"	t
ASensorVector	include/android/sensor.h	/^typedef struct ASensorVector {$/;"	s
ASensorVector	include/android/sensor.h	/^} ASensorVector;$/;"	t	typeref:struct:ASensorVector
acceleration	include/android/sensor.h	/^        ASensorVector   acceleration;$/;"	m	union:ASensorEvent::__anon101
azimuth	include/android/sensor.h	/^            float azimuth;$/;"	m	struct:ASensorVector::__anon98::__anon100
data	include/android/sensor.h	/^        float           data[16];$/;"	m	union:ASensorEvent::__anon101
distance	include/android/sensor.h	/^        float           distance;$/;"	m	union:ASensorEvent::__anon101
light	include/android/sensor.h	/^        float           light;$/;"	m	union:ASensorEvent::__anon101
magnetic	include/android/sensor.h	/^        ASensorVector   magnetic;$/;"	m	union:ASensorEvent::__anon101
pitch	include/android/sensor.h	/^            float pitch;$/;"	m	struct:ASensorVector::__anon98::__anon100
pressure	include/android/sensor.h	/^        float           pressure;$/;"	m	union:ASensorEvent::__anon101
reserved	include/android/sensor.h	/^    uint8_t reserved[3];$/;"	m	struct:ASensorVector
reserved0	include/android/sensor.h	/^    int32_t reserved0;$/;"	m	struct:ASensorEvent
reserved1	include/android/sensor.h	/^    int32_t reserved1[4];$/;"	m	struct:ASensorEvent
roll	include/android/sensor.h	/^            float roll;$/;"	m	struct:ASensorVector::__anon98::__anon100
sensor	include/android/sensor.h	/^    int32_t sensor;$/;"	m	struct:ASensorEvent
status	include/android/sensor.h	/^    int8_t status;$/;"	m	struct:ASensorVector
temperature	include/android/sensor.h	/^        float           temperature;$/;"	m	union:ASensorEvent::__anon101
timestamp	include/android/sensor.h	/^    int64_t timestamp;$/;"	m	struct:ASensorEvent
type	include/android/sensor.h	/^    int32_t type;$/;"	m	struct:ASensorEvent
v	include/android/sensor.h	/^        float v[3];$/;"	m	union:ASensorVector::__anon98
vector	include/android/sensor.h	/^        ASensorVector   vector;$/;"	m	union:ASensorEvent::__anon101
version	include/android/sensor.h	/^    int32_t version; \/* sizeof(struct ASensorEvent) *\/$/;"	m	struct:ASensorEvent
x	include/android/sensor.h	/^            float x;$/;"	m	struct:ASensorVector::__anon98::__anon99
y	include/android/sensor.h	/^            float y;$/;"	m	struct:ASensorVector::__anon98::__anon99
z	include/android/sensor.h	/^            float z;$/;"	m	struct:ASensorVector::__anon98::__anon99
ANDROID_STORAGE_MANAGER_H	include/android/storage_manager.h	19;"	d
AOBB_STATE_ERROR_ALREADY_MOUNTED	include/android/storage_manager.h	/^    AOBB_STATE_ERROR_ALREADY_MOUNTED = 24,$/;"	e	enum:__anon102
AOBB_STATE_ERROR_COULD_NOT_MOUNT	include/android/storage_manager.h	/^    AOBB_STATE_ERROR_COULD_NOT_MOUNT = 21,$/;"	e	enum:__anon102
AOBB_STATE_ERROR_COULD_NOT_UNMOUNT	include/android/storage_manager.h	/^    AOBB_STATE_ERROR_COULD_NOT_UNMOUNT = 22,$/;"	e	enum:__anon102
AOBB_STATE_ERROR_INTERNAL	include/android/storage_manager.h	/^    AOBB_STATE_ERROR_INTERNAL = 20,$/;"	e	enum:__anon102
AOBB_STATE_ERROR_NOT_MOUNTED	include/android/storage_manager.h	/^    AOBB_STATE_ERROR_NOT_MOUNTED = 23,$/;"	e	enum:__anon102
AOBB_STATE_ERROR_PERMISSION_DENIED	include/android/storage_manager.h	/^    AOBB_STATE_ERROR_PERMISSION_DENIED = 25,$/;"	e	enum:__anon102
AOBB_STATE_MOUNTED	include/android/storage_manager.h	/^    AOBB_STATE_MOUNTED = 1,$/;"	e	enum:__anon102
AOBB_STATE_UNMOUNTED	include/android/storage_manager.h	/^    AOBB_STATE_UNMOUNTED = 2,$/;"	e	enum:__anon102
AStorageManager	include/android/storage_manager.h	/^typedef struct AStorageManager AStorageManager;$/;"	t	typeref:struct:AStorageManager
AStorageManager_obbCallbackFunc	include/android/storage_manager.h	/^typedef void (*AStorageManager_obbCallbackFunc)(const char* filename, const int32_t state, void* data);$/;"	t
ANDROID_WINDOW_H	include/android/window.h	19;"	d
AWINDOW_FLAG_ALLOW_LOCK_WHILE_SCREEN_ON	include/android/window.h	/^    AWINDOW_FLAG_ALLOW_LOCK_WHILE_SCREEN_ON = 0x00000001,$/;"	e	enum:__anon91
AWINDOW_FLAG_ALT_FOCUSABLE_IM	include/android/window.h	/^    AWINDOW_FLAG_ALT_FOCUSABLE_IM           = 0x00020000,$/;"	e	enum:__anon91
AWINDOW_FLAG_BLUR_BEHIND	include/android/window.h	/^    AWINDOW_FLAG_BLUR_BEHIND                = 0x00000004,$/;"	e	enum:__anon91
AWINDOW_FLAG_DIM_BEHIND	include/android/window.h	/^    AWINDOW_FLAG_DIM_BEHIND                 = 0x00000002,$/;"	e	enum:__anon91
AWINDOW_FLAG_DISMISS_KEYGUARD	include/android/window.h	/^    AWINDOW_FLAG_DISMISS_KEYGUARD           = 0x00400000,$/;"	e	enum:__anon91
AWINDOW_FLAG_DITHER	include/android/window.h	/^    AWINDOW_FLAG_DITHER                     = 0x00001000,$/;"	e	enum:__anon91
AWINDOW_FLAG_FORCE_NOT_FULLSCREEN	include/android/window.h	/^    AWINDOW_FLAG_FORCE_NOT_FULLSCREEN       = 0x00000800,$/;"	e	enum:__anon91
AWINDOW_FLAG_FULLSCREEN	include/android/window.h	/^    AWINDOW_FLAG_FULLSCREEN                 = 0x00000400,$/;"	e	enum:__anon91
AWINDOW_FLAG_IGNORE_CHEEK_PRESSES	include/android/window.h	/^    AWINDOW_FLAG_IGNORE_CHEEK_PRESSES       = 0x00008000,$/;"	e	enum:__anon91
AWINDOW_FLAG_KEEP_SCREEN_ON	include/android/window.h	/^    AWINDOW_FLAG_KEEP_SCREEN_ON             = 0x00000080,$/;"	e	enum:__anon91
AWINDOW_FLAG_LAYOUT_INSET_DECOR	include/android/window.h	/^    AWINDOW_FLAG_LAYOUT_INSET_DECOR         = 0x00010000,$/;"	e	enum:__anon91
AWINDOW_FLAG_LAYOUT_IN_SCREEN	include/android/window.h	/^    AWINDOW_FLAG_LAYOUT_IN_SCREEN           = 0x00000100,$/;"	e	enum:__anon91
AWINDOW_FLAG_LAYOUT_NO_LIMITS	include/android/window.h	/^    AWINDOW_FLAG_LAYOUT_NO_LIMITS           = 0x00000200,$/;"	e	enum:__anon91
AWINDOW_FLAG_NOT_FOCUSABLE	include/android/window.h	/^    AWINDOW_FLAG_NOT_FOCUSABLE              = 0x00000008,$/;"	e	enum:__anon91
AWINDOW_FLAG_NOT_TOUCHABLE	include/android/window.h	/^    AWINDOW_FLAG_NOT_TOUCHABLE              = 0x00000010,$/;"	e	enum:__anon91
AWINDOW_FLAG_NOT_TOUCH_MODAL	include/android/window.h	/^    AWINDOW_FLAG_NOT_TOUCH_MODAL            = 0x00000020,$/;"	e	enum:__anon91
AWINDOW_FLAG_SCALED	include/android/window.h	/^    AWINDOW_FLAG_SCALED                     = 0x00004000,$/;"	e	enum:__anon91
AWINDOW_FLAG_SECURE	include/android/window.h	/^    AWINDOW_FLAG_SECURE                     = 0x00002000,$/;"	e	enum:__anon91
AWINDOW_FLAG_SHOW_WALLPAPER	include/android/window.h	/^    AWINDOW_FLAG_SHOW_WALLPAPER             = 0x00100000,$/;"	e	enum:__anon91
AWINDOW_FLAG_SHOW_WHEN_LOCKED	include/android/window.h	/^    AWINDOW_FLAG_SHOW_WHEN_LOCKED           = 0x00080000,$/;"	e	enum:__anon91
AWINDOW_FLAG_TOUCHABLE_WHEN_WAKING	include/android/window.h	/^    AWINDOW_FLAG_TOUCHABLE_WHEN_WAKING      = 0x00000040,$/;"	e	enum:__anon91
AWINDOW_FLAG_TURN_SCREEN_ON	include/android/window.h	/^    AWINDOW_FLAG_TURN_SCREEN_ON             = 0x00200000,$/;"	e	enum:__anon91
AWINDOW_FLAG_WATCH_OUTSIDE_TOUCH	include/android/window.h	/^    AWINDOW_FLAG_WATCH_OUTSIDE_TOUCH        = 0x00040000,$/;"	e	enum:__anon91
ActivityManager_H	include/android_runtime/ActivityManager.h	18;"	d
android	include/android_runtime/ActivityManager.h	/^namespace android {$/;"	n
AndroidRuntime	include/android_runtime/AndroidRuntime.h	/^class AndroidRuntime$/;"	c	namespace:android
_RUNTIME_ANDROID_RUNTIME_H	include/android_runtime/AndroidRuntime.h	20;"	d
android	include/android_runtime/AndroidRuntime.h	/^namespace android {$/;"	n
getJavaVM	include/android_runtime/AndroidRuntime.h	/^    static JavaVM* getJavaVM() { return mJavaVM; }$/;"	f	class:android::AndroidRuntime
mJavaVM	include/android_runtime/AndroidRuntime.h	/^    static JavaVM* mJavaVM;$/;"	m	class:android::AndroidRuntime
mOptions	include/android_runtime/AndroidRuntime.h	/^    Vector<JavaVMOption> mOptions;$/;"	m	class:android::AndroidRuntime
onZygoteInit	include/android_runtime/AndroidRuntime.h	/^    virtual void onZygoteInit() {};$/;"	f	class:android::AndroidRuntime
AInputQueue	include/android_runtime/android_app_NativeActivity.h	/^struct AInputQueue : public android::InputEventFactoryInterface {$/;"	s
_ANDROID_APP_NATIVEACTIVITY_H	include/android_runtime/android_app_NativeActivity.h	18;"	d
android	include/android_runtime/android_app_NativeActivity.h	/^namespace android {$/;"	n
doFinish	include/android_runtime/android_app_NativeActivity.h	/^        bool doFinish;$/;"	m	struct:AInputQueue::in_flight_event
event	include/android_runtime/android_app_NativeActivity.h	/^        android::InputEvent* event;$/;"	m	struct:AInputQueue::in_flight_event
finish_pre_dispatch	include/android_runtime/android_app_NativeActivity.h	/^    struct finish_pre_dispatch {$/;"	s	struct:AInputQueue
getConsumer	include/android_runtime/android_app_NativeActivity.h	/^    inline android::InputConsumer& getConsumer() { return mConsumer; }$/;"	f	struct:AInputQueue
handled	include/android_runtime/android_app_NativeActivity.h	/^        bool handled;$/;"	m	struct:AInputQueue::finish_pre_dispatch
in_flight_event	include/android_runtime/android_app_NativeActivity.h	/^    struct in_flight_event {$/;"	s	struct:AInputQueue
mAvailKeyEvents	include/android_runtime/android_app_NativeActivity.h	/^    android::Vector<android::KeyEvent*> mAvailKeyEvents;$/;"	m	struct:AInputQueue
mAvailMotionEvents	include/android_runtime/android_app_NativeActivity.h	/^    android::Vector<android::MotionEvent*> mAvailMotionEvents;$/;"	m	struct:AInputQueue
mConsumer	include/android_runtime/android_app_NativeActivity.h	/^    android::InputConsumer mConsumer;$/;"	m	struct:AInputQueue
mDispatchKeyRead	include/android_runtime/android_app_NativeActivity.h	/^    int mDispatchKeyRead;$/;"	m	struct:AInputQueue
mDispatchKeyWrite	include/android_runtime/android_app_NativeActivity.h	/^    int mDispatchKeyWrite;$/;"	m	struct:AInputQueue
mDispatchingKeys	include/android_runtime/android_app_NativeActivity.h	/^    android::Vector<android::KeyEvent*> mDispatchingKeys;$/;"	m	struct:AInputQueue
mFinishPreDispatches	include/android_runtime/android_app_NativeActivity.h	/^    android::Vector<finish_pre_dispatch> mFinishPreDispatches;$/;"	m	struct:AInputQueue
mInFlightEvents	include/android_runtime/android_app_NativeActivity.h	/^    android::Vector<in_flight_event> mInFlightEvents;$/;"	m	struct:AInputQueue
mLock	include/android_runtime/android_app_NativeActivity.h	/^    android::Mutex mLock;$/;"	m	struct:AInputQueue
mLooper	include/android_runtime/android_app_NativeActivity.h	/^    android::sp<android::Looper> mLooper;$/;"	m	struct:AInputQueue
mPreDispatchingKeys	include/android_runtime/android_app_NativeActivity.h	/^    android::Vector<in_flight_event> mPreDispatchingKeys;$/;"	m	struct:AInputQueue
mSeq	include/android_runtime/android_app_NativeActivity.h	/^    int mSeq;$/;"	m	struct:AInputQueue
mUnhandledKeys	include/android_runtime/android_app_NativeActivity.h	/^    android::Vector<android::KeyEvent*> mUnhandledKeys;$/;"	m	struct:AInputQueue
mWorkWrite	include/android_runtime/android_app_NativeActivity.h	/^    int mWorkWrite;$/;"	m	struct:AInputQueue
seq	include/android_runtime/android_app_NativeActivity.h	/^        int seq;$/;"	m	struct:AInputQueue::finish_pre_dispatch
seq	include/android_runtime/android_app_NativeActivity.h	/^        int seq;$/;"	m	struct:AInputQueue::in_flight_event
AConfiguration	include/android_runtime/android_content_res_Configuration.h	/^struct AConfiguration : android::ResTable_config {$/;"	s
_ANDROID_CONTENT_RES_CONFIGURATION_H	include/android_runtime/android_content_res_Configuration.h	18;"	d
android	include/android_runtime/android_content_res_Configuration.h	/^namespace android {$/;"	n
android	include/android_runtime/android_util_AssetManager.h	/^namespace android {$/;"	n
android_util_AssetManager_H	include/android_runtime/android_util_AssetManager.h	18;"	d
_ANDROID_VIEW_SURFACE_H	include/android_runtime/android_view_Surface.h	18;"	d
android	include/android_runtime/android_view_Surface.h	/^namespace android {$/;"	n
ARCH_PPC	include/arch/darwin-x86/AndroidConfig.h	221;"	d
ARCH_X86	include/arch/darwin-x86/AndroidConfig.h	223;"	d
HAVE_BACKTRACE	include/arch/darwin-x86/AndroidConfig.h	166;"	d
HAVE_BIG_ENDIAN	include/arch/darwin-x86/AndroidConfig.h	148;"	d
HAVE_CXXABI	include/arch/darwin-x86/AndroidConfig.h	179;"	d
HAVE_DIRENT_D_TYPE	include/arch/darwin-x86/AndroidConfig.h	205;"	d
HAVE_DLADDR	include/arch/darwin-x86/AndroidConfig.h	173;"	d
HAVE_FORKEXEC	include/arch/darwin-x86/AndroidConfig.h	56;"	d
HAVE_FUNOPEN	include/arch/darwin-x86/AndroidConfig.h	266;"	d
HAVE_LITTLE_ENDIAN	include/arch/darwin-x86/AndroidConfig.h	150;"	d
HAVE_LOCALTIME_R	include/arch/darwin-x86/AndroidConfig.h	112;"	d
HAVE_MACOSX_IPC	include/arch/darwin-x86/AndroidConfig.h	73;"	d
HAVE_MADVISE	include/arch/darwin-x86/AndroidConfig.h	210;"	d
HAVE_POSIX_FILEMAP	include/arch/darwin-x86/AndroidConfig.h	81;"	d
HAVE_PREAD	include/arch/darwin-x86/AndroidConfig.h	291;"	d
HAVE_PRINTF_ZD	include/arch/darwin-x86/AndroidConfig.h	301;"	d
HAVE_PTHREADS	include/arch/darwin-x86/AndroidConfig.h	42;"	d
HAVE_SCHED_H	include/arch/darwin-x86/AndroidConfig.h	286;"	d
HAVE_STAT_ST_MTIM	include/arch/darwin-x86/AndroidConfig.h	296;"	d
HAVE_STDBOOL_H	include/arch/darwin-x86/AndroidConfig.h	281;"	d
HAVE_STDINT_H	include/arch/darwin-x86/AndroidConfig.h	276;"	d
HAVE_STRLCPY	include/arch/darwin-x86/AndroidConfig.h	256;"	d
HAVE_SYMLINKS	include/arch/darwin-x86/AndroidConfig.h	107;"	d
HAVE_SYS_SOCKET_H	include/arch/darwin-x86/AndroidConfig.h	251;"	d
HAVE_SYS_UIO_H	include/arch/darwin-x86/AndroidConfig.h	101;"	d
HAVE_TERMIO_H	include/arch/darwin-x86/AndroidConfig.h	86;"	d
HAVE_TM_GMTOFF	include/arch/darwin-x86/AndroidConfig.h	200;"	d
HAVE_WRITEV	include/arch/darwin-x86/AndroidConfig.h	271;"	d
INCLUDE_SYS_MOUNT_FOR_STATFS	include/arch/darwin-x86/AndroidConfig.h	215;"	d
MINCORE_POINTER_TYPE	include/arch/darwin-x86/AndroidConfig.h	234;"	d
OS_PATH_SEPARATOR	include/arch/darwin-x86/AndroidConfig.h	239;"	d
OS_SHARED_LIB_FORMAT_STR	include/arch/darwin-x86/AndroidConfig.h	229;"	d
_ANDROID_CONFIG_H	include/arch/darwin-x86/AndroidConfig.h	21;"	d
_FILE_OFFSET_BITS	include/arch/darwin-x86/AndroidConfig.h	158;"	d
_LARGEFILE_SOURCE	include/arch/darwin-x86/AndroidConfig.h	159;"	d
_THREAD_SAFE	include/arch/darwin-x86/AndroidConfig.h	190;"	d
ARCH_X86	include/arch/freebsd-x86/AndroidConfig.h	223;"	d
CLOCK_PROCESS_CPUTIME_ID	include/arch/freebsd-x86/AndroidConfig.h	329;"	d
HAVE_BACKTRACE	include/arch/freebsd-x86/AndroidConfig.h	182;"	d
HAVE_CXXABI	include/arch/freebsd-x86/AndroidConfig.h	195;"	d
HAVE_DIRENT_D_TYPE	include/arch/freebsd-x86/AndroidConfig.h	244;"	d
HAVE_DLADDR	include/arch/freebsd-x86/AndroidConfig.h	189;"	d
HAVE_FORKEXEC	include/arch/freebsd-x86/AndroidConfig.h	61;"	d
HAVE_FUNOPEN	include/arch/freebsd-x86/AndroidConfig.h	305;"	d
HAVE_IOCTL	include/arch/freebsd-x86/AndroidConfig.h	127;"	d
HAVE_LITTLE_ENDIAN	include/arch/freebsd-x86/AndroidConfig.h	161;"	d
HAVE_LOCALTIME_R	include/arch/freebsd-x86/AndroidConfig.h	117;"	d
HAVE_MADVISE	include/arch/freebsd-x86/AndroidConfig.h	234;"	d
HAVE_MALLOC_H	include/arch/freebsd-x86/AndroidConfig.h	214;"	d
HAVE_NO_ALLOCA_H	include/arch/freebsd-x86/AndroidConfig.h	322;"	d
HAVE_POSIX_CLOCKS	include/arch/freebsd-x86/AndroidConfig.h	140;"	d
HAVE_POSIX_FILEMAP	include/arch/freebsd-x86/AndroidConfig.h	86;"	d
HAVE_PREAD	include/arch/freebsd-x86/AndroidConfig.h	350;"	d
HAVE_PRINTF_ZD	include/arch/freebsd-x86/AndroidConfig.h	359;"	d
HAVE_PTHREADS	include/arch/freebsd-x86/AndroidConfig.h	48;"	d
HAVE_SA_NOCLDWAIT	include/arch/freebsd-x86/AndroidConfig.h	270;"	d
HAVE_SCHED_H	include/arch/freebsd-x86/AndroidConfig.h	345;"	d
HAVE_SCHED_SETSCHEDULER	include/arch/freebsd-x86/AndroidConfig.h	205;"	d
HAVE_STAT_ST_MTIM	include/arch/freebsd-x86/AndroidConfig.h	354;"	d
HAVE_STRLCPY	include/arch/freebsd-x86/AndroidConfig.h	295;"	d
HAVE_SYMLINKS	include/arch/freebsd-x86/AndroidConfig.h	112;"	d
HAVE_SYSTEM_PROPERTY_SERVER	include/arch/freebsd-x86/AndroidConfig.h	255;"	d
HAVE_SYSV_IPC	include/arch/freebsd-x86/AndroidConfig.h	78;"	d
HAVE_SYS_ENDIAN_H	include/arch/freebsd-x86/AndroidConfig.h	167;"	d
HAVE_SYS_SOCKET_H	include/arch/freebsd-x86/AndroidConfig.h	290;"	d
HAVE_SYS_UIO_H	include/arch/freebsd-x86/AndroidConfig.h	106;"	d
HAVE_TM_GMTOFF	include/arch/freebsd-x86/AndroidConfig.h	239;"	d
HAVE_WRITEV	include/arch/freebsd-x86/AndroidConfig.h	315;"	d
INCLUDE_SYS_MOUNT_FOR_STATFS	include/arch/freebsd-x86/AndroidConfig.h	275;"	d
MINCORE_POINTER_TYPE	include/arch/freebsd-x86/AndroidConfig.h	265;"	d
OS_CASE_SENSITIVE	include/arch/freebsd-x86/AndroidConfig.h	285;"	d
OS_FREEBSD	include/arch/freebsd-x86/AndroidConfig.h	27;"	d
OS_PATH_SEPARATOR	include/arch/freebsd-x86/AndroidConfig.h	280;"	d
OS_SHARED_LIB_FORMAT_STR	include/arch/freebsd-x86/AndroidConfig.h	260;"	d
_ANDROID_CONFIG_H	include/arch/freebsd-x86/AndroidConfig.h	21;"	d
_FILE_OFFSET_BITS	include/arch/freebsd-x86/AndroidConfig.h	174;"	d
_LARGEFILE_SOURCE	include/arch/freebsd-x86/AndroidConfig.h	175;"	d
ARCH_ARM	include/arch/linux-arm/AndroidConfig.h	260;"	d
HAVE_ANDROID_IPC	include/arch/linux-arm/AndroidConfig.h	86;"	d
HAVE_ANDROID_OS	include/arch/linux-arm/AndroidConfig.h	219;"	d
HAVE_ANDROID_PTHREAD_SETNAME_NP	include/arch/linux-arm/AndroidConfig.h	50;"	d
HAVE_BACKTRACE	include/arch/linux-arm/AndroidConfig.h	181;"	d
HAVE_CXXABI	include/arch/linux-arm/AndroidConfig.h	194;"	d
HAVE_DIRENT_D_TYPE	include/arch/linux-arm/AndroidConfig.h	244;"	d
HAVE_DLADDR	include/arch/linux-arm/AndroidConfig.h	188;"	d
HAVE_ENDIAN_H	include/arch/linux-arm/AndroidConfig.h	165;"	d
HAVE_EPOLL	include/arch/linux-arm/AndroidConfig.h	156;"	d
HAVE_FORKEXEC	include/arch/linux-arm/AndroidConfig.h	69;"	d
HAVE_FUNOPEN	include/arch/linux-arm/AndroidConfig.h	315;"	d
HAVE_FUTEX	include/arch/linux-arm/AndroidConfig.h	55;"	d
HAVE_FUTEX_WRAPPERS	include/arch/linux-arm/AndroidConfig.h	61;"	d
HAVE_GETTID	include/arch/linux-arm/AndroidConfig.h	199;"	d
HAVE_INOTIFY	include/arch/linux-arm/AndroidConfig.h	229;"	d
HAVE_IOCTL	include/arch/linux-arm/AndroidConfig.h	135;"	d
HAVE_LIBC_SYSTEM_PROPERTIES	include/arch/linux-arm/AndroidConfig.h	249;"	d
HAVE_LINUX_LOCAL_SOCKET_NAMESPACE	include/arch/linux-arm/AndroidConfig.h	224;"	d
HAVE_LITTLE_ENDIAN	include/arch/linux-arm/AndroidConfig.h	166;"	d
HAVE_MADVISE	include/arch/linux-arm/AndroidConfig.h	234;"	d
HAVE_MALLOC_H	include/arch/linux-arm/AndroidConfig.h	214;"	d
HAVE_OOM_ADJ	include/arch/linux-arm/AndroidConfig.h	76;"	d
HAVE_POSIX_CLOCKS	include/arch/linux-arm/AndroidConfig.h	145;"	d
HAVE_POSIX_FILEMAP	include/arch/linux-arm/AndroidConfig.h	94;"	d
HAVE_PRCTL	include/arch/linux-arm/AndroidConfig.h	320;"	d
HAVE_PREAD	include/arch/linux-arm/AndroidConfig.h	345;"	d
HAVE_PRINTF_ZD	include/arch/linux-arm/AndroidConfig.h	355;"	d
HAVE_PTHREADS	include/arch/linux-arm/AndroidConfig.h	42;"	d
HAVE_SA_NOCLDWAIT	include/arch/linux-arm/AndroidConfig.h	285;"	d
HAVE_SCHED_H	include/arch/linux-arm/AndroidConfig.h	340;"	d
HAVE_SCHED_SETSCHEDULER	include/arch/linux-arm/AndroidConfig.h	204;"	d
HAVE_STAT_ST_MTIM	include/arch/linux-arm/AndroidConfig.h	350;"	d
HAVE_STDBOOL_H	include/arch/linux-arm/AndroidConfig.h	335;"	d
HAVE_STDINT_H	include/arch/linux-arm/AndroidConfig.h	330;"	d
HAVE_STRLCPY	include/arch/linux-arm/AndroidConfig.h	305;"	d
HAVE_SYMLINKS	include/arch/linux-arm/AndroidConfig.h	120;"	d
HAVE_SYS_SENDFILE_H	include/arch/linux-arm/AndroidConfig.h	104;"	d
HAVE_SYS_SOCKET_H	include/arch/linux-arm/AndroidConfig.h	300;"	d
HAVE_SYS_UIO_H	include/arch/linux-arm/AndroidConfig.h	114;"	d
HAVE_TERMIO_H	include/arch/linux-arm/AndroidConfig.h	99;"	d
HAVE_TIMEDWAIT_MONOTONIC	include/arch/linux-arm/AndroidConfig.h	151;"	d
HAVE_TM_GMTOFF	include/arch/linux-arm/AndroidConfig.h	239;"	d
HAVE_WRITEV	include/arch/linux-arm/AndroidConfig.h	325;"	d
HAVE__MEMCMP16	include/arch/linux-arm/AndroidConfig.h	275;"	d
MINCORE_POINTER_TYPE	include/arch/linux-arm/AndroidConfig.h	280;"	d
OS_CASE_SENSITIVE	include/arch/linux-arm/AndroidConfig.h	295;"	d
OS_PATH_SEPARATOR	include/arch/linux-arm/AndroidConfig.h	290;"	d
OS_SHARED_LIB_FORMAT_STR	include/arch/linux-arm/AndroidConfig.h	270;"	d
_ANDROID_CONFIG_H	include/arch/linux-arm/AndroidConfig.h	21;"	d
__linux__	include/arch/linux-arm/AndroidConfig.h	209;"	d
ARCH_SH	include/arch/linux-sh/AndroidConfig.h	260;"	d
CANT_PASS_VALIST_AS_CHARPTR	include/arch/linux-sh/AndroidConfig.h	335;"	d
HAVE_ANDROID_IPC	include/arch/linux-sh/AndroidConfig.h	86;"	d
HAVE_ANDROID_OS	include/arch/linux-sh/AndroidConfig.h	219;"	d
HAVE_ANDROID_PTHREAD_SETNAME_NP	include/arch/linux-sh/AndroidConfig.h	50;"	d
HAVE_BACKTRACE	include/arch/linux-sh/AndroidConfig.h	181;"	d
HAVE_CXXABI	include/arch/linux-sh/AndroidConfig.h	194;"	d
HAVE_DIRENT_D_TYPE	include/arch/linux-sh/AndroidConfig.h	244;"	d
HAVE_DLADDR	include/arch/linux-sh/AndroidConfig.h	188;"	d
HAVE_ENDIAN_H	include/arch/linux-sh/AndroidConfig.h	165;"	d
HAVE_EPOLL	include/arch/linux-sh/AndroidConfig.h	156;"	d
HAVE_FORKEXEC	include/arch/linux-sh/AndroidConfig.h	69;"	d
HAVE_FUNOPEN	include/arch/linux-sh/AndroidConfig.h	320;"	d
HAVE_FUTEX	include/arch/linux-sh/AndroidConfig.h	55;"	d
HAVE_FUTEX_WRAPPERS	include/arch/linux-sh/AndroidConfig.h	61;"	d
HAVE_GETTID	include/arch/linux-sh/AndroidConfig.h	199;"	d
HAVE_INOTIFY	include/arch/linux-sh/AndroidConfig.h	229;"	d
HAVE_IOCTL	include/arch/linux-sh/AndroidConfig.h	135;"	d
HAVE_LIBC_SYSTEM_PROPERTIES	include/arch/linux-sh/AndroidConfig.h	249;"	d
HAVE_LINUX_LOCAL_SOCKET_NAMESPACE	include/arch/linux-sh/AndroidConfig.h	224;"	d
HAVE_LITTLE_ENDIAN	include/arch/linux-sh/AndroidConfig.h	166;"	d
HAVE_MADVISE	include/arch/linux-sh/AndroidConfig.h	234;"	d
HAVE_MALLOC_H	include/arch/linux-sh/AndroidConfig.h	214;"	d
HAVE_OOM_ADJ	include/arch/linux-sh/AndroidConfig.h	76;"	d
HAVE_POSIX_CLOCKS	include/arch/linux-sh/AndroidConfig.h	145;"	d
HAVE_POSIX_FILEMAP	include/arch/linux-sh/AndroidConfig.h	94;"	d
HAVE_PRCTL	include/arch/linux-sh/AndroidConfig.h	325;"	d
HAVE_PREAD	include/arch/linux-sh/AndroidConfig.h	352;"	d
HAVE_PRINTF_ZD	include/arch/linux-sh/AndroidConfig.h	362;"	d
HAVE_PTHREADS	include/arch/linux-sh/AndroidConfig.h	42;"	d
HAVE_SA_NOCLDWAIT	include/arch/linux-sh/AndroidConfig.h	290;"	d
HAVE_SCHED_SETSCHEDULER	include/arch/linux-sh/AndroidConfig.h	204;"	d
HAVE_STAT_ST_MTIM	include/arch/linux-sh/AndroidConfig.h	357;"	d
HAVE_STRLCPY	include/arch/linux-sh/AndroidConfig.h	310;"	d
HAVE_SYMLINKS	include/arch/linux-sh/AndroidConfig.h	120;"	d
HAVE_SYS_SENDFILE_H	include/arch/linux-sh/AndroidConfig.h	104;"	d
HAVE_SYS_SOCKET_H	include/arch/linux-sh/AndroidConfig.h	305;"	d
HAVE_SYS_UIO_H	include/arch/linux-sh/AndroidConfig.h	114;"	d
HAVE_TERMIO_H	include/arch/linux-sh/AndroidConfig.h	99;"	d
HAVE_TM_GMTOFF	include/arch/linux-sh/AndroidConfig.h	239;"	d
HAVE_UNWIND_CONTEXT_STRUCT	include/arch/linux-sh/AndroidConfig.h	347;"	d
HAVE_WRITEV	include/arch/linux-sh/AndroidConfig.h	330;"	d
MINCORE_POINTER_TYPE	include/arch/linux-sh/AndroidConfig.h	285;"	d
N_TTY	include/arch/linux-sh/AndroidConfig.h	342;"	d
OS_CASE_SENSITIVE	include/arch/linux-sh/AndroidConfig.h	300;"	d
OS_PATH_SEPARATOR	include/arch/linux-sh/AndroidConfig.h	295;"	d
OS_SHARED_LIB_FORMAT_STR	include/arch/linux-sh/AndroidConfig.h	270;"	d
_ANDROID_CONFIG_H	include/arch/linux-sh/AndroidConfig.h	21;"	d
ARCH_X86	include/arch/linux-x86/AndroidConfig.h	212;"	d
HAVE_BACKTRACE	include/arch/linux-x86/AndroidConfig.h	171;"	d
HAVE_CXXABI	include/arch/linux-x86/AndroidConfig.h	184;"	d
HAVE_DIRENT_D_TYPE	include/arch/linux-x86/AndroidConfig.h	233;"	d
HAVE_DLADDR	include/arch/linux-x86/AndroidConfig.h	178;"	d
HAVE_ENDIAN_H	include/arch/linux-x86/AndroidConfig.h	155;"	d
HAVE_EPOLL	include/arch/linux-x86/AndroidConfig.h	146;"	d
HAVE_FORKEXEC	include/arch/linux-x86/AndroidConfig.h	56;"	d
HAVE_FUTEX	include/arch/linux-x86/AndroidConfig.h	48;"	d
HAVE_GETHOSTBYNAME_R	include/arch/linux-x86/AndroidConfig.h	117;"	d
HAVE_IOCTL	include/arch/linux-x86/AndroidConfig.h	122;"	d
HAVE_LITTLE_ENDIAN	include/arch/linux-x86/AndroidConfig.h	156;"	d
HAVE_LOCALTIME_R	include/arch/linux-x86/AndroidConfig.h	112;"	d
HAVE_MADVISE	include/arch/linux-x86/AndroidConfig.h	223;"	d
HAVE_MALLOC_H	include/arch/linux-x86/AndroidConfig.h	203;"	d
HAVE_OOM_ADJ	include/arch/linux-x86/AndroidConfig.h	63;"	d
HAVE_OPEN_MEMSTREAM	include/arch/linux-x86/AndroidConfig.h	284;"	d
HAVE_POSIX_FILEMAP	include/arch/linux-x86/AndroidConfig.h	81;"	d
HAVE_PRCTL	include/arch/linux-x86/AndroidConfig.h	294;"	d
HAVE_PREAD	include/arch/linux-x86/AndroidConfig.h	319;"	d
HAVE_PRINTF_ZD	include/arch/linux-x86/AndroidConfig.h	329;"	d
HAVE_PTHREADS	include/arch/linux-x86/AndroidConfig.h	42;"	d
HAVE_SA_NOCLDWAIT	include/arch/linux-x86/AndroidConfig.h	259;"	d
HAVE_SCHED_H	include/arch/linux-x86/AndroidConfig.h	314;"	d
HAVE_SCHED_SETSCHEDULER	include/arch/linux-x86/AndroidConfig.h	194;"	d
HAVE_STAT_ST_MTIM	include/arch/linux-x86/AndroidConfig.h	324;"	d
HAVE_STDBOOL_H	include/arch/linux-x86/AndroidConfig.h	309;"	d
HAVE_STDINT_H	include/arch/linux-x86/AndroidConfig.h	304;"	d
HAVE_SYMLINKS	include/arch/linux-x86/AndroidConfig.h	107;"	d
HAVE_SYSTEM_PROPERTY_SERVER	include/arch/linux-x86/AndroidConfig.h	244;"	d
HAVE_SYSV_IPC	include/arch/linux-x86/AndroidConfig.h	73;"	d
HAVE_SYS_SENDFILE_H	include/arch/linux-x86/AndroidConfig.h	91;"	d
HAVE_SYS_SOCKET_H	include/arch/linux-x86/AndroidConfig.h	274;"	d
HAVE_SYS_UIO_H	include/arch/linux-x86/AndroidConfig.h	101;"	d
HAVE_TERMIO_H	include/arch/linux-x86/AndroidConfig.h	86;"	d
HAVE_TM_GMTOFF	include/arch/linux-x86/AndroidConfig.h	228;"	d
HAVE_WRITEV	include/arch/linux-x86/AndroidConfig.h	299;"	d
MINCORE_POINTER_TYPE	include/arch/linux-x86/AndroidConfig.h	254;"	d
OS_CASE_SENSITIVE	include/arch/linux-x86/AndroidConfig.h	269;"	d
OS_PATH_SEPARATOR	include/arch/linux-x86/AndroidConfig.h	264;"	d
OS_SHARED_LIB_FORMAT_STR	include/arch/linux-x86/AndroidConfig.h	249;"	d
_ANDROID_CONFIG_H	include/arch/linux-x86/AndroidConfig.h	21;"	d
_FILE_OFFSET_BITS	include/arch/linux-x86/AndroidConfig.h	163;"	d
_LARGEFILE_SOURCE	include/arch/linux-x86/AndroidConfig.h	164;"	d
ARCH_X86	include/arch/target_linux-x86/AndroidConfig.h	256;"	d
HAVE_ANDROID_IPC	include/arch/target_linux-x86/AndroidConfig.h	72;"	d
HAVE_ANDROID_OS	include/arch/target_linux-x86/AndroidConfig.h	210;"	d
HAVE_ANDROID_PTHREAD_SETNAME_NP	include/arch/target_linux-x86/AndroidConfig.h	36;"	d
HAVE_BACKTRACE	include/arch/target_linux-x86/AndroidConfig.h	170;"	d
HAVE_CXXABI	include/arch/target_linux-x86/AndroidConfig.h	183;"	d
HAVE_DBUS	include/arch/target_linux-x86/AndroidConfig.h	230;"	d
HAVE_DIRENT_D_TYPE	include/arch/target_linux-x86/AndroidConfig.h	240;"	d
HAVE_DLADDR	include/arch/target_linux-x86/AndroidConfig.h	177;"	d
HAVE_ENDIAN_H	include/arch/target_linux-x86/AndroidConfig.h	152;"	d
HAVE_EPOLL	include/arch/target_linux-x86/AndroidConfig.h	143;"	d
HAVE_FORKEXEC	include/arch/target_linux-x86/AndroidConfig.h	55;"	d
HAVE_FUNOPEN	include/arch/target_linux-x86/AndroidConfig.h	306;"	d
HAVE_FUTEX	include/arch/target_linux-x86/AndroidConfig.h	41;"	d
HAVE_FUTEX_WRAPPERS	include/arch/target_linux-x86/AndroidConfig.h	47;"	d
HAVE_GETTID	include/arch/target_linux-x86/AndroidConfig.h	188;"	d
HAVE_INOTIFY	include/arch/target_linux-x86/AndroidConfig.h	220;"	d
HAVE_IOCTL	include/arch/target_linux-x86/AndroidConfig.h	121;"	d
HAVE_LIBC_SYSTEM_PROPERTIES	include/arch/target_linux-x86/AndroidConfig.h	245;"	d
HAVE_LINUX_LOCAL_SOCKET_NAMESPACE	include/arch/target_linux-x86/AndroidConfig.h	215;"	d
HAVE_LITTLE_ENDIAN	include/arch/target_linux-x86/AndroidConfig.h	153;"	d
HAVE_MADVISE	include/arch/target_linux-x86/AndroidConfig.h	225;"	d
HAVE_MALLOC_H	include/arch/target_linux-x86/AndroidConfig.h	205;"	d
HAVE_OOM_ADJ	include/arch/target_linux-x86/AndroidConfig.h	62;"	d
HAVE_POSIX_CLOCKS	include/arch/target_linux-x86/AndroidConfig.h	132;"	d
HAVE_POSIX_FILEMAP	include/arch/target_linux-x86/AndroidConfig.h	80;"	d
HAVE_PRCTL	include/arch/target_linux-x86/AndroidConfig.h	311;"	d
HAVE_PREAD	include/arch/target_linux-x86/AndroidConfig.h	336;"	d
HAVE_PRINTF_ZD	include/arch/target_linux-x86/AndroidConfig.h	346;"	d
HAVE_PTHREADS	include/arch/target_linux-x86/AndroidConfig.h	28;"	d
HAVE_SA_NOCLDWAIT	include/arch/target_linux-x86/AndroidConfig.h	276;"	d
HAVE_SCHED_H	include/arch/target_linux-x86/AndroidConfig.h	331;"	d
HAVE_SCHED_SETSCHEDULER	include/arch/target_linux-x86/AndroidConfig.h	193;"	d
HAVE_STAT_ST_MTIM	include/arch/target_linux-x86/AndroidConfig.h	341;"	d
HAVE_STDBOOL_H	include/arch/target_linux-x86/AndroidConfig.h	326;"	d
HAVE_STDINT_H	include/arch/target_linux-x86/AndroidConfig.h	321;"	d
HAVE_STRLCPY	include/arch/target_linux-x86/AndroidConfig.h	296;"	d
HAVE_SYMLINKS	include/arch/target_linux-x86/AndroidConfig.h	106;"	d
HAVE_SYS_SENDFILE_H	include/arch/target_linux-x86/AndroidConfig.h	90;"	d
HAVE_SYS_SOCKET_H	include/arch/target_linux-x86/AndroidConfig.h	291;"	d
HAVE_SYS_UIO_H	include/arch/target_linux-x86/AndroidConfig.h	100;"	d
HAVE_TERMIO_H	include/arch/target_linux-x86/AndroidConfig.h	85;"	d
HAVE_TIMEDWAIT_MONOTONIC	include/arch/target_linux-x86/AndroidConfig.h	138;"	d
HAVE_TM_GMTOFF	include/arch/target_linux-x86/AndroidConfig.h	235;"	d
HAVE_UNWIND_CONTEXT_STRUCT	include/arch/target_linux-x86/AndroidConfig.h	316;"	d
MINCORE_POINTER_TYPE	include/arch/target_linux-x86/AndroidConfig.h	271;"	d
OS_CASE_SENSITIVE	include/arch/target_linux-x86/AndroidConfig.h	286;"	d
OS_PATH_SEPARATOR	include/arch/target_linux-x86/AndroidConfig.h	281;"	d
OS_SHARED_LIB_FORMAT_STR	include/arch/target_linux-x86/AndroidConfig.h	261;"	d
_ANDROID_CONFIG_H	include/arch/target_linux-x86/AndroidConfig.h	7;"	d
__linux__	include/arch/target_linux-x86/AndroidConfig.h	199;"	d
ARCH_X86	include/arch/windows/AndroidConfig.h	237;"	d
HAVE_BACKTRACE	include/arch/windows/AndroidConfig.h	184;"	d
HAVE_CXXABI	include/arch/windows/AndroidConfig.h	197;"	d
HAVE_DLADDR	include/arch/windows/AndroidConfig.h	191;"	d
HAVE_ENDIAN_H	include/arch/windows/AndroidConfig.h	166;"	d
HAVE_FORKEXEC	include/arch/windows/AndroidConfig.h	62;"	d
HAVE_LITTLE_ENDIAN	include/arch/windows/AndroidConfig.h	169;"	d
HAVE_MS_C_RUNTIME	include/arch/windows/AndroidConfig.h	114;"	d
HAVE_POSIX_FILEMAP	include/arch/windows/AndroidConfig.h	91;"	d
HAVE_STDBOOL_H	include/arch/windows/AndroidConfig.h	314;"	d
HAVE_SYS_SENDFILE_H	include/arch/windows/AndroidConfig.h	107;"	d
HAVE_SYS_SOCKET_H	include/arch/windows/AndroidConfig.h	266;"	d
HAVE_SYS_UIO_H	include/arch/windows/AndroidConfig.h	121;"	d
HAVE_TERMIO_H	include/arch/windows/AndroidConfig.h	100;"	d
HAVE_WIN32_FILEMAP	include/arch/windows/AndroidConfig.h	93;"	d
HAVE_WIN32_IPC	include/arch/windows/AndroidConfig.h	82;"	d
HAVE_WIN32_PROC	include/arch/windows/AndroidConfig.h	64;"	d
HAVE_WIN32_THREADS	include/arch/windows/AndroidConfig.h	46;"	d
HAVE_WINDOWS_PATHS	include/arch/windows/AndroidConfig.h	232;"	d
HAVE_WINSOCK	include/arch/windows/AndroidConfig.h	144;"	d
HAVE_WINSOCK2_H	include/arch/windows/AndroidConfig.h	289;"	d
MINCORE_POINTER_TYPE	include/arch/windows/AndroidConfig.h	247;"	d
OS_PATH_SEPARATOR	include/arch/windows/AndroidConfig.h	252;"	d
OS_SHARED_LIB_FORMAT_STR	include/arch/windows/AndroidConfig.h	242;"	d
S_IRGRP	include/arch/windows/AndroidConfig.h	298;"	d
WIN32	include/arch/windows/AndroidConfig.h	228;"	d
_ANDROID_CONFIG_H	include/arch/windows/AndroidConfig.h	26;"	d
_FILE_OFFSET_BITS	include/arch/windows/AndroidConfig.h	176;"	d
_LARGEFILE_SOURCE	include/arch/windows/AndroidConfig.h	177;"	d
_WIN32	include/arch/windows/AndroidConfig.h	229;"	d
_WIN32_WINNT	include/arch/windows/AndroidConfig.h	230;"	d
ANDROID_BINDER_H	include/binder/Binder.h	18;"	d
BBinder	include/binder/Binder.h	/^class BBinder : public IBinder$/;"	c	namespace:android
BpRefBase	include/binder/Binder.h	/^class BpRefBase : public virtual RefBase$/;"	c	namespace:android
android	include/binder/Binder.h	/^namespace android {$/;"	n
mExtras	include/binder/Binder.h	/^            Extras*     mExtras;$/;"	m	class:android::BBinder
mRefs	include/binder/Binder.h	/^    RefBase::weakref_type*  mRefs;$/;"	m	class:android::BpRefBase
mRemote	include/binder/Binder.h	/^    IBinder* const          mRemote;$/;"	m	class:android::BpRefBase
mReserved0	include/binder/Binder.h	/^            void*       mReserved0;$/;"	m	class:android::BBinder
mState	include/binder/Binder.h	/^    volatile int32_t        mState;$/;"	m	class:android::BpRefBase
remote	include/binder/Binder.h	/^    inline  IBinder*        remote()                { return mRemote; }$/;"	f	class:android::BpRefBase
remote	include/binder/Binder.h	/^    inline  IBinder*        remote() const          { return mRemote; }$/;"	f	class:android::BpRefBase
ANDROID_BINDER_SERVICE_H	include/binder/BinderService.h	18;"	d
BinderService	include/binder/BinderService.h	/^class BinderService$/;"	c	namespace:android
android	include/binder/BinderService.h	/^namespace android {$/;"	n
instantiate	include/binder/BinderService.h	/^    static void instantiate() { publish(); }$/;"	f	class:android::BinderService
publish	include/binder/BinderService.h	/^    static status_t publish() {$/;"	f	class:android::BinderService
publishAndJoinThreadPool	include/binder/BinderService.h	/^    static void publishAndJoinThreadPool() {$/;"	f	class:android::BinderService
shutdown	include/binder/BinderService.h	/^    static status_t shutdown() {$/;"	f	class:android::BinderService
ANDROID_BPBINDER_H	include/binder/BpBinder.h	18;"	d
BpBinder	include/binder/BpBinder.h	/^class BpBinder : public IBinder$/;"	c	namespace:android
Obituary	include/binder/BpBinder.h	/^    struct Obituary {$/;"	s	class:android::BpBinder
ObjectManager	include/binder/BpBinder.h	/^    class ObjectManager$/;"	c	class:android::BpBinder
android	include/binder/BpBinder.h	/^namespace android {$/;"	n
cleanupCookie	include/binder/BpBinder.h	/^            void* cleanupCookie;$/;"	m	struct:android::BpBinder::ObjectManager::entry_t
cookie	include/binder/BpBinder.h	/^        void* cookie;$/;"	m	struct:android::BpBinder::Obituary
entry_t	include/binder/BpBinder.h	/^        struct entry_t$/;"	s	class:android::BpBinder::ObjectManager
flags	include/binder/BpBinder.h	/^        uint32_t flags;$/;"	m	struct:android::BpBinder::Obituary
func	include/binder/BpBinder.h	/^            IBinder::object_cleanup_func func;$/;"	m	struct:android::BpBinder::ObjectManager::entry_t
handle	include/binder/BpBinder.h	/^    inline  int32_t     handle() const { return mHandle; }$/;"	f	class:android::BpBinder
mAlive	include/binder/BpBinder.h	/^            volatile int32_t    mAlive;$/;"	m	class:android::BpBinder
mConstantData	include/binder/BpBinder.h	/^            Parcel*             mConstantData;$/;"	m	class:android::BpBinder
mDescriptorCache	include/binder/BpBinder.h	/^    mutable String16            mDescriptorCache;$/;"	m	class:android::BpBinder
mHandle	include/binder/BpBinder.h	/^    const   int32_t             mHandle;$/;"	m	class:android::BpBinder
mLock	include/binder/BpBinder.h	/^    mutable Mutex               mLock;$/;"	m	class:android::BpBinder
mObitsSent	include/binder/BpBinder.h	/^            volatile int32_t    mObitsSent;$/;"	m	class:android::BpBinder
mObituaries	include/binder/BpBinder.h	/^            Vector<Obituary>*   mObituaries;$/;"	m	class:android::BpBinder
mObjects	include/binder/BpBinder.h	/^            ObjectManager       mObjects;$/;"	m	class:android::BpBinder
mObjects	include/binder/BpBinder.h	/^        KeyedVector<const void*, entry_t> mObjects;$/;"	m	class:android::BpBinder::ObjectManager
object	include/binder/BpBinder.h	/^            void* object;$/;"	m	struct:android::BpBinder::ObjectManager::entry_t
recipient	include/binder/BpBinder.h	/^        wp<DeathRecipient> recipient;$/;"	m	struct:android::BpBinder::Obituary
ANDROID_IBINDER_H	include/binder/IBinder.h	18;"	d
B_PACK_CHARS	include/binder/IBinder.h	26;"	d
DUMP_TRANSACTION	include/binder/IBinder.h	/^        DUMP_TRANSACTION        = B_PACK_CHARS('_','D','M','P'),$/;"	e	enum:android::IBinder::__anon183
DeathRecipient	include/binder/IBinder.h	/^    class DeathRecipient : public virtual RefBase$/;"	c	class:android::IBinder
FIRST_CALL_TRANSACTION	include/binder/IBinder.h	/^        FIRST_CALL_TRANSACTION  = 0x00000001,$/;"	e	enum:android::IBinder::__anon183
FLAG_ONEWAY	include/binder/IBinder.h	/^        FLAG_ONEWAY             = 0x00000001$/;"	e	enum:android::IBinder::__anon183
IBinder	include/binder/IBinder.h	/^class IBinder : public virtual RefBase$/;"	c	namespace:android
INTERFACE_TRANSACTION	include/binder/IBinder.h	/^        INTERFACE_TRANSACTION   = B_PACK_CHARS('_', 'N', 'T', 'F'),$/;"	e	enum:android::IBinder::__anon183
LAST_CALL_TRANSACTION	include/binder/IBinder.h	/^        LAST_CALL_TRANSACTION   = 0x00ffffff,$/;"	e	enum:android::IBinder::__anon183
PING_TRANSACTION	include/binder/IBinder.h	/^        PING_TRANSACTION        = B_PACK_CHARS('_','P','N','G'),$/;"	e	enum:android::IBinder::__anon183
android	include/binder/IBinder.h	/^namespace android {$/;"	n
object_cleanup_func	include/binder/IBinder.h	/^    typedef void (*object_cleanup_func)(const void* id, void* obj, void* cleanupCookie);$/;"	t	class:android::IBinder
ANDROID_IINTERFACE_H	include/binder/IInterface.h	19;"	d
BnInterface	include/binder/IInterface.h	/^class BnInterface : public INTERFACE, public BBinder$/;"	c	namespace:android
BpInterface	include/binder/IInterface.h	/^class BpInterface : public INTERFACE, public BpRefBase$/;"	c	namespace:android
BpInterface	include/binder/IInterface.h	/^inline BpInterface<INTERFACE>::BpInterface(const sp<IBinder>& remote)$/;"	f	class:android::BpInterface
CHECK_INTERFACE	include/binder/IInterface.h	107;"	d
DECLARE_META_INTERFACE	include/binder/IInterface.h	74;"	d
IInterface	include/binder/IInterface.h	/^class IInterface : public virtual RefBase$/;"	c	namespace:android
IMPLEMENT_META_INTERFACE	include/binder/IInterface.h	83;"	d
android	include/binder/IInterface.h	/^namespace android {$/;"	n
getInterfaceDescriptor	include/binder/IInterface.h	/^inline const String16& BnInterface<INTERFACE>::getInterfaceDescriptor() const$/;"	f	class:android::BnInterface
interface_cast	include/binder/IInterface.h	/^inline sp<INTERFACE> interface_cast(const sp<IBinder>& obj)$/;"	f	namespace:android
onAsBinder	include/binder/IInterface.h	/^IBinder* BnInterface<INTERFACE>::onAsBinder()$/;"	f	class:android::BnInterface
onAsBinder	include/binder/IInterface.h	/^inline IBinder* BpInterface<INTERFACE>::onAsBinder()$/;"	f	class:android::BpInterface
queryLocalInterface	include/binder/IInterface.h	/^inline sp<IInterface> BnInterface<INTERFACE>::queryLocalInterface($/;"	f	class:android::BnInterface
ANDROID_IMEMORY_H	include/binder/IMemory.h	18;"	d
BnMemory	include/binder/IMemory.h	/^class BnMemory : public BnInterface<IMemory>$/;"	c	namespace:android
BnMemoryHeap	include/binder/IMemory.h	/^class BnMemoryHeap : public BnInterface<IMemoryHeap>$/;"	c	namespace:android
IMemory	include/binder/IMemory.h	/^class IMemory : public IInterface$/;"	c	namespace:android
IMemoryHeap	include/binder/IMemory.h	/^class IMemoryHeap : public IInterface$/;"	c	namespace:android
READ_ONLY	include/binder/IMemory.h	/^        READ_ONLY   = 0x00000001$/;"	e	enum:android::IMemoryHeap::__anon184
android	include/binder/IMemory.h	/^namespace android {$/;"	n
base	include/binder/IMemory.h	/^    void*   base() const  { return getBase(); }$/;"	f	class:android::IMemoryHeap
heapID	include/binder/IMemory.h	/^    int32_t heapID() const { return getHeapID(); }$/;"	f	class:android::IMemoryHeap
virtualSize	include/binder/IMemory.h	/^    size_t  virtualSize() const { return getSize(); }$/;"	f	class:android::IMemoryHeap
ANDROID_IPC_THREAD_STATE_H	include/binder/IPCThreadState.h	18;"	d
IPCThreadState	include/binder/IPCThreadState.h	/^class IPCThreadState$/;"	c	namespace:android
android	include/binder/IPCThreadState.h	/^namespace android {$/;"	n
mCallingPid	include/binder/IPCThreadState.h	/^            pid_t               mCallingPid;$/;"	m	class:android::IPCThreadState
mCallingUid	include/binder/IPCThreadState.h	/^            uid_t               mCallingUid;$/;"	m	class:android::IPCThreadState
mIn	include/binder/IPCThreadState.h	/^            Parcel              mIn;$/;"	m	class:android::IPCThreadState
mLastError	include/binder/IPCThreadState.h	/^            status_t            mLastError;$/;"	m	class:android::IPCThreadState
mLastTransactionBinderFlags	include/binder/IPCThreadState.h	/^            int32_t             mLastTransactionBinderFlags;$/;"	m	class:android::IPCThreadState
mMyThreadId	include/binder/IPCThreadState.h	/^    const   pid_t               mMyThreadId;$/;"	m	class:android::IPCThreadState
mOut	include/binder/IPCThreadState.h	/^            Parcel              mOut;$/;"	m	class:android::IPCThreadState
mPendingStrongDerefs	include/binder/IPCThreadState.h	/^            Vector<BBinder*>    mPendingStrongDerefs;$/;"	m	class:android::IPCThreadState
mPendingWeakDerefs	include/binder/IPCThreadState.h	/^            Vector<RefBase::weakref_type*> mPendingWeakDerefs;$/;"	m	class:android::IPCThreadState
mProcess	include/binder/IPCThreadState.h	/^    const   sp<ProcessState>    mProcess;$/;"	m	class:android::IPCThreadState
mStrictModePolicy	include/binder/IPCThreadState.h	/^            int32_t             mStrictModePolicy;$/;"	m	class:android::IPCThreadState
uid_t	include/binder/IPCThreadState.h	/^typedef  int  uid_t;$/;"	t
ANDROID_IPERMISSION_CONTROLLER_H	include/binder/IPermissionController.h	19;"	d
BnPermissionController	include/binder/IPermissionController.h	/^class BnPermissionController : public BnInterface<IPermissionController>$/;"	c	namespace:android
CHECK_PERMISSION_TRANSACTION	include/binder/IPermissionController.h	/^        CHECK_PERMISSION_TRANSACTION = IBinder::FIRST_CALL_TRANSACTION$/;"	e	enum:android::IPermissionController::__anon182
IPermissionController	include/binder/IPermissionController.h	/^class IPermissionController : public IInterface$/;"	c	namespace:android
android	include/binder/IPermissionController.h	/^namespace android {$/;"	n
ADD_SERVICE_TRANSACTION	include/binder/IServiceManager.h	/^        ADD_SERVICE_TRANSACTION,$/;"	e	enum:android::IServiceManager::__anon180
ANDROID_ISERVICE_MANAGER_H	include/binder/IServiceManager.h	19;"	d
BnServiceManager	include/binder/IServiceManager.h	/^class BnServiceManager : public BnInterface<IServiceManager>$/;"	c	namespace:android
CHECK_SERVICE_TRANSACTION	include/binder/IServiceManager.h	/^        CHECK_SERVICE_TRANSACTION,$/;"	e	enum:android::IServiceManager::__anon180
GET_SERVICE_TRANSACTION	include/binder/IServiceManager.h	/^        GET_SERVICE_TRANSACTION = IBinder::FIRST_CALL_TRANSACTION,$/;"	e	enum:android::IServiceManager::__anon180
IServiceManager	include/binder/IServiceManager.h	/^class IServiceManager : public IInterface$/;"	c	namespace:android
LIST_SERVICES_TRANSACTION	include/binder/IServiceManager.h	/^        LIST_SERVICES_TRANSACTION,$/;"	e	enum:android::IServiceManager::__anon180
android	include/binder/IServiceManager.h	/^namespace android {$/;"	n
getService	include/binder/IServiceManager.h	/^status_t getService(const String16& name, sp<INTERFACE>* outService)$/;"	f	namespace:android
ANDROID_MEMORY_BASE_H	include/binder/MemoryBase.h	18;"	d
MemoryBase	include/binder/MemoryBase.h	/^class MemoryBase : public BnMemory $/;"	c	namespace:android
android	include/binder/MemoryBase.h	/^namespace android {$/;"	n
getHeap	include/binder/MemoryBase.h	/^    const sp<IMemoryHeap>& getHeap() const { return mHeap; }$/;"	f	class:android::MemoryBase
getOffset	include/binder/MemoryBase.h	/^    ssize_t getOffset() const { return mOffset; }$/;"	f	class:android::MemoryBase
getSize	include/binder/MemoryBase.h	/^    size_t getSize() const { return mSize; }$/;"	f	class:android::MemoryBase
mHeap	include/binder/MemoryBase.h	/^    sp<IMemoryHeap> mHeap;$/;"	m	class:android::MemoryBase
mOffset	include/binder/MemoryBase.h	/^    ssize_t         mOffset;$/;"	m	class:android::MemoryBase
mSize	include/binder/MemoryBase.h	/^    size_t          mSize;$/;"	m	class:android::MemoryBase
ANDROID_MEMORY_DEALER_H	include/binder/MemoryDealer.h	18;"	d
MemoryDealer	include/binder/MemoryDealer.h	/^class MemoryDealer : public RefBase$/;"	c	namespace:android
android	include/binder/MemoryDealer.h	/^namespace android {$/;"	n
getMemoryHeap	include/binder/MemoryDealer.h	/^    sp<IMemoryHeap> getMemoryHeap() const { return heap(); }$/;"	f	class:android::MemoryDealer
mAllocator	include/binder/MemoryDealer.h	/^    SimpleBestFitAllocator*     mAllocator;$/;"	m	class:android::MemoryDealer
mHeap	include/binder/MemoryDealer.h	/^    sp<IMemoryHeap>             mHeap;$/;"	m	class:android::MemoryDealer
ANDROID_MEMORY_HEAP_BASE_H	include/binder/MemoryHeapBase.h	18;"	d
DONT_MAP_LOCALLY	include/binder/MemoryHeapBase.h	/^        DONT_MAP_LOCALLY = 0x00000100,$/;"	e	enum:android::MemoryHeapBase::__anon181
MemoryHeapBase	include/binder/MemoryHeapBase.h	/^class MemoryHeapBase : public virtual BnMemoryHeap $/;"	c	namespace:android
NO_CACHING	include/binder/MemoryHeapBase.h	/^        NO_CACHING = 0x00000200$/;"	e	enum:android::MemoryHeapBase::__anon181
READ_ONLY	include/binder/MemoryHeapBase.h	/^        READ_ONLY = IMemoryHeap::READ_ONLY,$/;"	e	enum:android::MemoryHeapBase::__anon181
android	include/binder/MemoryHeapBase.h	/^namespace android {$/;"	n
mBase	include/binder/MemoryHeapBase.h	/^    void*       mBase;$/;"	m	class:android::MemoryHeapBase
mDevice	include/binder/MemoryHeapBase.h	/^    const char* mDevice;$/;"	m	class:android::MemoryHeapBase
mFD	include/binder/MemoryHeapBase.h	/^    int         mFD;$/;"	m	class:android::MemoryHeapBase
mFlags	include/binder/MemoryHeapBase.h	/^    uint32_t    mFlags;$/;"	m	class:android::MemoryHeapBase
mNeedUnmap	include/binder/MemoryHeapBase.h	/^    bool        mNeedUnmap;$/;"	m	class:android::MemoryHeapBase
mSize	include/binder/MemoryHeapBase.h	/^    size_t      mSize;$/;"	m	class:android::MemoryHeapBase
setDevice	include/binder/MemoryHeapBase.h	/^    status_t setDevice(const char* device) {$/;"	f	class:android::MemoryHeapBase
ANDROID_MEMORY_HEAP_PMEM_H	include/binder/MemoryHeapPmem.h	18;"	d
MemoryHeapPmem	include/binder/MemoryHeapPmem.h	/^class MemoryHeapPmem : public MemoryHeapBase$/;"	c	namespace:android
MemoryPmem	include/binder/MemoryHeapPmem.h	/^    class MemoryPmem : public BnMemory {$/;"	c	class:android::MemoryHeapPmem
android	include/binder/MemoryHeapPmem.h	/^namespace android {$/;"	n
getHeap	include/binder/MemoryHeapPmem.h	/^        const sp<MemoryHeapPmem>&  getHeap() const { return mClientHeap; }$/;"	f	class:android::MemoryHeapPmem::MemoryPmem
mAllocations	include/binder/MemoryHeapPmem.h	/^    SortedVector< wp<MemoryPmem> >  mAllocations;$/;"	m	class:android::MemoryHeapPmem
mClientHeap	include/binder/MemoryHeapPmem.h	/^        sp<MemoryHeapPmem>  mClientHeap;$/;"	m	class:android::MemoryHeapPmem::MemoryPmem
mLock	include/binder/MemoryHeapPmem.h	/^    mutable Mutex                   mLock;$/;"	m	class:android::MemoryHeapPmem
mParentHeap	include/binder/MemoryHeapPmem.h	/^    sp<MemoryHeapBase>              mParentHeap;$/;"	m	class:android::MemoryHeapPmem
ANDROID_PARCEL_H	include/binder/Parcel.h	18;"	d
Parcel	include/binder/Parcel.h	/^class Parcel$/;"	c	namespace:android
android	include/binder/Parcel.h	/^namespace android {$/;"	n
mData	include/binder/Parcel.h	/^    uint8_t*            mData;$/;"	m	class:android::Parcel
mDataCapacity	include/binder/Parcel.h	/^    size_t              mDataCapacity;$/;"	m	class:android::Parcel
mDataPos	include/binder/Parcel.h	/^    mutable size_t      mDataPos;$/;"	m	class:android::Parcel
mDataSize	include/binder/Parcel.h	/^    size_t              mDataSize;$/;"	m	class:android::Parcel
mError	include/binder/Parcel.h	/^    status_t            mError;$/;"	m	class:android::Parcel
mFdsKnown	include/binder/Parcel.h	/^    mutable bool        mFdsKnown;$/;"	m	class:android::Parcel
mHasFds	include/binder/Parcel.h	/^    mutable bool        mHasFds;$/;"	m	class:android::Parcel
mNextObjectHint	include/binder/Parcel.h	/^    mutable size_t      mNextObjectHint;$/;"	m	class:android::Parcel
mObjects	include/binder/Parcel.h	/^    size_t*             mObjects;$/;"	m	class:android::Parcel
mObjectsCapacity	include/binder/Parcel.h	/^    size_t              mObjectsCapacity;$/;"	m	class:android::Parcel
mObjectsSize	include/binder/Parcel.h	/^    size_t              mObjectsSize;$/;"	m	class:android::Parcel
mOwner	include/binder/Parcel.h	/^    release_func        mOwner;$/;"	m	class:android::Parcel
mOwnerCookie	include/binder/Parcel.h	/^    void*               mOwnerCookie;$/;"	m	class:android::Parcel
operator <<	include/binder/Parcel.h	/^inline TextOutput& operator<<(TextOutput& to, const Parcel& parcel)$/;"	f	namespace:android
release_func	include/binder/Parcel.h	/^    typedef void        (*release_func)(Parcel* parcel,$/;"	t	class:android::Parcel
BINDER_PERMISSION_H	include/binder/Permission.h	18;"	d
Permission	include/binder/Permission.h	/^class Permission$/;"	c	namespace:android
android	include/binder/Permission.h	/^namespace android {$/;"	n
mGranted	include/binder/Permission.h	/^    mutable SortedVector<uid_t> mGranted;$/;"	m	class:android::Permission
mLock	include/binder/Permission.h	/^    mutable Mutex mLock;$/;"	m	class:android::Permission
mPermissionName	include/binder/Permission.h	/^    const String16 mPermissionName;$/;"	m	class:android::Permission
mPid	include/binder/Permission.h	/^    const pid_t mPid;$/;"	m	class:android::Permission
ANDROID_PROCESS_STATE_H	include/binder/ProcessState.h	18;"	d
ProcessState	include/binder/ProcessState.h	/^class ProcessState : public virtual RefBase$/;"	c	namespace:android
android	include/binder/ProcessState.h	/^namespace android {$/;"	n
binder	include/binder/ProcessState.h	/^                IBinder* binder;$/;"	m	struct:android::ProcessState::handle_entry
context_check_func	include/binder/ProcessState.h	/^    typedef bool (*context_check_func)(const String16& name,$/;"	t	class:android::ProcessState
handle_entry	include/binder/ProcessState.h	/^            struct handle_entry {$/;"	s	class:android::ProcessState
mBinderContextCheckFunc	include/binder/ProcessState.h	/^            context_check_func  mBinderContextCheckFunc;$/;"	m	class:android::ProcessState
mBinderContextUserData	include/binder/ProcessState.h	/^            void*               mBinderContextUserData;$/;"	m	class:android::ProcessState
mContexts	include/binder/ProcessState.h	/^                                mContexts;$/;"	m	class:android::ProcessState
mDriverFD	include/binder/ProcessState.h	/^            int                 mDriverFD;$/;"	m	class:android::ProcessState
mHandleToObject	include/binder/ProcessState.h	/^            Vector<handle_entry>mHandleToObject;$/;"	m	class:android::ProcessState
mLock	include/binder/ProcessState.h	/^    mutable Mutex               mLock;  \/\/ protects everything below.$/;"	m	class:android::ProcessState
mManagesContexts	include/binder/ProcessState.h	/^            bool                mManagesContexts;$/;"	m	class:android::ProcessState
mRootDir	include/binder/ProcessState.h	/^            String8             mRootDir;$/;"	m	class:android::ProcessState
mThreadPoolSeq	include/binder/ProcessState.h	/^    volatile int32_t            mThreadPoolSeq;$/;"	m	class:android::ProcessState
mThreadPoolStarted	include/binder/ProcessState.h	/^            bool                mThreadPoolStarted;$/;"	m	class:android::ProcessState
mVMStart	include/binder/ProcessState.h	/^            void*               mVMStart;$/;"	m	class:android::ProcessState
refs	include/binder/ProcessState.h	/^                RefBase::weakref_type* refs;$/;"	m	struct:android::ProcessState::handle_entry
ANDROID_HARDWARE_CAMERA_H	include/camera/Camera.h	18;"	d
CAMERA_CMD_SET_DISPLAY_ORIENTATION	include/camera/Camera.h	/^    CAMERA_CMD_SET_DISPLAY_ORIENTATION = 3,$/;"	e	enum:android::__anon122
CAMERA_CMD_START_SMOOTH_ZOOM	include/camera/Camera.h	/^    CAMERA_CMD_START_SMOOTH_ZOOM     = 1,$/;"	e	enum:android::__anon122
CAMERA_CMD_STOP_SMOOTH_ZOOM	include/camera/Camera.h	/^    CAMERA_CMD_STOP_SMOOTH_ZOOM      = 2,$/;"	e	enum:android::__anon122
CAMERA_ERROR_SERVER_DIED	include/camera/Camera.h	/^    CAMERA_ERROR_SERVER_DIED = 100$/;"	e	enum:android::__anon123
CAMERA_ERROR_UKNOWN	include/camera/Camera.h	/^    CAMERA_ERROR_UKNOWN  = 1,$/;"	e	enum:android::__anon123
CAMERA_FACING_BACK	include/camera/Camera.h	/^    CAMERA_FACING_BACK = 0, \/* The facing of the camera is opposite to that of the screen. *\/$/;"	e	enum:android::__anon124
CAMERA_FACING_FRONT	include/camera/Camera.h	/^    CAMERA_FACING_FRONT = 1 \/* The facing of the camera is the same as that of the screen. *\/$/;"	e	enum:android::__anon124
CAMERA_MSG_ALL_MSGS	include/camera/Camera.h	/^    CAMERA_MSG_ALL_MSGS         = 0x1FF$/;"	e	enum:android::__anon121
CAMERA_MSG_COMPRESSED_IMAGE	include/camera/Camera.h	/^    CAMERA_MSG_COMPRESSED_IMAGE = 0x100,$/;"	e	enum:android::__anon121
CAMERA_MSG_ERROR	include/camera/Camera.h	/^    CAMERA_MSG_ERROR            = 0x001,$/;"	e	enum:android::__anon121
CAMERA_MSG_FOCUS	include/camera/Camera.h	/^    CAMERA_MSG_FOCUS            = 0x004,$/;"	e	enum:android::__anon121
CAMERA_MSG_POSTVIEW_FRAME	include/camera/Camera.h	/^    CAMERA_MSG_POSTVIEW_FRAME   = 0x040,$/;"	e	enum:android::__anon121
CAMERA_MSG_PREVIEW_FRAME	include/camera/Camera.h	/^    CAMERA_MSG_PREVIEW_FRAME    = 0x010,$/;"	e	enum:android::__anon121
CAMERA_MSG_RAW_IMAGE	include/camera/Camera.h	/^    CAMERA_MSG_RAW_IMAGE        = 0x080,$/;"	e	enum:android::__anon121
CAMERA_MSG_SHUTTER	include/camera/Camera.h	/^    CAMERA_MSG_SHUTTER          = 0x002,$/;"	e	enum:android::__anon121
CAMERA_MSG_VIDEO_FRAME	include/camera/Camera.h	/^    CAMERA_MSG_VIDEO_FRAME      = 0x020,$/;"	e	enum:android::__anon121
CAMERA_MSG_ZOOM	include/camera/Camera.h	/^    CAMERA_MSG_ZOOM             = 0x008,$/;"	e	enum:android::__anon121
Camera	include/camera/Camera.h	/^class Camera : public BnCameraClient, public IBinder::DeathRecipient$/;"	c	namespace:android
CameraInfo	include/camera/Camera.h	/^struct CameraInfo {$/;"	s	namespace:android
CameraListener	include/camera/Camera.h	/^class CameraListener: virtual public RefBase$/;"	c	namespace:android
DeathNotifier	include/camera/Camera.h	/^                DeathNotifier() {$/;"	f	class:android::Camera::DeathNotifier
DeathNotifier	include/camera/Camera.h	/^            class DeathNotifier: public IBinder::DeathRecipient$/;"	c	class:android::Camera
FRAME_CALLBACK_FLAG_BARCODE_SCANNER	include/camera/Camera.h	66;"	d
FRAME_CALLBACK_FLAG_CAMCORDER	include/camera/Camera.h	64;"	d
FRAME_CALLBACK_FLAG_CAMERA	include/camera/Camera.h	65;"	d
FRAME_CALLBACK_FLAG_COPY_OUT_MASK	include/camera/Camera.h	60;"	d
FRAME_CALLBACK_FLAG_ENABLE_MASK	include/camera/Camera.h	58;"	d
FRAME_CALLBACK_FLAG_NOOP	include/camera/Camera.h	63;"	d
FRAME_CALLBACK_FLAG_ONE_SHOT_MASK	include/camera/Camera.h	59;"	d
android	include/camera/Camera.h	/^namespace android {$/;"	n
facing	include/camera/Camera.h	/^    int facing;$/;"	m	struct:android::CameraInfo
getStatus	include/camera/Camera.h	/^            status_t    getStatus() { return mStatus; }$/;"	f	class:android::Camera
mCamera	include/camera/Camera.h	/^            sp<ICamera>         mCamera;$/;"	m	class:android::Camera
mCameraService	include/camera/Camera.h	/^            static  sp<ICameraService>  mCameraService;$/;"	m	class:android::Camera
mDeathNotifier	include/camera/Camera.h	/^            static sp<DeathNotifier> mDeathNotifier;$/;"	m	class:android::Camera
mListener	include/camera/Camera.h	/^            sp<CameraListener>  mListener;$/;"	m	class:android::Camera
mLock	include/camera/Camera.h	/^            static  Mutex               mLock;$/;"	m	class:android::Camera
mStatus	include/camera/Camera.h	/^            status_t            mStatus;$/;"	m	class:android::Camera
orientation	include/camera/Camera.h	/^    int orientation;$/;"	m	struct:android::CameraInfo
ANDROID_HARDWARE_CAMERA_HARDWARE_INTERFACE_H	include/camera/CameraHardwareInterface.h	18;"	d
CameraHardwareInterface	include/camera/CameraHardwareInterface.h	/^class CameraHardwareInterface : public virtual RefBase {$/;"	c	namespace:android
android	include/camera/CameraHardwareInterface.h	/^namespace android {$/;"	n
data_callback	include/camera/CameraHardwareInterface.h	/^typedef void (*data_callback)(int32_t msgType,$/;"	t	namespace:android
data_callback_timestamp	include/camera/CameraHardwareInterface.h	/^typedef void (*data_callback_timestamp)(nsecs_t timestamp,$/;"	t	namespace:android
height	include/camera/CameraHardwareInterface.h	/^  uint32_t height;     \/* Image height *\/$/;"	m	struct:android::image_rect_struct
image_rect_struct	include/camera/CameraHardwareInterface.h	/^typedef struct image_rect_struct$/;"	s	namespace:android
image_rect_type	include/camera/CameraHardwareInterface.h	/^} image_rect_type;$/;"	t	namespace:android	typeref:struct:android::image_rect_struct
notify_callback	include/camera/CameraHardwareInterface.h	/^typedef void (*notify_callback)(int32_t msgType,$/;"	t	namespace:android
setOverlay	include/camera/CameraHardwareInterface.h	/^    virtual status_t     setOverlay(const sp<Overlay> &overlay) {return BAD_VALUE;}$/;"	f	class:android::CameraHardwareInterface
useOverlay	include/camera/CameraHardwareInterface.h	/^    virtual bool         useOverlay() {return false;}$/;"	f	class:android::CameraHardwareInterface
width	include/camera/CameraHardwareInterface.h	/^  uint32_t width;      \/* Image width *\/$/;"	m	struct:android::image_rect_struct
~CameraHardwareInterface	include/camera/CameraHardwareInterface.h	/^    virtual ~CameraHardwareInterface() { }$/;"	f	class:android::CameraHardwareInterface
ANDROID_HARDWARE_CAMERA_PARAMETERS_H	include/camera/CameraParameters.h	18;"	d
ANTIBANDING_50HZ	include/camera/CameraParameters.h	/^    static const char ANTIBANDING_50HZ[];$/;"	m	class:android::CameraParameters
ANTIBANDING_60HZ	include/camera/CameraParameters.h	/^    static const char ANTIBANDING_60HZ[];$/;"	m	class:android::CameraParameters
ANTIBANDING_AUTO	include/camera/CameraParameters.h	/^    static const char ANTIBANDING_AUTO[];$/;"	m	class:android::CameraParameters
ANTIBANDING_OFF	include/camera/CameraParameters.h	/^    static const char ANTIBANDING_OFF[];$/;"	m	class:android::CameraParameters
CameraParameters	include/camera/CameraParameters.h	/^    CameraParameters(const String8 &params) { unflatten(params); }$/;"	f	class:android::CameraParameters
CameraParameters	include/camera/CameraParameters.h	/^class CameraParameters$/;"	c	namespace:android
EFFECT_AQUA	include/camera/CameraParameters.h	/^    static const char EFFECT_AQUA[];$/;"	m	class:android::CameraParameters
EFFECT_BLACKBOARD	include/camera/CameraParameters.h	/^    static const char EFFECT_BLACKBOARD[];$/;"	m	class:android::CameraParameters
EFFECT_MONO	include/camera/CameraParameters.h	/^    static const char EFFECT_MONO[];$/;"	m	class:android::CameraParameters
EFFECT_NEGATIVE	include/camera/CameraParameters.h	/^    static const char EFFECT_NEGATIVE[];$/;"	m	class:android::CameraParameters
EFFECT_NONE	include/camera/CameraParameters.h	/^    static const char EFFECT_NONE[];$/;"	m	class:android::CameraParameters
EFFECT_POSTERIZE	include/camera/CameraParameters.h	/^    static const char EFFECT_POSTERIZE[];$/;"	m	class:android::CameraParameters
EFFECT_SEPIA	include/camera/CameraParameters.h	/^    static const char EFFECT_SEPIA[];$/;"	m	class:android::CameraParameters
EFFECT_SOLARIZE	include/camera/CameraParameters.h	/^    static const char EFFECT_SOLARIZE[];$/;"	m	class:android::CameraParameters
EFFECT_WHITEBOARD	include/camera/CameraParameters.h	/^    static const char EFFECT_WHITEBOARD[];$/;"	m	class:android::CameraParameters
FLASH_MODE_AUTO	include/camera/CameraParameters.h	/^    static const char FLASH_MODE_AUTO[];$/;"	m	class:android::CameraParameters
FLASH_MODE_OFF	include/camera/CameraParameters.h	/^    static const char FLASH_MODE_OFF[];$/;"	m	class:android::CameraParameters
FLASH_MODE_ON	include/camera/CameraParameters.h	/^    static const char FLASH_MODE_ON[];$/;"	m	class:android::CameraParameters
FLASH_MODE_RED_EYE	include/camera/CameraParameters.h	/^    static const char FLASH_MODE_RED_EYE[];$/;"	m	class:android::CameraParameters
FLASH_MODE_TORCH	include/camera/CameraParameters.h	/^    static const char FLASH_MODE_TORCH[];$/;"	m	class:android::CameraParameters
FOCUS_DISTANCE_INFINITY	include/camera/CameraParameters.h	/^    static const char FOCUS_DISTANCE_INFINITY[];$/;"	m	class:android::CameraParameters
FOCUS_MODE_AUTO	include/camera/CameraParameters.h	/^    static const char FOCUS_MODE_AUTO[];$/;"	m	class:android::CameraParameters
FOCUS_MODE_CONTINUOUS_VIDEO	include/camera/CameraParameters.h	/^    static const char FOCUS_MODE_CONTINUOUS_VIDEO[];$/;"	m	class:android::CameraParameters
FOCUS_MODE_EDOF	include/camera/CameraParameters.h	/^    static const char FOCUS_MODE_EDOF[];$/;"	m	class:android::CameraParameters
FOCUS_MODE_FIXED	include/camera/CameraParameters.h	/^    static const char FOCUS_MODE_FIXED[];$/;"	m	class:android::CameraParameters
FOCUS_MODE_INFINITY	include/camera/CameraParameters.h	/^    static const char FOCUS_MODE_INFINITY[];$/;"	m	class:android::CameraParameters
FOCUS_MODE_MACRO	include/camera/CameraParameters.h	/^    static const char FOCUS_MODE_MACRO[];$/;"	m	class:android::CameraParameters
KEY_ANTIBANDING	include/camera/CameraParameters.h	/^    static const char KEY_ANTIBANDING[];$/;"	m	class:android::CameraParameters
KEY_EFFECT	include/camera/CameraParameters.h	/^    static const char KEY_EFFECT[];$/;"	m	class:android::CameraParameters
KEY_EXPOSURE_COMPENSATION	include/camera/CameraParameters.h	/^    static const char KEY_EXPOSURE_COMPENSATION[];$/;"	m	class:android::CameraParameters
KEY_EXPOSURE_COMPENSATION_STEP	include/camera/CameraParameters.h	/^    static const char KEY_EXPOSURE_COMPENSATION_STEP[];$/;"	m	class:android::CameraParameters
KEY_FLASH_MODE	include/camera/CameraParameters.h	/^    static const char KEY_FLASH_MODE[];$/;"	m	class:android::CameraParameters
KEY_FOCAL_LENGTH	include/camera/CameraParameters.h	/^    static const char KEY_FOCAL_LENGTH[];$/;"	m	class:android::CameraParameters
KEY_FOCUS_DISTANCES	include/camera/CameraParameters.h	/^    static const char KEY_FOCUS_DISTANCES[];$/;"	m	class:android::CameraParameters
KEY_FOCUS_MODE	include/camera/CameraParameters.h	/^    static const char KEY_FOCUS_MODE[];$/;"	m	class:android::CameraParameters
KEY_GPS_ALTITUDE	include/camera/CameraParameters.h	/^    static const char KEY_GPS_ALTITUDE[];$/;"	m	class:android::CameraParameters
KEY_GPS_LATITUDE	include/camera/CameraParameters.h	/^    static const char KEY_GPS_LATITUDE[];$/;"	m	class:android::CameraParameters
KEY_GPS_LONGITUDE	include/camera/CameraParameters.h	/^    static const char KEY_GPS_LONGITUDE[];$/;"	m	class:android::CameraParameters
KEY_GPS_PROCESSING_METHOD	include/camera/CameraParameters.h	/^    static const char KEY_GPS_PROCESSING_METHOD[];$/;"	m	class:android::CameraParameters
KEY_GPS_TIMESTAMP	include/camera/CameraParameters.h	/^    static const char KEY_GPS_TIMESTAMP[];$/;"	m	class:android::CameraParameters
KEY_HORIZONTAL_VIEW_ANGLE	include/camera/CameraParameters.h	/^    static const char KEY_HORIZONTAL_VIEW_ANGLE[];$/;"	m	class:android::CameraParameters
KEY_JPEG_QUALITY	include/camera/CameraParameters.h	/^    static const char KEY_JPEG_QUALITY[];$/;"	m	class:android::CameraParameters
KEY_JPEG_THUMBNAIL_HEIGHT	include/camera/CameraParameters.h	/^    static const char KEY_JPEG_THUMBNAIL_HEIGHT[];$/;"	m	class:android::CameraParameters
KEY_JPEG_THUMBNAIL_QUALITY	include/camera/CameraParameters.h	/^    static const char KEY_JPEG_THUMBNAIL_QUALITY[];$/;"	m	class:android::CameraParameters
KEY_JPEG_THUMBNAIL_WIDTH	include/camera/CameraParameters.h	/^    static const char KEY_JPEG_THUMBNAIL_WIDTH[];$/;"	m	class:android::CameraParameters
KEY_MAX_EXPOSURE_COMPENSATION	include/camera/CameraParameters.h	/^    static const char KEY_MAX_EXPOSURE_COMPENSATION[];$/;"	m	class:android::CameraParameters
KEY_MAX_ZOOM	include/camera/CameraParameters.h	/^    static const char KEY_MAX_ZOOM[];$/;"	m	class:android::CameraParameters
KEY_MIN_EXPOSURE_COMPENSATION	include/camera/CameraParameters.h	/^    static const char KEY_MIN_EXPOSURE_COMPENSATION[];$/;"	m	class:android::CameraParameters
KEY_PICTURE_FORMAT	include/camera/CameraParameters.h	/^    static const char KEY_PICTURE_FORMAT[];$/;"	m	class:android::CameraParameters
KEY_PICTURE_SIZE	include/camera/CameraParameters.h	/^    static const char KEY_PICTURE_SIZE[];$/;"	m	class:android::CameraParameters
KEY_PREVIEW_FORMAT	include/camera/CameraParameters.h	/^    static const char KEY_PREVIEW_FORMAT[];$/;"	m	class:android::CameraParameters
KEY_PREVIEW_FPS_RANGE	include/camera/CameraParameters.h	/^    static const char KEY_PREVIEW_FPS_RANGE[];$/;"	m	class:android::CameraParameters
KEY_PREVIEW_FRAME_RATE	include/camera/CameraParameters.h	/^    static const char KEY_PREVIEW_FRAME_RATE[];$/;"	m	class:android::CameraParameters
KEY_PREVIEW_SIZE	include/camera/CameraParameters.h	/^    static const char KEY_PREVIEW_SIZE[];$/;"	m	class:android::CameraParameters
KEY_ROTATION	include/camera/CameraParameters.h	/^    static const char KEY_ROTATION[];$/;"	m	class:android::CameraParameters
KEY_SCENE_MODE	include/camera/CameraParameters.h	/^    static const char KEY_SCENE_MODE[];$/;"	m	class:android::CameraParameters
KEY_SMOOTH_ZOOM_SUPPORTED	include/camera/CameraParameters.h	/^    static const char KEY_SMOOTH_ZOOM_SUPPORTED[];$/;"	m	class:android::CameraParameters
KEY_SUPPORTED_ANTIBANDING	include/camera/CameraParameters.h	/^    static const char KEY_SUPPORTED_ANTIBANDING[];$/;"	m	class:android::CameraParameters
KEY_SUPPORTED_EFFECTS	include/camera/CameraParameters.h	/^    static const char KEY_SUPPORTED_EFFECTS[];$/;"	m	class:android::CameraParameters
KEY_SUPPORTED_FLASH_MODES	include/camera/CameraParameters.h	/^    static const char KEY_SUPPORTED_FLASH_MODES[];$/;"	m	class:android::CameraParameters
KEY_SUPPORTED_FOCUS_MODES	include/camera/CameraParameters.h	/^    static const char KEY_SUPPORTED_FOCUS_MODES[];$/;"	m	class:android::CameraParameters
KEY_SUPPORTED_JPEG_THUMBNAIL_SIZES	include/camera/CameraParameters.h	/^    static const char KEY_SUPPORTED_JPEG_THUMBNAIL_SIZES[];$/;"	m	class:android::CameraParameters
KEY_SUPPORTED_PICTURE_FORMATS	include/camera/CameraParameters.h	/^    static const char KEY_SUPPORTED_PICTURE_FORMATS[];$/;"	m	class:android::CameraParameters
KEY_SUPPORTED_PICTURE_SIZES	include/camera/CameraParameters.h	/^    static const char KEY_SUPPORTED_PICTURE_SIZES[];$/;"	m	class:android::CameraParameters
KEY_SUPPORTED_PREVIEW_FORMATS	include/camera/CameraParameters.h	/^    static const char KEY_SUPPORTED_PREVIEW_FORMATS[];$/;"	m	class:android::CameraParameters
KEY_SUPPORTED_PREVIEW_FPS_RANGE	include/camera/CameraParameters.h	/^    static const char KEY_SUPPORTED_PREVIEW_FPS_RANGE[];$/;"	m	class:android::CameraParameters
KEY_SUPPORTED_PREVIEW_FRAME_RATES	include/camera/CameraParameters.h	/^    static const char KEY_SUPPORTED_PREVIEW_FRAME_RATES[];$/;"	m	class:android::CameraParameters
KEY_SUPPORTED_PREVIEW_SIZES	include/camera/CameraParameters.h	/^    static const char KEY_SUPPORTED_PREVIEW_SIZES[];$/;"	m	class:android::CameraParameters
KEY_SUPPORTED_SCENE_MODES	include/camera/CameraParameters.h	/^    static const char KEY_SUPPORTED_SCENE_MODES[];$/;"	m	class:android::CameraParameters
KEY_SUPPORTED_WHITE_BALANCE	include/camera/CameraParameters.h	/^    static const char KEY_SUPPORTED_WHITE_BALANCE[];$/;"	m	class:android::CameraParameters
KEY_VERTICAL_VIEW_ANGLE	include/camera/CameraParameters.h	/^    static const char KEY_VERTICAL_VIEW_ANGLE[];$/;"	m	class:android::CameraParameters
KEY_VIDEO_FRAME_FORMAT	include/camera/CameraParameters.h	/^    static const char KEY_VIDEO_FRAME_FORMAT[];$/;"	m	class:android::CameraParameters
KEY_WHITE_BALANCE	include/camera/CameraParameters.h	/^    static const char KEY_WHITE_BALANCE[];$/;"	m	class:android::CameraParameters
KEY_ZOOM	include/camera/CameraParameters.h	/^    static const char KEY_ZOOM[];$/;"	m	class:android::CameraParameters
KEY_ZOOM_RATIOS	include/camera/CameraParameters.h	/^    static const char KEY_ZOOM_RATIOS[];$/;"	m	class:android::CameraParameters
KEY_ZOOM_SUPPORTED	include/camera/CameraParameters.h	/^    static const char KEY_ZOOM_SUPPORTED[];$/;"	m	class:android::CameraParameters
PIXEL_FORMAT_JPEG	include/camera/CameraParameters.h	/^    static const char PIXEL_FORMAT_JPEG[];$/;"	m	class:android::CameraParameters
PIXEL_FORMAT_RGB565	include/camera/CameraParameters.h	/^    static const char PIXEL_FORMAT_RGB565[];$/;"	m	class:android::CameraParameters
PIXEL_FORMAT_YUV420SP	include/camera/CameraParameters.h	/^    static const char PIXEL_FORMAT_YUV420SP[]; \/\/ NV21$/;"	m	class:android::CameraParameters
PIXEL_FORMAT_YUV422I	include/camera/CameraParameters.h	/^    static const char PIXEL_FORMAT_YUV422I[]; \/\/ YUY2$/;"	m	class:android::CameraParameters
PIXEL_FORMAT_YUV422SP	include/camera/CameraParameters.h	/^    static const char PIXEL_FORMAT_YUV422SP[];$/;"	m	class:android::CameraParameters
SCENE_MODE_ACTION	include/camera/CameraParameters.h	/^    static const char SCENE_MODE_ACTION[];$/;"	m	class:android::CameraParameters
SCENE_MODE_AUTO	include/camera/CameraParameters.h	/^    static const char SCENE_MODE_AUTO[];$/;"	m	class:android::CameraParameters
SCENE_MODE_BARCODE	include/camera/CameraParameters.h	/^    static const char SCENE_MODE_BARCODE[];$/;"	m	class:android::CameraParameters
SCENE_MODE_BEACH	include/camera/CameraParameters.h	/^    static const char SCENE_MODE_BEACH[];$/;"	m	class:android::CameraParameters
SCENE_MODE_CANDLELIGHT	include/camera/CameraParameters.h	/^    static const char SCENE_MODE_CANDLELIGHT[];$/;"	m	class:android::CameraParameters
SCENE_MODE_FIREWORKS	include/camera/CameraParameters.h	/^    static const char SCENE_MODE_FIREWORKS[];$/;"	m	class:android::CameraParameters
SCENE_MODE_LANDSCAPE	include/camera/CameraParameters.h	/^    static const char SCENE_MODE_LANDSCAPE[];$/;"	m	class:android::CameraParameters
SCENE_MODE_NIGHT	include/camera/CameraParameters.h	/^    static const char SCENE_MODE_NIGHT[];$/;"	m	class:android::CameraParameters
SCENE_MODE_NIGHT_PORTRAIT	include/camera/CameraParameters.h	/^    static const char SCENE_MODE_NIGHT_PORTRAIT[];$/;"	m	class:android::CameraParameters
SCENE_MODE_PARTY	include/camera/CameraParameters.h	/^    static const char SCENE_MODE_PARTY[];$/;"	m	class:android::CameraParameters
SCENE_MODE_PORTRAIT	include/camera/CameraParameters.h	/^    static const char SCENE_MODE_PORTRAIT[];$/;"	m	class:android::CameraParameters
SCENE_MODE_SNOW	include/camera/CameraParameters.h	/^    static const char SCENE_MODE_SNOW[];$/;"	m	class:android::CameraParameters
SCENE_MODE_SPORTS	include/camera/CameraParameters.h	/^    static const char SCENE_MODE_SPORTS[];$/;"	m	class:android::CameraParameters
SCENE_MODE_STEADYPHOTO	include/camera/CameraParameters.h	/^    static const char SCENE_MODE_STEADYPHOTO[];$/;"	m	class:android::CameraParameters
SCENE_MODE_SUNSET	include/camera/CameraParameters.h	/^    static const char SCENE_MODE_SUNSET[];$/;"	m	class:android::CameraParameters
SCENE_MODE_THEATRE	include/camera/CameraParameters.h	/^    static const char SCENE_MODE_THEATRE[];$/;"	m	class:android::CameraParameters
Size	include/camera/CameraParameters.h	/^    Size() {$/;"	f	struct:android::Size
Size	include/camera/CameraParameters.h	/^    Size(int w, int h) {$/;"	f	struct:android::Size
Size	include/camera/CameraParameters.h	/^struct Size {$/;"	s	namespace:android
TRUE	include/camera/CameraParameters.h	/^    static const char TRUE[];$/;"	m	class:android::CameraParameters
WHITE_BALANCE_AUTO	include/camera/CameraParameters.h	/^    static const char WHITE_BALANCE_AUTO[];$/;"	m	class:android::CameraParameters
WHITE_BALANCE_CLOUDY_DAYLIGHT	include/camera/CameraParameters.h	/^    static const char WHITE_BALANCE_CLOUDY_DAYLIGHT[];$/;"	m	class:android::CameraParameters
WHITE_BALANCE_DAYLIGHT	include/camera/CameraParameters.h	/^    static const char WHITE_BALANCE_DAYLIGHT[];$/;"	m	class:android::CameraParameters
WHITE_BALANCE_FLUORESCENT	include/camera/CameraParameters.h	/^    static const char WHITE_BALANCE_FLUORESCENT[];$/;"	m	class:android::CameraParameters
WHITE_BALANCE_INCANDESCENT	include/camera/CameraParameters.h	/^    static const char WHITE_BALANCE_INCANDESCENT[];$/;"	m	class:android::CameraParameters
WHITE_BALANCE_SHADE	include/camera/CameraParameters.h	/^    static const char WHITE_BALANCE_SHADE[];$/;"	m	class:android::CameraParameters
WHITE_BALANCE_TWILIGHT	include/camera/CameraParameters.h	/^    static const char WHITE_BALANCE_TWILIGHT[];$/;"	m	class:android::CameraParameters
WHITE_BALANCE_WARM_FLUORESCENT	include/camera/CameraParameters.h	/^    static const char WHITE_BALANCE_WARM_FLUORESCENT[];$/;"	m	class:android::CameraParameters
android	include/camera/CameraParameters.h	/^namespace android {$/;"	n
height	include/camera/CameraParameters.h	/^    int height;$/;"	m	struct:android::Size
mMap	include/camera/CameraParameters.h	/^    DefaultKeyedVector<String8,String8>    mMap;$/;"	m	class:android::CameraParameters
width	include/camera/CameraParameters.h	/^    int width;$/;"	m	struct:android::Size
ANDROID_HARDWARE_ICAMERA_H	include/camera/ICamera.h	18;"	d
BnCamera	include/camera/ICamera.h	/^class BnCamera: public BnInterface<ICamera>$/;"	c	namespace:android
ICamera	include/camera/ICamera.h	/^class ICamera: public IInterface$/;"	c	namespace:android
android	include/camera/ICamera.h	/^namespace android {$/;"	n
ANDROID_HARDWARE_ICAMERA_APP_H	include/camera/ICameraClient.h	18;"	d
BnCameraClient	include/camera/ICameraClient.h	/^class BnCameraClient: public BnInterface<ICameraClient>$/;"	c	namespace:android
ICameraClient	include/camera/ICameraClient.h	/^class ICameraClient: public IInterface$/;"	c	namespace:android
android	include/camera/ICameraClient.h	/^namespace android {$/;"	n
ANDROID_HARDWARE_ICAMERASERVICE_H	include/camera/ICameraService.h	18;"	d
BnCameraService	include/camera/ICameraService.h	/^class BnCameraService: public BnInterface<ICameraService>$/;"	c	namespace:android
CONNECT	include/camera/ICameraService.h	/^        CONNECT$/;"	e	enum:android::ICameraService::__anon125
GET_CAMERA_INFO	include/camera/ICameraService.h	/^        GET_CAMERA_INFO,$/;"	e	enum:android::ICameraService::__anon125
GET_NUMBER_OF_CAMERAS	include/camera/ICameraService.h	/^        GET_NUMBER_OF_CAMERAS = IBinder::FIRST_CALL_TRANSACTION,$/;"	e	enum:android::ICameraService::__anon125
ICameraService	include/camera/ICameraService.h	/^class ICameraService : public IInterface$/;"	c	namespace:android
android	include/camera/ICameraService.h	/^namespace android {$/;"	n
__CUTILS_TEST_H	include/ctest/ctest.h	22;"	d
addTest	include/ctest/ctest.h	31;"	d
assertFalse	include/ctest/ctest.h	41;"	d
assertNotSame	include/ctest/ctest.h	54;"	d
assertSame	include/ctest/ctest.h	49;"	d
assertTrue	include/ctest/ctest.h	36;"	d
fail	include/ctest/ctest.h	44;"	d
__CUTILS_ABORT_SOCKET_H__	include/cutils/abort_socket.h	53;"	d
abort_fd	include/cutils/abort_socket.h	/^    int abort_fd[2];  \/* pipe used to abort *\/$/;"	m	struct:asocket
asocket	include/cutils/abort_socket.h	/^struct asocket {$/;"	s
fd	include/cutils/abort_socket.h	/^    int fd;           \/* primary socket fd *\/$/;"	m	struct:asocket
Array	include/cutils/array.h	/^typedef struct Array Array;$/;"	t	typeref:struct:Array
__ARRAY_H	include/cutils/array.h	22;"	d
ASHMEM_IS_PINNED	include/cutils/ashmem.h	41;"	d
ASHMEM_IS_UNPINNED	include/cutils/ashmem.h	40;"	d
ASHMEM_NAME_DEF	include/cutils/ashmem.h	33;"	d
ASHMEM_NAME_LEN	include/cutils/ashmem.h	31;"	d
ASHMEM_NOT_PURGED	include/cutils/ashmem.h	36;"	d
ASHMEM_WAS_PURGED	include/cutils/ashmem.h	37;"	d
_CUTILS_ASHMEM_H	include/cutils/ashmem.h	11;"	d
ANDROID_CUTILS_ATOMIC_ARM_H	include/cutils/atomic-arm.h	18;"	d
android_atomic_acquire_cas	include/cutils/atomic-arm.h	/^extern inline int android_atomic_acquire_cas(int32_t old_value,$/;"	f
android_atomic_acquire_load	include/cutils/atomic-arm.h	/^extern inline int32_t android_atomic_acquire_load(volatile const int32_t *ptr)$/;"	f
android_atomic_acquire_store	include/cutils/atomic-arm.h	/^extern inline void android_atomic_acquire_store(int32_t value,$/;"	f
android_atomic_add	include/cutils/atomic-arm.h	/^extern inline int32_t android_atomic_add(int32_t increment,$/;"	f
android_atomic_and	include/cutils/atomic-arm.h	/^extern inline int32_t android_atomic_and(int32_t value, volatile int32_t *ptr)$/;"	f
android_atomic_cas	include/cutils/atomic-arm.h	/^extern inline int android_atomic_cas(int32_t old_value, int32_t new_value,$/;"	f
android_atomic_dec	include/cutils/atomic-arm.h	/^extern inline int32_t android_atomic_dec(volatile int32_t *addr)$/;"	f
android_atomic_inc	include/cutils/atomic-arm.h	/^extern inline int32_t android_atomic_inc(volatile int32_t *addr)$/;"	f
android_atomic_or	include/cutils/atomic-arm.h	/^extern inline int32_t android_atomic_or(int32_t value, volatile int32_t *ptr)$/;"	f
android_atomic_release_cas	include/cutils/atomic-arm.h	/^extern inline int android_atomic_release_cas(int32_t old_value,$/;"	f
android_atomic_release_load	include/cutils/atomic-arm.h	/^extern inline int32_t android_atomic_release_load(volatile const int32_t *ptr)$/;"	f
android_atomic_release_store	include/cutils/atomic-arm.h	/^extern inline void android_atomic_release_store(int32_t value,$/;"	f
android_atomic_swap	include/cutils/atomic-arm.h	/^extern inline int32_t android_atomic_swap(int32_t new_value,$/;"	f
android_compiler_barrier	include/cutils/atomic-arm.h	/^extern inline void android_compiler_barrier(void)$/;"	f
android_memory_barrier	include/cutils/atomic-arm.h	/^extern inline void android_memory_barrier(void)$/;"	f
ANDROID_CUTILS_ATOMIC_INLINE_H	include/cutils/atomic-inline.h	18;"	d
ANDROID_MEMBAR_FULL	include/cutils/atomic-inline.h	53;"	d
ANDROID_MEMBAR_FULL	include/cutils/atomic-inline.h	55;"	d
ANDROID_CUTILS_ATOMIC_X86_H	include/cutils/atomic-x86.h	18;"	d
android_atomic_acquire_cas	include/cutils/atomic-x86.h	/^extern inline int android_atomic_acquire_cas(int32_t old_value,$/;"	f
android_atomic_acquire_load	include/cutils/atomic-x86.h	/^extern inline int32_t android_atomic_acquire_load(volatile const int32_t *ptr)$/;"	f
android_atomic_acquire_store	include/cutils/atomic-x86.h	/^extern inline void android_atomic_acquire_store(int32_t value,$/;"	f
android_atomic_add	include/cutils/atomic-x86.h	/^extern inline int32_t android_atomic_add(int32_t increment,$/;"	f
android_atomic_and	include/cutils/atomic-x86.h	/^extern inline int32_t android_atomic_and(int32_t value,$/;"	f
android_atomic_cas	include/cutils/atomic-x86.h	/^extern inline int android_atomic_cas(int32_t old_value, int32_t new_value,$/;"	f
android_atomic_dec	include/cutils/atomic-x86.h	/^extern inline int32_t android_atomic_dec(volatile int32_t *addr)$/;"	f
android_atomic_inc	include/cutils/atomic-x86.h	/^extern inline int32_t android_atomic_inc(volatile int32_t *addr)$/;"	f
android_atomic_or	include/cutils/atomic-x86.h	/^extern inline int32_t android_atomic_or(int32_t value, volatile int32_t *ptr)$/;"	f
android_atomic_release_cas	include/cutils/atomic-x86.h	/^extern inline int android_atomic_release_cas(int32_t old_value,$/;"	f
android_atomic_release_load	include/cutils/atomic-x86.h	/^extern inline int32_t android_atomic_release_load(volatile const int32_t *ptr)$/;"	f
android_atomic_release_store	include/cutils/atomic-x86.h	/^extern inline void android_atomic_release_store(int32_t value,$/;"	f
android_atomic_swap	include/cutils/atomic-x86.h	/^extern inline int32_t android_atomic_swap(int32_t new_value,$/;"	f
android_compiler_barrier	include/cutils/atomic-x86.h	/^extern inline void android_compiler_barrier(void)$/;"	f
android_memory_barrier	include/cutils/atomic-x86.h	/^extern inline void android_memory_barrier(void)$/;"	f
ANDROID_CUTILS_ATOMIC_H	include/cutils/atomic.h	18;"	d
android_atomic_cmpxchg	include/cutils/atomic.h	122;"	d
android_atomic_write	include/cutils/atomic.h	121;"	d
ANDROID_CUTILS_COMPILER_H	include/cutils/compiler.h	18;"	d
CC_LIKELY	include/cutils/compiler.h	25;"	d
CC_LIKELY	include/cutils/compiler.h	28;"	d
CC_UNLIKELY	include/cutils/compiler.h	26;"	d
CC_UNLIKELY	include/cutils/compiler.h	29;"	d
__CUTILS_CONFIG_UTILS_H	include/cutils/config_utils.h	18;"	d
cnode	include/cutils/config_utils.h	/^struct cnode$/;"	s
cnode	include/cutils/config_utils.h	/^typedef struct cnode cnode;$/;"	t	typeref:struct:cnode
first_child	include/cutils/config_utils.h	/^    cnode *first_child;$/;"	m	struct:cnode
last_child	include/cutils/config_utils.h	/^    cnode *last_child;$/;"	m	struct:cnode
name	include/cutils/config_utils.h	/^    const char *name;$/;"	m	struct:cnode
next	include/cutils/config_utils.h	/^    cnode *next;$/;"	m	struct:cnode
value	include/cutils/config_utils.h	/^    const char *value;$/;"	m	struct:cnode
__CUTILS_CPU_INFO_H	include/cutils/cpu_info.h	18;"	d
HashAlgorithm	include/cutils/dir_hash.h	/^} HashAlgorithm;$/;"	t	typeref:enum:__anon161
SHA_1	include/cutils/dir_hash.h	/^    SHA_1,$/;"	e	enum:__anon161
EVENT_TAG_MAP_FILE	include/cutils/event_tag_map.h	24;"	d
EventTagMap	include/cutils/event_tag_map.h	/^typedef struct EventTagMap EventTagMap;$/;"	t	typeref:struct:EventTagMap
_LIBS_CUTILS_EVENTTAGMAP_H	include/cutils/event_tag_map.h	18;"	d
Hashmap	include/cutils/hashmap.h	/^typedef struct Hashmap Hashmap;$/;"	t	typeref:struct:Hashmap
__HASHMAP_H	include/cutils/hashmap.h	22;"	d
IoSchedClass	include/cutils/iosched_policy.h	/^} IoSchedClass;$/;"	t	typeref:enum:__anon160
IoSchedClass_BE	include/cutils/iosched_policy.h	/^    IoSchedClass_BE,$/;"	e	enum:__anon160
IoSchedClass_IDLE	include/cutils/iosched_policy.h	/^    IoSchedClass_IDLE,$/;"	e	enum:__anon160
IoSchedClass_NONE	include/cutils/iosched_policy.h	/^    IoSchedClass_NONE,$/;"	e	enum:__anon160
IoSchedClass_RT	include/cutils/iosched_policy.h	/^    IoSchedClass_RT,$/;"	e	enum:__anon160
__CUTILS_IOSCHED_POLICY_H	include/cutils/iosched_policy.h	18;"	d
__CUTILS_STRING16_H	include/cutils/jstring.h	18;"	d
char16_t	include/cutils/jstring.h	/^typedef uint16_t char16_t;$/;"	t
AndroidEventLogType	include/cutils/log.h	/^} AndroidEventLogType;$/;"	t	typeref:enum:__anon165
CONDITION	include/cutils/log.h	213;"	d
CONDITION	include/cutils/log.h	84;"	d
EVENT_TYPE_INT	include/cutils/log.h	/^    EVENT_TYPE_INT      = 0,$/;"	e	enum:__anon165
EVENT_TYPE_LIST	include/cutils/log.h	/^    EVENT_TYPE_LIST     = 3,$/;"	e	enum:__anon165
EVENT_TYPE_LONG	include/cutils/log.h	/^    EVENT_TYPE_LONG     = 1,$/;"	e	enum:__anon165
EVENT_TYPE_STRING	include/cutils/log.h	/^    EVENT_TYPE_STRING   = 2,$/;"	e	enum:__anon165
IF_LOG	include/cutils/log.h	358;"	d
IF_LOGD	include/cutils/log.h	172;"	d
IF_LOGE	include/cutils/log.h	196;"	d
IF_LOGI	include/cutils/log.h	180;"	d
IF_LOGV	include/cutils/log.h	161;"	d
IF_LOGV	include/cutils/log.h	163;"	d
IF_LOGW	include/cutils/log.h	188;"	d
LOG	include/cutils/log.h	334;"	d
LOGD	include/cutils/log.h	101;"	d
LOGD_IF	include/cutils/log.h	105;"	d
LOGE	include/cutils/log.h	143;"	d
LOGE_IF	include/cutils/log.h	147;"	d
LOGI	include/cutils/log.h	115;"	d
LOGI_IF	include/cutils/log.h	119;"	d
LOGV	include/cutils/log.h	78;"	d
LOGV	include/cutils/log.h	80;"	d
LOGV_IF	include/cutils/log.h	88;"	d
LOGV_IF	include/cutils/log.h	90;"	d
LOGW	include/cutils/log.h	129;"	d
LOGW_IF	include/cutils/log.h	133;"	d
LOG_ALWAYS_FATAL	include/cutils/log.h	297;"	d
LOG_ALWAYS_FATAL_IF	include/cutils/log.h	292;"	d
LOG_ASSERT	include/cutils/log.h	320;"	d
LOG_EVENT_INT	include/cutils/log.h	380;"	d
LOG_EVENT_LONG	include/cutils/log.h	385;"	d
LOG_EVENT_STRING	include/cutils/log.h	390;"	d
LOG_FATAL	include/cutils/log.h	307;"	d
LOG_FATAL	include/cutils/log.h	312;"	d
LOG_FATAL_IF	include/cutils/log.h	306;"	d
LOG_FATAL_IF	include/cutils/log.h	311;"	d
LOG_ID_EVENTS	include/cutils/log.h	/^    LOG_ID_EVENTS = 2,$/;"	e	enum:__anon166
LOG_ID_MAIN	include/cutils/log.h	/^    LOG_ID_MAIN = 0,$/;"	e	enum:__anon166
LOG_ID_MAX	include/cutils/log.h	/^    LOG_ID_MAX$/;"	e	enum:__anon166
LOG_ID_RADIO	include/cutils/log.h	/^    LOG_ID_RADIO = 1,$/;"	e	enum:__anon166
LOG_ID_SYSTEM	include/cutils/log.h	/^    LOG_ID_SYSTEM = 3,$/;"	e	enum:__anon166
LOG_NDEBUG	include/cutils/log.h	56;"	d
LOG_NDEBUG	include/cutils/log.h	58;"	d
LOG_PRI	include/cutils/log.h	342;"	d
LOG_PRI_VA	include/cutils/log.h	350;"	d
LOG_TAG	include/cutils/log.h	68;"	d
SLOGD	include/cutils/log.h	230;"	d
SLOGD_IF	include/cutils/log.h	234;"	d
SLOGE	include/cutils/log.h	272;"	d
SLOGE_IF	include/cutils/log.h	276;"	d
SLOGI	include/cutils/log.h	244;"	d
SLOGI_IF	include/cutils/log.h	248;"	d
SLOGV	include/cutils/log.h	207;"	d
SLOGV	include/cutils/log.h	209;"	d
SLOGV_IF	include/cutils/log.h	217;"	d
SLOGV_IF	include/cutils/log.h	219;"	d
SLOGW	include/cutils/log.h	258;"	d
SLOGW_IF	include/cutils/log.h	262;"	d
_LIBS_CUTILS_LOG_H	include/cutils/log.h	29;"	d
android_bWriteLog	include/cutils/log.h	412;"	d
android_btWriteLog	include/cutils/log.h	414;"	d
android_logToFd	include/cutils/log.h	424;"	d
android_logToFile	include/cutils/log.h	423;"	d
android_printAssert	include/cutils/log.h	406;"	d
android_printLog	include/cutils/log.h	400;"	d
android_setMinPriority	include/cutils/log.h	421;"	d
android_testLog	include/cutils/log.h	418;"	d
android_vprintLog	include/cutils/log.h	403;"	d
android_write1Log	include/cutils/log.h	420;"	d
android_writeLog	include/cutils/log.h	409;"	d
android_writevLog	include/cutils/log.h	419;"	d
log_id_t	include/cutils/log.h	/^} log_id_t;$/;"	t	typeref:enum:__anon166
_ANDROID_CUTILS_LOGD_H	include/cutils/logd.h	18;"	d
LOGGER_ENTRY_MAX_LEN	include/cutils/logger.h	30;"	d
LOGGER_ENTRY_MAX_PAYLOAD	include/cutils/logger.h	31;"	d
LOGGER_FLUSH_LOG	include/cutils/logger.h	43;"	d
LOGGER_GET_LOG_BUF_SIZE	include/cutils/logger.h	40;"	d
LOGGER_GET_LOG_LEN	include/cutils/logger.h	41;"	d
LOGGER_GET_NEXT_ENTRY_LEN	include/cutils/logger.h	42;"	d
LOGGER_LOG_EVENTS	include/cutils/logger.h	27;"	d
LOGGER_LOG_MAIN	include/cutils/logger.h	25;"	d
LOGGER_LOG_RADIO	include/cutils/logger.h	26;"	d
LOGGER_LOG_SYSTEM	include/cutils/logger.h	28;"	d
_UTILS_LOGGER_H	include/cutils/logger.h	11;"	d
__LOGGERIO	include/cutils/logger.h	38;"	d
__pad	include/cutils/logger.h	/^    uint16_t    __pad;  \/* no matter what, we get 2 bytes of padding *\/$/;"	m	struct:logger_entry
len	include/cutils/logger.h	/^    uint16_t    len;    \/* length of the payload *\/$/;"	m	struct:logger_entry
logger_entry	include/cutils/logger.h	/^struct logger_entry {$/;"	s
msg	include/cutils/logger.h	/^    char        msg[0]; \/* the entry's payload *\/$/;"	m	struct:logger_entry
nsec	include/cutils/logger.h	/^    int32_t     nsec;   \/* nanoseconds *\/$/;"	m	struct:logger_entry
pid	include/cutils/logger.h	/^    int32_t     pid;    \/* generating process's pid *\/$/;"	m	struct:logger_entry
sec	include/cutils/logger.h	/^    int32_t     sec;    \/* seconds since Epoch *\/$/;"	m	struct:logger_entry
tid	include/cutils/logger.h	/^    int32_t     tid;    \/* generating process's tid *\/$/;"	m	struct:logger_entry
AndroidLogEntry	include/cutils/logprint.h	/^} AndroidLogEntry;$/;"	t	typeref:struct:AndroidLogEntry_t
AndroidLogEntry_t	include/cutils/logprint.h	/^typedef struct AndroidLogEntry_t {$/;"	s
AndroidLogFormat	include/cutils/logprint.h	/^typedef struct AndroidLogFormat_t AndroidLogFormat;$/;"	t	typeref:struct:AndroidLogFormat_t
AndroidLogPrintFormat	include/cutils/logprint.h	/^} AndroidLogPrintFormat;$/;"	t	typeref:enum:__anon168
FORMAT_BRIEF	include/cutils/logprint.h	/^    FORMAT_BRIEF,$/;"	e	enum:__anon168
FORMAT_LONG	include/cutils/logprint.h	/^    FORMAT_LONG,$/;"	e	enum:__anon168
FORMAT_OFF	include/cutils/logprint.h	/^    FORMAT_OFF = 0,$/;"	e	enum:__anon168
FORMAT_PROCESS	include/cutils/logprint.h	/^    FORMAT_PROCESS,$/;"	e	enum:__anon168
FORMAT_RAW	include/cutils/logprint.h	/^    FORMAT_RAW,$/;"	e	enum:__anon168
FORMAT_TAG	include/cutils/logprint.h	/^    FORMAT_TAG,$/;"	e	enum:__anon168
FORMAT_THREAD	include/cutils/logprint.h	/^    FORMAT_THREAD,$/;"	e	enum:__anon168
FORMAT_THREADTIME	include/cutils/logprint.h	/^    FORMAT_THREADTIME,$/;"	e	enum:__anon168
FORMAT_TIME	include/cutils/logprint.h	/^    FORMAT_TIME,$/;"	e	enum:__anon168
_LOGPRINT_H	include/cutils/logprint.h	18;"	d
message	include/cutils/logprint.h	/^    const char * message;$/;"	m	struct:AndroidLogEntry_t
messageLen	include/cutils/logprint.h	/^    size_t messageLen;$/;"	m	struct:AndroidLogEntry_t
pid	include/cutils/logprint.h	/^    pid_t pid;$/;"	m	struct:AndroidLogEntry_t
priority	include/cutils/logprint.h	/^    android_LogPriority priority;$/;"	m	struct:AndroidLogEntry_t
tag	include/cutils/logprint.h	/^    const char * tag;$/;"	m	struct:AndroidLogEntry_t
tid	include/cutils/logprint.h	/^    pthread_t tid;$/;"	m	struct:AndroidLogEntry_t
tv_nsec	include/cutils/logprint.h	/^    long tv_nsec;$/;"	m	struct:AndroidLogEntry_t
tv_sec	include/cutils/logprint.h	/^    time_t tv_sec;$/;"	m	struct:AndroidLogEntry_t
ANDROID_CUTILS_MEMORY_H	include/cutils/memory.h	18;"	d
FIRST_APPLICATION_UID	include/cutils/misc.h	41;"	d
LAST_APPLICATION_UID	include/cutils/misc.h	42;"	d
__CUTILS_MISC_H	include/cutils/misc.h	18;"	d
MqBytes	include/cutils/mq.h	/^typedef struct MqBytes MqBytes;$/;"	t	typeref:struct:MqBytes
MqCloseListener	include/cutils/mq.h	/^typedef void MqCloseListener(MqDestination* destination);$/;"	t
MqDestination	include/cutils/mq.h	/^typedef struct MqDestination MqDestination;$/;"	t	typeref:struct:MqDestination
MqMessage	include/cutils/mq.h	/^typedef struct MqMessage MqMessage;$/;"	t	typeref:struct:MqMessage
MqMessageListener	include/cutils/mq.h	/^typedef void MqMessageListener(MqDestination* destination, MqMessage* message);$/;"	t
__MQ_H	include/cutils/mq.h	22;"	d
HAVE_MMAP	include/cutils/mspace.h	38;"	d
HAVE_MORECORE	include/cutils/mspace.h	39;"	d
MORECORE_CONTIGUOUS	include/cutils/mspace.h	40;"	d
MSPACES	include/cutils/mspace.h	43;"	d
MSPACE_H_	include/cutils/mspace.h	23;"	d
NO_MALLINFO	include/cutils/mspace.h	30;"	d
ONLY_MSPACES	include/cutils/mspace.h	44;"	d
USE_CONTIGUOUS_MSPACES	include/cutils/mspace.h	36;"	d
USE_MAX_ALLOWED_FOOTPRINT	include/cutils/mspace.h	34;"	d
NATIVE_HANDLE_H_	include/cutils/native_handle.h	18;"	d
data	include/cutils/native_handle.h	/^    int data[0];        \/* numFds + numInts ints *\/$/;"	m	struct:__anon159
native_handle	include/cutils/native_handle.h	/^typedef native_handle_t native_handle;$/;"	t
native_handle_t	include/cutils/native_handle.h	/^} native_handle_t;$/;"	t	typeref:struct:__anon159
numFds	include/cutils/native_handle.h	/^    int numFds;         \/* number of file-descriptors at &data[0] *\/$/;"	m	struct:__anon159
numInts	include/cutils/native_handle.h	/^    int numInts;        \/* number of ints at &data[numFds] *\/$/;"	m	struct:__anon159
version	include/cutils/native_handle.h	/^    int version;        \/* sizeof(native_handle_t) *\/$/;"	m	struct:__anon159
__CUTILS_OPEN_MEMSTREAM_H__	include/cutils/open_memstream.h	18;"	d
__PROCESS_NAME_H	include/cutils/process_name.h	22;"	d
PROPERTY_KEY_MAX	include/cutils/properties.h	31;"	d
PROPERTY_VALUE_MAX	include/cutils/properties.h	32;"	d
SYSTEM_PROPERTY_PIPE_NAME	include/cutils/properties.h	55;"	d
__CUTILS_PROPERTIES_H	include/cutils/properties.h	18;"	d
kSystemPropertyGet	include/cutils/properties.h	/^    kSystemPropertyGet,$/;"	e	enum:__anon169
kSystemPropertyList	include/cutils/properties.h	/^    kSystemPropertyList$/;"	e	enum:__anon169
kSystemPropertySet	include/cutils/properties.h	/^    kSystemPropertySet,$/;"	e	enum:__anon169
kSystemPropertyUnknown	include/cutils/properties.h	/^    kSystemPropertyUnknown = 0,$/;"	e	enum:__anon169
RecordStream	include/cutils/record_stream.h	/^typedef struct RecordStream RecordStream;$/;"	t	typeref:struct:RecordStream
_CUTILS_RECORD_STREAM_H	include/cutils/record_stream.h	22;"	d
SP_BACKGROUND	include/cutils/sched_policy.h	/^    SP_BACKGROUND = 0,$/;"	e	enum:__anon167
SP_FOREGROUND	include/cutils/sched_policy.h	/^    SP_FOREGROUND = 1,$/;"	e	enum:__anon167
SchedPolicy	include/cutils/sched_policy.h	/^} SchedPolicy;$/;"	t	typeref:enum:__anon167
__CUTILS_SCHED_POLICY_H	include/cutils/sched_policy.h	18;"	d
SelectableFd	include/cutils/selector.h	/^struct SelectableFd {$/;"	s
SelectableFd	include/cutils/selector.h	/^typedef struct SelectableFd SelectableFd;$/;"	t	typeref:struct:SelectableFd
Selector	include/cutils/selector.h	/^typedef struct Selector Selector;$/;"	t	typeref:struct:Selector
__SELECTOR_H	include/cutils/selector.h	24;"	d
beforeSelect	include/cutils/selector.h	/^    void (*beforeSelect)(SelectableFd* self);$/;"	m	struct:SelectableFd
data	include/cutils/selector.h	/^    void* data;$/;"	m	struct:SelectableFd
fd	include/cutils/selector.h	/^    int fd;$/;"	m	struct:SelectableFd
onExcept	include/cutils/selector.h	/^    void (*onExcept)(SelectableFd* self);$/;"	m	struct:SelectableFd
onReadable	include/cutils/selector.h	/^    void (*onReadable)(SelectableFd* self);$/;"	m	struct:SelectableFd
onRemove	include/cutils/selector.h	/^    void (*onRemove)(SelectableFd* self);$/;"	m	struct:SelectableFd
onWritable	include/cutils/selector.h	/^    void (*onWritable)(SelectableFd* self);$/;"	m	struct:SelectableFd
remove	include/cutils/selector.h	/^    bool remove;$/;"	m	struct:SelectableFd
selector	include/cutils/selector.h	/^    Selector* selector;$/;"	m	struct:SelectableFd
ANDROID_SOCKET_DIR	include/cutils/sockets.h	32;"	d
ANDROID_SOCKET_ENV_PREFIX	include/cutils/sockets.h	31;"	d
ANDROID_SOCKET_NAMESPACE_ABSTRACT	include/cutils/sockets.h	80;"	d
ANDROID_SOCKET_NAMESPACE_FILESYSTEM	include/cutils/sockets.h	84;"	d
ANDROID_SOCKET_NAMESPACE_RESERVED	include/cutils/sockets.h	82;"	d
__CUTILS_SOCKETS_H	include/cutils/sockets.h	18;"	d
android_get_control_socket	include/cutils/sockets.h	/^static inline int android_get_control_socket(const char *name)$/;"	f
socklen_t	include/cutils/sockets.h	/^typedef int  socklen_t;$/;"	t
MUTEX_INITIALIZER	include/cutils/threads.h	109;"	d
MUTEX_INITIALIZER	include/cutils/threads.h	83;"	d
THREAD_STORE_INITIALIZER	include/cutils/threads.h	43;"	d
THREAD_STORE_INITIALIZER	include/cutils/threads.h	57;"	d
_LIBS_CUTILS_THREADS_H	include/cutils/threads.h	18;"	d
has_tls	include/cutils/threads.h	/^    int               has_tls;$/;"	m	struct:__anon162
has_tls	include/cutils/threads.h	/^    int               has_tls;$/;"	m	struct:__anon163
init	include/cutils/threads.h	/^    int                init;$/;"	m	struct:__anon164
lock	include/cutils/threads.h	/^    CRITICAL_SECTION   lock[1];$/;"	m	struct:__anon164
lock	include/cutils/threads.h	/^    CRITICAL_SECTION  lock;$/;"	m	struct:__anon163
lock	include/cutils/threads.h	/^    pthread_mutex_t   lock;$/;"	m	struct:__anon162
lock_init	include/cutils/threads.h	/^    int               lock_init;$/;"	m	struct:__anon163
mutex_destroy	include/cutils/threads.h	/^static __inline__ void  mutex_destroy(mutex_t*  lock)$/;"	f
mutex_destroy	include/cutils/threads.h	/^static __inline__ void mutex_destroy(mutex_t*  lock)$/;"	f
mutex_init	include/cutils/threads.h	/^static __inline__ int  mutex_init(mutex_t*  lock)$/;"	f
mutex_lock	include/cutils/threads.h	/^static __inline__ void  mutex_lock(mutex_t*  lock)$/;"	f
mutex_t	include/cutils/threads.h	/^typedef pthread_mutex_t   mutex_t;$/;"	t
mutex_t	include/cutils/threads.h	/^} mutex_t;$/;"	t	typeref:struct:__anon164
mutex_unlock	include/cutils/threads.h	/^static __inline__ void  mutex_unlock(mutex_t*  lock)$/;"	f
thread_store_destruct_t	include/cutils/threads.h	/^typedef void  (*thread_store_destruct_t)(void*  value);$/;"	t
thread_store_t	include/cutils/threads.h	/^} thread_store_t;$/;"	t	typeref:struct:__anon162
thread_store_t	include/cutils/threads.h	/^} thread_store_t;$/;"	t	typeref:struct:__anon163
tls	include/cutils/threads.h	/^    DWORD             tls;$/;"	m	struct:__anon163
tls	include/cutils/threads.h	/^    pthread_key_t     tls;$/;"	m	struct:__anon162
X_fmt	include/cutils/tztime.h	/^    const char *X_fmt;$/;"	m	struct:strftime_locale
_CUTILS_TZTIME_H	include/cutils/tztime.h	18;"	d
am	include/cutils/tztime.h	/^    const char *am;$/;"	m	struct:strftime_locale
c_fmt	include/cutils/tztime.h	/^    const char *c_fmt;$/;"	m	struct:strftime_locale
date_fmt	include/cutils/tztime.h	/^    const char *date_fmt;$/;"	m	struct:strftime_locale
mon	include/cutils/tztime.h	/^    const char *mon[12];    \/* short names *\/$/;"	m	struct:strftime_locale
month	include/cutils/tztime.h	/^    const char *month[12];  \/* long names *\/$/;"	m	struct:strftime_locale
pm	include/cutils/tztime.h	/^    const char *pm;$/;"	m	struct:strftime_locale
standalone_month	include/cutils/tztime.h	/^    const char *standalone_month[12];  \/* long standalone names *\/$/;"	m	struct:strftime_locale
strftime_locale	include/cutils/tztime.h	/^struct strftime_locale {$/;"	s
wday	include/cutils/tztime.h	/^    const char *wday[7];    \/* short names *\/$/;"	m	struct:strftime_locale
weekday	include/cutils/tztime.h	/^    const char *weekday[7]; \/* long names *\/$/;"	m	struct:strftime_locale
x_fmt	include/cutils/tztime.h	/^    const char *x_fmt;$/;"	m	struct:strftime_locale
_LIBS_CUTILS_UIO_H	include/cutils/uio.h	21;"	d
iov_base	include/cutils/uio.h	/^    const void*  iov_base;$/;"	m	struct:iovec
iov_len	include/cutils/uio.h	/^    size_t       iov_len;$/;"	m	struct:iovec
iovec	include/cutils/uio.h	/^struct iovec {$/;"	s
__CUTILS_ZYGOTE_H	include/cutils/zygote.h	18;"	d
MAX_NAME_LEN	include/diskconfig/diskconfig.h	27;"	d
MAX_NUM_PARTS	include/diskconfig/diskconfig.h	28;"	d
PART_ACTIVE_FLAG	include/diskconfig/diskconfig.h	53;"	d
PART_SCHEME_GPT	include/diskconfig/diskconfig.h	32;"	d
PART_SCHEME_MBR	include/diskconfig/diskconfig.h	31;"	d
PC_BIOS_BOOT_SIG	include/diskconfig/diskconfig.h	48;"	d
PC_EBR_LOGICAL_PART	include/diskconfig/diskconfig.h	45;"	d
PC_EBR_NEXT_PTR_PART	include/diskconfig/diskconfig.h	46;"	d
PC_MBR_DISK_OFFSET	include/diskconfig/diskconfig.h	50;"	d
PC_MBR_SIZE	include/diskconfig/diskconfig.h	51;"	d
PC_NUM_BOOT_RECORD_PARTS	include/diskconfig/diskconfig.h	43;"	d
PC_PART_ACTIVE	include/diskconfig/diskconfig.h	35;"	d
PC_PART_NORMAL	include/diskconfig/diskconfig.h	36;"	d
PC_PART_TYPE_EXTENDED	include/diskconfig/diskconfig.h	40;"	d
PC_PART_TYPE_FAT32	include/diskconfig/diskconfig.h	41;"	d
PC_PART_TYPE_LINUX	include/diskconfig/diskconfig.h	39;"	d
__LIBS_DISKCONFIG_H	include/diskconfig/diskconfig.h	19;"	d
chs	include/diskconfig/diskconfig.h	/^struct chs {$/;"	s
code	include/diskconfig/diskconfig.h	/^    uint8_t code[440];                                      \/* bytes 0-439   *\/$/;"	m	struct:pc_boot_record
cylinder	include/diskconfig/diskconfig.h	/^    uint8_t cylinder;$/;"	m	struct:chs
data	include/diskconfig/diskconfig.h	/^    uint8_t data[0];$/;"	m	struct:write_list
device	include/diskconfig/diskconfig.h	/^    char *device;$/;"	m	struct:disk_info
disk_info	include/diskconfig/diskconfig.h	/^struct disk_info {$/;"	s
disk_sig	include/diskconfig/diskconfig.h	/^    uint32_t disk_sig;                                      \/* bytes 440-443 *\/$/;"	m	struct:pc_boot_record
end	include/diskconfig/diskconfig.h	/^    struct chs end;     \/* bytes 5-7   *\/$/;"	m	struct:pc_partition	typeref:struct:pc_partition::chs
flags	include/diskconfig/diskconfig.h	/^    uint8_t flags;$/;"	m	struct:part_info
head	include/diskconfig/diskconfig.h	/^    uint8_t head;$/;"	m	struct:chs
len	include/diskconfig/diskconfig.h	/^    uint32_t len;$/;"	m	struct:write_list
len_kb	include/diskconfig/diskconfig.h	/^    uint32_t len_kb;       \/* in 1K-bytes *\/$/;"	m	struct:part_info
len_lba	include/diskconfig/diskconfig.h	/^    uint32_t len_lba;   \/* bytes 12-15 *\/$/;"	m	struct:pc_partition
mbr_sig	include/diskconfig/diskconfig.h	/^    uint16_t mbr_sig;                                       \/* bytes 510-511 *\/$/;"	m	struct:pc_boot_record
name	include/diskconfig/diskconfig.h	/^    char *name;$/;"	m	struct:part_info
next	include/diskconfig/diskconfig.h	/^    struct write_list *next;$/;"	m	struct:write_list	typeref:struct:write_list::write_list
num_lba	include/diskconfig/diskconfig.h	/^    uint32_t num_lba;    \/* the size of the disk in LBA units *\/$/;"	m	struct:disk_info
num_parts	include/diskconfig/diskconfig.h	/^    int num_parts;$/;"	m	struct:disk_info
offset	include/diskconfig/diskconfig.h	/^    loff_t offset;$/;"	m	struct:write_list
pad	include/diskconfig/diskconfig.h	/^    uint16_t pad;                                           \/* bytes 444-445 *\/$/;"	m	struct:pc_boot_record
part_info	include/diskconfig/diskconfig.h	/^struct part_info {$/;"	s
part_lst	include/diskconfig/diskconfig.h	/^    struct part_info *part_lst;$/;"	m	struct:disk_info	typeref:struct:disk_info::part_info
pc_boot_record	include/diskconfig/diskconfig.h	/^struct pc_boot_record {$/;"	s
pc_partition	include/diskconfig/diskconfig.h	/^struct pc_partition {$/;"	s
ptable	include/diskconfig/diskconfig.h	/^    struct pc_partition ptable[PC_NUM_BOOT_RECORD_PARTS];   \/* bytes 446-509 *\/$/;"	m	struct:pc_boot_record	typeref:struct:pc_boot_record::pc_partition
scheme	include/diskconfig/diskconfig.h	/^    uint8_t scheme;$/;"	m	struct:disk_info
sect_size	include/diskconfig/diskconfig.h	/^    int sect_size;       \/* expected sector size in bytes. MUST BE POWER OF 2 *\/$/;"	m	struct:disk_info
sector	include/diskconfig/diskconfig.h	/^    uint8_t sector;$/;"	m	struct:chs
skip_lba	include/diskconfig/diskconfig.h	/^    uint32_t skip_lba;   \/* in sectors (1 unit of LBA) *\/$/;"	m	struct:disk_info
start	include/diskconfig/diskconfig.h	/^    struct chs start;   \/* bytes 1-3   *\/$/;"	m	struct:pc_partition	typeref:struct:pc_partition::chs
start_lba	include/diskconfig/diskconfig.h	/^    uint32_t start_lba;    \/* the LBA where this partition begins *\/$/;"	m	struct:part_info
start_lba	include/diskconfig/diskconfig.h	/^    uint32_t start_lba; \/* bytes 8-11  *\/$/;"	m	struct:pc_partition
status	include/diskconfig/diskconfig.h	/^    uint8_t status;     \/* byte  0     *\/$/;"	m	struct:pc_partition
type	include/diskconfig/diskconfig.h	/^    uint8_t type;       \/* byte  4     *\/$/;"	m	struct:pc_partition
type	include/diskconfig/diskconfig.h	/^    uint8_t type;$/;"	m	struct:part_info
write_list	include/diskconfig/diskconfig.h	/^struct write_list {$/;"	s
ANDROID_GUI_ISENSOR_EVENT_CONNECTION_H	include/gui/ISensorEventConnection.h	18;"	d
BnSensorEventConnection	include/gui/ISensorEventConnection.h	/^class BnSensorEventConnection : public BnInterface<ISensorEventConnection>$/;"	c	namespace:android
ISensorEventConnection	include/gui/ISensorEventConnection.h	/^class ISensorEventConnection : public IInterface$/;"	c	namespace:android
android	include/gui/ISensorEventConnection.h	/^namespace android {$/;"	n
ANDROID_GUI_ISENSORSERVER_H	include/gui/ISensorServer.h	18;"	d
BnSensorServer	include/gui/ISensorServer.h	/^class BnSensorServer : public BnInterface<ISensorServer>$/;"	c	namespace:android
ISensorServer	include/gui/ISensorServer.h	/^class ISensorServer : public IInterface$/;"	c	namespace:android
android	include/gui/ISensorServer.h	/^namespace android {$/;"	n
ANDROID_GUI_SENSOR_H	include/gui/Sensor.h	18;"	d
ASensor	include/gui/Sensor.h	/^struct ASensor { };$/;"	s
Sensor	include/gui/Sensor.h	/^class Sensor : public ASensor, public Flattenable$/;"	c	namespace:android
TYPE_ACCELEROMETER	include/gui/Sensor.h	/^        TYPE_ACCELEROMETER  = ASENSOR_TYPE_ACCELEROMETER,$/;"	e	enum:android::Sensor::__anon303
TYPE_GYROSCOPE	include/gui/Sensor.h	/^        TYPE_GYROSCOPE      = ASENSOR_TYPE_GYROSCOPE,$/;"	e	enum:android::Sensor::__anon303
TYPE_LIGHT	include/gui/Sensor.h	/^        TYPE_LIGHT          = ASENSOR_TYPE_LIGHT,$/;"	e	enum:android::Sensor::__anon303
TYPE_MAGNETIC_FIELD	include/gui/Sensor.h	/^        TYPE_MAGNETIC_FIELD = ASENSOR_TYPE_MAGNETIC_FIELD,$/;"	e	enum:android::Sensor::__anon303
TYPE_PROXIMITY	include/gui/Sensor.h	/^        TYPE_PROXIMITY      = ASENSOR_TYPE_PROXIMITY$/;"	e	enum:android::Sensor::__anon303
android	include/gui/Sensor.h	/^namespace android {$/;"	n
mHandle	include/gui/Sensor.h	/^    int32_t mHandle;$/;"	m	class:android::Sensor
mMaxValue	include/gui/Sensor.h	/^    float   mMaxValue;$/;"	m	class:android::Sensor
mMinDelay	include/gui/Sensor.h	/^    int32_t mMinDelay;$/;"	m	class:android::Sensor
mMinValue	include/gui/Sensor.h	/^    float   mMinValue;$/;"	m	class:android::Sensor
mName	include/gui/Sensor.h	/^    String8 mName;$/;"	m	class:android::Sensor
mPower	include/gui/Sensor.h	/^    float   mPower;$/;"	m	class:android::Sensor
mResolution	include/gui/Sensor.h	/^    float   mResolution;$/;"	m	class:android::Sensor
mType	include/gui/Sensor.h	/^    int32_t mType;$/;"	m	class:android::Sensor
mVendor	include/gui/Sensor.h	/^    String8 mVendor;$/;"	m	class:android::Sensor
ANDROID_GUI_SENSOR_CHANNEL_H	include/gui/SensorChannel.h	18;"	d
SensorChannel	include/gui/SensorChannel.h	/^class SensorChannel : public RefBase$/;"	c	namespace:android
android	include/gui/SensorChannel.h	/^namespace android {$/;"	n
mReceiveFd	include/gui/SensorChannel.h	/^    mutable int mReceiveFd;$/;"	m	class:android::SensorChannel
mSendFd	include/gui/SensorChannel.h	/^    int mSendFd;$/;"	m	class:android::SensorChannel
ANDROID_SENSOR_EVENT_QUEUE_H	include/gui/SensorEventQueue.h	18;"	d
ASensorEventQueue	include/gui/SensorEventQueue.h	/^struct ASensorEventQueue {$/;"	s
SensorEventQueue	include/gui/SensorEventQueue.h	/^class SensorEventQueue : public ASensorEventQueue, public RefBase$/;"	c	namespace:android
android	include/gui/SensorEventQueue.h	/^namespace android {$/;"	n
looper	include/gui/SensorEventQueue.h	/^    ALooper* looper;$/;"	m	struct:ASensorEventQueue
mLock	include/gui/SensorEventQueue.h	/^    mutable Mutex mLock;$/;"	m	class:android::SensorEventQueue
mLooper	include/gui/SensorEventQueue.h	/^    mutable sp<Looper> mLooper;$/;"	m	class:android::SensorEventQueue
mSensorChannel	include/gui/SensorEventQueue.h	/^    sp<SensorChannel> mSensorChannel;$/;"	m	class:android::SensorEventQueue
mSensorEventConnection	include/gui/SensorEventQueue.h	/^    sp<ISensorEventConnection> mSensorEventConnection;$/;"	m	class:android::SensorEventQueue
ANDROID_GUI_SENSOR_MANAGER_H	include/gui/SensorManager.h	18;"	d
ASensorManager	include/gui/SensorManager.h	/^struct ASensorManager { };$/;"	s
SensorManager	include/gui/SensorManager.h	/^class SensorManager : public ASensorManager, public Singleton<SensorManager>$/;"	c	namespace:android
android	include/gui/SensorManager.h	/^namespace android {$/;"	n
mSensorList	include/gui/SensorManager.h	/^    Sensor const** mSensorList;$/;"	m	class:android::SensorManager
mSensorServer	include/gui/SensorManager.h	/^    sp<ISensorServer> mSensorServer;$/;"	m	class:android::SensorManager
mSensors	include/gui/SensorManager.h	/^    Vector<Sensor> mSensors;$/;"	m	class:android::SensorManager
ANDROID_COPYBIT_INTERFACE_H	include/hardware/copybit.h	18;"	d
COPYBIT_BLUR	include/hardware/copybit.h	/^    COPYBIT_BLUR            = 5$/;"	e	enum:__anon186
COPYBIT_DISABLE	include/hardware/copybit.h	/^    COPYBIT_DISABLE = 0,$/;"	e	enum:__anon188
COPYBIT_DITHER	include/hardware/copybit.h	/^    COPYBIT_DITHER          = 3,$/;"	e	enum:__anon186
COPYBIT_ENABLE	include/hardware/copybit.h	/^    COPYBIT_ENABLE  = 1$/;"	e	enum:__anon188
COPYBIT_FORMAT_BGRA_8888	include/hardware/copybit.h	/^    COPYBIT_FORMAT_BGRA_8888    = HAL_PIXEL_FORMAT_BGRA_8888,$/;"	e	enum:__anon185
COPYBIT_FORMAT_RGBA_4444	include/hardware/copybit.h	/^    COPYBIT_FORMAT_RGBA_4444    = HAL_PIXEL_FORMAT_RGBA_4444,$/;"	e	enum:__anon185
COPYBIT_FORMAT_RGBA_5551	include/hardware/copybit.h	/^    COPYBIT_FORMAT_RGBA_5551    = HAL_PIXEL_FORMAT_RGBA_5551,$/;"	e	enum:__anon185
COPYBIT_FORMAT_RGBA_8888	include/hardware/copybit.h	/^    COPYBIT_FORMAT_RGBA_8888    = HAL_PIXEL_FORMAT_RGBA_8888,$/;"	e	enum:__anon185
COPYBIT_FORMAT_RGBX_8888	include/hardware/copybit.h	/^    COPYBIT_FORMAT_RGBX_8888    = HAL_PIXEL_FORMAT_RGBX_8888,$/;"	e	enum:__anon185
COPYBIT_FORMAT_RGB_565	include/hardware/copybit.h	/^    COPYBIT_FORMAT_RGB_565      = HAL_PIXEL_FORMAT_RGB_565,$/;"	e	enum:__anon185
COPYBIT_FORMAT_RGB_888	include/hardware/copybit.h	/^    COPYBIT_FORMAT_RGB_888      = HAL_PIXEL_FORMAT_RGB_888,$/;"	e	enum:__anon185
COPYBIT_FORMAT_YCbCr_422_SP	include/hardware/copybit.h	/^    COPYBIT_FORMAT_YCbCr_422_SP = 0x10,$/;"	e	enum:__anon185
COPYBIT_FORMAT_YCrCb_420_SP	include/hardware/copybit.h	/^    COPYBIT_FORMAT_YCrCb_420_SP = 0x11,$/;"	e	enum:__anon185
COPYBIT_HARDWARE_COPYBIT0	include/hardware/copybit.h	36;"	d
COPYBIT_HARDWARE_MODULE_ID	include/hardware/copybit.h	31;"	d
COPYBIT_MAGNIFICATION_LIMIT	include/hardware/copybit.h	/^    COPYBIT_MAGNIFICATION_LIMIT = 2,$/;"	e	enum:__anon189
COPYBIT_MINIFICATION_LIMIT	include/hardware/copybit.h	/^    COPYBIT_MINIFICATION_LIMIT  = 1,$/;"	e	enum:__anon189
COPYBIT_PLANE_ALPHA	include/hardware/copybit.h	/^    COPYBIT_PLANE_ALPHA     = 2,$/;"	e	enum:__anon186
COPYBIT_ROTATION_DEG	include/hardware/copybit.h	/^    COPYBIT_ROTATION_DEG    = 1,$/;"	e	enum:__anon186
COPYBIT_ROTATION_STEP_DEG	include/hardware/copybit.h	/^    COPYBIT_ROTATION_STEP_DEG   = 4,$/;"	e	enum:__anon189
COPYBIT_SCALING_FRAC_BITS	include/hardware/copybit.h	/^    COPYBIT_SCALING_FRAC_BITS   = 3,$/;"	e	enum:__anon189
COPYBIT_TRANSFORM	include/hardware/copybit.h	/^    COPYBIT_TRANSFORM       = 4,$/;"	e	enum:__anon186
COPYBIT_TRANSFORM_FLIP_H	include/hardware/copybit.h	/^    COPYBIT_TRANSFORM_FLIP_H    = HAL_TRANSFORM_FLIP_H,$/;"	e	enum:__anon187
COPYBIT_TRANSFORM_FLIP_V	include/hardware/copybit.h	/^    COPYBIT_TRANSFORM_FLIP_V    = HAL_TRANSFORM_FLIP_V,$/;"	e	enum:__anon187
COPYBIT_TRANSFORM_ROT_180	include/hardware/copybit.h	/^    COPYBIT_TRANSFORM_ROT_180   = HAL_TRANSFORM_ROT_180,$/;"	e	enum:__anon187
COPYBIT_TRANSFORM_ROT_270	include/hardware/copybit.h	/^    COPYBIT_TRANSFORM_ROT_270   = HAL_TRANSFORM_ROT_270,$/;"	e	enum:__anon187
COPYBIT_TRANSFORM_ROT_90	include/hardware/copybit.h	/^    COPYBIT_TRANSFORM_ROT_90    = HAL_TRANSFORM_ROT_90,$/;"	e	enum:__anon187
b	include/hardware/copybit.h	/^    int b;$/;"	m	struct:copybit_rect_t
base	include/hardware/copybit.h	/^    void        *base;$/;"	m	struct:copybit_image_t
blit	include/hardware/copybit.h	/^    int (*blit)(struct copybit_device_t *dev,$/;"	m	struct:copybit_device_t
common	include/hardware/copybit.h	/^    struct hw_device_t common;$/;"	m	struct:copybit_device_t	typeref:struct:copybit_device_t::hw_device_t
common	include/hardware/copybit.h	/^    struct hw_module_t common;$/;"	m	struct:copybit_module_t	typeref:struct:copybit_module_t::hw_module_t
copybit_close	include/hardware/copybit.h	/^static inline int copybit_close(struct copybit_device_t* device) {$/;"	f
copybit_device_t	include/hardware/copybit.h	/^struct copybit_device_t {$/;"	s
copybit_image_t	include/hardware/copybit.h	/^struct copybit_image_t {$/;"	s
copybit_module_t	include/hardware/copybit.h	/^struct copybit_module_t {$/;"	s
copybit_open	include/hardware/copybit.h	/^static inline int copybit_open(const struct hw_module_t* module, $/;"	f
copybit_rect_t	include/hardware/copybit.h	/^struct copybit_rect_t {$/;"	s
copybit_region_t	include/hardware/copybit.h	/^struct copybit_region_t {$/;"	s
format	include/hardware/copybit.h	/^    int32_t     format;$/;"	m	struct:copybit_image_t
get	include/hardware/copybit.h	/^    int (*get)(struct copybit_device_t *dev, int name);$/;"	m	struct:copybit_device_t
h	include/hardware/copybit.h	/^    uint32_t    h;$/;"	m	struct:copybit_image_t
handle	include/hardware/copybit.h	/^    native_handle_t* handle;$/;"	m	struct:copybit_image_t
l	include/hardware/copybit.h	/^    int l;$/;"	m	struct:copybit_rect_t
next	include/hardware/copybit.h	/^    int (*next)(struct copybit_region_t const *region, struct copybit_rect_t *rect);$/;"	m	struct:copybit_region_t
r	include/hardware/copybit.h	/^    int r;$/;"	m	struct:copybit_rect_t
set_parameter	include/hardware/copybit.h	/^    int (*set_parameter)(struct copybit_device_t *dev, int name, int value);$/;"	m	struct:copybit_device_t
stretch	include/hardware/copybit.h	/^    int (*stretch)(struct copybit_device_t *dev,$/;"	m	struct:copybit_device_t
t	include/hardware/copybit.h	/^    int t;$/;"	m	struct:copybit_rect_t
w	include/hardware/copybit.h	/^    uint32_t    w;$/;"	m	struct:copybit_image_t
AGPS_INTERFACE	include/hardware/gps.h	217;"	d
AGPS_REF_LOCATION_TYPE_GSM_CELLID	include/hardware/gps.h	191;"	d
AGPS_REF_LOCATION_TYPE_UMTS_CELLID	include/hardware/gps.h	192;"	d
AGPS_REG_LOCATION_TYPE_MAC	include/hardware/gps.h	193;"	d
AGPS_RIL_INTERFACE	include/hardware/gps.h	227;"	d
AGPS_RIL_NETWORK_TTYPE_MOBILE_DUN	include/hardware/gps.h	200;"	d
AGPS_RIL_NETWORK_TTYPE_MOBILE_HIPRI	include/hardware/gps.h	201;"	d
AGPS_RIL_NETWORK_TTYPE_WIMAX	include/hardware/gps.h	202;"	d
AGPS_RIL_NETWORK_TYPE_MOBILE	include/hardware/gps.h	196;"	d
AGPS_RIL_NETWORK_TYPE_MOBILE_MMS	include/hardware/gps.h	198;"	d
AGPS_RIL_NETWORK_TYPE_MOBILE_SUPL	include/hardware/gps.h	199;"	d
AGPS_RIL_NETWORK_TYPE_WIFI	include/hardware/gps.h	197;"	d
AGPS_RIL_REQUEST_REFLOC_CELLID	include/hardware/gps.h	620;"	d
AGPS_RIL_REQUEST_REFLOC_MAC	include/hardware/gps.h	621;"	d
AGPS_RIL_REQUEST_SETID_IMSI	include/hardware/gps.h	617;"	d
AGPS_RIL_REQUEST_SETID_MSISDN	include/hardware/gps.h	618;"	d
AGPS_SETID_TYPE_IMSI	include/hardware/gps.h	131;"	d
AGPS_SETID_TYPE_MSISDN	include/hardware/gps.h	132;"	d
AGPS_SETID_TYPE_NONE	include/hardware/gps.h	130;"	d
AGPS_TYPE_C2K	include/hardware/gps.h	127;"	d
AGPS_TYPE_SUPL	include/hardware/gps.h	126;"	d
AGpsCallbacks	include/hardware/gps.h	/^} AGpsCallbacks;$/;"	t	typeref:struct:__anon220
AGpsInterface	include/hardware/gps.h	/^} AGpsInterface;$/;"	t	typeref:struct:__anon221
AGpsRefLocation	include/hardware/gps.h	/^} AGpsRefLocation;$/;"	t	typeref:struct:__anon212
AGpsRefLocationCellID	include/hardware/gps.h	/^} AGpsRefLocationCellID;$/;"	t	typeref:struct:__anon210
AGpsRefLocationMac	include/hardware/gps.h	/^} AGpsRefLocationMac;$/;"	t	typeref:struct:__anon211
AGpsRilCallbacks	include/hardware/gps.h	/^} AGpsRilCallbacks;$/;"	t	typeref:struct:__anon225
AGpsRilInterface	include/hardware/gps.h	/^} AGpsRilInterface;$/;"	t	typeref:struct:__anon226
AGpsSetIDType	include/hardware/gps.h	/^typedef uint16_t AGpsSetIDType;$/;"	t
AGpsStatus	include/hardware/gps.h	/^} AGpsStatus;$/;"	t	typeref:struct:__anon219
AGpsStatusValue	include/hardware/gps.h	/^typedef uint16_t AGpsStatusValue;$/;"	t
AGpsType	include/hardware/gps.h	/^typedef uint16_t AGpsType;$/;"	t
ANDROID_INCLUDE_HARDWARE_GPS_H	include/hardware/gps.h	18;"	d
GPS_AGPS_DATA_CONNECTED	include/hardware/gps.h	185;"	d
GPS_AGPS_DATA_CONN_DONE	include/hardware/gps.h	187;"	d
GPS_AGPS_DATA_CONN_FAILED	include/hardware/gps.h	189;"	d
GPS_CAPABILITY_MSA	include/hardware/gps.h	101;"	d
GPS_CAPABILITY_MSB	include/hardware/gps.h	99;"	d
GPS_CAPABILITY_SCHEDULING	include/hardware/gps.h	97;"	d
GPS_CAPABILITY_SINGLE_SHOT	include/hardware/gps.h	103;"	d
GPS_DEBUG_INTERFACE	include/hardware/gps.h	212;"	d
GPS_DELETE_ALL	include/hardware/gps.h	122;"	d
GPS_DELETE_ALMANAC	include/hardware/gps.h	111;"	d
GPS_DELETE_CELLDB_INFO	include/hardware/gps.h	121;"	d
GPS_DELETE_EPHEMERIS	include/hardware/gps.h	110;"	d
GPS_DELETE_HEALTH	include/hardware/gps.h	116;"	d
GPS_DELETE_IONO	include/hardware/gps.h	114;"	d
GPS_DELETE_POSITION	include/hardware/gps.h	112;"	d
GPS_DELETE_RTI	include/hardware/gps.h	120;"	d
GPS_DELETE_SADATA	include/hardware/gps.h	119;"	d
GPS_DELETE_SVDIR	include/hardware/gps.h	117;"	d
GPS_DELETE_SVSTEER	include/hardware/gps.h	118;"	d
GPS_DELETE_TIME	include/hardware/gps.h	113;"	d
GPS_DELETE_UTC	include/hardware/gps.h	115;"	d
GPS_ENC_NONE	include/hardware/gps.h	172;"	d
GPS_ENC_SUPL_GSM_DEFAULT	include/hardware/gps.h	173;"	d
GPS_ENC_SUPL_UCS2	include/hardware/gps.h	175;"	d
GPS_ENC_SUPL_UTF8	include/hardware/gps.h	174;"	d
GPS_ENC_UNKNOWN	include/hardware/gps.h	176;"	d
GPS_HARDWARE_MODULE_ID	include/hardware/gps.h	32;"	d
GPS_LOCATION_HAS_ACCURACY	include/hardware/gps.h	89;"	d
GPS_LOCATION_HAS_ALTITUDE	include/hardware/gps.h	83;"	d
GPS_LOCATION_HAS_BEARING	include/hardware/gps.h	87;"	d
GPS_LOCATION_HAS_LAT_LONG	include/hardware/gps.h	81;"	d
GPS_LOCATION_HAS_SPEED	include/hardware/gps.h	85;"	d
GPS_MAX_SVS	include/hardware/gps.h	39;"	d
GPS_NI_INTERFACE	include/hardware/gps.h	222;"	d
GPS_NI_LONG_STRING_MAXLEN	include/hardware/gps.h	138;"	d
GPS_NI_NEED_NOTIFY	include/hardware/gps.h	153;"	d
GPS_NI_NEED_VERIFY	include/hardware/gps.h	155;"	d
GPS_NI_PRIVACY_OVERRIDE	include/hardware/gps.h	157;"	d
GPS_NI_RESPONSE_ACCEPT	include/hardware/gps.h	164;"	d
GPS_NI_RESPONSE_DENY	include/hardware/gps.h	165;"	d
GPS_NI_RESPONSE_NORESP	include/hardware/gps.h	166;"	d
GPS_NI_SHORT_STRING_MAXLEN	include/hardware/gps.h	137;"	d
GPS_NI_TYPE_UMTS_CTRL_PLANE	include/hardware/gps.h	146;"	d
GPS_NI_TYPE_UMTS_SUPL	include/hardware/gps.h	145;"	d
GPS_NI_TYPE_VOICE	include/hardware/gps.h	144;"	d
GPS_POSITION_MODE_MS_ASSISTED	include/hardware/gps.h	50;"	d
GPS_POSITION_MODE_MS_BASED	include/hardware/gps.h	48;"	d
GPS_POSITION_MODE_STANDALONE	include/hardware/gps.h	46;"	d
GPS_POSITION_RECURRENCE_PERIODIC	include/hardware/gps.h	57;"	d
GPS_POSITION_RECURRENCE_SINGLE	include/hardware/gps.h	59;"	d
GPS_RELEASE_AGPS_DATA_CONN	include/hardware/gps.h	183;"	d
GPS_REQUEST_AGPS_DATA_CONN	include/hardware/gps.h	181;"	d
GPS_STATUS_ENGINE_OFF	include/hardware/gps.h	74;"	d
GPS_STATUS_ENGINE_ON	include/hardware/gps.h	72;"	d
GPS_STATUS_NONE	include/hardware/gps.h	66;"	d
GPS_STATUS_SESSION_BEGIN	include/hardware/gps.h	68;"	d
GPS_STATUS_SESSION_END	include/hardware/gps.h	70;"	d
GPS_XTRA_INTERFACE	include/hardware/gps.h	207;"	d
GpsAidingData	include/hardware/gps.h	/^typedef uint16_t GpsAidingData;$/;"	t
GpsCallbacks	include/hardware/gps.h	/^} GpsCallbacks;$/;"	t	typeref:struct:__anon214
GpsDebugInterface	include/hardware/gps.h	/^} GpsDebugInterface;$/;"	t	typeref:struct:__anon218
GpsInterface	include/hardware/gps.h	/^} GpsInterface;$/;"	t	typeref:struct:__anon215
GpsLocation	include/hardware/gps.h	/^} GpsLocation;$/;"	t	typeref:struct:__anon206
GpsLocationFlags	include/hardware/gps.h	/^typedef uint16_t GpsLocationFlags;$/;"	t
GpsNiCallbacks	include/hardware/gps.h	/^} GpsNiCallbacks;$/;"	t	typeref:struct:__anon223
GpsNiEncodingType	include/hardware/gps.h	/^typedef int GpsNiEncodingType;$/;"	t
GpsNiInterface	include/hardware/gps.h	/^} GpsNiInterface;$/;"	t	typeref:struct:__anon224
GpsNiNotification	include/hardware/gps.h	/^} GpsNiNotification;$/;"	t	typeref:struct:__anon222
GpsNiNotifyFlags	include/hardware/gps.h	/^typedef uint32_t GpsNiNotifyFlags;$/;"	t
GpsNiType	include/hardware/gps.h	/^typedef uint32_t GpsNiType;$/;"	t
GpsPositionMode	include/hardware/gps.h	/^typedef uint32_t GpsPositionMode;$/;"	t
GpsPositionRecurrence	include/hardware/gps.h	/^typedef uint32_t GpsPositionRecurrence;$/;"	t
GpsStatus	include/hardware/gps.h	/^} GpsStatus;$/;"	t	typeref:struct:__anon207
GpsStatusValue	include/hardware/gps.h	/^typedef uint16_t GpsStatusValue;$/;"	t
GpsSvInfo	include/hardware/gps.h	/^} GpsSvInfo;$/;"	t	typeref:struct:__anon208
GpsSvStatus	include/hardware/gps.h	/^} GpsSvStatus;$/;"	t	typeref:struct:__anon209
GpsUserResponseType	include/hardware/gps.h	/^typedef int GpsUserResponseType;$/;"	t
GpsUtcTime	include/hardware/gps.h	/^typedef int64_t GpsUtcTime;$/;"	t
GpsXtraCallbacks	include/hardware/gps.h	/^} GpsXtraCallbacks;$/;"	t	typeref:struct:__anon216
GpsXtraInterface	include/hardware/gps.h	/^} GpsXtraInterface;$/;"	t	typeref:struct:__anon217
accuracy	include/hardware/gps.h	/^    float           accuracy;$/;"	m	struct:__anon206
acquire_wakelock_cb	include/hardware/gps.h	/^    gps_acquire_wakelock acquire_wakelock_cb;$/;"	m	struct:__anon214
agps_ril_request_ref_loc	include/hardware/gps.h	/^typedef void (*agps_ril_request_ref_loc)(uint32_t flags);$/;"	t
agps_ril_request_set_id	include/hardware/gps.h	/^typedef void (*agps_ril_request_set_id)(uint32_t flags);$/;"	t
agps_status_callback	include/hardware/gps.h	/^typedef void (* agps_status_callback)(AGpsStatus* status);$/;"	t
almanac_mask	include/hardware/gps.h	/^    uint32_t    almanac_mask;$/;"	m	struct:__anon209
altitude	include/hardware/gps.h	/^    double          altitude;$/;"	m	struct:__anon206
azimuth	include/hardware/gps.h	/^    float   azimuth;$/;"	m	struct:__anon208
bearing	include/hardware/gps.h	/^    float           bearing;$/;"	m	struct:__anon206
cellID	include/hardware/gps.h	/^        AGpsRefLocationCellID   cellID;$/;"	m	union:__anon212::__anon213
cid	include/hardware/gps.h	/^    uint32_t cid;$/;"	m	struct:__anon210
cleanup	include/hardware/gps.h	/^    void  (*cleanup)( void );$/;"	m	struct:__anon215
common	include/hardware/gps.h	/^    struct hw_device_t common;$/;"	m	struct:gps_device_t	typeref:struct:gps_device_t::hw_device_t
create_thread_cb	include/hardware/gps.h	/^    gps_create_thread create_thread_cb;$/;"	m	struct:__anon214
create_thread_cb	include/hardware/gps.h	/^    gps_create_thread create_thread_cb;$/;"	m	struct:__anon216
create_thread_cb	include/hardware/gps.h	/^    gps_create_thread create_thread_cb;$/;"	m	struct:__anon220
create_thread_cb	include/hardware/gps.h	/^    gps_create_thread create_thread_cb;$/;"	m	struct:__anon223
create_thread_cb	include/hardware/gps.h	/^    gps_create_thread create_thread_cb;$/;"	m	struct:__anon225
data_conn_closed	include/hardware/gps.h	/^    int  (*data_conn_closed)();$/;"	m	struct:__anon221
data_conn_failed	include/hardware/gps.h	/^    int  (*data_conn_failed)();$/;"	m	struct:__anon221
data_conn_open	include/hardware/gps.h	/^    int  (*data_conn_open)( const char* apn );$/;"	m	struct:__anon221
default_response	include/hardware/gps.h	/^    GpsUserResponseType default_response;$/;"	m	struct:__anon222
delete_aiding_data	include/hardware/gps.h	/^    void  (*delete_aiding_data)(GpsAidingData flags);$/;"	m	struct:__anon215
download_request_cb	include/hardware/gps.h	/^    gps_xtra_download_request download_request_cb;$/;"	m	struct:__anon216
elevation	include/hardware/gps.h	/^    float   elevation;$/;"	m	struct:__anon208
ephemeris_mask	include/hardware/gps.h	/^    uint32_t    ephemeris_mask;$/;"	m	struct:__anon209
extras	include/hardware/gps.h	/^    char           extras[GPS_NI_LONG_STRING_MAXLEN];$/;"	m	struct:__anon222
flags	include/hardware/gps.h	/^    uint16_t        flags;$/;"	m	struct:__anon206
get_extension	include/hardware/gps.h	/^    const void* (*get_extension)(const char* name);$/;"	m	struct:__anon215
get_gps_interface	include/hardware/gps.h	/^    const GpsInterface* (*get_gps_interface)(struct gps_device_t* dev);$/;"	m	struct:gps_device_t
get_internal_state	include/hardware/gps.h	/^    size_t (*get_internal_state)(char* buffer, size_t bufferSize);$/;"	m	struct:__anon218
gps_acquire_wakelock	include/hardware/gps.h	/^typedef void (* gps_acquire_wakelock)();$/;"	t
gps_create_thread	include/hardware/gps.h	/^typedef pthread_t (* gps_create_thread)(const char* name, void (*start)(void *), void* arg);$/;"	t
gps_device_t	include/hardware/gps.h	/^struct gps_device_t {$/;"	s
gps_location_callback	include/hardware/gps.h	/^typedef void (* gps_location_callback)(GpsLocation* location);$/;"	t
gps_ni_notify_callback	include/hardware/gps.h	/^typedef void (*gps_ni_notify_callback)(GpsNiNotification *notification);$/;"	t
gps_nmea_callback	include/hardware/gps.h	/^typedef void (* gps_nmea_callback)(GpsUtcTime timestamp, const char* nmea, int length);$/;"	t
gps_release_wakelock	include/hardware/gps.h	/^typedef void (* gps_release_wakelock)();$/;"	t
gps_set_capabilities	include/hardware/gps.h	/^typedef void (* gps_set_capabilities)(uint32_t capabilities);$/;"	t
gps_status_callback	include/hardware/gps.h	/^typedef void (* gps_status_callback)(GpsStatus* status);$/;"	t
gps_sv_status_callback	include/hardware/gps.h	/^typedef void (* gps_sv_status_callback)(GpsSvStatus* sv_info);$/;"	t
gps_xtra_download_request	include/hardware/gps.h	/^typedef void (* gps_xtra_download_request)();$/;"	t
init	include/hardware/gps.h	/^    int   (*init)( GpsCallbacks* callbacks );$/;"	m	struct:__anon215
init	include/hardware/gps.h	/^    int  (*init)( GpsXtraCallbacks* callbacks );$/;"	m	struct:__anon217
init	include/hardware/gps.h	/^    void  (*init)( AGpsCallbacks* callbacks );$/;"	m	struct:__anon221
init	include/hardware/gps.h	/^    void  (*init)( AGpsRilCallbacks* callbacks );$/;"	m	struct:__anon226
init	include/hardware/gps.h	/^   void (*init) (GpsNiCallbacks *callbacks);$/;"	m	struct:__anon224
inject_location	include/hardware/gps.h	/^    int  (*inject_location)(double latitude, double longitude, float accuracy);$/;"	m	struct:__anon215
inject_time	include/hardware/gps.h	/^    int   (*inject_time)(GpsUtcTime time, int64_t timeReference,$/;"	m	struct:__anon215
inject_xtra_data	include/hardware/gps.h	/^    int  (*inject_xtra_data)( char* data, int length );$/;"	m	struct:__anon217
lac	include/hardware/gps.h	/^    uint16_t lac;$/;"	m	struct:__anon210
latitude	include/hardware/gps.h	/^    double          latitude;$/;"	m	struct:__anon206
location_cb	include/hardware/gps.h	/^    gps_location_callback location_cb;$/;"	m	struct:__anon214
longitude	include/hardware/gps.h	/^    double          longitude;$/;"	m	struct:__anon206
mac	include/hardware/gps.h	/^        AGpsRefLocationMac      mac;$/;"	m	union:__anon212::__anon213
mac	include/hardware/gps.h	/^    uint8_t mac[6];$/;"	m	struct:__anon211
mcc	include/hardware/gps.h	/^    uint16_t mcc;$/;"	m	struct:__anon210
mnc	include/hardware/gps.h	/^    uint16_t mnc;$/;"	m	struct:__anon210
ni_message	include/hardware/gps.h	/^    void (*ni_message) (uint8_t *msg, size_t len);$/;"	m	struct:__anon226
ni_type	include/hardware/gps.h	/^    GpsNiType       ni_type;$/;"	m	struct:__anon222
nmea_cb	include/hardware/gps.h	/^    gps_nmea_callback nmea_cb;$/;"	m	struct:__anon214
notification_id	include/hardware/gps.h	/^    int             notification_id;$/;"	m	struct:__anon222
notify_cb	include/hardware/gps.h	/^    gps_ni_notify_callback notify_cb;$/;"	m	struct:__anon223
notify_flags	include/hardware/gps.h	/^    GpsNiNotifyFlags notify_flags;$/;"	m	struct:__anon222
num_svs	include/hardware/gps.h	/^    int         num_svs;$/;"	m	struct:__anon209
prn	include/hardware/gps.h	/^    int     prn;$/;"	m	struct:__anon208
release_wakelock_cb	include/hardware/gps.h	/^    gps_release_wakelock release_wakelock_cb;$/;"	m	struct:__anon214
request_refloc	include/hardware/gps.h	/^    agps_ril_request_ref_loc request_refloc;$/;"	m	struct:__anon225
request_setid	include/hardware/gps.h	/^    agps_ril_request_set_id request_setid;$/;"	m	struct:__anon225
requestor_id	include/hardware/gps.h	/^    char            requestor_id[GPS_NI_SHORT_STRING_MAXLEN];$/;"	m	struct:__anon222
requestor_id_encoding	include/hardware/gps.h	/^    GpsNiEncodingType requestor_id_encoding;$/;"	m	struct:__anon222
respond	include/hardware/gps.h	/^   void (*respond) (int notif_id, GpsUserResponseType user_response);$/;"	m	struct:__anon224
set_capabilities_cb	include/hardware/gps.h	/^    gps_set_capabilities set_capabilities_cb;$/;"	m	struct:__anon214
set_position_mode	include/hardware/gps.h	/^    int   (*set_position_mode)(GpsPositionMode mode, GpsPositionRecurrence recurrence,$/;"	m	struct:__anon215
set_ref_location	include/hardware/gps.h	/^    void (*set_ref_location) (const AGpsRefLocation *agps_reflocation, size_t sz_struct);$/;"	m	struct:__anon226
set_server	include/hardware/gps.h	/^    int  (*set_server)( AGpsType type, const char* hostname, int port );$/;"	m	struct:__anon221
set_set_id	include/hardware/gps.h	/^    void (*set_set_id) (AGpsSetIDType type, const char* setid);$/;"	m	struct:__anon226
size	include/hardware/gps.h	/^    size_t          size;$/;"	m	struct:__anon206
size	include/hardware/gps.h	/^    size_t          size;$/;"	m	struct:__anon207
size	include/hardware/gps.h	/^    size_t          size;$/;"	m	struct:__anon208
size	include/hardware/gps.h	/^    size_t          size;$/;"	m	struct:__anon209
size	include/hardware/gps.h	/^    size_t          size;$/;"	m	struct:__anon215
size	include/hardware/gps.h	/^    size_t          size;$/;"	m	struct:__anon217
size	include/hardware/gps.h	/^    size_t          size;$/;"	m	struct:__anon218
size	include/hardware/gps.h	/^    size_t          size;$/;"	m	struct:__anon219
size	include/hardware/gps.h	/^    size_t          size;$/;"	m	struct:__anon221
size	include/hardware/gps.h	/^    size_t          size;$/;"	m	struct:__anon222
size	include/hardware/gps.h	/^    size_t          size;$/;"	m	struct:__anon224
size	include/hardware/gps.h	/^    size_t          size;$/;"	m	struct:__anon226
size	include/hardware/gps.h	/^    size_t      size;$/;"	m	struct:__anon214
snr	include/hardware/gps.h	/^    float   snr;$/;"	m	struct:__anon208
speed	include/hardware/gps.h	/^    float           speed;$/;"	m	struct:__anon206
start	include/hardware/gps.h	/^    int   (*start)( void );$/;"	m	struct:__anon215
status	include/hardware/gps.h	/^    AGpsStatusValue status;$/;"	m	struct:__anon219
status	include/hardware/gps.h	/^    GpsStatusValue status;$/;"	m	struct:__anon207
status_cb	include/hardware/gps.h	/^    agps_status_callback status_cb;$/;"	m	struct:__anon220
status_cb	include/hardware/gps.h	/^    gps_status_callback status_cb;$/;"	m	struct:__anon214
stop	include/hardware/gps.h	/^    int   (*stop)( void );$/;"	m	struct:__anon215
sv_list	include/hardware/gps.h	/^    GpsSvInfo   sv_list[GPS_MAX_SVS];$/;"	m	struct:__anon209
sv_status_cb	include/hardware/gps.h	/^    gps_sv_status_callback sv_status_cb;$/;"	m	struct:__anon214
text	include/hardware/gps.h	/^    char            text[GPS_NI_LONG_STRING_MAXLEN];$/;"	m	struct:__anon222
text_encoding	include/hardware/gps.h	/^    GpsNiEncodingType text_encoding;$/;"	m	struct:__anon222
timeout	include/hardware/gps.h	/^    int             timeout;$/;"	m	struct:__anon222
timestamp	include/hardware/gps.h	/^    GpsUtcTime      timestamp;$/;"	m	struct:__anon206
type	include/hardware/gps.h	/^    AGpsType        type;$/;"	m	struct:__anon219
type	include/hardware/gps.h	/^    uint16_t type;$/;"	m	struct:__anon210
type	include/hardware/gps.h	/^    uint16_t type;$/;"	m	struct:__anon212
u	include/hardware/gps.h	/^    } u;$/;"	m	struct:__anon212	typeref:union:__anon212::__anon213
update_network_state	include/hardware/gps.h	/^    void (*update_network_state) (int connected, int type, int roaming, const char* extra_info);$/;"	m	struct:__anon226
used_in_fix_mask	include/hardware/gps.h	/^    uint32_t    used_in_fix_mask;$/;"	m	struct:__anon209
ANDROID_GRALLOC_INTERFACE_H	include/hardware/gralloc.h	19;"	d
GRALLOC_HARDWARE_FB0	include/hardware/gralloc.h	40;"	d
GRALLOC_HARDWARE_GPU0	include/hardware/gralloc.h	41;"	d
GRALLOC_HARDWARE_MODULE_ID	include/hardware/gralloc.h	34;"	d
GRALLOC_MODULE_PERFORM_CREATE_HANDLE_FROM_BUFFER	include/hardware/gralloc.h	/^    GRALLOC_MODULE_PERFORM_CREATE_HANDLE_FROM_BUFFER = 0x080000001,$/;"	e	enum:__anon198
GRALLOC_USAGE_HW_2D	include/hardware/gralloc.h	/^    GRALLOC_USAGE_HW_2D           = 0x00000400,$/;"	e	enum:__anon197
GRALLOC_USAGE_HW_FB	include/hardware/gralloc.h	/^    GRALLOC_USAGE_HW_FB           = 0x00001000,$/;"	e	enum:__anon197
GRALLOC_USAGE_HW_MASK	include/hardware/gralloc.h	/^    GRALLOC_USAGE_HW_MASK         = 0x00001F00,$/;"	e	enum:__anon197
GRALLOC_USAGE_HW_RENDER	include/hardware/gralloc.h	/^    GRALLOC_USAGE_HW_RENDER       = 0x00000200,$/;"	e	enum:__anon197
GRALLOC_USAGE_HW_TEXTURE	include/hardware/gralloc.h	/^    GRALLOC_USAGE_HW_TEXTURE      = 0x00000100,$/;"	e	enum:__anon197
GRALLOC_USAGE_PRIVATE_0	include/hardware/gralloc.h	/^    GRALLOC_USAGE_PRIVATE_0       = 0x10000000,$/;"	e	enum:__anon197
GRALLOC_USAGE_PRIVATE_1	include/hardware/gralloc.h	/^    GRALLOC_USAGE_PRIVATE_1       = 0x20000000,$/;"	e	enum:__anon197
GRALLOC_USAGE_PRIVATE_2	include/hardware/gralloc.h	/^    GRALLOC_USAGE_PRIVATE_2       = 0x40000000,$/;"	e	enum:__anon197
GRALLOC_USAGE_PRIVATE_3	include/hardware/gralloc.h	/^    GRALLOC_USAGE_PRIVATE_3       = 0x80000000,$/;"	e	enum:__anon197
GRALLOC_USAGE_PRIVATE_MASK	include/hardware/gralloc.h	/^    GRALLOC_USAGE_PRIVATE_MASK    = 0xF0000000,$/;"	e	enum:__anon197
GRALLOC_USAGE_SW_READ_MASK	include/hardware/gralloc.h	/^    GRALLOC_USAGE_SW_READ_MASK    = 0x0000000F,$/;"	e	enum:__anon197
GRALLOC_USAGE_SW_READ_NEVER	include/hardware/gralloc.h	/^    GRALLOC_USAGE_SW_READ_NEVER   = 0x00000000,$/;"	e	enum:__anon197
GRALLOC_USAGE_SW_READ_OFTEN	include/hardware/gralloc.h	/^    GRALLOC_USAGE_SW_READ_OFTEN   = 0x00000003,$/;"	e	enum:__anon197
GRALLOC_USAGE_SW_READ_RARELY	include/hardware/gralloc.h	/^    GRALLOC_USAGE_SW_READ_RARELY  = 0x00000002,$/;"	e	enum:__anon197
GRALLOC_USAGE_SW_WRITE_MASK	include/hardware/gralloc.h	/^    GRALLOC_USAGE_SW_WRITE_MASK   = 0x000000F0,$/;"	e	enum:__anon197
GRALLOC_USAGE_SW_WRITE_NEVER	include/hardware/gralloc.h	/^    GRALLOC_USAGE_SW_WRITE_NEVER  = 0x00000000,$/;"	e	enum:__anon197
GRALLOC_USAGE_SW_WRITE_OFTEN	include/hardware/gralloc.h	/^    GRALLOC_USAGE_SW_WRITE_OFTEN  = 0x00000030,$/;"	e	enum:__anon197
GRALLOC_USAGE_SW_WRITE_RARELY	include/hardware/gralloc.h	/^    GRALLOC_USAGE_SW_WRITE_RARELY = 0x00000020,$/;"	e	enum:__anon197
alloc	include/hardware/gralloc.h	/^    int (*alloc)(struct alloc_device_t* dev,$/;"	m	struct:alloc_device_t
alloc_device_t	include/hardware/gralloc.h	/^typedef struct alloc_device_t {$/;"	s
alloc_device_t	include/hardware/gralloc.h	/^} alloc_device_t;$/;"	t	typeref:struct:alloc_device_t
buffer_handle_t	include/hardware/gralloc.h	/^typedef const native_handle* buffer_handle_t;$/;"	t
common	include/hardware/gralloc.h	/^    struct hw_device_t common;$/;"	m	struct:alloc_device_t	typeref:struct:alloc_device_t::hw_device_t
common	include/hardware/gralloc.h	/^    struct hw_device_t common;$/;"	m	struct:framebuffer_device_t	typeref:struct:framebuffer_device_t::hw_device_t
common	include/hardware/gralloc.h	/^    struct hw_module_t common;$/;"	m	struct:gralloc_module_t	typeref:struct:gralloc_module_t::hw_module_t
compositionComplete	include/hardware/gralloc.h	/^    int (*compositionComplete)(struct framebuffer_device_t* dev);$/;"	m	struct:framebuffer_device_t
flags	include/hardware/gralloc.h	/^    const uint32_t  flags;$/;"	m	struct:framebuffer_device_t
format	include/hardware/gralloc.h	/^    const int       format;$/;"	m	struct:framebuffer_device_t
fps	include/hardware/gralloc.h	/^    const float     fps;$/;"	m	struct:framebuffer_device_t
framebuffer_close	include/hardware/gralloc.h	/^static inline int framebuffer_close(struct framebuffer_device_t* device) {$/;"	f
framebuffer_device_t	include/hardware/gralloc.h	/^typedef struct framebuffer_device_t {$/;"	s
framebuffer_device_t	include/hardware/gralloc.h	/^} framebuffer_device_t;$/;"	t	typeref:struct:framebuffer_device_t
framebuffer_open	include/hardware/gralloc.h	/^static inline int framebuffer_open(const struct hw_module_t* module, $/;"	f
free	include/hardware/gralloc.h	/^    int (*free)(struct alloc_device_t* dev,$/;"	m	struct:alloc_device_t
gralloc_close	include/hardware/gralloc.h	/^static inline int gralloc_close(struct alloc_device_t* device) {$/;"	f
gralloc_module_t	include/hardware/gralloc.h	/^typedef struct gralloc_module_t {$/;"	s
gralloc_module_t	include/hardware/gralloc.h	/^} gralloc_module_t;$/;"	t	typeref:struct:gralloc_module_t
gralloc_open	include/hardware/gralloc.h	/^static inline int gralloc_open(const struct hw_module_t* module, $/;"	f
height	include/hardware/gralloc.h	/^    const uint32_t  height;$/;"	m	struct:framebuffer_device_t
lock	include/hardware/gralloc.h	/^    int (*lock)(struct gralloc_module_t const* module,$/;"	m	struct:gralloc_module_t
maxSwapInterval	include/hardware/gralloc.h	/^    const int       maxSwapInterval;$/;"	m	struct:framebuffer_device_t
minSwapInterval	include/hardware/gralloc.h	/^    const int       minSwapInterval;$/;"	m	struct:framebuffer_device_t
perform	include/hardware/gralloc.h	/^    int (*perform)(struct gralloc_module_t const* module,$/;"	m	struct:gralloc_module_t
post	include/hardware/gralloc.h	/^    int (*post)(struct framebuffer_device_t* dev, buffer_handle_t buffer);$/;"	m	struct:framebuffer_device_t
registerBuffer	include/hardware/gralloc.h	/^    int (*registerBuffer)(struct gralloc_module_t const* module,$/;"	m	struct:gralloc_module_t
reserved	include/hardware/gralloc.h	/^    int reserved[8];$/;"	m	struct:framebuffer_device_t
reserved_proc	include/hardware/gralloc.h	/^    void* reserved_proc[7];$/;"	m	struct:gralloc_module_t
reserved_proc	include/hardware/gralloc.h	/^    void* reserved_proc[8];$/;"	m	struct:framebuffer_device_t
setSwapInterval	include/hardware/gralloc.h	/^    int (*setSwapInterval)(struct framebuffer_device_t* window,$/;"	m	struct:framebuffer_device_t
setUpdateRect	include/hardware/gralloc.h	/^    int (*setUpdateRect)(struct framebuffer_device_t* window,$/;"	m	struct:framebuffer_device_t
stride	include/hardware/gralloc.h	/^    const int       stride;$/;"	m	struct:framebuffer_device_t
unlock	include/hardware/gralloc.h	/^    int (*unlock)(struct gralloc_module_t const* module,$/;"	m	struct:gralloc_module_t
unregisterBuffer	include/hardware/gralloc.h	/^    int (*unregisterBuffer)(struct gralloc_module_t const* module,$/;"	m	struct:gralloc_module_t
width	include/hardware/gralloc.h	/^    const uint32_t  width;$/;"	m	struct:framebuffer_device_t
xdpi	include/hardware/gralloc.h	/^    const float     xdpi;$/;"	m	struct:framebuffer_device_t
ydpi	include/hardware/gralloc.h	/^    const float     ydpi;$/;"	m	struct:framebuffer_device_t
ANDROID_INCLUDE_HARDWARE_HARDWARE_H	include/hardware/hardware.h	18;"	d
HAL_MODULE_INFO_SYM	include/hardware/hardware.h	107;"	d
HAL_MODULE_INFO_SYM_AS_STR	include/hardware/hardware.h	112;"	d
HAL_PIXEL_FORMAT_BGRA_8888	include/hardware/hardware.h	/^    HAL_PIXEL_FORMAT_BGRA_8888          = 5,$/;"	e	enum:__anon195
HAL_PIXEL_FORMAT_RGBA_4444	include/hardware/hardware.h	/^    HAL_PIXEL_FORMAT_RGBA_4444          = 7,$/;"	e	enum:__anon195
HAL_PIXEL_FORMAT_RGBA_5551	include/hardware/hardware.h	/^    HAL_PIXEL_FORMAT_RGBA_5551          = 6,$/;"	e	enum:__anon195
HAL_PIXEL_FORMAT_RGBA_8888	include/hardware/hardware.h	/^    HAL_PIXEL_FORMAT_RGBA_8888          = 1,$/;"	e	enum:__anon195
HAL_PIXEL_FORMAT_RGBX_8888	include/hardware/hardware.h	/^    HAL_PIXEL_FORMAT_RGBX_8888          = 2,$/;"	e	enum:__anon195
HAL_PIXEL_FORMAT_RGB_565	include/hardware/hardware.h	/^    HAL_PIXEL_FORMAT_RGB_565            = 4,$/;"	e	enum:__anon195
HAL_PIXEL_FORMAT_RGB_888	include/hardware/hardware.h	/^    HAL_PIXEL_FORMAT_RGB_888            = 3,$/;"	e	enum:__anon195
HAL_PIXEL_FORMAT_YCbCr_422_I	include/hardware/hardware.h	/^    HAL_PIXEL_FORMAT_YCbCr_422_I        = 0x14, \/\/ YUY2$/;"	e	enum:__anon195
HAL_PIXEL_FORMAT_YCbCr_422_SP	include/hardware/hardware.h	/^    HAL_PIXEL_FORMAT_YCbCr_422_SP       = 0x10, \/\/ NV16$/;"	e	enum:__anon195
HAL_PIXEL_FORMAT_YCrCb_420_SP	include/hardware/hardware.h	/^    HAL_PIXEL_FORMAT_YCrCb_420_SP       = 0x11, \/\/ NV21$/;"	e	enum:__anon195
HAL_PIXEL_FORMAT_YV12	include/hardware/hardware.h	/^    HAL_PIXEL_FORMAT_YV12   = 0x32315659, \/\/ YCrCb 4:2:0 Planar$/;"	e	enum:__anon195
HAL_TRANSFORM_FLIP_H	include/hardware/hardware.h	/^    HAL_TRANSFORM_FLIP_H    = 0x01,$/;"	e	enum:__anon196
HAL_TRANSFORM_FLIP_V	include/hardware/hardware.h	/^    HAL_TRANSFORM_FLIP_V    = 0x02,$/;"	e	enum:__anon196
HAL_TRANSFORM_ROT_180	include/hardware/hardware.h	/^    HAL_TRANSFORM_ROT_180   = 0x03,$/;"	e	enum:__anon196
HAL_TRANSFORM_ROT_270	include/hardware/hardware.h	/^    HAL_TRANSFORM_ROT_270   = 0x07,$/;"	e	enum:__anon196
HAL_TRANSFORM_ROT_90	include/hardware/hardware.h	/^    HAL_TRANSFORM_ROT_90    = 0x04,$/;"	e	enum:__anon196
HARDWARE_DEVICE_TAG	include/hardware/hardware.h	34;"	d
HARDWARE_MODULE_TAG	include/hardware/hardware.h	33;"	d
MAKE_TAG_CONSTANT	include/hardware/hardware.h	31;"	d
author	include/hardware/hardware.h	/^    const char *author;$/;"	m	struct:hw_module_t
close	include/hardware/hardware.h	/^    int (*close)(struct hw_device_t* device);$/;"	m	struct:hw_device_t
dso	include/hardware/hardware.h	/^    void* dso;$/;"	m	struct:hw_module_t
hw_device_t	include/hardware/hardware.h	/^typedef struct hw_device_t {$/;"	s
hw_device_t	include/hardware/hardware.h	/^} hw_device_t;$/;"	t	typeref:struct:hw_device_t
hw_module_methods_t	include/hardware/hardware.h	/^typedef struct hw_module_methods_t {$/;"	s
hw_module_methods_t	include/hardware/hardware.h	/^} hw_module_methods_t;$/;"	t	typeref:struct:hw_module_methods_t
hw_module_t	include/hardware/hardware.h	/^typedef struct hw_module_t {$/;"	s
hw_module_t	include/hardware/hardware.h	/^} hw_module_t;$/;"	t	typeref:struct:hw_module_t
id	include/hardware/hardware.h	/^    const char *id;$/;"	m	struct:hw_module_t
methods	include/hardware/hardware.h	/^    struct hw_module_methods_t* methods;$/;"	m	struct:hw_module_t	typeref:struct:hw_module_t::hw_module_methods_t
module	include/hardware/hardware.h	/^    struct hw_module_t* module;$/;"	m	struct:hw_device_t	typeref:struct:hw_device_t::hw_module_t
name	include/hardware/hardware.h	/^    const char *name;$/;"	m	struct:hw_module_t
open	include/hardware/hardware.h	/^    int (*open)(const struct hw_module_t* module, const char* id,$/;"	m	struct:hw_module_methods_t
reserved	include/hardware/hardware.h	/^    uint32_t reserved[12];$/;"	m	struct:hw_device_t
reserved	include/hardware/hardware.h	/^    uint32_t reserved[32-7];$/;"	m	struct:hw_module_t
tag	include/hardware/hardware.h	/^    uint32_t tag;$/;"	m	struct:hw_device_t
tag	include/hardware/hardware.h	/^    uint32_t tag;$/;"	m	struct:hw_module_t
version	include/hardware/hardware.h	/^    uint32_t version;$/;"	m	struct:hw_device_t
version_major	include/hardware/hardware.h	/^    uint16_t version_major;$/;"	m	struct:hw_module_t
version_minor	include/hardware/hardware.h	/^    uint16_t version_minor;$/;"	m	struct:hw_module_t
ANDROID_LIGHTS_INTERFACE_H	include/hardware/lights.h	18;"	d
BRIGHTNESS_MODE_SENSOR	include/hardware/lights.h	82;"	d
BRIGHTNESS_MODE_USER	include/hardware/lights.h	77;"	d
LIGHTS_HARDWARE_MODULE_ID	include/hardware/lights.h	31;"	d
LIGHT_FLASH_HARDWARE	include/hardware/lights.h	72;"	d
LIGHT_FLASH_NONE	include/hardware/lights.h	58;"	d
LIGHT_FLASH_TIMED	include/hardware/lights.h	66;"	d
LIGHT_ID_ATTENTION	include/hardware/lights.h	44;"	d
LIGHT_ID_BACKLIGHT	include/hardware/lights.h	39;"	d
LIGHT_ID_BATTERY	include/hardware/lights.h	42;"	d
LIGHT_ID_BLUETOOTH	include/hardware/lights.h	51;"	d
LIGHT_ID_BUTTONS	include/hardware/lights.h	41;"	d
LIGHT_ID_KEYBOARD	include/hardware/lights.h	40;"	d
LIGHT_ID_NOTIFICATIONS	include/hardware/lights.h	43;"	d
LIGHT_ID_WIFI	include/hardware/lights.h	52;"	d
brightnessMode	include/hardware/lights.h	/^    int brightnessMode;$/;"	m	struct:light_state_t
color	include/hardware/lights.h	/^    unsigned int color;$/;"	m	struct:light_state_t
common	include/hardware/lights.h	/^    struct hw_device_t common;$/;"	m	struct:light_device_t	typeref:struct:light_device_t::hw_device_t
flashMode	include/hardware/lights.h	/^    int flashMode;$/;"	m	struct:light_state_t
flashOffMS	include/hardware/lights.h	/^    int flashOffMS;$/;"	m	struct:light_state_t
flashOnMS	include/hardware/lights.h	/^    int flashOnMS;$/;"	m	struct:light_state_t
light_device_t	include/hardware/lights.h	/^struct light_device_t {$/;"	s
light_state_t	include/hardware/lights.h	/^struct light_state_t {$/;"	s
set_light	include/hardware/lights.h	/^    int (*set_light)(struct light_device_t* dev,$/;"	m	struct:light_device_t
ANDROID_OVERLAY_INTERFACE_H	include/hardware/overlay.h	18;"	d
OVERLAY_DISABLE	include/hardware/overlay.h	/^    OVERLAY_DISABLE = 0,$/;"	e	enum:__anon202
OVERLAY_DITHER	include/hardware/overlay.h	/^    OVERLAY_DITHER        = 3,$/;"	e	enum:__anon201
OVERLAY_ENABLE	include/hardware/overlay.h	/^    OVERLAY_ENABLE  = 1$/;"	e	enum:__anon202
OVERLAY_FORMAT_BGRA_8888	include/hardware/overlay.h	/^    OVERLAY_FORMAT_BGRA_8888    = HAL_PIXEL_FORMAT_BGRA_8888,$/;"	e	enum:__anon199
OVERLAY_FORMAT_CbYCrY_422_I	include/hardware/overlay.h	/^    OVERLAY_FORMAT_CbYCrY_422_I = 0x16,$/;"	e	enum:__anon199
OVERLAY_FORMAT_DEFAULT	include/hardware/overlay.h	/^    OVERLAY_FORMAT_DEFAULT      = 99    \/\/ The actual color format is determined$/;"	e	enum:__anon199
OVERLAY_FORMAT_RGBA_8888	include/hardware/overlay.h	/^    OVERLAY_FORMAT_RGBA_8888    = HAL_PIXEL_FORMAT_RGBA_8888,$/;"	e	enum:__anon199
OVERLAY_FORMAT_RGB_565	include/hardware/overlay.h	/^    OVERLAY_FORMAT_RGB_565      = HAL_PIXEL_FORMAT_RGB_565,$/;"	e	enum:__anon199
OVERLAY_FORMAT_YCbYCr_422_I	include/hardware/overlay.h	/^    OVERLAY_FORMAT_YCbYCr_422_I = 0x14,$/;"	e	enum:__anon199
OVERLAY_HARDWARE_CONTROL	include/hardware/overlay.h	38;"	d
OVERLAY_HARDWARE_DATA	include/hardware/overlay.h	39;"	d
OVERLAY_HARDWARE_MODULE_ID	include/hardware/overlay.h	33;"	d
OVERLAY_HEIGHT_ALIGNMENT	include/hardware/overlay.h	/^    OVERLAY_HEIGHT_ALIGNMENT        = 8,$/;"	e	enum:__anon203
OVERLAY_HORIZONTAL_ALIGNMENT	include/hardware/overlay.h	/^    OVERLAY_HORIZONTAL_ALIGNMENT    = 5,$/;"	e	enum:__anon203
OVERLAY_MAGNIFICATION_LIMIT	include/hardware/overlay.h	/^    OVERLAY_MAGNIFICATION_LIMIT     = 2,$/;"	e	enum:__anon203
OVERLAY_MINIFICATION_LIMIT	include/hardware/overlay.h	/^    OVERLAY_MINIFICATION_LIMIT      = 1,$/;"	e	enum:__anon203
OVERLAY_ROTATION_DEG	include/hardware/overlay.h	/^    OVERLAY_ROTATION_DEG  = 1,$/;"	e	enum:__anon201
OVERLAY_ROTATION_STEP_DEG	include/hardware/overlay.h	/^    OVERLAY_ROTATION_STEP_DEG       = 4,$/;"	e	enum:__anon203
OVERLAY_SCALING_FRAC_BITS	include/hardware/overlay.h	/^    OVERLAY_SCALING_FRAC_BITS       = 3,$/;"	e	enum:__anon203
OVERLAY_TRANSFORM	include/hardware/overlay.h	/^    OVERLAY_TRANSFORM    = 4,$/;"	e	enum:__anon201
OVERLAY_TRANSFORM_FLIP_H	include/hardware/overlay.h	/^    OVERLAY_TRANSFORM_FLIP_H    = HAL_TRANSFORM_FLIP_H,$/;"	e	enum:__anon200
OVERLAY_TRANSFORM_FLIP_V	include/hardware/overlay.h	/^    OVERLAY_TRANSFORM_FLIP_V    = HAL_TRANSFORM_FLIP_V,$/;"	e	enum:__anon200
OVERLAY_TRANSFORM_ROT_180	include/hardware/overlay.h	/^    OVERLAY_TRANSFORM_ROT_180   = HAL_TRANSFORM_ROT_180,$/;"	e	enum:__anon200
OVERLAY_TRANSFORM_ROT_270	include/hardware/overlay.h	/^    OVERLAY_TRANSFORM_ROT_270   = HAL_TRANSFORM_ROT_270$/;"	e	enum:__anon200
OVERLAY_TRANSFORM_ROT_90	include/hardware/overlay.h	/^    OVERLAY_TRANSFORM_ROT_90    = HAL_TRANSFORM_ROT_90,$/;"	e	enum:__anon200
OVERLAY_VERTICAL_ALIGNMENT	include/hardware/overlay.h	/^    OVERLAY_VERTICAL_ALIGNMENT      = 6,$/;"	e	enum:__anon203
OVERLAY_WIDTH_ALIGNMENT	include/hardware/overlay.h	/^    OVERLAY_WIDTH_ALIGNMENT         = 7,$/;"	e	enum:__anon203
commit	include/hardware/overlay.h	/^    int (*commit)(struct overlay_control_device_t *dev, overlay_t* overlay);$/;"	m	struct:overlay_control_device_t
common	include/hardware/overlay.h	/^    struct hw_device_t common;$/;"	m	struct:overlay_control_device_t	typeref:struct:overlay_control_device_t::hw_device_t
common	include/hardware/overlay.h	/^    struct hw_device_t common;$/;"	m	struct:overlay_data_device_t	typeref:struct:overlay_data_device_t::hw_device_t
common	include/hardware/overlay.h	/^    struct hw_module_t common;$/;"	m	struct:overlay_module_t	typeref:struct:overlay_module_t::hw_module_t
createOverlay	include/hardware/overlay.h	/^    overlay_t* (*createOverlay)(struct overlay_control_device_t *dev,$/;"	m	struct:overlay_control_device_t
dequeueBuffer	include/hardware/overlay.h	/^    int (*dequeueBuffer)(struct overlay_data_device_t *dev,$/;"	m	struct:overlay_data_device_t
destroyOverlay	include/hardware/overlay.h	/^    void (*destroyOverlay)(struct overlay_control_device_t *dev,$/;"	m	struct:overlay_control_device_t
format	include/hardware/overlay.h	/^    int32_t             format;$/;"	m	struct:overlay_t
get	include/hardware/overlay.h	/^    int (*get)(struct overlay_control_device_t *dev, int name);$/;"	m	struct:overlay_control_device_t
getBufferAddress	include/hardware/overlay.h	/^    void* (*getBufferAddress)(struct overlay_data_device_t *dev,$/;"	m	struct:overlay_data_device_t
getBufferCount	include/hardware/overlay.h	/^    int (*getBufferCount)(struct overlay_data_device_t *dev);$/;"	m	struct:overlay_data_device_t
getCrop	include/hardware/overlay.h	/^    int (*getCrop)(struct overlay_data_device_t *dev,$/;"	m	struct:overlay_data_device_t
getHandleRef	include/hardware/overlay.h	/^    overlay_handle_t    (*getHandleRef)(struct overlay_t* overlay);$/;"	m	struct:overlay_t
getPosition	include/hardware/overlay.h	/^    int (*getPosition)(struct overlay_control_device_t *dev,$/;"	m	struct:overlay_control_device_t
h	include/hardware/overlay.h	/^    uint32_t            h;$/;"	m	struct:overlay_t
h_stride	include/hardware/overlay.h	/^    uint32_t            h_stride;$/;"	m	struct:overlay_t
initialize	include/hardware/overlay.h	/^    int (*initialize)(struct overlay_data_device_t *dev,$/;"	m	struct:overlay_data_device_t
overlay_buffer_t	include/hardware/overlay.h	/^typedef void* overlay_buffer_t;$/;"	t
overlay_control_close	include/hardware/overlay.h	/^static inline int overlay_control_close(struct overlay_control_device_t* device) {$/;"	f
overlay_control_device_t	include/hardware/overlay.h	/^struct overlay_control_device_t {$/;"	s
overlay_control_open	include/hardware/overlay.h	/^static inline int overlay_control_open(const struct hw_module_t* module, $/;"	f
overlay_data_close	include/hardware/overlay.h	/^static inline int overlay_data_close(struct overlay_data_device_t* device) {$/;"	f
overlay_data_device_t	include/hardware/overlay.h	/^struct overlay_data_device_t {$/;"	s
overlay_data_open	include/hardware/overlay.h	/^static inline int overlay_data_open(const struct hw_module_t* module, $/;"	f
overlay_handle_t	include/hardware/overlay.h	/^typedef const native_handle* overlay_handle_t;$/;"	t
overlay_module_t	include/hardware/overlay.h	/^struct overlay_module_t {$/;"	s
overlay_t	include/hardware/overlay.h	/^typedef struct overlay_t {$/;"	s
overlay_t	include/hardware/overlay.h	/^} overlay_t;$/;"	t	typeref:struct:overlay_t
queueBuffer	include/hardware/overlay.h	/^    int (*queueBuffer)(struct overlay_data_device_t *dev,$/;"	m	struct:overlay_data_device_t
reserved	include/hardware/overlay.h	/^    uint32_t            reserved[3];$/;"	m	struct:overlay_t
reserved_procs	include/hardware/overlay.h	/^    uint32_t            reserved_procs[7];$/;"	m	struct:overlay_t
resizeInput	include/hardware/overlay.h	/^    int (*resizeInput)(struct overlay_data_device_t *dev,$/;"	m	struct:overlay_data_device_t
setCrop	include/hardware/overlay.h	/^    int (*setCrop)(struct overlay_data_device_t *dev,$/;"	m	struct:overlay_data_device_t
setParameter	include/hardware/overlay.h	/^    int (*setParameter)(struct overlay_control_device_t *dev,$/;"	m	struct:overlay_control_device_t
setParameter	include/hardware/overlay.h	/^    int (*setParameter)(struct overlay_data_device_t *dev,$/;"	m	struct:overlay_data_device_t
setPosition	include/hardware/overlay.h	/^    int (*setPosition)(struct overlay_control_device_t *dev,$/;"	m	struct:overlay_control_device_t
stage	include/hardware/overlay.h	/^    int (*stage)(struct overlay_control_device_t *dev, overlay_t* overlay);$/;"	m	struct:overlay_control_device_t
w	include/hardware/overlay.h	/^    uint32_t            w;$/;"	m	struct:overlay_t
w_stride	include/hardware/overlay.h	/^    uint32_t            w_stride;$/;"	m	struct:overlay_t
ANDROID_INCLUDE_HARDWARE_QEMUD_H	include/hardware/qemud.h	18;"	d
D	include/hardware/qemud.h	38;"	d
qemud_channel_open	include/hardware/qemud.h	/^qemud_channel_open(const char*  name)$/;"	f
qemud_channel_recv	include/hardware/qemud.h	/^qemud_channel_recv(int  fd, void*  msg, int  msgsize)$/;"	f
qemud_channel_send	include/hardware/qemud.h	/^qemud_channel_send(int  fd, const void*  msg, int  msglen)$/;"	f
qemud_fd_read	include/hardware/qemud.h	/^qemud_fd_read(int  fd, void*  buff, int  len)$/;"	f
qemud_fd_write	include/hardware/qemud.h	/^qemud_fd_write(int  fd, const void*  buff, int  len)$/;"	f
ANDROID_SENSORS_INTERFACE_H	include/hardware/sensors.h	18;"	d
GRAVITY_EARTH	include/hardware/sensors.h	71;"	d
GRAVITY_SUN	include/hardware/sensors.h	70;"	d
MAGNETIC_FIELD_EARTH_MAX	include/hardware/sensors.h	74;"	d
MAGNETIC_FIELD_EARTH_MIN	include/hardware/sensors.h	77;"	d
SENSORS_HANDLE_BASE	include/hardware/sensors.h	45;"	d
SENSORS_HANDLE_BITS	include/hardware/sensors.h	46;"	d
SENSORS_HANDLE_COUNT	include/hardware/sensors.h	47;"	d
SENSORS_HARDWARE_MODULE_ID	include/hardware/sensors.h	32;"	d
SENSORS_HARDWARE_POLL	include/hardware/sensors.h	37;"	d
SENSOR_STATUS_ACCURACY_HIGH	include/hardware/sensors.h	87;"	d
SENSOR_STATUS_ACCURACY_LOW	include/hardware/sensors.h	85;"	d
SENSOR_STATUS_ACCURACY_MEDIUM	include/hardware/sensors.h	86;"	d
SENSOR_STATUS_UNRELIABLE	include/hardware/sensors.h	84;"	d
SENSOR_TYPE_ACCELEROMETER	include/hardware/sensors.h	53;"	d
SENSOR_TYPE_GRAVITY	include/hardware/sensors.h	61;"	d
SENSOR_TYPE_GYROSCOPE	include/hardware/sensors.h	56;"	d
SENSOR_TYPE_LIGHT	include/hardware/sensors.h	57;"	d
SENSOR_TYPE_LINEAR_ACCELERATION	include/hardware/sensors.h	62;"	d
SENSOR_TYPE_MAGNETIC_FIELD	include/hardware/sensors.h	54;"	d
SENSOR_TYPE_ORIENTATION	include/hardware/sensors.h	55;"	d
SENSOR_TYPE_PRESSURE	include/hardware/sensors.h	58;"	d
SENSOR_TYPE_PROXIMITY	include/hardware/sensors.h	60;"	d
SENSOR_TYPE_ROTATION_VECTOR	include/hardware/sensors.h	63;"	d
SENSOR_TYPE_TEMPERATURE	include/hardware/sensors.h	59;"	d
acceleration	include/hardware/sensors.h	/^        sensors_vec_t   acceleration;$/;"	m	union:sensors_event_t::__anon194
activate	include/hardware/sensors.h	/^    int (*activate)(struct sensors_poll_device_t *dev,$/;"	m	struct:sensors_poll_device_t
azimuth	include/hardware/sensors.h	/^            float azimuth;$/;"	m	struct:__anon190::__anon191::__anon193
common	include/hardware/sensors.h	/^    struct hw_device_t common;$/;"	m	struct:sensors_poll_device_t	typeref:struct:sensors_poll_device_t::hw_device_t
common	include/hardware/sensors.h	/^    struct hw_module_t common;$/;"	m	struct:sensors_module_t	typeref:struct:sensors_module_t::hw_module_t
data	include/hardware/sensors.h	/^        float           data[16];$/;"	m	union:sensors_event_t::__anon194
distance	include/hardware/sensors.h	/^        float           distance;$/;"	m	union:sensors_event_t::__anon194
get_sensors_list	include/hardware/sensors.h	/^    int (*get_sensors_list)(struct sensors_module_t* module,$/;"	m	struct:sensors_module_t
gyro	include/hardware/sensors.h	/^        sensors_vec_t   gyro;$/;"	m	union:sensors_event_t::__anon194
handle	include/hardware/sensors.h	/^    int             handle;$/;"	m	struct:sensor_t
light	include/hardware/sensors.h	/^        float           light;$/;"	m	union:sensors_event_t::__anon194
magnetic	include/hardware/sensors.h	/^        sensors_vec_t   magnetic;$/;"	m	union:sensors_event_t::__anon194
maxRange	include/hardware/sensors.h	/^    float           maxRange;$/;"	m	struct:sensor_t
minDelay	include/hardware/sensors.h	/^    int32_t         minDelay;$/;"	m	struct:sensor_t
name	include/hardware/sensors.h	/^    const char*     name;$/;"	m	struct:sensor_t
orientation	include/hardware/sensors.h	/^        sensors_vec_t   orientation;$/;"	m	union:sensors_event_t::__anon194
pitch	include/hardware/sensors.h	/^            float pitch;$/;"	m	struct:__anon190::__anon191::__anon193
poll	include/hardware/sensors.h	/^    int (*poll)(struct sensors_poll_device_t *dev,$/;"	m	struct:sensors_poll_device_t
power	include/hardware/sensors.h	/^    float           power;$/;"	m	struct:sensor_t
pressure	include/hardware/sensors.h	/^        float           pressure;$/;"	m	union:sensors_event_t::__anon194
reserved	include/hardware/sensors.h	/^    uint8_t reserved[3];$/;"	m	struct:__anon190
reserved	include/hardware/sensors.h	/^    void*           reserved[8];$/;"	m	struct:sensor_t
reserved0	include/hardware/sensors.h	/^    int32_t reserved0;$/;"	m	struct:sensors_event_t
reserved1	include/hardware/sensors.h	/^    uint32_t        reserved1[4];$/;"	m	struct:sensors_event_t
resolution	include/hardware/sensors.h	/^    float           resolution;$/;"	m	struct:sensor_t
roll	include/hardware/sensors.h	/^            float roll;$/;"	m	struct:__anon190::__anon191::__anon193
sensor	include/hardware/sensors.h	/^    int32_t sensor;$/;"	m	struct:sensors_event_t
sensor_t	include/hardware/sensors.h	/^struct sensor_t {$/;"	s
sensors_close	include/hardware/sensors.h	/^static inline int sensors_close(struct sensors_poll_device_t* device) {$/;"	f
sensors_event_t	include/hardware/sensors.h	/^typedef struct sensors_event_t {$/;"	s
sensors_event_t	include/hardware/sensors.h	/^} sensors_event_t;$/;"	t	typeref:struct:sensors_event_t
sensors_module_t	include/hardware/sensors.h	/^struct sensors_module_t {$/;"	s
sensors_open	include/hardware/sensors.h	/^static inline int sensors_open(const struct hw_module_t* module,$/;"	f
sensors_poll_device_t	include/hardware/sensors.h	/^struct sensors_poll_device_t {$/;"	s
sensors_vec_t	include/hardware/sensors.h	/^} sensors_vec_t;$/;"	t	typeref:struct:__anon190
setDelay	include/hardware/sensors.h	/^    int (*setDelay)(struct sensors_poll_device_t *dev,$/;"	m	struct:sensors_poll_device_t
status	include/hardware/sensors.h	/^    int8_t status;$/;"	m	struct:__anon190
temperature	include/hardware/sensors.h	/^        float           temperature;$/;"	m	union:sensors_event_t::__anon194
timestamp	include/hardware/sensors.h	/^    int64_t timestamp;$/;"	m	struct:sensors_event_t
type	include/hardware/sensors.h	/^    int             type;$/;"	m	struct:sensor_t
type	include/hardware/sensors.h	/^    int32_t type;$/;"	m	struct:sensors_event_t
v	include/hardware/sensors.h	/^        float v[3];$/;"	m	union:__anon190::__anon191
vendor	include/hardware/sensors.h	/^    const char*     vendor;$/;"	m	struct:sensor_t
version	include/hardware/sensors.h	/^    int             version;$/;"	m	struct:sensor_t
version	include/hardware/sensors.h	/^    int32_t version;$/;"	m	struct:sensors_event_t
x	include/hardware/sensors.h	/^            float x;$/;"	m	struct:__anon190::__anon191::__anon192
y	include/hardware/sensors.h	/^            float y;$/;"	m	struct:__anon190::__anon191::__anon192
z	include/hardware/sensors.h	/^            float z;$/;"	m	struct:__anon190::__anon191::__anon192
SENSORS_HARDWARE_CONTROL	include/hardware/sensors_deprecated.h	17;"	d
SENSORS_HARDWARE_DATA	include/hardware/sensors_deprecated.h	18;"	d
acceleration	include/hardware/sensors_deprecated.h	/^        sensors_vec_t   acceleration;$/;"	m	union:__anon204::__anon205
activate	include/hardware/sensors_deprecated.h	/^    int (*activate)(struct sensors_control_device_t *dev, $/;"	m	struct:sensors_control_device_t
close_data_source	include/hardware/sensors_deprecated.h	/^    int (*close_data_source)(struct sensors_control_device_t *dev);$/;"	m	struct:sensors_control_device_t
common	include/hardware/sensors_deprecated.h	/^    struct hw_device_t common;$/;"	m	struct:sensors_control_device_t	typeref:struct:sensors_control_device_t::hw_device_t
common	include/hardware/sensors_deprecated.h	/^    struct hw_device_t common;$/;"	m	struct:sensors_data_device_t	typeref:struct:sensors_data_device_t::hw_device_t
data_close	include/hardware/sensors_deprecated.h	/^    int (*data_close)(struct sensors_data_device_t *dev);$/;"	m	struct:sensors_data_device_t
data_open	include/hardware/sensors_deprecated.h	/^    int (*data_open)(struct sensors_data_device_t *dev, native_handle_t* nh);$/;"	m	struct:sensors_data_device_t
distance	include/hardware/sensors_deprecated.h	/^        float           distance;$/;"	m	union:__anon204::__anon205
light	include/hardware/sensors_deprecated.h	/^        float           light;$/;"	m	union:__anon204::__anon205
magnetic	include/hardware/sensors_deprecated.h	/^        sensors_vec_t   magnetic;$/;"	m	union:__anon204::__anon205
open_data_source	include/hardware/sensors_deprecated.h	/^    native_handle_t* (*open_data_source)(struct sensors_control_device_t *dev);$/;"	m	struct:sensors_control_device_t
orientation	include/hardware/sensors_deprecated.h	/^        sensors_vec_t   orientation;$/;"	m	union:__anon204::__anon205
poll	include/hardware/sensors_deprecated.h	/^    int (*poll)(struct sensors_data_device_t *dev, $/;"	m	struct:sensors_data_device_t
reserved	include/hardware/sensors_deprecated.h	/^    uint32_t        reserved;$/;"	m	struct:__anon204
sensor	include/hardware/sensors_deprecated.h	/^    int             sensor;$/;"	m	struct:__anon204
sensors_control_close	include/hardware/sensors_deprecated.h	/^static inline int sensors_control_close(struct sensors_control_device_t* device) {$/;"	f
sensors_control_device_t	include/hardware/sensors_deprecated.h	/^struct sensors_control_device_t {$/;"	s
sensors_control_open	include/hardware/sensors_deprecated.h	/^static inline int sensors_control_open(const struct hw_module_t* module, $/;"	f
sensors_data_close	include/hardware/sensors_deprecated.h	/^static inline int sensors_data_close(struct sensors_data_device_t* device) {$/;"	f
sensors_data_device_t	include/hardware/sensors_deprecated.h	/^struct sensors_data_device_t {$/;"	s
sensors_data_open	include/hardware/sensors_deprecated.h	/^static inline int sensors_data_open(const struct hw_module_t* module, $/;"	f
sensors_data_t	include/hardware/sensors_deprecated.h	/^} sensors_data_t;$/;"	t	typeref:struct:__anon204
set_delay	include/hardware/sensors_deprecated.h	/^    int (*set_delay)(struct sensors_control_device_t *dev, int32_t ms);$/;"	m	struct:sensors_control_device_t
temperature	include/hardware/sensors_deprecated.h	/^        float           temperature;$/;"	m	union:__anon204::__anon205
time	include/hardware/sensors_deprecated.h	/^    int64_t         time;$/;"	m	struct:__anon204
vector	include/hardware/sensors_deprecated.h	/^        sensors_vec_t   vector;$/;"	m	union:__anon204::__anon205
wake	include/hardware/sensors_deprecated.h	/^    int (*wake)(struct sensors_control_device_t *dev);$/;"	m	struct:sensors_control_device_t
ANDROID_AUDIOEFFECT_H	include/media/AudioEffect.h	18;"	d
AudioEffect	include/media/AudioEffect.h	/^class AudioEffect : public RefBase$/;"	c	namespace:android
EVENT_CONTROL_STATUS_CHANGED	include/media/AudioEffect.h	/^        EVENT_CONTROL_STATUS_CHANGED = 0,$/;"	e	enum:android::AudioEffect::event_type
EVENT_ENABLE_STATUS_CHANGED	include/media/AudioEffect.h	/^        EVENT_ENABLE_STATUS_CHANGED = 1,$/;"	e	enum:android::AudioEffect::event_type
EVENT_ERROR	include/media/AudioEffect.h	/^        EVENT_ERROR = 3$/;"	e	enum:android::AudioEffect::event_type
EVENT_PARAMETER_CHANGED	include/media/AudioEffect.h	/^        EVENT_PARAMETER_CHANGED = 2,$/;"	e	enum:android::AudioEffect::event_type
EffectClient	include/media/AudioEffect.h	/^        EffectClient(AudioEffect *effect) : mEffect(effect){}$/;"	f	class:android::AudioEffect::EffectClient
EffectClient	include/media/AudioEffect.h	/^    class EffectClient : public android::BnEffectClient,  public android::IBinder::DeathRecipient$/;"	c	class:android::AudioEffect
android	include/media/AudioEffect.h	/^namespace android {$/;"	n
binderDied	include/media/AudioEffect.h	/^        virtual void binderDied(const wp<IBinder>& who) {mEffect->binderDied();}$/;"	f	class:android::AudioEffect::EffectClient
commandExecuted	include/media/AudioEffect.h	/^        virtual void commandExecuted(uint32_t cmdCode,$/;"	f	class:android::AudioEffect::EffectClient
controlStatusChanged	include/media/AudioEffect.h	/^        virtual void controlStatusChanged(bool controlGranted) {$/;"	f	class:android::AudioEffect::EffectClient
effect_callback_t	include/media/AudioEffect.h	/^    typedef void (*effect_callback_t)(int32_t event, void* user, void *info);$/;"	t	class:android::AudioEffect
enableStatusChanged	include/media/AudioEffect.h	/^        virtual void enableStatusChanged(bool enabled) {$/;"	f	class:android::AudioEffect::EffectClient
event_type	include/media/AudioEffect.h	/^    enum event_type {$/;"	g	class:android::AudioEffect
id	include/media/AudioEffect.h	/^            int32_t     id() const { return mId; }$/;"	f	class:android::AudioEffect
mCbf	include/media/AudioEffect.h	/^     effect_callback_t       mCbf;               \/\/ callback function for status, control and$/;"	m	class:android::AudioEffect
mCblk	include/media/AudioEffect.h	/^    effect_param_cblk_t*    mCblk;              \/\/ control block for deferred parameter setting$/;"	m	class:android::AudioEffect
mCblkMemory	include/media/AudioEffect.h	/^    sp<IMemory>             mCblkMemory;        \/\/ shared memory for deferred parameter setting$/;"	m	class:android::AudioEffect
mDescriptor	include/media/AudioEffect.h	/^     effect_descriptor_t     mDescriptor;        \/\/ effect descriptor$/;"	m	class:android::AudioEffect
mEffect	include/media/AudioEffect.h	/^        AudioEffect *mEffect;$/;"	m	class:android::AudioEffect::EffectClient
mEnabled	include/media/AudioEffect.h	/^     volatile int32_t        mEnabled;           \/\/ enable state$/;"	m	class:android::AudioEffect
mIEffect	include/media/AudioEffect.h	/^    sp<IEffect>             mIEffect;           \/\/ IEffect binder interface$/;"	m	class:android::AudioEffect
mIEffectClient	include/media/AudioEffect.h	/^    sp<EffectClient>        mIEffectClient;     \/\/ IEffectClient implementation$/;"	m	class:android::AudioEffect
mId	include/media/AudioEffect.h	/^     int32_t                 mId;                \/\/ system wide unique effect engine instance ID$/;"	m	class:android::AudioEffect
mPriority	include/media/AudioEffect.h	/^     int32_t                 mPriority;          \/\/ priority for effect control$/;"	m	class:android::AudioEffect
mSessionId	include/media/AudioEffect.h	/^     int32_t                 mSessionId;         \/\/ audio session ID$/;"	m	class:android::AudioEffect
mStatus	include/media/AudioEffect.h	/^     status_t                mStatus;            \/\/ effect status$/;"	m	class:android::AudioEffect
mUserData	include/media/AudioEffect.h	/^     void*                   mUserData;          \/\/ client context for callback function$/;"	m	class:android::AudioEffect
priority	include/media/AudioEffect.h	/^            int32_t     priority() const { return mPriority; }$/;"	f	class:android::AudioEffect
AUDIORECORD_H_	include/media/AudioRecord.h	18;"	d
AudioRecord	include/media/AudioRecord.h	/^class AudioRecord$/;"	c	namespace:android
Buffer	include/media/AudioRecord.h	/^    class Buffer$/;"	c	class:android::AudioRecord
ClientRecordThread	include/media/AudioRecord.h	/^    class ClientRecordThread : public Thread$/;"	c	class:android::AudioRecord
DEFAULT_SAMPLE_RATE	include/media/AudioRecord.h	/^    static const int DEFAULT_SAMPLE_RATE = 8000;$/;"	m	class:android::AudioRecord
EVENT_MARKER	include/media/AudioRecord.h	/^        EVENT_MARKER = 2,           \/\/ Record head is at the specified marker position$/;"	e	enum:android::AudioRecord::event_type
EVENT_MORE_DATA	include/media/AudioRecord.h	/^        EVENT_MORE_DATA = 0,        \/\/ Request to reqd more data from PCM buffer.$/;"	e	enum:android::AudioRecord::event_type
EVENT_NEW_POS	include/media/AudioRecord.h	/^        EVENT_NEW_POS = 3,          \/\/ Record head is at a new position$/;"	e	enum:android::AudioRecord::event_type
EVENT_OVERRUN	include/media/AudioRecord.h	/^        EVENT_OVERRUN = 1,          \/\/ PCM buffer overrun occured.$/;"	e	enum:android::AudioRecord::event_type
MUTE	include/media/AudioRecord.h	/^            MUTE    = 0x00000001$/;"	e	enum:android::AudioRecord::Buffer::__anon139
NO_MORE_BUFFERS	include/media/AudioRecord.h	/^            NO_MORE_BUFFERS = 0x80000001,$/;"	e	enum:android::AudioRecord::__anon141
RECORD_AGC_ENABLE	include/media/AudioRecord.h	/^         RECORD_AGC_ENABLE = AudioSystem::AGC_ENABLE,$/;"	e	enum:android::AudioRecord::record_flags
RECORD_IIR_ENABLE	include/media/AudioRecord.h	/^         RECORD_IIR_ENABLE = AudioSystem::TX_IIR_ENABLE$/;"	e	enum:android::AudioRecord::record_flags
RECORD_NS_ENABLE	include/media/AudioRecord.h	/^         RECORD_NS_ENABLE  = AudioSystem::NS_ENABLE,$/;"	e	enum:android::AudioRecord::record_flags
STOPPED	include/media/AudioRecord.h	/^            STOPPED = 1$/;"	e	enum:android::AudioRecord::__anon141
android	include/media/AudioRecord.h	/^namespace android {$/;"	n
callback_t	include/media/AudioRecord.h	/^    typedef void (*callback_t)(int event, void* user, void *info);$/;"	t	class:android::AudioRecord
channelCount	include/media/AudioRecord.h	/^        int         channelCount;$/;"	m	class:android::AudioRecord::Buffer
event_type	include/media/AudioRecord.h	/^    enum event_type {$/;"	g	class:android::AudioRecord
flags	include/media/AudioRecord.h	/^        uint32_t    flags;$/;"	m	class:android::AudioRecord::Buffer
format	include/media/AudioRecord.h	/^        int         format;$/;"	m	class:android::AudioRecord::Buffer
frameCount	include/media/AudioRecord.h	/^        size_t      frameCount;$/;"	m	class:android::AudioRecord::Buffer
i16	include/media/AudioRecord.h	/^            short*      i16;$/;"	m	union:android::AudioRecord::Buffer::__anon140
i8	include/media/AudioRecord.h	/^            int8_t*     i8;$/;"	m	union:android::AudioRecord::Buffer::__anon140
mActive	include/media/AudioRecord.h	/^    volatile int32_t        mActive;$/;"	m	class:android::AudioRecord
mAudioRecord	include/media/AudioRecord.h	/^    sp<IAudioRecord>        mAudioRecord;$/;"	m	class:android::AudioRecord
mCbf	include/media/AudioRecord.h	/^    callback_t              mCbf;$/;"	m	class:android::AudioRecord
mCblk	include/media/AudioRecord.h	/^    audio_track_cblk_t*     mCblk;$/;"	m	class:android::AudioRecord
mCblkMemory	include/media/AudioRecord.h	/^    sp<IMemory>             mCblkMemory;$/;"	m	class:android::AudioRecord
mChannelCount	include/media/AudioRecord.h	/^    uint8_t                 mChannelCount;$/;"	m	class:android::AudioRecord
mChannels	include/media/AudioRecord.h	/^    uint32_t                mChannels;$/;"	m	class:android::AudioRecord
mClientRecordThread	include/media/AudioRecord.h	/^    sp<ClientRecordThread>  mClientRecordThread;$/;"	m	class:android::AudioRecord
mFlags	include/media/AudioRecord.h	/^    uint32_t                mFlags;$/;"	m	class:android::AudioRecord
mFormat	include/media/AudioRecord.h	/^    uint8_t                 mFormat;$/;"	m	class:android::AudioRecord
mFrameCount	include/media/AudioRecord.h	/^    uint32_t                mFrameCount;$/;"	m	class:android::AudioRecord
mInput	include/media/AudioRecord.h	/^    audio_io_handle_t       mInput;$/;"	m	class:android::AudioRecord
mInputSource	include/media/AudioRecord.h	/^    uint8_t                 mInputSource;$/;"	m	class:android::AudioRecord
mLatency	include/media/AudioRecord.h	/^    uint32_t                mLatency;$/;"	m	class:android::AudioRecord
mLock	include/media/AudioRecord.h	/^        Mutex       mLock;$/;"	m	class:android::AudioRecord::ClientRecordThread
mMarkerPosition	include/media/AudioRecord.h	/^    uint32_t                mMarkerPosition;$/;"	m	class:android::AudioRecord
mMarkerReached	include/media/AudioRecord.h	/^    bool                    mMarkerReached;$/;"	m	class:android::AudioRecord
mNewPosition	include/media/AudioRecord.h	/^    uint32_t                mNewPosition;$/;"	m	class:android::AudioRecord
mNotificationFrames	include/media/AudioRecord.h	/^    uint32_t                mNotificationFrames;$/;"	m	class:android::AudioRecord
mReceiver	include/media/AudioRecord.h	/^        AudioRecord& mReceiver;$/;"	m	class:android::AudioRecord::ClientRecordThread
mRecordThreadLock	include/media/AudioRecord.h	/^    Mutex                   mRecordThreadLock;$/;"	m	class:android::AudioRecord
mRemainingFrames	include/media/AudioRecord.h	/^    uint32_t                mRemainingFrames;$/;"	m	class:android::AudioRecord
mReserved	include/media/AudioRecord.h	/^    uint8_t                 mReserved;$/;"	m	class:android::AudioRecord
mSessionId	include/media/AudioRecord.h	/^    int                     mSessionId;$/;"	m	class:android::AudioRecord
mStatus	include/media/AudioRecord.h	/^    status_t                mStatus;$/;"	m	class:android::AudioRecord
mUpdatePeriod	include/media/AudioRecord.h	/^    uint32_t                mUpdatePeriod;$/;"	m	class:android::AudioRecord
mUserData	include/media/AudioRecord.h	/^    void*                   mUserData;$/;"	m	class:android::AudioRecord
onFirstRef	include/media/AudioRecord.h	/^        virtual void        onFirstRef() {}$/;"	f	class:android::AudioRecord::ClientRecordThread
raw	include/media/AudioRecord.h	/^            void*       raw;$/;"	m	union:android::AudioRecord::Buffer::__anon140
readyToRun	include/media/AudioRecord.h	/^        virtual status_t    readyToRun() { return NO_ERROR; }$/;"	f	class:android::AudioRecord::ClientRecordThread
record_flags	include/media/AudioRecord.h	/^     enum record_flags {$/;"	g	class:android::AudioRecord
size	include/media/AudioRecord.h	/^        size_t      size;$/;"	m	class:android::AudioRecord::Buffer
AAC	include/media/AudioSystem.h	/^        AAC                 = 0x04000000,$/;"	e	enum:android::AudioSystem::audio_format
AGC_DISABLE	include/media/AudioSystem.h	/^        AGC_DISABLE   = 0,$/;"	e	enum:android::AudioSystem::audio_in_acoustics
AGC_ENABLE	include/media/AudioSystem.h	/^        AGC_ENABLE    = 0x0001,$/;"	e	enum:android::AudioSystem::audio_in_acoustics
ALARM	include/media/AudioSystem.h	/^        ALARM            = 4,$/;"	e	enum:android::AudioSystem::stream_type
AMR_NB	include/media/AudioSystem.h	/^        AMR_NB              = 0x02000000,$/;"	e	enum:android::AudioSystem::audio_format
AMR_WB	include/media/AudioSystem.h	/^        AMR_WB              = 0x03000000,$/;"	e	enum:android::AudioSystem::audio_format
ANDROID_AUDIOSYSTEM_H_	include/media/AudioSystem.h	18;"	d
AudioFlingerClient	include/media/AudioSystem.h	/^        AudioFlingerClient() {$/;"	f	class:android::AudioSystem::AudioFlingerClient
AudioFlingerClient	include/media/AudioSystem.h	/^    class AudioFlingerClient: public IBinder::DeathRecipient, public BnAudioFlingerClient$/;"	c	class:android::AudioSystem
AudioParameter	include/media/AudioSystem.h	/^    AudioParameter() {}$/;"	f	class:android::AudioParameter
AudioParameter	include/media/AudioSystem.h	/^class AudioParameter {$/;"	c	namespace:android
AudioPolicyServiceClient	include/media/AudioSystem.h	/^        AudioPolicyServiceClient() {$/;"	f	class:android::AudioSystem::AudioPolicyServiceClient
AudioPolicyServiceClient	include/media/AudioSystem.h	/^    class AudioPolicyServiceClient: public IBinder::DeathRecipient$/;"	c	class:android::AudioSystem
AudioSystem	include/media/AudioSystem.h	/^class AudioSystem$/;"	c	namespace:android
BLUETOOTH_SCO	include/media/AudioSystem.h	/^        BLUETOOTH_SCO    = 6,$/;"	e	enum:android::AudioSystem::stream_type
CHANNEL_IN_ALL	include/media/AudioSystem.h	/^        CHANNEL_IN_ALL = (CHANNEL_IN_LEFT | CHANNEL_IN_RIGHT | CHANNEL_IN_FRONT | CHANNEL_IN_BACK|$/;"	e	enum:android::AudioSystem::audio_channels
CHANNEL_IN_BACK	include/media/AudioSystem.h	/^        CHANNEL_IN_BACK = 0x20,$/;"	e	enum:android::AudioSystem::audio_channels
CHANNEL_IN_BACK_PROCESSED	include/media/AudioSystem.h	/^        CHANNEL_IN_BACK_PROCESSED = 0x200,$/;"	e	enum:android::AudioSystem::audio_channels
CHANNEL_IN_FRONT	include/media/AudioSystem.h	/^        CHANNEL_IN_FRONT = 0x10,$/;"	e	enum:android::AudioSystem::audio_channels
CHANNEL_IN_FRONT_PROCESSED	include/media/AudioSystem.h	/^        CHANNEL_IN_FRONT_PROCESSED = 0x100,$/;"	e	enum:android::AudioSystem::audio_channels
CHANNEL_IN_LEFT	include/media/AudioSystem.h	/^        CHANNEL_IN_LEFT = 0x4,$/;"	e	enum:android::AudioSystem::audio_channels
CHANNEL_IN_LEFT_PROCESSED	include/media/AudioSystem.h	/^        CHANNEL_IN_LEFT_PROCESSED = 0x40,$/;"	e	enum:android::AudioSystem::audio_channels
CHANNEL_IN_MONO	include/media/AudioSystem.h	/^        CHANNEL_IN_MONO = CHANNEL_IN_FRONT,$/;"	e	enum:android::AudioSystem::audio_channels
CHANNEL_IN_PRESSURE	include/media/AudioSystem.h	/^        CHANNEL_IN_PRESSURE = 0x400,$/;"	e	enum:android::AudioSystem::audio_channels
CHANNEL_IN_RIGHT	include/media/AudioSystem.h	/^        CHANNEL_IN_RIGHT = 0x8,$/;"	e	enum:android::AudioSystem::audio_channels
CHANNEL_IN_RIGHT_PROCESSED	include/media/AudioSystem.h	/^        CHANNEL_IN_RIGHT_PROCESSED = 0x80,$/;"	e	enum:android::AudioSystem::audio_channels
CHANNEL_IN_STEREO	include/media/AudioSystem.h	/^        CHANNEL_IN_STEREO = (CHANNEL_IN_LEFT | CHANNEL_IN_RIGHT),$/;"	e	enum:android::AudioSystem::audio_channels
CHANNEL_IN_VOICE_DNLINK	include/media/AudioSystem.h	/^        CHANNEL_IN_VOICE_DNLINK = 0x8000,$/;"	e	enum:android::AudioSystem::audio_channels
CHANNEL_IN_VOICE_UPLINK	include/media/AudioSystem.h	/^        CHANNEL_IN_VOICE_UPLINK = 0x4000,$/;"	e	enum:android::AudioSystem::audio_channels
CHANNEL_IN_X_AXIS	include/media/AudioSystem.h	/^        CHANNEL_IN_X_AXIS = 0x800,$/;"	e	enum:android::AudioSystem::audio_channels
CHANNEL_IN_Y_AXIS	include/media/AudioSystem.h	/^        CHANNEL_IN_Y_AXIS = 0x1000,$/;"	e	enum:android::AudioSystem::audio_channels
CHANNEL_IN_Z_AXIS	include/media/AudioSystem.h	/^        CHANNEL_IN_Z_AXIS = 0x2000,$/;"	e	enum:android::AudioSystem::audio_channels
CHANNEL_OUT_5POINT1	include/media/AudioSystem.h	/^        CHANNEL_OUT_5POINT1 = (CHANNEL_OUT_FRONT_LEFT | CHANNEL_OUT_FRONT_RIGHT |$/;"	e	enum:android::AudioSystem::audio_channels
CHANNEL_OUT_7POINT1	include/media/AudioSystem.h	/^        CHANNEL_OUT_7POINT1 = (CHANNEL_OUT_FRONT_LEFT | CHANNEL_OUT_FRONT_RIGHT |$/;"	e	enum:android::AudioSystem::audio_channels
CHANNEL_OUT_ALL	include/media/AudioSystem.h	/^        CHANNEL_OUT_ALL = (CHANNEL_OUT_FRONT_LEFT | CHANNEL_OUT_FRONT_RIGHT |$/;"	e	enum:android::AudioSystem::audio_channels
CHANNEL_OUT_BACK_CENTER	include/media/AudioSystem.h	/^        CHANNEL_OUT_BACK_CENTER = 0x400,$/;"	e	enum:android::AudioSystem::audio_channels
CHANNEL_OUT_BACK_LEFT	include/media/AudioSystem.h	/^        CHANNEL_OUT_BACK_LEFT = 0x40,$/;"	e	enum:android::AudioSystem::audio_channels
CHANNEL_OUT_BACK_RIGHT	include/media/AudioSystem.h	/^        CHANNEL_OUT_BACK_RIGHT = 0x80,$/;"	e	enum:android::AudioSystem::audio_channels
CHANNEL_OUT_FRONT_CENTER	include/media/AudioSystem.h	/^        CHANNEL_OUT_FRONT_CENTER = 0x10,$/;"	e	enum:android::AudioSystem::audio_channels
CHANNEL_OUT_FRONT_LEFT	include/media/AudioSystem.h	/^        CHANNEL_OUT_FRONT_LEFT = 0x4,$/;"	e	enum:android::AudioSystem::audio_channels
CHANNEL_OUT_FRONT_LEFT_OF_CENTER	include/media/AudioSystem.h	/^        CHANNEL_OUT_FRONT_LEFT_OF_CENTER = 0x100,$/;"	e	enum:android::AudioSystem::audio_channels
CHANNEL_OUT_FRONT_RIGHT	include/media/AudioSystem.h	/^        CHANNEL_OUT_FRONT_RIGHT = 0x8,$/;"	e	enum:android::AudioSystem::audio_channels
CHANNEL_OUT_FRONT_RIGHT_OF_CENTER	include/media/AudioSystem.h	/^        CHANNEL_OUT_FRONT_RIGHT_OF_CENTER = 0x200,$/;"	e	enum:android::AudioSystem::audio_channels
CHANNEL_OUT_LOW_FREQUENCY	include/media/AudioSystem.h	/^        CHANNEL_OUT_LOW_FREQUENCY = 0x20,$/;"	e	enum:android::AudioSystem::audio_channels
CHANNEL_OUT_MONO	include/media/AudioSystem.h	/^        CHANNEL_OUT_MONO = CHANNEL_OUT_FRONT_LEFT,$/;"	e	enum:android::AudioSystem::audio_channels
CHANNEL_OUT_QUAD	include/media/AudioSystem.h	/^        CHANNEL_OUT_QUAD = (CHANNEL_OUT_FRONT_LEFT | CHANNEL_OUT_FRONT_RIGHT |$/;"	e	enum:android::AudioSystem::audio_channels
CHANNEL_OUT_STEREO	include/media/AudioSystem.h	/^        CHANNEL_OUT_STEREO = (CHANNEL_OUT_FRONT_LEFT | CHANNEL_OUT_FRONT_RIGHT),$/;"	e	enum:android::AudioSystem::audio_channels
CHANNEL_OUT_SURROUND	include/media/AudioSystem.h	/^        CHANNEL_OUT_SURROUND = (CHANNEL_OUT_FRONT_LEFT | CHANNEL_OUT_FRONT_RIGHT |$/;"	e	enum:android::AudioSystem::audio_channels
DEFAULT	include/media/AudioSystem.h	/^        DEFAULT          =-1,$/;"	e	enum:android::AudioSystem::stream_type
DEVICE_IN_ALL	include/media/AudioSystem.h	/^        DEVICE_IN_ALL = (DEVICE_IN_COMMUNICATION | DEVICE_IN_AMBIENT | DEVICE_IN_BUILTIN_MIC |$/;"	e	enum:android::AudioSystem::audio_devices
DEVICE_IN_AMBIENT	include/media/AudioSystem.h	/^        DEVICE_IN_AMBIENT = 0x20000,$/;"	e	enum:android::AudioSystem::audio_devices
DEVICE_IN_AUX_DIGITAL	include/media/AudioSystem.h	/^        DEVICE_IN_AUX_DIGITAL = 0x200000,$/;"	e	enum:android::AudioSystem::audio_devices
DEVICE_IN_BACK_MIC	include/media/AudioSystem.h	/^        DEVICE_IN_BACK_MIC = 0x800000,$/;"	e	enum:android::AudioSystem::audio_devices
DEVICE_IN_BLUETOOTH_SCO_HEADSET	include/media/AudioSystem.h	/^        DEVICE_IN_BLUETOOTH_SCO_HEADSET = 0x80000,$/;"	e	enum:android::AudioSystem::audio_devices
DEVICE_IN_BUILTIN_MIC	include/media/AudioSystem.h	/^        DEVICE_IN_BUILTIN_MIC = 0x40000,$/;"	e	enum:android::AudioSystem::audio_devices
DEVICE_IN_COMMUNICATION	include/media/AudioSystem.h	/^        DEVICE_IN_COMMUNICATION = 0x10000,$/;"	e	enum:android::AudioSystem::audio_devices
DEVICE_IN_DEFAULT	include/media/AudioSystem.h	/^        DEVICE_IN_DEFAULT = 0x80000000,$/;"	e	enum:android::AudioSystem::audio_devices
DEVICE_IN_VOICE_CALL	include/media/AudioSystem.h	/^        DEVICE_IN_VOICE_CALL = 0x400000,$/;"	e	enum:android::AudioSystem::audio_devices
DEVICE_IN_WIRED_HEADSET	include/media/AudioSystem.h	/^        DEVICE_IN_WIRED_HEADSET = 0x100000,$/;"	e	enum:android::AudioSystem::audio_devices
DEVICE_OUT_ALL	include/media/AudioSystem.h	/^        DEVICE_OUT_ALL = (DEVICE_OUT_EARPIECE | DEVICE_OUT_SPEAKER | DEVICE_OUT_WIRED_HEADSET |$/;"	e	enum:android::AudioSystem::audio_devices
DEVICE_OUT_ALL_A2DP	include/media/AudioSystem.h	/^        DEVICE_OUT_ALL_A2DP = (DEVICE_OUT_BLUETOOTH_A2DP | DEVICE_OUT_BLUETOOTH_A2DP_HEADPHONES |$/;"	e	enum:android::AudioSystem::audio_devices
DEVICE_OUT_AUX_DIGITAL	include/media/AudioSystem.h	/^        DEVICE_OUT_AUX_DIGITAL = 0x400,$/;"	e	enum:android::AudioSystem::audio_devices
DEVICE_OUT_BLUETOOTH_A2DP	include/media/AudioSystem.h	/^        DEVICE_OUT_BLUETOOTH_A2DP = 0x80,$/;"	e	enum:android::AudioSystem::audio_devices
DEVICE_OUT_BLUETOOTH_A2DP_HEADPHONES	include/media/AudioSystem.h	/^        DEVICE_OUT_BLUETOOTH_A2DP_HEADPHONES = 0x100,$/;"	e	enum:android::AudioSystem::audio_devices
DEVICE_OUT_BLUETOOTH_A2DP_SPEAKER	include/media/AudioSystem.h	/^        DEVICE_OUT_BLUETOOTH_A2DP_SPEAKER = 0x200,$/;"	e	enum:android::AudioSystem::audio_devices
DEVICE_OUT_BLUETOOTH_SCO	include/media/AudioSystem.h	/^        DEVICE_OUT_BLUETOOTH_SCO = 0x10,$/;"	e	enum:android::AudioSystem::audio_devices
DEVICE_OUT_BLUETOOTH_SCO_CARKIT	include/media/AudioSystem.h	/^        DEVICE_OUT_BLUETOOTH_SCO_CARKIT = 0x40,$/;"	e	enum:android::AudioSystem::audio_devices
DEVICE_OUT_BLUETOOTH_SCO_HEADSET	include/media/AudioSystem.h	/^        DEVICE_OUT_BLUETOOTH_SCO_HEADSET = 0x20,$/;"	e	enum:android::AudioSystem::audio_devices
DEVICE_OUT_DEFAULT	include/media/AudioSystem.h	/^        DEVICE_OUT_DEFAULT = 0x8000,$/;"	e	enum:android::AudioSystem::audio_devices
DEVICE_OUT_EARPIECE	include/media/AudioSystem.h	/^        DEVICE_OUT_EARPIECE = 0x1,$/;"	e	enum:android::AudioSystem::audio_devices
DEVICE_OUT_SPEAKER	include/media/AudioSystem.h	/^        DEVICE_OUT_SPEAKER = 0x2,$/;"	e	enum:android::AudioSystem::audio_devices
DEVICE_OUT_WIRED_HEADPHONE	include/media/AudioSystem.h	/^        DEVICE_OUT_WIRED_HEADPHONE = 0x8,$/;"	e	enum:android::AudioSystem::audio_devices
DEVICE_OUT_WIRED_HEADSET	include/media/AudioSystem.h	/^        DEVICE_OUT_WIRED_HEADSET = 0x4,$/;"	e	enum:android::AudioSystem::audio_devices
DEVICE_STATE_AVAILABLE	include/media/AudioSystem.h	/^        DEVICE_STATE_AVAILABLE,$/;"	e	enum:android::AudioSystem::device_connection_state
DEVICE_STATE_UNAVAILABLE	include/media/AudioSystem.h	/^        DEVICE_STATE_UNAVAILABLE,$/;"	e	enum:android::AudioSystem::device_connection_state
DTMF	include/media/AudioSystem.h	/^        DTMF             = 8,$/;"	e	enum:android::AudioSystem::stream_type
ENFORCED_AUDIBLE	include/media/AudioSystem.h	/^        ENFORCED_AUDIBLE = 7, \/\/ Sounds that cannot be muted by user and must be routed to speaker$/;"	e	enum:android::AudioSystem::stream_type
FORCE_BT_A2DP	include/media/AudioSystem.h	/^        FORCE_BT_A2DP,$/;"	e	enum:android::AudioSystem::forced_config
FORCE_BT_CAR_DOCK	include/media/AudioSystem.h	/^        FORCE_BT_CAR_DOCK,$/;"	e	enum:android::AudioSystem::forced_config
FORCE_BT_DESK_DOCK	include/media/AudioSystem.h	/^        FORCE_BT_DESK_DOCK,$/;"	e	enum:android::AudioSystem::forced_config
FORCE_BT_SCO	include/media/AudioSystem.h	/^        FORCE_BT_SCO,$/;"	e	enum:android::AudioSystem::forced_config
FORCE_DEFAULT	include/media/AudioSystem.h	/^        FORCE_DEFAULT = FORCE_NONE$/;"	e	enum:android::AudioSystem::forced_config
FORCE_HEADPHONES	include/media/AudioSystem.h	/^        FORCE_HEADPHONES,$/;"	e	enum:android::AudioSystem::forced_config
FORCE_NONE	include/media/AudioSystem.h	/^        FORCE_NONE,$/;"	e	enum:android::AudioSystem::forced_config
FORCE_SPEAKER	include/media/AudioSystem.h	/^        FORCE_SPEAKER,$/;"	e	enum:android::AudioSystem::forced_config
FORCE_WIRED_ACCESSORY	include/media/AudioSystem.h	/^        FORCE_WIRED_ACCESSORY,$/;"	e	enum:android::AudioSystem::forced_config
FORMAT_DEFAULT	include/media/AudioSystem.h	/^        FORMAT_DEFAULT      = 0,$/;"	e	enum:android::AudioSystem::audio_format
FOR_COMMUNICATION	include/media/AudioSystem.h	/^        FOR_COMMUNICATION,$/;"	e	enum:android::AudioSystem::force_use
FOR_DOCK	include/media/AudioSystem.h	/^        FOR_DOCK,$/;"	e	enum:android::AudioSystem::force_use
FOR_MEDIA	include/media/AudioSystem.h	/^        FOR_MEDIA,$/;"	e	enum:android::AudioSystem::force_use
FOR_RECORD	include/media/AudioSystem.h	/^        FOR_RECORD,$/;"	e	enum:android::AudioSystem::force_use
HE_AAC_V1	include/media/AudioSystem.h	/^        HE_AAC_V1           = 0x05000000,$/;"	e	enum:android::AudioSystem::audio_format
HE_AAC_V2	include/media/AudioSystem.h	/^        HE_AAC_V2           = 0x06000000,$/;"	e	enum:android::AudioSystem::audio_format
INPUT_CLOSED	include/media/AudioSystem.h	/^        INPUT_CLOSED,$/;"	e	enum:android::AudioSystem::io_config_event
INPUT_CONFIG_CHANGED	include/media/AudioSystem.h	/^        INPUT_CONFIG_CHANGED,$/;"	e	enum:android::AudioSystem::io_config_event
INPUT_OPENED	include/media/AudioSystem.h	/^        INPUT_OPENED,$/;"	e	enum:android::AudioSystem::io_config_event
INVALID_FORMAT	include/media/AudioSystem.h	/^        INVALID_FORMAT      = -1,$/;"	e	enum:android::AudioSystem::audio_format
MAIN_FORMAT_MASK	include/media/AudioSystem.h	/^        MAIN_FORMAT_MASK    = 0xFF000000,$/;"	e	enum:android::AudioSystem::audio_format
MODE_CURRENT	include/media/AudioSystem.h	/^        MODE_CURRENT = -1,$/;"	e	enum:android::AudioSystem::audio_mode
MODE_INVALID	include/media/AudioSystem.h	/^        MODE_INVALID = -2,$/;"	e	enum:android::AudioSystem::audio_mode
MODE_IN_CALL	include/media/AudioSystem.h	/^        MODE_IN_CALL,$/;"	e	enum:android::AudioSystem::audio_mode
MODE_IN_COMMUNICATION	include/media/AudioSystem.h	/^        MODE_IN_COMMUNICATION,$/;"	e	enum:android::AudioSystem::audio_mode
MODE_NORMAL	include/media/AudioSystem.h	/^        MODE_NORMAL = 0,$/;"	e	enum:android::AudioSystem::audio_mode
MODE_RINGTONE	include/media/AudioSystem.h	/^        MODE_RINGTONE,$/;"	e	enum:android::AudioSystem::audio_mode
MP3	include/media/AudioSystem.h	/^        MP3                 = 0x01000000,$/;"	e	enum:android::AudioSystem::audio_format
MUSIC	include/media/AudioSystem.h	/^        MUSIC            = 3,$/;"	e	enum:android::AudioSystem::stream_type
NOTIFICATION	include/media/AudioSystem.h	/^        NOTIFICATION     = 5,$/;"	e	enum:android::AudioSystem::stream_type
NS_DISABLE	include/media/AudioSystem.h	/^        NS_DISABLE    = 0,$/;"	e	enum:android::AudioSystem::audio_in_acoustics
NS_ENABLE	include/media/AudioSystem.h	/^        NS_ENABLE     = 0x0002,$/;"	e	enum:android::AudioSystem::audio_in_acoustics
NUM_CONFIG_EVENTS	include/media/AudioSystem.h	/^        NUM_CONFIG_EVENTS$/;"	e	enum:android::AudioSystem::io_config_event
NUM_DEVICE_STATES	include/media/AudioSystem.h	/^        NUM_DEVICE_STATES$/;"	e	enum:android::AudioSystem::device_connection_state
NUM_FORCE_CONFIG	include/media/AudioSystem.h	/^        NUM_FORCE_CONFIG,$/;"	e	enum:android::AudioSystem::forced_config
NUM_FORCE_USE	include/media/AudioSystem.h	/^        NUM_FORCE_USE$/;"	e	enum:android::AudioSystem::force_use
NUM_MODES	include/media/AudioSystem.h	/^        NUM_MODES  \/\/ not a valid entry, denotes end-of-list$/;"	e	enum:android::AudioSystem::audio_mode
NUM_STREAM_TYPES	include/media/AudioSystem.h	/^        NUM_STREAM_TYPES$/;"	e	enum:android::AudioSystem::stream_type
OUTPUT_CLOSED	include/media/AudioSystem.h	/^        OUTPUT_CLOSED,$/;"	e	enum:android::AudioSystem::io_config_event
OUTPUT_CONFIG_CHANGED	include/media/AudioSystem.h	/^        OUTPUT_CONFIG_CHANGED,$/;"	e	enum:android::AudioSystem::io_config_event
OUTPUT_FLAG_DIRECT	include/media/AudioSystem.h	/^        OUTPUT_FLAG_DIRECT = 0x1$/;"	e	enum:android::AudioSystem::output_flags
OUTPUT_FLAG_INDIRECT	include/media/AudioSystem.h	/^        OUTPUT_FLAG_INDIRECT = 0x0,$/;"	e	enum:android::AudioSystem::output_flags
OUTPUT_OPENED	include/media/AudioSystem.h	/^        OUTPUT_OPENED,$/;"	e	enum:android::AudioSystem::io_config_event
OutputDescriptor	include/media/AudioSystem.h	/^        OutputDescriptor()$/;"	f	class:android::AudioSystem::OutputDescriptor
OutputDescriptor	include/media/AudioSystem.h	/^    class OutputDescriptor {$/;"	c	class:android::AudioSystem
PCM	include/media/AudioSystem.h	/^        PCM                 = 0x00000000, \/\/ must be 0 for backward compatibility$/;"	e	enum:android::AudioSystem::audio_format
PCM_16_BIT	include/media/AudioSystem.h	/^        PCM_16_BIT          = (PCM|PCM_SUB_16_BIT),$/;"	e	enum:android::AudioSystem::audio_format
PCM_8_BIT	include/media/AudioSystem.h	/^        PCM_8_BIT          = (PCM|PCM_SUB_8_BIT)$/;"	e	enum:android::AudioSystem::audio_format
PCM_SUB_16_BIT	include/media/AudioSystem.h	/^        PCM_SUB_16_BIT          = 0x1, \/\/ must be 1 for backward compatibility$/;"	e	enum:android::AudioSystem::pcm_sub_format
PCM_SUB_8_BIT	include/media/AudioSystem.h	/^        PCM_SUB_8_BIT           = 0x2, \/\/ must be 2 for backward compatibility$/;"	e	enum:android::AudioSystem::pcm_sub_format
RING	include/media/AudioSystem.h	/^        RING             = 2,$/;"	e	enum:android::AudioSystem::stream_type
SESSION_OUTPUT_MIX	include/media/AudioSystem.h	/^        SESSION_OUTPUT_MIX = 0,    \/\/ session for effects applied to output mix. These effects can$/;"	e	enum:android::AudioSystem::audio_sessions
SESSION_OUTPUT_STAGE	include/media/AudioSystem.h	/^        SESSION_OUTPUT_STAGE = -1, \/\/ session for effects attached to a particular output stream$/;"	e	enum:android::AudioSystem::audio_sessions
STREAM_CONFIG_CHANGED	include/media/AudioSystem.h	/^        STREAM_CONFIG_CHANGED,$/;"	e	enum:android::AudioSystem::io_config_event
SUB_FORMAT_MASK	include/media/AudioSystem.h	/^        SUB_FORMAT_MASK     = 0x00FFFFFF,$/;"	e	enum:android::AudioSystem::audio_format
SYSTEM	include/media/AudioSystem.h	/^        SYSTEM           = 1,$/;"	e	enum:android::AudioSystem::stream_type
TTS	include/media/AudioSystem.h	/^        TTS              = 9,$/;"	e	enum:android::AudioSystem::stream_type
TX_DISABLE	include/media/AudioSystem.h	/^        TX_DISABLE    = 0$/;"	e	enum:android::AudioSystem::audio_in_acoustics
TX_IIR_ENABLE	include/media/AudioSystem.h	/^        TX_IIR_ENABLE = 0x0004,$/;"	e	enum:android::AudioSystem::audio_in_acoustics
VOICE_CALL	include/media/AudioSystem.h	/^        VOICE_CALL       = 0,$/;"	e	enum:android::AudioSystem::stream_type
VORBIS	include/media/AudioSystem.h	/^        VORBIS              = 0x07000000,$/;"	e	enum:android::AudioSystem::audio_format
aac_sub_format	include/media/AudioSystem.h	/^    enum aac_sub_format {$/;"	g	class:android::AudioSystem
amr_sub_format	include/media/AudioSystem.h	/^    enum amr_sub_format {$/;"	g	class:android::AudioSystem
android	include/media/AudioSystem.h	/^namespace android {$/;"	n
audio_channels	include/media/AudioSystem.h	/^    enum audio_channels {$/;"	g	class:android::AudioSystem
audio_devices	include/media/AudioSystem.h	/^    enum audio_devices {$/;"	g	class:android::AudioSystem
audio_error_callback	include/media/AudioSystem.h	/^typedef void (*audio_error_callback)(status_t err);$/;"	t	namespace:android
audio_format	include/media/AudioSystem.h	/^    enum audio_format {$/;"	g	class:android::AudioSystem
audio_in_acoustics	include/media/AudioSystem.h	/^    enum audio_in_acoustics {$/;"	g	class:android::AudioSystem
audio_io_handle_t	include/media/AudioSystem.h	/^typedef int audio_io_handle_t;$/;"	t	namespace:android
audio_mode	include/media/AudioSystem.h	/^    enum audio_mode {$/;"	g	class:android::AudioSystem
audio_sessions	include/media/AudioSystem.h	/^    enum audio_sessions {$/;"	g	class:android::AudioSystem
channels	include/media/AudioSystem.h	/^        int32_t channels;$/;"	m	class:android::AudioSystem::OutputDescriptor
device_connection_state	include/media/AudioSystem.h	/^    enum device_connection_state {$/;"	g	class:android::AudioSystem
force_use	include/media/AudioSystem.h	/^    enum force_use {$/;"	g	class:android::AudioSystem
forced_config	include/media/AudioSystem.h	/^    enum forced_config {$/;"	g	class:android::AudioSystem
format	include/media/AudioSystem.h	/^        int32_t format;$/;"	m	class:android::AudioSystem::OutputDescriptor
frameCount	include/media/AudioSystem.h	/^        size_t frameCount;$/;"	m	class:android::AudioSystem::OutputDescriptor
gAudioErrorCallback	include/media/AudioSystem.h	/^    static audio_error_callback gAudioErrorCallback;$/;"	m	class:android::AudioSystem
gAudioFlinger	include/media/AudioSystem.h	/^    static sp<IAudioFlinger> gAudioFlinger;$/;"	m	class:android::AudioSystem
gAudioFlingerClient	include/media/AudioSystem.h	/^    static sp<AudioFlingerClient> gAudioFlingerClient;$/;"	m	class:android::AudioSystem
gAudioPolicyService	include/media/AudioSystem.h	/^    static sp<IAudioPolicyService> gAudioPolicyService;$/;"	m	class:android::AudioSystem
gAudioPolicyServiceClient	include/media/AudioSystem.h	/^    static sp<AudioPolicyServiceClient> gAudioPolicyServiceClient;$/;"	m	class:android::AudioSystem
gInBuffSize	include/media/AudioSystem.h	/^    static size_t gInBuffSize;$/;"	m	class:android::AudioSystem
gLock	include/media/AudioSystem.h	/^    static Mutex gLock;$/;"	m	class:android::AudioSystem
gOutputs	include/media/AudioSystem.h	/^    static DefaultKeyedVector<audio_io_handle_t, OutputDescriptor *> gOutputs;$/;"	m	class:android::AudioSystem
gPrevInChannelCount	include/media/AudioSystem.h	/^    static int gPrevInChannelCount;$/;"	m	class:android::AudioSystem
gPrevInFormat	include/media/AudioSystem.h	/^    static int gPrevInFormat;$/;"	m	class:android::AudioSystem
gPrevInSamplingRate	include/media/AudioSystem.h	/^    static uint32_t gPrevInSamplingRate;$/;"	m	class:android::AudioSystem
gStreamOutputMap	include/media/AudioSystem.h	/^    static DefaultKeyedVector<int, audio_io_handle_t> gStreamOutputMap;$/;"	m	class:android::AudioSystem
io_config_event	include/media/AudioSystem.h	/^    enum io_config_event {$/;"	g	class:android::AudioSystem
keyChannels	include/media/AudioSystem.h	/^    static const char *keyChannels;$/;"	m	class:android::AudioParameter
keyFormat	include/media/AudioSystem.h	/^    static const char *keyFormat;$/;"	m	class:android::AudioParameter
keyFrameCount	include/media/AudioSystem.h	/^    static const char *keyFrameCount;$/;"	m	class:android::AudioParameter
keyInputSource	include/media/AudioSystem.h	/^    static const char *keyInputSource;$/;"	m	class:android::AudioParameter
keyRouting	include/media/AudioSystem.h	/^    static const char *keyRouting;$/;"	m	class:android::AudioParameter
keySamplingRate	include/media/AudioSystem.h	/^    static const char *keySamplingRate;$/;"	m	class:android::AudioParameter
latency	include/media/AudioSystem.h	/^        uint32_t latency;$/;"	m	class:android::AudioSystem::OutputDescriptor
mKeyValuePairs	include/media/AudioSystem.h	/^    String8 mKeyValuePairs;$/;"	m	class:android::AudioParameter
mParameters	include/media/AudioSystem.h	/^    KeyedVector <String8, String8> mParameters;$/;"	m	class:android::AudioParameter
mp3_sub_format	include/media/AudioSystem.h	/^    enum mp3_sub_format {$/;"	g	class:android::AudioSystem
output_flags	include/media/AudioSystem.h	/^    enum output_flags {$/;"	g	class:android::AudioSystem
pcm_sub_format	include/media/AudioSystem.h	/^    enum pcm_sub_format {$/;"	g	class:android::AudioSystem
samplingRate	include/media/AudioSystem.h	/^        uint32_t samplingRate;$/;"	m	class:android::AudioSystem::OutputDescriptor
size	include/media/AudioSystem.h	/^    size_t size() { return mParameters.size(); }$/;"	f	class:android::AudioParameter
stream_type	include/media/AudioSystem.h	/^    enum stream_type {$/;"	g	class:android::AudioSystem
vorbis_sub_format	include/media/AudioSystem.h	/^    enum vorbis_sub_format {$/;"	g	class:android::AudioSystem
ANDROID_AUDIOTRACK_H	include/media/AudioTrack.h	18;"	d
AudioTrack	include/media/AudioTrack.h	/^class AudioTrack$/;"	c	namespace:android
AudioTrackThread	include/media/AudioTrack.h	/^    class AudioTrackThread : public Thread$/;"	c	class:android::AudioTrack
Buffer	include/media/AudioTrack.h	/^    class Buffer$/;"	c	class:android::AudioTrack
EVENT_BUFFER_END	include/media/AudioTrack.h	/^        EVENT_BUFFER_END = 5        \/\/ Playback head is at the end of the buffer.$/;"	e	enum:android::AudioTrack::event_type
EVENT_LOOP_END	include/media/AudioTrack.h	/^        EVENT_LOOP_END = 2,         \/\/ Sample loop end was reached; playback restarted from loop start if loop count was not 0.$/;"	e	enum:android::AudioTrack::event_type
EVENT_MARKER	include/media/AudioTrack.h	/^        EVENT_MARKER = 3,           \/\/ Playback head is at the specified marker position (See setMarkerPosition()).$/;"	e	enum:android::AudioTrack::event_type
EVENT_MORE_DATA	include/media/AudioTrack.h	/^        EVENT_MORE_DATA = 0,        \/\/ Request to write more data to PCM buffer.$/;"	e	enum:android::AudioTrack::event_type
EVENT_NEW_POS	include/media/AudioTrack.h	/^        EVENT_NEW_POS = 4,          \/\/ Playback head is at a new position (See setPositionUpdatePeriod()).$/;"	e	enum:android::AudioTrack::event_type
EVENT_UNDERRUN	include/media/AudioTrack.h	/^        EVENT_UNDERRUN = 1,         \/\/ PCM buffer underrun occured.$/;"	e	enum:android::AudioTrack::event_type
LEFT	include/media/AudioTrack.h	/^        LEFT   = 0,$/;"	e	enum:android::AudioTrack::channel_index
MONO	include/media/AudioTrack.h	/^        MONO   = 0,$/;"	e	enum:android::AudioTrack::channel_index
MUTE	include/media/AudioTrack.h	/^            MUTE    = 0x00000001$/;"	e	enum:android::AudioTrack::Buffer::__anon135
NO_MORE_BUFFERS	include/media/AudioTrack.h	/^            NO_MORE_BUFFERS = 0x80000001,$/;"	e	enum:android::AudioTrack::__anon137
RIGHT	include/media/AudioTrack.h	/^        RIGHT  = 1$/;"	e	enum:android::AudioTrack::channel_index
STOPPED	include/media/AudioTrack.h	/^            STOPPED = 1$/;"	e	enum:android::AudioTrack::__anon137
android	include/media/AudioTrack.h	/^namespace android {$/;"	n
callback_t	include/media/AudioTrack.h	/^    typedef void (*callback_t)(int event, void* user, void *info);$/;"	t	class:android::AudioTrack
channelCount	include/media/AudioTrack.h	/^        int         channelCount;$/;"	m	class:android::AudioTrack::Buffer
channel_index	include/media/AudioTrack.h	/^    enum channel_index {$/;"	g	class:android::AudioTrack
event_type	include/media/AudioTrack.h	/^    enum event_type {$/;"	g	class:android::AudioTrack
flags	include/media/AudioTrack.h	/^        uint32_t    flags;$/;"	m	class:android::AudioTrack::Buffer
format	include/media/AudioTrack.h	/^        int         format;$/;"	m	class:android::AudioTrack::Buffer
frameCount	include/media/AudioTrack.h	/^        size_t      frameCount;$/;"	m	class:android::AudioTrack::Buffer
i16	include/media/AudioTrack.h	/^            short*      i16;$/;"	m	union:android::AudioTrack::Buffer::__anon136
i8	include/media/AudioTrack.h	/^            int8_t*     i8;$/;"	m	union:android::AudioTrack::Buffer::__anon136
mActive	include/media/AudioTrack.h	/^    volatile int32_t        mActive;$/;"	m	class:android::AudioTrack
mAudioTrack	include/media/AudioTrack.h	/^    sp<IAudioTrack>         mAudioTrack;$/;"	m	class:android::AudioTrack
mAudioTrackThread	include/media/AudioTrack.h	/^    sp<AudioTrackThread>    mAudioTrackThread;$/;"	m	class:android::AudioTrack
mAuxEffectId	include/media/AudioTrack.h	/^    int                     mAuxEffectId;$/;"	m	class:android::AudioTrack
mCbf	include/media/AudioTrack.h	/^    callback_t              mCbf;$/;"	m	class:android::AudioTrack
mCblk	include/media/AudioTrack.h	/^    audio_track_cblk_t*     mCblk;$/;"	m	class:android::AudioTrack
mCblkMemory	include/media/AudioTrack.h	/^    sp<IMemory>             mCblkMemory;$/;"	m	class:android::AudioTrack
mChannelCount	include/media/AudioTrack.h	/^    uint8_t                 mChannelCount;$/;"	m	class:android::AudioTrack
mChannels	include/media/AudioTrack.h	/^    uint32_t                mChannels;$/;"	m	class:android::AudioTrack
mFlags	include/media/AudioTrack.h	/^    uint32_t                mFlags;$/;"	m	class:android::AudioTrack
mFormat	include/media/AudioTrack.h	/^    uint8_t                 mFormat;$/;"	m	class:android::AudioTrack
mFrameCount	include/media/AudioTrack.h	/^    uint32_t                mFrameCount;$/;"	m	class:android::AudioTrack
mLatency	include/media/AudioTrack.h	/^    uint32_t                mLatency;$/;"	m	class:android::AudioTrack
mLock	include/media/AudioTrack.h	/^        Mutex       mLock;$/;"	m	class:android::AudioTrack::AudioTrackThread
mLoopCount	include/media/AudioTrack.h	/^    int                     mLoopCount;$/;"	m	class:android::AudioTrack
mMarkerPosition	include/media/AudioTrack.h	/^    uint32_t                mMarkerPosition;$/;"	m	class:android::AudioTrack
mMarkerReached	include/media/AudioTrack.h	/^    bool                    mMarkerReached;$/;"	m	class:android::AudioTrack
mMuted	include/media/AudioTrack.h	/^    uint8_t                 mMuted;$/;"	m	class:android::AudioTrack
mNewPosition	include/media/AudioTrack.h	/^    uint32_t                mNewPosition;$/;"	m	class:android::AudioTrack
mNotificationFramesAct	include/media/AudioTrack.h	/^    uint32_t                mNotificationFramesAct; \/\/ actual number of frames between each notification callback$/;"	m	class:android::AudioTrack
mNotificationFramesReq	include/media/AudioTrack.h	/^    uint32_t                mNotificationFramesReq; \/\/ requested number of frames between each notification callback$/;"	m	class:android::AudioTrack
mReceiver	include/media/AudioTrack.h	/^        AudioTrack& mReceiver;$/;"	m	class:android::AudioTrack::AudioTrackThread
mRemainingFrames	include/media/AudioTrack.h	/^    uint32_t                mRemainingFrames;$/;"	m	class:android::AudioTrack
mSendLevel	include/media/AudioTrack.h	/^    float                   mSendLevel;$/;"	m	class:android::AudioTrack
mSessionId	include/media/AudioTrack.h	/^    int                     mSessionId;$/;"	m	class:android::AudioTrack
mSharedBuffer	include/media/AudioTrack.h	/^    sp<IMemory>             mSharedBuffer;$/;"	m	class:android::AudioTrack
mStatus	include/media/AudioTrack.h	/^    status_t                mStatus;$/;"	m	class:android::AudioTrack
mStreamType	include/media/AudioTrack.h	/^    uint8_t                 mStreamType;$/;"	m	class:android::AudioTrack
mUpdatePeriod	include/media/AudioTrack.h	/^    uint32_t                mUpdatePeriod;$/;"	m	class:android::AudioTrack
mUserData	include/media/AudioTrack.h	/^    void*                   mUserData;$/;"	m	class:android::AudioTrack
mVolume	include/media/AudioTrack.h	/^    float                   mVolume[2];$/;"	m	class:android::AudioTrack
raw	include/media/AudioTrack.h	/^            void*       raw;$/;"	m	union:android::AudioTrack::Buffer::__anon136
size	include/media/AudioTrack.h	/^        size_t      size;$/;"	m	class:android::AudioTrack::Buffer
ANDROID_EFFECTAPI_H_	include/media/EffectApi.h	18;"	d
AUDIO_MODE_IN_CALL	include/media/EffectApi.h	/^    AUDIO_MODE_IN_CALL      \/\/ audio call connected (VoIP or telephony)$/;"	e	enum:audio_mode_e
AUDIO_MODE_NORMAL	include/media/EffectApi.h	/^    AUDIO_MODE_NORMAL,      \/\/ device idle$/;"	e	enum:audio_mode_e
AUDIO_MODE_RINGTONE	include/media/EffectApi.h	/^    AUDIO_MODE_RINGTONE,    \/\/ device ringing$/;"	e	enum:audio_mode_e
CHANNEL_5POINT1	include/media/EffectApi.h	/^    CHANNEL_5POINT1 = (CHANNEL_FRONT_LEFT | CHANNEL_FRONT_RIGHT |$/;"	e	enum:audio_channels_e
CHANNEL_7POINT1	include/media/EffectApi.h	/^    CHANNEL_7POINT1 = (CHANNEL_FRONT_LEFT | CHANNEL_FRONT_RIGHT |$/;"	e	enum:audio_channels_e
CHANNEL_BACK_CENTER	include/media/EffectApi.h	/^    CHANNEL_BACK_CENTER = 0x100,                \/\/ back center channel$/;"	e	enum:audio_channels_e
CHANNEL_BACK_LEFT	include/media/EffectApi.h	/^    CHANNEL_BACK_LEFT = 0x10,                   \/\/ back left channel$/;"	e	enum:audio_channels_e
CHANNEL_BACK_RIGHT	include/media/EffectApi.h	/^    CHANNEL_BACK_RIGHT = 0x20,                  \/\/ back right channel$/;"	e	enum:audio_channels_e
CHANNEL_FRONT_CENTER	include/media/EffectApi.h	/^    CHANNEL_FRONT_CENTER = 0x4,                \/\/ front center channel$/;"	e	enum:audio_channels_e
CHANNEL_FRONT_LEFT	include/media/EffectApi.h	/^    CHANNEL_FRONT_LEFT = 0x1,                   \/\/ front left channel$/;"	e	enum:audio_channels_e
CHANNEL_FRONT_LEFT_OF_CENTER	include/media/EffectApi.h	/^    CHANNEL_FRONT_LEFT_OF_CENTER = 0x40,       \/\/ front left of center channel$/;"	e	enum:audio_channels_e
CHANNEL_FRONT_RIGHT	include/media/EffectApi.h	/^    CHANNEL_FRONT_RIGHT = 0x2,                  \/\/ front right channel$/;"	e	enum:audio_channels_e
CHANNEL_FRONT_RIGHT_OF_CENTER	include/media/EffectApi.h	/^    CHANNEL_FRONT_RIGHT_OF_CENTER = 0x80,      \/\/ front right of center channel$/;"	e	enum:audio_channels_e
CHANNEL_LOW_FREQUENCY	include/media/EffectApi.h	/^    CHANNEL_LOW_FREQUENCY = 0x8,               \/\/ low frequency channel$/;"	e	enum:audio_channels_e
CHANNEL_MONO	include/media/EffectApi.h	/^    CHANNEL_MONO = CHANNEL_FRONT_LEFT,$/;"	e	enum:audio_channels_e
CHANNEL_QUAD	include/media/EffectApi.h	/^    CHANNEL_QUAD = (CHANNEL_FRONT_LEFT | CHANNEL_FRONT_RIGHT |$/;"	e	enum:audio_channels_e
CHANNEL_STEREO	include/media/EffectApi.h	/^    CHANNEL_STEREO = (CHANNEL_FRONT_LEFT | CHANNEL_FRONT_RIGHT),$/;"	e	enum:audio_channels_e
CHANNEL_SURROUND	include/media/EffectApi.h	/^    CHANNEL_SURROUND = (CHANNEL_FRONT_LEFT | CHANNEL_FRONT_RIGHT |$/;"	e	enum:audio_channels_e
DEVICE_AUX_DIGITAL	include/media/EffectApi.h	/^    DEVICE_AUX_DIGITAL = 0x400,                 \/\/ digital output$/;"	e	enum:audio_device_e
DEVICE_BLUETOOTH_A2DP	include/media/EffectApi.h	/^    DEVICE_BLUETOOTH_A2DP = 0x80,               \/\/ generic bluetooth A2DP$/;"	e	enum:audio_device_e
DEVICE_BLUETOOTH_A2DP_HEADPHONES	include/media/EffectApi.h	/^    DEVICE_BLUETOOTH_A2DP_HEADPHONES = 0x100,   \/\/ bluetooth A2DP headphones$/;"	e	enum:audio_device_e
DEVICE_BLUETOOTH_A2DP_SPEAKER	include/media/EffectApi.h	/^    DEVICE_BLUETOOTH_A2DP_SPEAKER = 0x200,      \/\/ bluetooth A2DP speakers$/;"	e	enum:audio_device_e
DEVICE_BLUETOOTH_SCO	include/media/EffectApi.h	/^    DEVICE_BLUETOOTH_SCO = 0x10,                \/\/ generic bluetooth SCO$/;"	e	enum:audio_device_e
DEVICE_BLUETOOTH_SCO_CARKIT	include/media/EffectApi.h	/^    DEVICE_BLUETOOTH_SCO_CARKIT = 0x40,         \/\/ bluetooth SCO car kit$/;"	e	enum:audio_device_e
DEVICE_BLUETOOTH_SCO_HEADSET	include/media/EffectApi.h	/^    DEVICE_BLUETOOTH_SCO_HEADSET = 0x20,        \/\/ bluetooth SCO headset$/;"	e	enum:audio_device_e
DEVICE_EARPIECE	include/media/EffectApi.h	/^    DEVICE_EARPIECE = 0x1,                      \/\/ earpiece$/;"	e	enum:audio_device_e
DEVICE_EXTERNAL_SPEAKER	include/media/EffectApi.h	/^    DEVICE_EXTERNAL_SPEAKER = 0x800             \/\/ external speaker (stereo and High quality)$/;"	e	enum:audio_device_e
DEVICE_SPEAKER	include/media/EffectApi.h	/^    DEVICE_SPEAKER = 0x2,                       \/\/ speaker$/;"	e	enum:audio_device_e
DEVICE_WIRED_HEADPHONE	include/media/EffectApi.h	/^    DEVICE_WIRED_HEADPHONE = 0x8,               \/\/ wired headphone, without microphone$/;"	e	enum:audio_device_e
DEVICE_WIRED_HEADSET	include/media/EffectApi.h	/^    DEVICE_WIRED_HEADSET = 0x4,                 \/\/ wired headset, with microphone$/;"	e	enum:audio_device_e
EFFECT_API_VERSION	include/media/EffectApi.h	58;"	d
EFFECT_BUFFER_ACCESS_ACCUMULATE	include/media/EffectApi.h	/^    EFFECT_BUFFER_ACCESS_ACCUMULATE$/;"	e	enum:effect_buffer_access_e
EFFECT_BUFFER_ACCESS_READ	include/media/EffectApi.h	/^    EFFECT_BUFFER_ACCESS_READ,$/;"	e	enum:effect_buffer_access_e
EFFECT_BUFFER_ACCESS_WRITE	include/media/EffectApi.h	/^    EFFECT_BUFFER_ACCESS_WRITE,$/;"	e	enum:effect_buffer_access_e
EFFECT_CMD_CONFIGURE	include/media/EffectApi.h	/^   EFFECT_CMD_CONFIGURE,            \/\/ configure effect engine (see effect_config_t)$/;"	e	enum:effect_command_e
EFFECT_CMD_DISABLE	include/media/EffectApi.h	/^   EFFECT_CMD_DISABLE,              \/\/ disable effect process$/;"	e	enum:effect_command_e
EFFECT_CMD_ENABLE	include/media/EffectApi.h	/^   EFFECT_CMD_ENABLE,               \/\/ enable effect process$/;"	e	enum:effect_command_e
EFFECT_CMD_FIRST_PROPRIETARY	include/media/EffectApi.h	/^   EFFECT_CMD_FIRST_PROPRIETARY = 0x10000 \/\/ first proprietary command code$/;"	e	enum:effect_command_e
EFFECT_CMD_GET_PARAM	include/media/EffectApi.h	/^   EFFECT_CMD_GET_PARAM,            \/\/ get parameter$/;"	e	enum:effect_command_e
EFFECT_CMD_INIT	include/media/EffectApi.h	/^   EFFECT_CMD_INIT,                 \/\/ initialize effect engine$/;"	e	enum:effect_command_e
EFFECT_CMD_RESET	include/media/EffectApi.h	/^   EFFECT_CMD_RESET,                \/\/ reset effect engine$/;"	e	enum:effect_command_e
EFFECT_CMD_SET_AUDIO_MODE	include/media/EffectApi.h	/^   EFFECT_CMD_SET_AUDIO_MODE,       \/\/ set the audio mode (normal, ring, ...)$/;"	e	enum:effect_command_e
EFFECT_CMD_SET_DEVICE	include/media/EffectApi.h	/^   EFFECT_CMD_SET_DEVICE,           \/\/ set audio device (see audio_device_e)$/;"	e	enum:effect_command_e
EFFECT_CMD_SET_PARAM	include/media/EffectApi.h	/^   EFFECT_CMD_SET_PARAM,            \/\/ set parameter immediately (see effect_param_t)$/;"	e	enum:effect_command_e
EFFECT_CMD_SET_PARAM_COMMIT	include/media/EffectApi.h	/^   EFFECT_CMD_SET_PARAM_COMMIT,     \/\/ commit previous set parameter deferred$/;"	e	enum:effect_command_e
EFFECT_CMD_SET_PARAM_DEFERRED	include/media/EffectApi.h	/^   EFFECT_CMD_SET_PARAM_DEFERRED,   \/\/ set parameter deferred$/;"	e	enum:effect_command_e
EFFECT_CMD_SET_VOLUME	include/media/EffectApi.h	/^   EFFECT_CMD_SET_VOLUME,           \/\/ set volume$/;"	e	enum:effect_command_e
EFFECT_CONFIG_ACC_MODE	include/media/EffectApi.h	625;"	d
EFFECT_CONFIG_ALL	include/media/EffectApi.h	627;"	d
EFFECT_CONFIG_BUFFER	include/media/EffectApi.h	621;"	d
EFFECT_CONFIG_CHANNELS	include/media/EffectApi.h	623;"	d
EFFECT_CONFIG_FORMAT	include/media/EffectApi.h	624;"	d
EFFECT_CONFIG_PROVIDER	include/media/EffectApi.h	626;"	d
EFFECT_CONFIG_SMP_RATE	include/media/EffectApi.h	622;"	d
EFFECT_FLAG_AUDIO_MODE_IND	include/media/EffectApi.h	211;"	d
EFFECT_FLAG_AUDIO_MODE_MASK	include/media/EffectApi.h	210;"	d
EFFECT_FLAG_AUDIO_MODE_NONE	include/media/EffectApi.h	212;"	d
EFFECT_FLAG_DEVICE_IND	include/media/EffectApi.h	189;"	d
EFFECT_FLAG_DEVICE_MASK	include/media/EffectApi.h	188;"	d
EFFECT_FLAG_DEVICE_NONE	include/media/EffectApi.h	190;"	d
EFFECT_FLAG_HW_ACC_MASK	include/media/EffectApi.h	205;"	d
EFFECT_FLAG_HW_ACC_SIMPLE	include/media/EffectApi.h	206;"	d
EFFECT_FLAG_HW_ACC_TUNNEL	include/media/EffectApi.h	207;"	d
EFFECT_FLAG_INPUT_BOTH	include/media/EffectApi.h	196;"	d
EFFECT_FLAG_INPUT_DIRECT	include/media/EffectApi.h	194;"	d
EFFECT_FLAG_INPUT_MASK	include/media/EffectApi.h	193;"	d
EFFECT_FLAG_INPUT_PROVIDER	include/media/EffectApi.h	195;"	d
EFFECT_FLAG_INSERT_ANY	include/media/EffectApi.h	175;"	d
EFFECT_FLAG_INSERT_EXCLUSIVE	include/media/EffectApi.h	178;"	d
EFFECT_FLAG_INSERT_FIRST	include/media/EffectApi.h	176;"	d
EFFECT_FLAG_INSERT_LAST	include/media/EffectApi.h	177;"	d
EFFECT_FLAG_INSERT_MASK	include/media/EffectApi.h	174;"	d
EFFECT_FLAG_OUTPUT_BOTH	include/media/EffectApi.h	202;"	d
EFFECT_FLAG_OUTPUT_DIRECT	include/media/EffectApi.h	200;"	d
EFFECT_FLAG_OUTPUT_MASK	include/media/EffectApi.h	199;"	d
EFFECT_FLAG_OUTPUT_PROVIDER	include/media/EffectApi.h	201;"	d
EFFECT_FLAG_TYPE_AUXILIARY	include/media/EffectApi.h	170;"	d
EFFECT_FLAG_TYPE_INSERT	include/media/EffectApi.h	169;"	d
EFFECT_FLAG_TYPE_MASK	include/media/EffectApi.h	168;"	d
EFFECT_FLAG_TYPE_REPLACE	include/media/EffectApi.h	171;"	d
EFFECT_FLAG_VOLUME_CTRL	include/media/EffectApi.h	183;"	d
EFFECT_FLAG_VOLUME_IND	include/media/EffectApi.h	184;"	d
EFFECT_FLAG_VOLUME_MASK	include/media/EffectApi.h	182;"	d
EFFECT_FLAG_VOLUME_NONE	include/media/EffectApi.h	185;"	d
EFFECT_STRING_LEN_MAX	include/media/EffectApi.h	61;"	d
EFFECT_UUID_INITIALIZER	include/media/EffectApi.h	82;"	d
EFFECT_UUID_NULL	include/media/EffectApi.h	/^const effect_uuid_t * const EFFECT_UUID_NULL = &EFFECT_UUID_NULL_;$/;"	v
EFFECT_UUID_NULL_	include/media/EffectApi.h	/^static const effect_uuid_t EFFECT_UUID_NULL_ = EFFECT_UUID_INITIALIZER;$/;"	v
EFFECT_UUID_NULL_STR	include/media/EffectApi.h	/^const char * const EFFECT_UUID_NULL_STR = "ec7178ec-e5e1-4432-a3f4-4657e6795210";$/;"	v
SAMPLE_FORMAT_OTHER	include/media/EffectApi.h	/^    SAMPLE_FORMAT_OTHER      \/\/ other format (e.g. compressed)$/;"	e	enum:audio_format_e
SAMPLE_FORMAT_PCM_S15	include/media/EffectApi.h	/^    SAMPLE_FORMAT_PCM_S15,   \/\/ PCM signed 16 bits$/;"	e	enum:audio_format_e
SAMPLE_FORMAT_PCM_S7_24	include/media/EffectApi.h	/^    SAMPLE_FORMAT_PCM_S7_24, \/\/ PCM signed 7.24 fixed point representation$/;"	e	enum:audio_format_e
SAMPLE_FORMAT_PCM_U8	include/media/EffectApi.h	/^    SAMPLE_FORMAT_PCM_U8,    \/\/ PCM unsigned 8 bits$/;"	e	enum:audio_format_e
accessMode	include/media/EffectApi.h	/^    uint8_t    accessMode;      \/\/ read\/write or accumulate in buffer (effect_buffer_access_e)$/;"	m	struct:buffer_config_s
apiVersion	include/media/EffectApi.h	/^    uint16_t apiVersion;    \/\/ Version of the effect API implemented: matches EFFECT_API_VERSION$/;"	m	struct:effect_descriptor_s
audio_buffer_s	include/media/EffectApi.h	/^struct audio_buffer_s {$/;"	s
audio_buffer_t	include/media/EffectApi.h	/^typedef struct audio_buffer_s audio_buffer_t;$/;"	t	typeref:struct:audio_buffer_s
audio_channels_e	include/media/EffectApi.h	/^enum audio_channels_e {$/;"	g
audio_device_e	include/media/EffectApi.h	/^enum audio_device_e {$/;"	g
audio_format_e	include/media/EffectApi.h	/^enum audio_format_e {$/;"	g
audio_mode_e	include/media/EffectApi.h	/^enum audio_mode_e {$/;"	g
buffer	include/media/EffectApi.h	/^    audio_buffer_t  buffer;     \/\/ buffer for use by process() function if not passed explicitly$/;"	m	struct:buffer_config_s
bufferProvider	include/media/EffectApi.h	/^    buffer_provider_t bufferProvider;   \/\/ buffer provider$/;"	m	struct:buffer_config_s
buffer_config_s	include/media/EffectApi.h	/^typedef struct buffer_config_s {$/;"	s
buffer_config_t	include/media/EffectApi.h	/^} buffer_config_t;$/;"	t	typeref:struct:buffer_config_s
buffer_function_t	include/media/EffectApi.h	/^typedef int32_t (* buffer_function_t)(void *cookie, audio_buffer_t *buffer);$/;"	t
buffer_provider_s	include/media/EffectApi.h	/^typedef struct buffer_provider_s {$/;"	s
buffer_provider_t	include/media/EffectApi.h	/^} buffer_provider_t;$/;"	t	typeref:struct:buffer_provider_s
channels	include/media/EffectApi.h	/^    uint32_t   channels;        \/\/ channel mask (see audio_channels_e)$/;"	m	struct:buffer_config_s
clockSeq	include/media/EffectApi.h	/^    uint16_t clockSeq;$/;"	m	struct:effect_uuid_s
command	include/media/EffectApi.h	/^    effect_command_t command;$/;"	m	struct:effect_interface_s
cookie	include/media/EffectApi.h	/^    void       *cookie;                \/\/ for use by client of buffer provider functions$/;"	m	struct:buffer_provider_s
cpuLoad	include/media/EffectApi.h	/^    uint16_t cpuLoad;       \/\/ CPU load indication (see below)$/;"	m	struct:effect_descriptor_s
data	include/media/EffectApi.h	/^    char        data[];     \/\/ Start of Parameter + Value data$/;"	m	struct:effect_param_s
effect_CreateEffect_t	include/media/EffectApi.h	/^typedef int32_t (*effect_CreateEffect_t)(effect_uuid_t *uuid,$/;"	t
effect_QueryEffect_t	include/media/EffectApi.h	/^typedef int32_t (*effect_QueryEffect_t)(uint32_t index,$/;"	t
effect_QueryNumberEffects_t	include/media/EffectApi.h	/^typedef int32_t (*effect_QueryNumberEffects_t)(uint32_t *pNumEffects);$/;"	t
effect_ReleaseEffect_t	include/media/EffectApi.h	/^typedef int32_t (*effect_ReleaseEffect_t)(effect_interface_t interface);$/;"	t
effect_buffer_access_e	include/media/EffectApi.h	/^enum effect_buffer_access_e {$/;"	g
effect_command_e	include/media/EffectApi.h	/^enum effect_command_e {$/;"	g
effect_command_t	include/media/EffectApi.h	/^typedef int32_t (*effect_command_t)(effect_interface_t self,$/;"	t
effect_config_s	include/media/EffectApi.h	/^typedef struct effect_config_s {$/;"	s
effect_config_t	include/media/EffectApi.h	/^} effect_config_t;$/;"	t	typeref:struct:effect_config_s
effect_descriptor_s	include/media/EffectApi.h	/^typedef struct effect_descriptor_s {$/;"	s
effect_descriptor_t	include/media/EffectApi.h	/^} effect_descriptor_t;$/;"	t	typeref:struct:effect_descriptor_s
effect_interface_s	include/media/EffectApi.h	/^struct effect_interface_s {$/;"	s
effect_interface_t	include/media/EffectApi.h	/^typedef struct effect_interface_s **effect_interface_t;$/;"	t	typeref:struct:effect_interface_s
effect_param_s	include/media/EffectApi.h	/^typedef struct effect_param_s {$/;"	s
effect_param_t	include/media/EffectApi.h	/^} effect_param_t;$/;"	t	typeref:struct:effect_param_s
effect_process_t	include/media/EffectApi.h	/^typedef int32_t (*effect_process_t)(effect_interface_t self,$/;"	t
effect_uuid_s	include/media/EffectApi.h	/^typedef struct effect_uuid_s {$/;"	s
effect_uuid_t	include/media/EffectApi.h	/^} effect_uuid_t;$/;"	t	typeref:struct:effect_uuid_s
flags	include/media/EffectApi.h	/^    uint32_t flags;         \/\/ effect engine capabilities\/requirements flags (see below)$/;"	m	struct:effect_descriptor_s
format	include/media/EffectApi.h	/^    uint8_t    format;          \/\/ Audio format  (see audio_format_e)$/;"	m	struct:buffer_config_s
frameCount	include/media/EffectApi.h	/^    size_t   frameCount;        \/\/ number of frames in buffer$/;"	m	struct:audio_buffer_s
getBuffer	include/media/EffectApi.h	/^    buffer_function_t getBuffer;       \/\/ retrieve next buffer$/;"	m	struct:buffer_provider_s
implementor	include/media/EffectApi.h	/^    char    implementor[EFFECT_STRING_LEN_MAX];    \/\/ human readable effect implementor name$/;"	m	struct:effect_descriptor_s
inputCfg	include/media/EffectApi.h	/^    buffer_config_t   inputCfg;$/;"	m	struct:effect_config_s
mask	include/media/EffectApi.h	/^    uint16_t   mask;            \/\/ indicates which of the above fields is valid$/;"	m	struct:buffer_config_s
memoryUsage	include/media/EffectApi.h	/^    uint16_t memoryUsage;   \/\/ Data Memory usage (see below)$/;"	m	struct:effect_descriptor_s
name	include/media/EffectApi.h	/^    char    name[EFFECT_STRING_LEN_MAX];   \/\/ human readable effect name$/;"	m	struct:effect_descriptor_s
node	include/media/EffectApi.h	/^    uint8_t node[6];$/;"	m	struct:effect_uuid_s
outputCfg	include/media/EffectApi.h	/^    buffer_config_t   outputCfg;;$/;"	m	struct:effect_config_s
process	include/media/EffectApi.h	/^    effect_process_t process;$/;"	m	struct:effect_interface_s
psize	include/media/EffectApi.h	/^    uint32_t    psize;      \/\/ Parameter size$/;"	m	struct:effect_param_s
raw	include/media/EffectApi.h	/^        void*       raw;        \/\/ raw pointer to start of buffer$/;"	m	union:audio_buffer_s::__anon138
releaseBuffer	include/media/EffectApi.h	/^    buffer_function_t releaseBuffer;   \/\/ release used buffer$/;"	m	struct:buffer_provider_s
s16	include/media/EffectApi.h	/^        int16_t*    s16;        \/\/ pointer to signed 16 bit data at start of buffer$/;"	m	union:audio_buffer_s::__anon138
s32	include/media/EffectApi.h	/^        int32_t*    s32;        \/\/ pointer to signed 32 bit data at start of buffer$/;"	m	union:audio_buffer_s::__anon138
samplingRate	include/media/EffectApi.h	/^    uint32_t   samplingRate;    \/\/ sampling rate$/;"	m	struct:buffer_config_s
status	include/media/EffectApi.h	/^    int32_t     status;     \/\/ Transaction status (unused for command, used for reply)$/;"	m	struct:effect_param_s
timeHiAndVersion	include/media/EffectApi.h	/^    uint16_t timeHiAndVersion;$/;"	m	struct:effect_uuid_s
timeLow	include/media/EffectApi.h	/^    uint32_t timeLow;$/;"	m	struct:effect_uuid_s
timeMid	include/media/EffectApi.h	/^    uint16_t timeMid;$/;"	m	struct:effect_uuid_s
type	include/media/EffectApi.h	/^    effect_uuid_t type;     \/\/ UUID of to the OpenSL ES interface implemented by this effect$/;"	m	struct:effect_descriptor_s
u8	include/media/EffectApi.h	/^        uint8_t*    u8;         \/\/ pointer to unsigned 8 bit data at start of buffer$/;"	m	union:audio_buffer_s::__anon138
uuid	include/media/EffectApi.h	/^    effect_uuid_t uuid;     \/\/ UUID for this particular implementation$/;"	m	struct:effect_descriptor_s
vsize	include/media/EffectApi.h	/^    uint32_t    vsize;      \/\/ Value size$/;"	m	struct:effect_param_s
ANDROID_EFFECTBASSBOOSTAPI_H_	include/media/EffectBassBoostApi.h	18;"	d
BASSBOOST_PARAM_STRENGTH	include/media/EffectBassBoostApi.h	/^    BASSBOOST_PARAM_STRENGTH$/;"	e	enum:__anon129
BASSBOOST_PARAM_STRENGTH_SUPPORTED	include/media/EffectBassBoostApi.h	/^    BASSBOOST_PARAM_STRENGTH_SUPPORTED,$/;"	e	enum:__anon129
SL_IID_BASSBOOST	include/media/EffectBassBoostApi.h	/^const effect_uuid_t * const SL_IID_BASSBOOST = &SL_IID_BASSBOOST_;$/;"	v
SL_IID_BASSBOOST_	include/media/EffectBassBoostApi.h	/^static const effect_uuid_t SL_IID_BASSBOOST_ = { 0x0634f220, 0xddd4, 0x11db, 0xa0fc, { 0x00, 0x02, 0xa5, 0xd5, 0xc5, 0x1b } };$/;"	v
t_bassboost_params	include/media/EffectBassBoostApi.h	/^} t_bassboost_params;$/;"	t	typeref:enum:__anon129
ANDROID_EFFECTENVIRONMENTALREVERBAPI_H_	include/media/EffectEnvironmentalReverbApi.h	18;"	d
REVERB_PARAM_BYPASS	include/media/EffectEnvironmentalReverbApi.h	/^    REVERB_PARAM_BYPASS$/;"	e	enum:__anon128
REVERB_PARAM_DECAY_HF_RATIO	include/media/EffectEnvironmentalReverbApi.h	/^    REVERB_PARAM_DECAY_HF_RATIO,        \/\/ in permilles,    range 100 to 1000$/;"	e	enum:__anon128
REVERB_PARAM_DECAY_TIME	include/media/EffectEnvironmentalReverbApi.h	/^    REVERB_PARAM_DECAY_TIME,            \/\/ in milliseconds, range 100 to 20000$/;"	e	enum:__anon128
REVERB_PARAM_DENSITY	include/media/EffectEnvironmentalReverbApi.h	/^    REVERB_PARAM_DENSITY,               \/\/ in permilles,    range 0 to 1000$/;"	e	enum:__anon128
REVERB_PARAM_DIFFUSION	include/media/EffectEnvironmentalReverbApi.h	/^    REVERB_PARAM_DIFFUSION,             \/\/ in permilles,    range 0 to 1000$/;"	e	enum:__anon128
REVERB_PARAM_PROPERTIES	include/media/EffectEnvironmentalReverbApi.h	/^    REVERB_PARAM_PROPERTIES,$/;"	e	enum:__anon128
REVERB_PARAM_REFLECTIONS_DELAY	include/media/EffectEnvironmentalReverbApi.h	/^    REVERB_PARAM_REFLECTIONS_DELAY,     \/\/ in milliseconds, range 0 to 65$/;"	e	enum:__anon128
REVERB_PARAM_REFLECTIONS_LEVEL	include/media/EffectEnvironmentalReverbApi.h	/^    REVERB_PARAM_REFLECTIONS_LEVEL,     \/\/ in millibels,    range -6000 to 0$/;"	e	enum:__anon128
REVERB_PARAM_REVERB_DELAY	include/media/EffectEnvironmentalReverbApi.h	/^    REVERB_PARAM_REVERB_DELAY,          \/\/ in milliseconds, range 0 to 65$/;"	e	enum:__anon128
REVERB_PARAM_REVERB_LEVEL	include/media/EffectEnvironmentalReverbApi.h	/^    REVERB_PARAM_REVERB_LEVEL,          \/\/ in millibels,    range -6000 to 0$/;"	e	enum:__anon128
REVERB_PARAM_ROOM_HF_LEVEL	include/media/EffectEnvironmentalReverbApi.h	/^    REVERB_PARAM_ROOM_HF_LEVEL,         \/\/ in millibels,    range -4000 to 0$/;"	e	enum:__anon128
REVERB_PARAM_ROOM_LEVEL	include/media/EffectEnvironmentalReverbApi.h	/^    REVERB_PARAM_ROOM_LEVEL,            \/\/ in millibels,    range -6000 to 0$/;"	e	enum:__anon128
SL_IID_ENVIRONMENTALREVERB	include/media/EffectEnvironmentalReverbApi.h	/^const effect_uuid_t * const SL_IID_ENVIRONMENTALREVERB = &SL_IID_ENVIRONMENTALREVERB_;$/;"	v
SL_IID_ENVIRONMENTALREVERB_	include/media/EffectEnvironmentalReverbApi.h	/^static const effect_uuid_t SL_IID_ENVIRONMENTALREVERB_ = { 0xc2e5d5f0, 0x94bd, 0x4763, 0x9cac, { 0x4e, 0x23, 0x4d, 0x6, 0x83, 0x9e } };$/;"	v
decayHFRatio	include/media/EffectEnvironmentalReverbApi.h	/^    int16_t     decayHFRatio;$/;"	m	struct:s_reverb_settings
decayTime	include/media/EffectEnvironmentalReverbApi.h	/^    uint32_t    decayTime;$/;"	m	struct:s_reverb_settings
density	include/media/EffectEnvironmentalReverbApi.h	/^    int16_t     density;$/;"	m	struct:s_reverb_settings
diffusion	include/media/EffectEnvironmentalReverbApi.h	/^    int16_t     diffusion;$/;"	m	struct:s_reverb_settings
reflectionsDelay	include/media/EffectEnvironmentalReverbApi.h	/^    uint32_t    reflectionsDelay;$/;"	m	struct:s_reverb_settings
reflectionsLevel	include/media/EffectEnvironmentalReverbApi.h	/^    int16_t     reflectionsLevel;$/;"	m	struct:s_reverb_settings
reverbDelay	include/media/EffectEnvironmentalReverbApi.h	/^    uint32_t    reverbDelay;$/;"	m	struct:s_reverb_settings
reverbLevel	include/media/EffectEnvironmentalReverbApi.h	/^    int16_t     reverbLevel;$/;"	m	struct:s_reverb_settings
roomHFLevel	include/media/EffectEnvironmentalReverbApi.h	/^    int16_t     roomHFLevel;$/;"	m	struct:s_reverb_settings
roomLevel	include/media/EffectEnvironmentalReverbApi.h	/^    int16_t     roomLevel;$/;"	m	struct:s_reverb_settings
s_reverb_settings	include/media/EffectEnvironmentalReverbApi.h	/^typedef struct s_reverb_settings {$/;"	s
t_env_reverb_params	include/media/EffectEnvironmentalReverbApi.h	/^} t_env_reverb_params;$/;"	t	typeref:enum:__anon128
t_reverb_settings	include/media/EffectEnvironmentalReverbApi.h	/^} __attribute__((packed)) t_reverb_settings;$/;"	t	typeref:struct:s_reverb_settings
ANDROID_EFFECTEQUALIZERAPI_H_	include/media/EffectEqualizerApi.h	18;"	d
EQ_PARAM_BAND_FREQ_RANGE	include/media/EffectEqualizerApi.h	/^    EQ_PARAM_BAND_FREQ_RANGE,       \/\/ Gets the frequency range of the given frequency band.$/;"	e	enum:__anon126
EQ_PARAM_BAND_LEVEL	include/media/EffectEqualizerApi.h	/^    EQ_PARAM_BAND_LEVEL,            \/\/ Gets\/Sets the gain set for the given equalizer band.$/;"	e	enum:__anon126
EQ_PARAM_CENTER_FREQ	include/media/EffectEqualizerApi.h	/^    EQ_PARAM_CENTER_FREQ,           \/\/ Gets the center frequency of the given band.$/;"	e	enum:__anon126
EQ_PARAM_CUR_PRESET	include/media/EffectEqualizerApi.h	/^    EQ_PARAM_CUR_PRESET,            \/\/ Gets\/Sets the current preset.$/;"	e	enum:__anon126
EQ_PARAM_GET_BAND	include/media/EffectEqualizerApi.h	/^    EQ_PARAM_GET_BAND,              \/\/ Gets the band that has the most effect on the given frequency.$/;"	e	enum:__anon126
EQ_PARAM_GET_NUM_OF_PRESETS	include/media/EffectEqualizerApi.h	/^    EQ_PARAM_GET_NUM_OF_PRESETS,    \/\/ Gets the total number of presets the equalizer supports.$/;"	e	enum:__anon126
EQ_PARAM_GET_PRESET_NAME	include/media/EffectEqualizerApi.h	/^    EQ_PARAM_GET_PRESET_NAME,       \/\/ Gets the preset name based on the index.$/;"	e	enum:__anon126
EQ_PARAM_LEVEL_RANGE	include/media/EffectEqualizerApi.h	/^    EQ_PARAM_LEVEL_RANGE,           \/\/ Returns the minimum and maximum band levels supported.$/;"	e	enum:__anon126
EQ_PARAM_NUM_BANDS	include/media/EffectEqualizerApi.h	/^    EQ_PARAM_NUM_BANDS,             \/\/ Gets the number of frequency bands that the equalizer supports.$/;"	e	enum:__anon126
EQ_PARAM_PROPERTIES	include/media/EffectEqualizerApi.h	/^    EQ_PARAM_PROPERTIES             \/\/ Gets\/Sets all parameters at a time.$/;"	e	enum:__anon126
SL_IID_EQUALIZER	include/media/EffectEqualizerApi.h	/^const effect_uuid_t * const SL_IID_EQUALIZER = &SL_IID_EQUALIZER_;$/;"	v
SL_IID_EQUALIZER_	include/media/EffectEqualizerApi.h	/^static const effect_uuid_t SL_IID_EQUALIZER_ = { 0x0bed4300, 0xddd6, 0x11db, 0x8f34, { 0x00, 0x02, 0xa5, 0xd5, 0xc5, 0x1b } };$/;"	v
bandLevels	include/media/EffectEqualizerApi.h	/^    uint16_t bandLevels[];$/;"	m	struct:s_equalizer_settings
curPreset	include/media/EffectEqualizerApi.h	/^    uint16_t curPreset;$/;"	m	struct:s_equalizer_settings
numBands	include/media/EffectEqualizerApi.h	/^    uint16_t numBands;$/;"	m	struct:s_equalizer_settings
s_equalizer_settings	include/media/EffectEqualizerApi.h	/^typedef struct s_equalizer_settings {$/;"	s
t_equalizer_params	include/media/EffectEqualizerApi.h	/^} t_equalizer_params;$/;"	t	typeref:enum:__anon126
t_equalizer_settings	include/media/EffectEqualizerApi.h	/^} t_equalizer_settings;$/;"	t	typeref:struct:s_equalizer_settings
ANDROID_EFFECTPRESETREVERBAPI_H_	include/media/EffectPresetReverbApi.h	18;"	d
REVERB_PARAM_PRESET	include/media/EffectPresetReverbApi.h	/^    REVERB_PARAM_PRESET$/;"	e	enum:__anon157
REVERB_PRESET_LARGEHALL	include/media/EffectPresetReverbApi.h	/^    REVERB_PRESET_LARGEHALL,$/;"	e	enum:__anon158
REVERB_PRESET_LARGEROOM	include/media/EffectPresetReverbApi.h	/^    REVERB_PRESET_LARGEROOM,$/;"	e	enum:__anon158
REVERB_PRESET_LAST	include/media/EffectPresetReverbApi.h	/^    REVERB_PRESET_LAST = REVERB_PRESET_PLATE$/;"	e	enum:__anon158
REVERB_PRESET_MEDIUMHALL	include/media/EffectPresetReverbApi.h	/^    REVERB_PRESET_MEDIUMHALL,$/;"	e	enum:__anon158
REVERB_PRESET_MEDIUMROOM	include/media/EffectPresetReverbApi.h	/^    REVERB_PRESET_MEDIUMROOM,$/;"	e	enum:__anon158
REVERB_PRESET_NONE	include/media/EffectPresetReverbApi.h	/^    REVERB_PRESET_NONE,$/;"	e	enum:__anon158
REVERB_PRESET_PLATE	include/media/EffectPresetReverbApi.h	/^    REVERB_PRESET_PLATE,$/;"	e	enum:__anon158
REVERB_PRESET_SMALLROOM	include/media/EffectPresetReverbApi.h	/^    REVERB_PRESET_SMALLROOM,$/;"	e	enum:__anon158
SL_IID_PRESETREVERB	include/media/EffectPresetReverbApi.h	/^const effect_uuid_t * const SL_IID_PRESETREVERB = &SL_IID_PRESETREVERB_;$/;"	v
SL_IID_PRESETREVERB_	include/media/EffectPresetReverbApi.h	/^static const effect_uuid_t SL_IID_PRESETREVERB_ = { 0x47382d60, 0xddd8, 0x11db, 0xbf3a, { 0x00, 0x02, 0xa5, 0xd5, 0xc5, 0x1b } };$/;"	v
t_preset_reverb_params	include/media/EffectPresetReverbApi.h	/^} t_preset_reverb_params;$/;"	t	typeref:enum:__anon157
t_reverb_presets	include/media/EffectPresetReverbApi.h	/^} t_reverb_presets;$/;"	t	typeref:enum:__anon158
ANDROID_EFFECTVIRTUALIZERAPI_H_	include/media/EffectVirtualizerApi.h	18;"	d
SL_IID_VIRTUALIZER	include/media/EffectVirtualizerApi.h	/^const effect_uuid_t * const SL_IID_VIRTUALIZER = &SL_IID_VIRTUALIZER_;$/;"	v
SL_IID_VIRTUALIZER_	include/media/EffectVirtualizerApi.h	/^static const effect_uuid_t SL_IID_VIRTUALIZER_ = { 0x37cc2c00, 0xdddd, 0x11db, 0x8577, { 0x00, 0x02, 0xa5, 0xd5, 0xc5, 0x1b } };$/;"	v
VIRTUALIZER_PARAM_STRENGTH	include/media/EffectVirtualizerApi.h	/^    VIRTUALIZER_PARAM_STRENGTH$/;"	e	enum:__anon156
VIRTUALIZER_PARAM_STRENGTH_SUPPORTED	include/media/EffectVirtualizerApi.h	/^    VIRTUALIZER_PARAM_STRENGTH_SUPPORTED,$/;"	e	enum:__anon156
t_virtualizer_params	include/media/EffectVirtualizerApi.h	/^} t_virtualizer_params;$/;"	t	typeref:enum:__anon156
ANDROID_EFFECTVISUALIZERAPI_H_	include/media/EffectVisualizerApi.h	18;"	d
SL_IID_VISUALIZATION	include/media/EffectVisualizerApi.h	/^const effect_uuid_t * const SL_IID_VISUALIZATION = &SL_IID_VISUALIZATION_;$/;"	v
SL_IID_VISUALIZATION_	include/media/EffectVisualizerApi.h	/^static const effect_uuid_t SL_IID_VISUALIZATION_ =$/;"	v
VISUALIZER_CAPTURE_SIZE_MAX	include/media/EffectVisualizerApi.h	32;"	d
VISUALIZER_CAPTURE_SIZE_MIN	include/media/EffectVisualizerApi.h	33;"	d
VISU_CMD_CAPTURE	include/media/EffectVisualizerApi.h	/^    VISU_CMD_CAPTURE = EFFECT_CMD_FIRST_PROPRIETARY, \/\/ Gets the latest PCM capture.$/;"	e	enum:__anon143
VISU_PARAM_CAPTURE_SIZE	include/media/EffectVisualizerApi.h	/^    VISU_PARAM_CAPTURE_SIZE,        \/\/ Sets the number PCM samples in the capture.$/;"	e	enum:__anon142
t_visualizer_cmds	include/media/EffectVisualizerApi.h	/^}t_visualizer_cmds;$/;"	t	typeref:enum:__anon143
t_visualizer_params	include/media/EffectVisualizerApi.h	/^} t_visualizer_params;$/;"	t	typeref:enum:__anon142
ANDROID_EFFECTSFACTORYAPI_H_	include/media/EffectsFactoryApi.h	18;"	d
ANDROID_IAUDIOFLINGER_H	include/media/IAudioFlinger.h	18;"	d
BnAudioFlinger	include/media/IAudioFlinger.h	/^class BnAudioFlinger : public BnInterface<IAudioFlinger>$/;"	c	namespace:android
IAudioFlinger	include/media/IAudioFlinger.h	/^class IAudioFlinger : public IInterface$/;"	c	namespace:android
android	include/media/IAudioFlinger.h	/^namespace android {$/;"	n
ANDROID_IAUDIOFLINGERCLIENT_H	include/media/IAudioFlingerClient.h	18;"	d
BnAudioFlingerClient	include/media/IAudioFlingerClient.h	/^class BnAudioFlingerClient : public BnInterface<IAudioFlingerClient>$/;"	c	namespace:android
IAudioFlingerClient	include/media/IAudioFlingerClient.h	/^class IAudioFlingerClient : public IInterface$/;"	c	namespace:android
android	include/media/IAudioFlingerClient.h	/^namespace android {$/;"	n
ANDROID_IAUDIOPOLICYSERVICE_H	include/media/IAudioPolicyService.h	18;"	d
BnAudioPolicyService	include/media/IAudioPolicyService.h	/^class BnAudioPolicyService : public BnInterface<IAudioPolicyService>$/;"	c	namespace:android
IAudioPolicyService	include/media/IAudioPolicyService.h	/^class IAudioPolicyService : public IInterface$/;"	c	namespace:android
android	include/media/IAudioPolicyService.h	/^namespace android {$/;"	n
BnAudioRecord	include/media/IAudioRecord.h	/^class BnAudioRecord : public BnInterface<IAudioRecord>$/;"	c	namespace:android
IAUDIORECORD_H_	include/media/IAudioRecord.h	18;"	d
IAudioRecord	include/media/IAudioRecord.h	/^class IAudioRecord : public IInterface$/;"	c	namespace:android
android	include/media/IAudioRecord.h	/^namespace android {$/;"	n
ANDROID_IAUDIOTRACK_H	include/media/IAudioTrack.h	18;"	d
BnAudioTrack	include/media/IAudioTrack.h	/^class BnAudioTrack : public BnInterface<IAudioTrack>$/;"	c	namespace:android
IAudioTrack	include/media/IAudioTrack.h	/^class IAudioTrack : public IInterface$/;"	c	namespace:android
android	include/media/IAudioTrack.h	/^namespace android {$/;"	n
ANDROID_IEFFECT_H	include/media/IEffect.h	18;"	d
BnEffect	include/media/IEffect.h	/^class BnEffect: public BnInterface<IEffect>$/;"	c	namespace:android
IEffect	include/media/IEffect.h	/^class IEffect: public IInterface$/;"	c	namespace:android
android	include/media/IEffect.h	/^namespace android {$/;"	n
ANDROID_IEFFECTCLIENT_H	include/media/IEffectClient.h	18;"	d
BnEffectClient	include/media/IEffectClient.h	/^class BnEffectClient: public BnInterface<IEffectClient>$/;"	c	namespace:android
IEffectClient	include/media/IEffectClient.h	/^class IEffectClient: public IInterface$/;"	c	namespace:android
android	include/media/IEffectClient.h	/^namespace android {$/;"	n
ANDROID_IMEDIADEATHNOTIFIER_H	include/media/IMediaDeathNotifier.h	18;"	d
DeathNotifier	include/media/IMediaDeathNotifier.h	/^                DeathNotifier() {}$/;"	f	class:android::IMediaDeathNotifier::DeathNotifier
DeathNotifier	include/media/IMediaDeathNotifier.h	/^    class DeathNotifier: public IBinder::DeathRecipient$/;"	c	class:android::IMediaDeathNotifier
IMediaDeathNotifier	include/media/IMediaDeathNotifier.h	/^    IMediaDeathNotifier() { addObitRecipient(this); }$/;"	f	class:android::IMediaDeathNotifier
IMediaDeathNotifier	include/media/IMediaDeathNotifier.h	/^class IMediaDeathNotifier: virtual public RefBase$/;"	c	namespace:android
android	include/media/IMediaDeathNotifier.h	/^namespace android {$/;"	n
sDeathNotifier	include/media/IMediaDeathNotifier.h	/^    static  sp<DeathNotifier>                       sDeathNotifier;$/;"	m	class:android::IMediaDeathNotifier
sMediaPlayerService	include/media/IMediaDeathNotifier.h	/^    static  sp<IMediaPlayerService>                 sMediaPlayerService;$/;"	m	class:android::IMediaDeathNotifier
sObitRecipients	include/media/IMediaDeathNotifier.h	/^    static  SortedVector< wp<IMediaDeathNotifier> > sObitRecipients;$/;"	m	class:android::IMediaDeathNotifier
sServiceLock	include/media/IMediaDeathNotifier.h	/^    static  Mutex                                   sServiceLock;$/;"	m	class:android::IMediaDeathNotifier
~IMediaDeathNotifier	include/media/IMediaDeathNotifier.h	/^    virtual ~IMediaDeathNotifier() { removeObitRecipient(this); }$/;"	f	class:android::IMediaDeathNotifier
ANDROID_IMEDIAMETADATARETRIEVER_H	include/media/IMediaMetadataRetriever.h	19;"	d
BnMediaMetadataRetriever	include/media/IMediaMetadataRetriever.h	/^class BnMediaMetadataRetriever: public BnInterface<IMediaMetadataRetriever>$/;"	c	namespace:android
IMediaMetadataRetriever	include/media/IMediaMetadataRetriever.h	/^class IMediaMetadataRetriever: public IInterface$/;"	c	namespace:android
android	include/media/IMediaMetadataRetriever.h	/^namespace android {$/;"	n
ANDROID_IMEDIAPLAYER_H	include/media/IMediaPlayer.h	18;"	d
BnMediaPlayer	include/media/IMediaPlayer.h	/^class BnMediaPlayer: public BnInterface<IMediaPlayer>$/;"	c	namespace:android
IMediaPlayer	include/media/IMediaPlayer.h	/^class IMediaPlayer: public IInterface$/;"	c	namespace:android
android	include/media/IMediaPlayer.h	/^namespace android {$/;"	n
ANDROID_IMEDIAPLAYERCLIENT_H	include/media/IMediaPlayerClient.h	18;"	d
BnMediaPlayerClient	include/media/IMediaPlayerClient.h	/^class BnMediaPlayerClient: public BnInterface<IMediaPlayerClient>$/;"	c	namespace:android
IMediaPlayerClient	include/media/IMediaPlayerClient.h	/^class IMediaPlayerClient: public IInterface$/;"	c	namespace:android
android	include/media/IMediaPlayerClient.h	/^namespace android {$/;"	n
ANDROID_IMEDIAPLAYERSERVICE_H	include/media/IMediaPlayerService.h	18;"	d
BnMediaPlayerService	include/media/IMediaPlayerService.h	/^class BnMediaPlayerService: public BnInterface<IMediaPlayerService>$/;"	c	namespace:android
IMediaPlayerService	include/media/IMediaPlayerService.h	/^class IMediaPlayerService: public IInterface$/;"	c	namespace:android
android	include/media/IMediaPlayerService.h	/^namespace android {$/;"	n
ANDROID_IMEDIARECORDER_H	include/media/IMediaRecorder.h	19;"	d
BnMediaRecorder	include/media/IMediaRecorder.h	/^class BnMediaRecorder: public BnInterface<IMediaRecorder>$/;"	c	namespace:android
IMediaRecorder	include/media/IMediaRecorder.h	/^class IMediaRecorder: public IInterface$/;"	c	namespace:android
android	include/media/IMediaRecorder.h	/^namespace android {$/;"	n
ANDROID_IMEDIARECORDERCLIENT_H	include/media/IMediaRecorderClient.h	18;"	d
BnMediaRecorderClient	include/media/IMediaRecorderClient.h	/^class BnMediaRecorderClient: public BnInterface<IMediaRecorderClient>$/;"	c	namespace:android
IMediaRecorderClient	include/media/IMediaRecorderClient.h	/^class IMediaRecorderClient: public IInterface$/;"	c	namespace:android
android	include/media/IMediaRecorderClient.h	/^namespace android {$/;"	n
ANDROID_IOMX_H_	include/media/IOMX.h	19;"	d
BnOMX	include/media/IOMX.h	/^class BnOMX : public BnInterface<IOMX> {$/;"	c	namespace:android
BnOMXObserver	include/media/IOMX.h	/^class BnOMXObserver : public BnInterface<IOMXObserver> {$/;"	c	namespace:android
BnOMXRenderer	include/media/IOMX.h	/^class BnOMXRenderer : public BnInterface<IOMXRenderer> {$/;"	c	namespace:android
ComponentInfo	include/media/IOMX.h	/^    struct ComponentInfo {$/;"	s	class:android::IOMX
EMPTY_BUFFER_DONE	include/media/IOMX.h	/^        EMPTY_BUFFER_DONE,$/;"	e	enum:android::omx_message::__anon130
EVENT	include/media/IOMX.h	/^        EVENT,$/;"	e	enum:android::omx_message::__anon130
FILL_BUFFER_DONE	include/media/IOMX.h	/^        FILL_BUFFER_DONE,$/;"	e	enum:android::omx_message::__anon130
IOMX	include/media/IOMX.h	/^class IOMX : public IInterface {$/;"	c	namespace:android
IOMXObserver	include/media/IOMX.h	/^class IOMXObserver : public IInterface {$/;"	c	namespace:android
IOMXRenderer	include/media/IOMX.h	/^class IOMXRenderer : public IInterface {$/;"	c	namespace:android
android	include/media/IOMX.h	/^namespace android {$/;"	n
buffer	include/media/IOMX.h	/^            IOMX::buffer_id buffer;$/;"	m	struct:android::omx_message::__anon131::__anon133
buffer	include/media/IOMX.h	/^            IOMX::buffer_id buffer;$/;"	m	struct:android::omx_message::__anon131::__anon134
buffer_data	include/media/IOMX.h	/^        } buffer_data;$/;"	m	union:android::omx_message::__anon131	typeref:struct:android::omx_message::__anon131::__anon133
buffer_id	include/media/IOMX.h	/^    typedef void *buffer_id;$/;"	t	class:android::IOMX
data1	include/media/IOMX.h	/^            OMX_U32 data1;$/;"	m	struct:android::omx_message::__anon131::__anon132
data2	include/media/IOMX.h	/^            OMX_U32 data2;$/;"	m	struct:android::omx_message::__anon131::__anon132
data_ptr	include/media/IOMX.h	/^            OMX_PTR data_ptr;$/;"	m	struct:android::omx_message::__anon131::__anon134
event	include/media/IOMX.h	/^            OMX_EVENTTYPE event;$/;"	m	struct:android::omx_message::__anon131::__anon132
event_data	include/media/IOMX.h	/^        } event_data;$/;"	m	union:android::omx_message::__anon131	typeref:struct:android::omx_message::__anon131::__anon132
extended_buffer_data	include/media/IOMX.h	/^        } extended_buffer_data;$/;"	m	union:android::omx_message::__anon131	typeref:struct:android::omx_message::__anon131::__anon134
flags	include/media/IOMX.h	/^            OMX_U32 flags;$/;"	m	struct:android::omx_message::__anon131::__anon134
mName	include/media/IOMX.h	/^        String8 mName;$/;"	m	struct:android::IOMX::ComponentInfo
mRoles	include/media/IOMX.h	/^        List<String8> mRoles;$/;"	m	struct:android::IOMX::ComponentInfo
node	include/media/IOMX.h	/^    IOMX::node_id node;$/;"	m	struct:android::omx_message
node_id	include/media/IOMX.h	/^    typedef void *node_id;$/;"	t	class:android::IOMX
omx_message	include/media/IOMX.h	/^struct omx_message {$/;"	s	namespace:android
platform_private	include/media/IOMX.h	/^            OMX_PTR platform_private;$/;"	m	struct:android::omx_message::__anon131::__anon134
range_length	include/media/IOMX.h	/^            OMX_U32 range_length;$/;"	m	struct:android::omx_message::__anon131::__anon134
range_offset	include/media/IOMX.h	/^            OMX_U32 range_offset;$/;"	m	struct:android::omx_message::__anon131::__anon134
timestamp	include/media/IOMX.h	/^            OMX_TICKS timestamp;$/;"	m	struct:android::omx_message::__anon131::__anon134
type	include/media/IOMX.h	/^    } type;$/;"	m	struct:android::omx_message	typeref:enum:android::omx_message::__anon130
u	include/media/IOMX.h	/^    } u;$/;"	m	struct:android::omx_message	typeref:union:android::omx_message::__anon131
JETPLAYER_H_	include/media/JetPlayer.h	18;"	d
JET_EVENT	include/media/JetPlayer.h	/^    static const int JET_EVENT                   = 1;$/;"	m	class:android::JetPlayer
JET_NUMQUEUEDSEGMENT_UPDATE	include/media/JetPlayer.h	/^    static const int JET_NUMQUEUEDSEGMENT_UPDATE = 3;$/;"	m	class:android::JetPlayer
JET_PAUSE_UPDATE	include/media/JetPlayer.h	/^    static const int JET_PAUSE_UPDATE            = 4;$/;"	m	class:android::JetPlayer
JET_USERID_UPDATE	include/media/JetPlayer.h	/^    static const int JET_USERID_UPDATE           = 2;$/;"	m	class:android::JetPlayer
JetPlayer	include/media/JetPlayer.h	/^    JetPlayer() {} \/\/ no default constructor$/;"	f	class:android::JetPlayer
JetPlayer	include/media/JetPlayer.h	/^class JetPlayer {$/;"	c	namespace:android
android	include/media/JetPlayer.h	/^namespace android {$/;"	n
getMaxTracks	include/media/JetPlayer.h	/^    int getMaxTracks() { return mMaxTracks; };$/;"	f	class:android::JetPlayer
jetevent_callback	include/media/JetPlayer.h	/^typedef void (*jetevent_callback)(int eventType, int val1, int val2, void *cookie);$/;"	t	namespace:android
mAudioBuffer	include/media/JetPlayer.h	/^    EAS_PCM*            mAudioBuffer;\/\/ EAS renders the MIDI data into this buffer, $/;"	m	class:android::JetPlayer
mAudioTrack	include/media/JetPlayer.h	/^    AudioTrack*         mAudioTrack; \/\/ and we play it in this audio track$/;"	m	class:android::JetPlayer
mCondition	include/media/JetPlayer.h	/^    Condition           mCondition;$/;"	m	class:android::JetPlayer
mEasData	include/media/JetPlayer.h	/^    EAS_DATA_HANDLE     mEasData;$/;"	m	class:android::JetPlayer
mEasJetFileLoc	include/media/JetPlayer.h	/^    EAS_FILE_LOCATOR    mEasJetFileLoc;$/;"	m	class:android::JetPlayer
mEventCallback	include/media/JetPlayer.h	/^    jetevent_callback   mEventCallback;$/;"	m	class:android::JetPlayer
mJavaJetPlayerRef	include/media/JetPlayer.h	/^    jobject             mJavaJetPlayerRef;$/;"	m	class:android::JetPlayer
mJetFilePath	include/media/JetPlayer.h	/^    char                mJetFilePath[256];$/;"	m	class:android::JetPlayer
mJetStatus	include/media/JetPlayer.h	/^    S_JET_STATUS        mJetStatus;$/;"	m	class:android::JetPlayer
mMaxTracks	include/media/JetPlayer.h	/^    int                 mMaxTracks; \/\/ max number of MIDI tracks, usually 32$/;"	m	class:android::JetPlayer
mMemFailedVar	include/media/JetPlayer.h	/^    int*                mMemFailedVar;$/;"	m	class:android::JetPlayer
mMutex	include/media/JetPlayer.h	/^    Mutex               mMutex; \/\/ mutex to sync the render and playback thread with the JET calls$/;"	m	class:android::JetPlayer
mPaused	include/media/JetPlayer.h	/^    bool                mPaused;$/;"	m	class:android::JetPlayer
mPreviousJetStatus	include/media/JetPlayer.h	/^    S_JET_STATUS        mPreviousJetStatus;$/;"	m	class:android::JetPlayer
mRender	include/media/JetPlayer.h	/^    volatile bool       mRender;$/;"	m	class:android::JetPlayer
mState	include/media/JetPlayer.h	/^    EAS_STATE           mState;$/;"	m	class:android::JetPlayer
mTid	include/media/JetPlayer.h	/^    pid_t               mTid;$/;"	m	class:android::JetPlayer
mTrackBufferSize	include/media/JetPlayer.h	/^    int                 mTrackBufferSize;$/;"	m	class:android::JetPlayer
ANDROID_MEDIAMETADATARETRIEVERINTERFACE_H	include/media/MediaMetadataRetrieverInterface.h	19;"	d
MediaMetadataRetrieverBase	include/media/MediaMetadataRetrieverInterface.h	/^                        MediaMetadataRetrieverBase() {}$/;"	f	class:android::MediaMetadataRetrieverBase
MediaMetadataRetrieverBase	include/media/MediaMetadataRetrieverInterface.h	/^class MediaMetadataRetrieverBase : public RefBase$/;"	c	namespace:android
MediaMetadataRetrieverInterface	include/media/MediaMetadataRetrieverInterface.h	/^    MediaMetadataRetrieverInterface() {}$/;"	f	class:android::MediaMetadataRetrieverInterface
MediaMetadataRetrieverInterface	include/media/MediaMetadataRetrieverInterface.h	/^class MediaMetadataRetrieverInterface : public MediaMetadataRetrieverBase$/;"	c	namespace:android
android	include/media/MediaMetadataRetrieverInterface.h	/^namespace android {$/;"	n
extractAlbumArt	include/media/MediaMetadataRetrieverInterface.h	/^    virtual MediaAlbumArt* extractAlbumArt() { return NULL; }$/;"	f	class:android::MediaMetadataRetrieverInterface
extractMetadata	include/media/MediaMetadataRetrieverInterface.h	/^    virtual const char* extractMetadata(int keyCode) { return NULL; }$/;"	f	class:android::MediaMetadataRetrieverInterface
getFrameAtTime	include/media/MediaMetadataRetrieverInterface.h	/^    virtual VideoFrame* getFrameAtTime(int64_t timeUs, int option) { return NULL; }$/;"	f	class:android::MediaMetadataRetrieverInterface
~MediaMetadataRetrieverBase	include/media/MediaMetadataRetrieverInterface.h	/^    virtual             ~MediaMetadataRetrieverBase() {}$/;"	f	class:android::MediaMetadataRetrieverBase
~MediaMetadataRetrieverInterface	include/media/MediaMetadataRetrieverInterface.h	/^    virtual             ~MediaMetadataRetrieverInterface() {}$/;"	f	class:android::MediaMetadataRetrieverInterface
ANDROID_MEDIAPLAYERINTERFACE_H	include/media/MediaPlayerInterface.h	18;"	d
AudioCallback	include/media/MediaPlayerInterface.h	/^        typedef size_t (*AudioCallback)($/;"	t	class:android::MediaPlayerBase::AudioSink
AudioSink	include/media/MediaPlayerInterface.h	/^    class AudioSink : public RefBase {$/;"	c	class:android::MediaPlayerBase
DEFAULT_AUDIOSINK_BUFFERCOUNT	include/media/MediaPlayerInterface.h	50;"	d
DEFAULT_AUDIOSINK_BUFFERSIZE	include/media/MediaPlayerInterface.h	51;"	d
DEFAULT_AUDIOSINK_SAMPLERATE	include/media/MediaPlayerInterface.h	52;"	d
MediaPlayerBase	include/media/MediaPlayerInterface.h	/^                        MediaPlayerBase() : mCookie(0), mNotify(0) {}$/;"	f	class:android::MediaPlayerBase
MediaPlayerBase	include/media/MediaPlayerInterface.h	/^class MediaPlayerBase : public RefBase$/;"	c	namespace:android
MediaPlayerHWInterface	include/media/MediaPlayerInterface.h	/^class MediaPlayerHWInterface : public MediaPlayerBase$/;"	c	namespace:android
MediaPlayerInterface	include/media/MediaPlayerInterface.h	/^class MediaPlayerInterface : public MediaPlayerBase$/;"	c	namespace:android
PV_PLAYER	include/media/MediaPlayerInterface.h	/^    PV_PLAYER = 1,$/;"	e	enum:android::player_type
SONIVOX_PLAYER	include/media/MediaPlayerInterface.h	/^    SONIVOX_PLAYER = 2,$/;"	e	enum:android::player_type
STAGEFRIGHT_PLAYER	include/media/MediaPlayerInterface.h	/^    STAGEFRIGHT_PLAYER = 4,$/;"	e	enum:android::player_type
TEST_PLAYER	include/media/MediaPlayerInterface.h	/^    TEST_PLAYER = 5,$/;"	e	enum:android::player_type
android	include/media/MediaPlayerInterface.h	/^namespace android {$/;"	n
getMetadata	include/media/MediaPlayerInterface.h	/^    virtual status_t    getMetadata(const media::Metadata::Filter& ids,$/;"	f	class:android::MediaPlayerBase
hardwareOutput	include/media/MediaPlayerInterface.h	/^    virtual bool        hardwareOutput() { return false; }$/;"	f	class:android::MediaPlayerInterface
hardwareOutput	include/media/MediaPlayerInterface.h	/^    virtual bool        hardwareOutput() { return true; }$/;"	f	class:android::MediaPlayerHWInterface
mAudioSink	include/media/MediaPlayerInterface.h	/^    sp<AudioSink>       mAudioSink;$/;"	m	class:android::MediaPlayerInterface
mCookie	include/media/MediaPlayerInterface.h	/^    void*               mCookie;$/;"	m	class:android::MediaPlayerBase
mNotify	include/media/MediaPlayerInterface.h	/^    notify_callback_f   mNotify;$/;"	m	class:android::MediaPlayerBase
notify_callback_f	include/media/MediaPlayerInterface.h	/^typedef void (*notify_callback_f)(void* cookie, int msg, int ext1, int ext2);$/;"	t	namespace:android
player_type	include/media/MediaPlayerInterface.h	/^enum player_type {$/;"	g	namespace:android
resume	include/media/MediaPlayerInterface.h	/^    virtual status_t    resume() { return INVALID_OPERATION; }$/;"	f	class:android::MediaPlayerBase
sendEvent	include/media/MediaPlayerInterface.h	/^    virtual void        sendEvent(int msg, int ext1=0, int ext2=0) { if (mNotify) mNotify(mCookie, msg, ext1, ext2); }$/;"	f	class:android::MediaPlayerBase
setAudioSink	include/media/MediaPlayerInterface.h	/^    virtual void        setAudioSink(const sp<AudioSink>& audioSink) { mAudioSink = audioSink; }$/;"	f	class:android::MediaPlayerInterface
setNotifyCallback	include/media/MediaPlayerInterface.h	/^    virtual void        setNotifyCallback(void* cookie, notify_callback_f notifyFunc) {$/;"	f	class:android::MediaPlayerBase
suspend	include/media/MediaPlayerInterface.h	/^    virtual status_t    suspend() { return INVALID_OPERATION; }$/;"	f	class:android::MediaPlayerBase
~AudioSink	include/media/MediaPlayerInterface.h	/^        virtual             ~AudioSink() {}$/;"	f	class:android::MediaPlayerBase::AudioSink
~MediaPlayerBase	include/media/MediaPlayerInterface.h	/^    virtual             ~MediaPlayerBase() {}$/;"	f	class:android::MediaPlayerBase
~MediaPlayerHWInterface	include/media/MediaPlayerInterface.h	/^    virtual             ~MediaPlayerHWInterface() {}$/;"	f	class:android::MediaPlayerHWInterface
~MediaPlayerInterface	include/media/MediaPlayerInterface.h	/^    virtual             ~MediaPlayerInterface() { }$/;"	f	class:android::MediaPlayerInterface
ANDROID_MEDIAPROFILES_H	include/media/MediaProfiles.h	19;"	d
AUDIO_DECODER_WMA	include/media/MediaProfiles.h	/^    AUDIO_DECODER_WMA,$/;"	e	enum:android::audio_decoder
AudioCodec	include/media/MediaProfiles.h	/^        AudioCodec(audio_encoder codec, int bitRate, int sampleRate, int channels)$/;"	f	struct:android::MediaProfiles::AudioCodec
AudioCodec	include/media/MediaProfiles.h	/^    struct AudioCodec {$/;"	s	class:android::MediaProfiles
AudioDecoderCap	include/media/MediaProfiles.h	/^        AudioDecoderCap(audio_decoder codec): mCodec(codec) {}$/;"	f	struct:android::MediaProfiles::AudioDecoderCap
AudioDecoderCap	include/media/MediaProfiles.h	/^    struct AudioDecoderCap {$/;"	s	class:android::MediaProfiles
AudioEncoderCap	include/media/MediaProfiles.h	/^        AudioEncoderCap(audio_encoder codec,$/;"	f	struct:android::MediaProfiles::AudioEncoderCap
AudioEncoderCap	include/media/MediaProfiles.h	/^    struct AudioEncoderCap {$/;"	s	class:android::MediaProfiles
CAMCORDER_QUALITY_HIGH	include/media/MediaProfiles.h	/^    CAMCORDER_QUALITY_HIGH = 1$/;"	e	enum:android::camcorder_quality
CAMCORDER_QUALITY_LOW	include/media/MediaProfiles.h	/^    CAMCORDER_QUALITY_LOW  = 0,$/;"	e	enum:android::camcorder_quality
CamcorderProfile	include/media/MediaProfiles.h	/^        CamcorderProfile()$/;"	f	struct:android::MediaProfiles::CamcorderProfile
CamcorderProfile	include/media/MediaProfiles.h	/^    struct CamcorderProfile {$/;"	s	class:android::MediaProfiles
ImageEncodingQualityLevels	include/media/MediaProfiles.h	/^    struct ImageEncodingQualityLevels {$/;"	s	class:android::MediaProfiles
MediaProfiles	include/media/MediaProfiles.h	/^    MediaProfiles() {}                               \/\/ Dummy default constructor$/;"	f	class:android::MediaProfiles
MediaProfiles	include/media/MediaProfiles.h	/^class MediaProfiles$/;"	c	namespace:android
NameToTagMap	include/media/MediaProfiles.h	/^    struct NameToTagMap {$/;"	s	class:android::MediaProfiles
VIDEO_DECODER_WMV	include/media/MediaProfiles.h	/^    VIDEO_DECODER_WMV,$/;"	e	enum:android::video_decoder
VideoCodec	include/media/MediaProfiles.h	/^        VideoCodec(video_encoder codec, int bitRate, int frameWidth, int frameHeight, int frameRate)$/;"	f	struct:android::MediaProfiles::VideoCodec
VideoCodec	include/media/MediaProfiles.h	/^    struct VideoCodec {$/;"	s	class:android::MediaProfiles
VideoDecoderCap	include/media/MediaProfiles.h	/^        VideoDecoderCap(video_decoder codec): mCodec(codec) {}$/;"	f	struct:android::MediaProfiles::VideoDecoderCap
VideoDecoderCap	include/media/MediaProfiles.h	/^    struct VideoDecoderCap {$/;"	s	class:android::MediaProfiles
VideoEncoderCap	include/media/MediaProfiles.h	/^        VideoEncoderCap(video_encoder codec,$/;"	f	struct:android::MediaProfiles::VideoEncoderCap
VideoEncoderCap	include/media/MediaProfiles.h	/^    struct VideoEncoderCap {$/;"	s	class:android::MediaProfiles
android	include/media/MediaProfiles.h	/^namespace android {$/;"	n
audio_decoder	include/media/MediaProfiles.h	/^enum audio_decoder {$/;"	g	namespace:android
camcorder_quality	include/media/MediaProfiles.h	/^enum camcorder_quality {$/;"	g	namespace:android
mAudioCodec	include/media/MediaProfiles.h	/^        AudioCodec *mAudioCodec;$/;"	m	struct:android::MediaProfiles::CamcorderProfile
mAudioDecoders	include/media/MediaProfiles.h	/^    Vector<AudioDecoderCap*>  mAudioDecoders;$/;"	m	class:android::MediaProfiles
mAudioEncoders	include/media/MediaProfiles.h	/^    Vector<AudioEncoderCap*>  mAudioEncoders;$/;"	m	class:android::MediaProfiles
mBitRate	include/media/MediaProfiles.h	/^        int mBitRate;$/;"	m	struct:android::MediaProfiles::AudioCodec
mBitRate	include/media/MediaProfiles.h	/^        int mBitRate;$/;"	m	struct:android::MediaProfiles::VideoCodec
mCamcorderProfiles	include/media/MediaProfiles.h	/^    Vector<CamcorderProfile*> mCamcorderProfiles;$/;"	m	class:android::MediaProfiles
mCameraId	include/media/MediaProfiles.h	/^        int mCameraId;$/;"	m	struct:android::MediaProfiles::CamcorderProfile
mCameraId	include/media/MediaProfiles.h	/^        int mCameraId;$/;"	m	struct:android::MediaProfiles::ImageEncodingQualityLevels
mChannels	include/media/MediaProfiles.h	/^        int mChannels;$/;"	m	struct:android::MediaProfiles::AudioCodec
mCodec	include/media/MediaProfiles.h	/^        audio_decoder mCodec;$/;"	m	struct:android::MediaProfiles::AudioDecoderCap
mCodec	include/media/MediaProfiles.h	/^        audio_encoder mCodec;$/;"	m	struct:android::MediaProfiles::AudioCodec
mCodec	include/media/MediaProfiles.h	/^        audio_encoder mCodec;$/;"	m	struct:android::MediaProfiles::AudioEncoderCap
mCodec	include/media/MediaProfiles.h	/^        video_decoder mCodec;$/;"	m	struct:android::MediaProfiles::VideoDecoderCap
mCodec	include/media/MediaProfiles.h	/^        video_encoder mCodec;$/;"	m	struct:android::MediaProfiles::VideoCodec
mCodec	include/media/MediaProfiles.h	/^        video_encoder mCodec;$/;"	m	struct:android::MediaProfiles::VideoEncoderCap
mCurrentCameraId	include/media/MediaProfiles.h	/^    int mCurrentCameraId;$/;"	m	class:android::MediaProfiles
mDuration	include/media/MediaProfiles.h	/^        int mDuration;$/;"	m	struct:android::MediaProfiles::CamcorderProfile
mEncoderOutputFileFormats	include/media/MediaProfiles.h	/^    Vector<output_format>     mEncoderOutputFileFormats;$/;"	m	class:android::MediaProfiles
mFileFormat	include/media/MediaProfiles.h	/^        output_format mFileFormat;$/;"	m	struct:android::MediaProfiles::CamcorderProfile
mFrameHeight	include/media/MediaProfiles.h	/^        int mFrameHeight;$/;"	m	struct:android::MediaProfiles::VideoCodec
mFrameRate	include/media/MediaProfiles.h	/^        int mFrameRate;$/;"	m	struct:android::MediaProfiles::VideoCodec
mFrameWidth	include/media/MediaProfiles.h	/^        int mFrameWidth;$/;"	m	struct:android::MediaProfiles::VideoCodec
mImageEncodingQualityLevels	include/media/MediaProfiles.h	/^    Vector<ImageEncodingQualityLevels *>  mImageEncodingQualityLevels;$/;"	m	class:android::MediaProfiles
mLevels	include/media/MediaProfiles.h	/^        Vector<int> mLevels;$/;"	m	struct:android::MediaProfiles::ImageEncodingQualityLevels
mMaxBitRate	include/media/MediaProfiles.h	/^        int mMinBitRate, mMaxBitRate;$/;"	m	struct:android::MediaProfiles::AudioEncoderCap
mMaxBitRate	include/media/MediaProfiles.h	/^        int mMinBitRate, mMaxBitRate;$/;"	m	struct:android::MediaProfiles::VideoEncoderCap
mMaxChannels	include/media/MediaProfiles.h	/^        int mMinChannels, mMaxChannels;$/;"	m	struct:android::MediaProfiles::AudioEncoderCap
mMaxFrameHeight	include/media/MediaProfiles.h	/^        int mMinFrameHeight, mMaxFrameHeight;$/;"	m	struct:android::MediaProfiles::VideoEncoderCap
mMaxFrameRate	include/media/MediaProfiles.h	/^        int mMinFrameRate, mMaxFrameRate;$/;"	m	struct:android::MediaProfiles::VideoEncoderCap
mMaxFrameWidth	include/media/MediaProfiles.h	/^        int mMinFrameWidth, mMaxFrameWidth;$/;"	m	struct:android::MediaProfiles::VideoEncoderCap
mMaxSampleRate	include/media/MediaProfiles.h	/^        int mMinSampleRate, mMaxSampleRate;$/;"	m	struct:android::MediaProfiles::AudioEncoderCap
mMinBitRate	include/media/MediaProfiles.h	/^        int mMinBitRate, mMaxBitRate;$/;"	m	struct:android::MediaProfiles::AudioEncoderCap
mMinBitRate	include/media/MediaProfiles.h	/^        int mMinBitRate, mMaxBitRate;$/;"	m	struct:android::MediaProfiles::VideoEncoderCap
mMinChannels	include/media/MediaProfiles.h	/^        int mMinChannels, mMaxChannels;$/;"	m	struct:android::MediaProfiles::AudioEncoderCap
mMinFrameHeight	include/media/MediaProfiles.h	/^        int mMinFrameHeight, mMaxFrameHeight;$/;"	m	struct:android::MediaProfiles::VideoEncoderCap
mMinFrameRate	include/media/MediaProfiles.h	/^        int mMinFrameRate, mMaxFrameRate;$/;"	m	struct:android::MediaProfiles::VideoEncoderCap
mMinFrameWidth	include/media/MediaProfiles.h	/^        int mMinFrameWidth, mMaxFrameWidth;$/;"	m	struct:android::MediaProfiles::VideoEncoderCap
mMinSampleRate	include/media/MediaProfiles.h	/^        int mMinSampleRate, mMaxSampleRate;$/;"	m	struct:android::MediaProfiles::AudioEncoderCap
mQuality	include/media/MediaProfiles.h	/^        camcorder_quality mQuality;$/;"	m	struct:android::MediaProfiles::CamcorderProfile
mSampleRate	include/media/MediaProfiles.h	/^        int mSampleRate;$/;"	m	struct:android::MediaProfiles::AudioCodec
mVideoCodec	include/media/MediaProfiles.h	/^        VideoCodec *mVideoCodec;$/;"	m	struct:android::MediaProfiles::CamcorderProfile
mVideoDecoders	include/media/MediaProfiles.h	/^    Vector<VideoDecoderCap*>  mVideoDecoders;$/;"	m	class:android::MediaProfiles
mVideoEncoders	include/media/MediaProfiles.h	/^    Vector<VideoEncoderCap*>  mVideoEncoders;$/;"	m	class:android::MediaProfiles
name	include/media/MediaProfiles.h	/^        const char* name;$/;"	m	struct:android::MediaProfiles::NameToTagMap
sAudioDecoderNameMap	include/media/MediaProfiles.h	/^    static const NameToTagMap sAudioDecoderNameMap[];$/;"	m	class:android::MediaProfiles
sAudioEncoderNameMap	include/media/MediaProfiles.h	/^    static const NameToTagMap sAudioEncoderNameMap[];$/;"	m	class:android::MediaProfiles
sCamcorderQualityNameMap	include/media/MediaProfiles.h	/^    static const NameToTagMap sCamcorderQualityNameMap[];$/;"	m	class:android::MediaProfiles
sFileFormatMap	include/media/MediaProfiles.h	/^    static const NameToTagMap sFileFormatMap[];$/;"	m	class:android::MediaProfiles
sInstance	include/media/MediaProfiles.h	/^    static MediaProfiles *sInstance;$/;"	m	class:android::MediaProfiles
sIsInitialized	include/media/MediaProfiles.h	/^    static bool sIsInitialized;$/;"	m	class:android::MediaProfiles
sLock	include/media/MediaProfiles.h	/^    static Mutex sLock;$/;"	m	class:android::MediaProfiles
sVideoDecoderNameMap	include/media/MediaProfiles.h	/^    static const NameToTagMap sVideoDecoderNameMap[];$/;"	m	class:android::MediaProfiles
sVideoEncoderNameMap	include/media/MediaProfiles.h	/^    static const NameToTagMap sVideoEncoderNameMap[];$/;"	m	class:android::MediaProfiles
tag	include/media/MediaProfiles.h	/^        int tag;$/;"	m	struct:android::MediaProfiles::NameToTagMap
video_decoder	include/media/MediaProfiles.h	/^enum video_decoder {$/;"	g	namespace:android
~AudioCodec	include/media/MediaProfiles.h	/^        ~AudioCodec() {}$/;"	f	struct:android::MediaProfiles::AudioCodec
~AudioDecoderCap	include/media/MediaProfiles.h	/^        ~AudioDecoderCap() {}$/;"	f	struct:android::MediaProfiles::AudioDecoderCap
~AudioEncoderCap	include/media/MediaProfiles.h	/^        ~AudioEncoderCap() {}$/;"	f	struct:android::MediaProfiles::AudioEncoderCap
~CamcorderProfile	include/media/MediaProfiles.h	/^        ~CamcorderProfile() {$/;"	f	struct:android::MediaProfiles::CamcorderProfile
~VideoCodec	include/media/MediaProfiles.h	/^        ~VideoCodec() {}$/;"	f	struct:android::MediaProfiles::VideoCodec
~VideoDecoderCap	include/media/MediaProfiles.h	/^        ~VideoDecoderCap() {}$/;"	f	struct:android::MediaProfiles::VideoDecoderCap
~VideoEncoderCap	include/media/MediaProfiles.h	/^         ~VideoEncoderCap() {}$/;"	f	struct:android::MediaProfiles::VideoEncoderCap
MEDIA_RECORDER_BASE_H_	include/media/MediaRecorderBase.h	19;"	d
MediaRecorderBase	include/media/MediaRecorderBase.h	/^    MediaRecorderBase() {}$/;"	f	struct:android::MediaRecorderBase
MediaRecorderBase	include/media/MediaRecorderBase.h	/^struct MediaRecorderBase {$/;"	s	namespace:android
android	include/media/MediaRecorderBase.h	/^namespace android {$/;"	n
~MediaRecorderBase	include/media/MediaRecorderBase.h	/^    virtual ~MediaRecorderBase() {}$/;"	f	struct:android::MediaRecorderBase
ANDROID_MEDIA_METADATA_H__	include/media/Metadata.h	18;"	d
Filter	include/media/Metadata.h	/^    typedef SortedVector<Type> Filter;$/;"	t	class:android::media::Metadata
Metadata	include/media/Metadata.h	/^class Metadata {$/;"	c	namespace:android::media
Type	include/media/Metadata.h	/^    typedef int32_t Type;$/;"	t	class:android::media::Metadata
android	include/media/Metadata.h	/^namespace android {$/;"	n
kAlbum	include/media/Metadata.h	/^    static const Type kAlbum = 4;           \/\/ String$/;"	m	class:android::media::Metadata
kAlbumArt	include/media/Metadata.h	/^    static const Type kAlbumArt = 14;       \/\/ byte[]$/;"	m	class:android::media::Metadata
kAny	include/media/Metadata.h	/^    static const Type kAny = 0;$/;"	m	class:android::media::Metadata
kArtist	include/media/Metadata.h	/^    static const Type kArtist = 5;          \/\/ String$/;"	m	class:android::media::Metadata
kAudioBitRate	include/media/Metadata.h	/^    static const Type kAudioBitRate = 18; \/\/ Integer, bps$/;"	m	class:android::media::Metadata
kAudioCodec	include/media/Metadata.h	/^    static const Type kAudioCodec = 23;    \/\/ String$/;"	m	class:android::media::Metadata
kAudioSampleRate	include/media/Metadata.h	/^    static const Type kAudioSampleRate = 20; \/\/ Integer, Hz$/;"	m	class:android::media::Metadata
kAuthor	include/media/Metadata.h	/^    static const Type kAuthor = 6;          \/\/ String$/;"	m	class:android::media::Metadata
kBitRate	include/media/Metadata.h	/^    static const Type kBitRate = 17;       \/\/ Integer, Aggregate rate of$/;"	m	class:android::media::Metadata
kCaption	include/media/Metadata.h	/^    static const Type kCaption = 16;        \/\/ TimedText$/;"	m	class:android::media::Metadata
kCdTrackMax	include/media/Metadata.h	/^    static const Type kCdTrackMax = 12;     \/\/ Integer$/;"	m	class:android::media::Metadata
kCdTrackNum	include/media/Metadata.h	/^    static const Type kCdTrackNum = 11;     \/\/ Integer 1-based$/;"	m	class:android::media::Metadata
kComment	include/media/Metadata.h	/^    static const Type kComment = 2;         \/\/ String$/;"	m	class:android::media::Metadata
kComposer	include/media/Metadata.h	/^    static const Type kComposer = 7;        \/\/ String$/;"	m	class:android::media::Metadata
kCopyright	include/media/Metadata.h	/^    static const Type kCopyright = 3;       \/\/ String$/;"	m	class:android::media::Metadata
kDate	include/media/Metadata.h	/^    static const Type kDate = 9;            \/\/ Date$/;"	m	class:android::media::Metadata
kDrmCrippled	include/media/Metadata.h	/^    static const Type kDrmCrippled = 28;   \/\/ Boolean$/;"	m	class:android::media::Metadata
kDuration	include/media/Metadata.h	/^    static const Type kDuration = 10;       \/\/ Integer(millisec)$/;"	m	class:android::media::Metadata
kGenre	include/media/Metadata.h	/^    static const Type kGenre = 8;           \/\/ String$/;"	m	class:android::media::Metadata
kMimeType	include/media/Metadata.h	/^    static const Type kMimeType = 22;      \/\/ String$/;"	m	class:android::media::Metadata
kNumTracks	include/media/Metadata.h	/^    static const Type kNumTracks = 27;     \/\/ Integer$/;"	m	class:android::media::Metadata
kPauseAvailable	include/media/Metadata.h	/^    static const Type kPauseAvailable = 29;        \/\/ Boolean$/;"	m	class:android::media::Metadata
kRating	include/media/Metadata.h	/^    static const Type kRating = 13;         \/\/ String$/;"	m	class:android::media::Metadata
kSeekAvailable	include/media/Metadata.h	/^    static const Type kSeekAvailable = 32;         \/\/ Boolean$/;"	m	class:android::media::Metadata
kSeekBackwardAvailable	include/media/Metadata.h	/^    static const Type kSeekBackwardAvailable = 30; \/\/ Boolean$/;"	m	class:android::media::Metadata
kSeekForwardAvailable	include/media/Metadata.h	/^    static const Type kSeekForwardAvailable = 31;  \/\/ Boolean$/;"	m	class:android::media::Metadata
kTitle	include/media/Metadata.h	/^    static const Type kTitle = 1;           \/\/ String$/;"	m	class:android::media::Metadata
kVideoBitRate	include/media/Metadata.h	/^    static const Type kVideoBitRate = 19; \/\/ Integer, bps$/;"	m	class:android::media::Metadata
kVideoCodec	include/media/Metadata.h	/^    static const Type kVideoCodec = 24;    \/\/ String$/;"	m	class:android::media::Metadata
kVideoFrame	include/media/Metadata.h	/^    static const Type kVideoFrame = 15;     \/\/ Bitmap$/;"	m	class:android::media::Metadata
kVideoHeight	include/media/Metadata.h	/^    static const Type kVideoHeight = 25;   \/\/ Integer$/;"	m	class:android::media::Metadata
kVideoWidth	include/media/Metadata.h	/^    static const Type kVideoWidth = 26;    \/\/ Integer$/;"	m	class:android::media::Metadata
kVideoframeRate	include/media/Metadata.h	/^    static const Type kVideoframeRate = 21;  \/\/ Integer, Hz$/;"	m	class:android::media::Metadata
mBegin	include/media/Metadata.h	/^    size_t mBegin;$/;"	m	class:android::media::Metadata
mData	include/media/Metadata.h	/^    Parcel *mData;$/;"	m	class:android::media::Metadata
media	include/media/Metadata.h	/^namespace media {$/;"	n	namespace:android
ANDROID_PVMEDIARECORDER_H	include/media/PVMediaRecorder.h	19;"	d
PVMediaRecorder	include/media/PVMediaRecorder.h	/^class PVMediaRecorder : public MediaRecorderBase {$/;"	c	namespace:android
android	include/media/PVMediaRecorder.h	/^namespace android {$/;"	n
mAuthorDriverWrapper	include/media/PVMediaRecorder.h	/^    AuthorDriverWrapper*            mAuthorDriverWrapper;$/;"	m	class:android::PVMediaRecorder
ANDROID_PVMETADATARETRIEVER_H	include/media/PVMetadataRetriever.h	19;"	d
PVMetadataRetriever	include/media/PVMetadataRetriever.h	/^class PVMetadataRetriever : public MediaMetadataRetrieverInterface$/;"	c	namespace:android
android	include/media/PVMetadataRetriever.h	/^namespace android {$/;"	n
mDataSourcePath	include/media/PVMetadataRetriever.h	/^    char*               mDataSourcePath;$/;"	m	class:android::PVMetadataRetriever
mLock	include/media/PVMetadataRetriever.h	/^    mutable Mutex       mLock;$/;"	m	class:android::PVMetadataRetriever
mMetadataDriver	include/media/PVMetadataRetriever.h	/^    MetadataDriver*     mMetadataDriver;$/;"	m	class:android::PVMetadataRetriever
ANDROID_PVPLAYER_H	include/media/PVPlayer.h	18;"	d
MAX_OPENCORE_INSTANCES	include/media/PVPlayer.h	24;"	d
PVPlayer	include/media/PVPlayer.h	/^class PVPlayer : public MediaPlayerInterface$/;"	c	namespace:android
android	include/media/PVPlayer.h	/^namespace android {$/;"	n
do_nothing	include/media/PVPlayer.h	/^    static void         do_nothing(status_t s, void *cookie, bool cancelled) { }$/;"	f	class:android::PVPlayer
mDataSourcePath	include/media/PVPlayer.h	/^    char *                      mDataSourcePath;$/;"	m	class:android::PVPlayer
mDuration	include/media/PVPlayer.h	/^    int                         mDuration;$/;"	m	class:android::PVPlayer
mInit	include/media/PVPlayer.h	/^    status_t                    mInit;$/;"	m	class:android::PVPlayer
mIsDataSourceSet	include/media/PVPlayer.h	/^    bool                        mIsDataSourceSet;$/;"	m	class:android::PVPlayer
mPlayerDriver	include/media/PVPlayer.h	/^    PlayerDriver*               mPlayerDriver;$/;"	m	class:android::PVPlayer
mSharedFd	include/media/PVPlayer.h	/^    int                         mSharedFd;$/;"	m	class:android::PVPlayer
mSurface	include/media/PVPlayer.h	/^    sp<ISurface>                mSurface;$/;"	m	class:android::PVPlayer
playerType	include/media/PVPlayer.h	/^    virtual player_type playerType() { return PV_PLAYER; }$/;"	f	class:android::PVPlayer
sNumInstances	include/media/PVPlayer.h	/^    static volatile int32_t     sNumInstances;$/;"	m	class:android::PVPlayer
sendEvent	include/media/PVPlayer.h	/^    void        sendEvent(int msg, int ext1=0, int ext2=0) { MediaPlayerBase::sendEvent(msg, ext1, ext2); }$/;"	f	class:android::PVPlayer
ANDROID_TONEGENERATOR_H_	include/media/ToneGenerator.h	18;"	d
ANSI	include/media/ToneGenerator.h	/^        ANSI,$/;"	e	enum:android::ToneGenerator::region
CEPT	include/media/ToneGenerator.h	/^        CEPT,$/;"	e	enum:android::ToneGenerator::region
FIRST_SUP_TONE	include/media/ToneGenerator.h	/^        FIRST_SUP_TONE = TONE_SUP_DIAL,$/;"	e	enum:android::ToneGenerator::tone_type
GEN_AMP	include/media/ToneGenerator.h	/^        static const short GEN_AMP = 32000;  \/\/ amplitude of generator$/;"	m	class:android::ToneGenerator::WaveGenerator
JAPAN	include/media/ToneGenerator.h	/^        JAPAN,$/;"	e	enum:android::ToneGenerator::region
LAST_SUP_TONE	include/media/ToneGenerator.h	/^        LAST_SUP_TONE = TONE_SUP_RINGTONE,$/;"	e	enum:android::ToneGenerator::tone_type
NUM_ALTERNATE_TONES	include/media/ToneGenerator.h	/^        NUM_ALTERNATE_TONES$/;"	e	enum:android::ToneGenerator::regional_tone_type
NUM_REGIONS	include/media/ToneGenerator.h	/^        NUM_REGIONS$/;"	e	enum:android::ToneGenerator::region
NUM_SUP_TONES	include/media/ToneGenerator.h	/^        NUM_SUP_TONES = LAST_SUP_TONE-FIRST_SUP_TONE+1$/;"	e	enum:android::ToneGenerator::tone_type
NUM_TONES	include/media/ToneGenerator.h	/^        NUM_TONES,$/;"	e	enum:android::ToneGenerator::tone_type
S_Q14	include/media/ToneGenerator.h	/^        static const short S_Q14 = 14;  \/\/ shift for Q14$/;"	m	class:android::ToneGenerator::WaveGenerator
S_Q15	include/media/ToneGenerator.h	/^        static const short S_Q15 = 15;  \/\/ shift for Q15$/;"	m	class:android::ToneGenerator::WaveGenerator
TONEGEN_GAIN	include/media/ToneGenerator.h	/^    static const float TONEGEN_GAIN = 0.9;  \/\/ Default gain passed to  WaveGenerator().$/;"	m	class:android::ToneGenerator
TONEGEN_INF	include/media/ToneGenerator.h	/^    static const unsigned int TONEGEN_INF = 0xFFFFFFFF;  \/\/ Represents infinite time duration$/;"	m	class:android::ToneGenerator
TONEGEN_MAX_SEGMENTS	include/media/ToneGenerator.h	/^    static const unsigned int TONEGEN_MAX_SEGMENTS = 12;  \/\/ Maximun number of segments in a tone descriptor$/;"	m	class:android::ToneGenerator
TONEGEN_MAX_WAVES	include/media/ToneGenerator.h	/^    static const unsigned int TONEGEN_MAX_WAVES = 3;     \/\/ Maximun number of sine waves in a tone segment$/;"	m	class:android::ToneGenerator
TONE_ANSI_BUSY	include/media/ToneGenerator.h	/^        TONE_ANSI_BUSY,             \/\/ Busy tone on:  a 480 Hz + 620 Hz tone repeated in a 500 ms on, 500 ms off cycle.$/;"	e	enum:android::ToneGenerator::regional_tone_type
TONE_ANSI_CALL_WAITING	include/media/ToneGenerator.h	/^        TONE_ANSI_CALL_WAITING,     \/\/ Call waiting tone on: 440 Hz, on for 300 ms, 9,7 s off followed by$/;"	e	enum:android::ToneGenerator::regional_tone_type
TONE_ANSI_CONGESTION	include/media/ToneGenerator.h	/^        TONE_ANSI_CONGESTION,       \/\/ Network congestion (reorder) tone on:  a 480 Hz + 620 Hz tone repeated in a 250 ms on, 250 ms off cycle.$/;"	e	enum:android::ToneGenerator::regional_tone_type
TONE_ANSI_DIAL	include/media/ToneGenerator.h	/^        TONE_ANSI_DIAL = NUM_TONES, \/\/ Dial tone: a continuous 350 Hz + 440 Hz tone.$/;"	e	enum:android::ToneGenerator::regional_tone_type
TONE_ANSI_RINGTONE	include/media/ToneGenerator.h	/^        TONE_ANSI_RINGTONE,         \/\/ Ring Tone:  a 440 Hz + 480 Hz tone repeated in a 2 s on, 4 s off pattern.$/;"	e	enum:android::ToneGenerator::regional_tone_type
TONE_CDMA_ABBR_ALERT	include/media/ToneGenerator.h	/^        TONE_CDMA_ABBR_ALERT,$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_ABBR_INTERCEPT	include/media/ToneGenerator.h	/^        TONE_CDMA_ABBR_INTERCEPT,$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_ABBR_REORDER	include/media/ToneGenerator.h	/^        TONE_CDMA_ABBR_REORDER,$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_ALERT_AUTOREDIAL_LITE	include/media/ToneGenerator.h	/^        TONE_CDMA_ALERT_AUTOREDIAL_LITE,$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_ALERT_CALL_GUARD	include/media/ToneGenerator.h	/^        TONE_CDMA_ALERT_CALL_GUARD,$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_ALERT_INCALL_LITE	include/media/ToneGenerator.h	/^        TONE_CDMA_ALERT_INCALL_LITE,$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_ALERT_NETWORK_LITE	include/media/ToneGenerator.h	/^        TONE_CDMA_ALERT_NETWORK_LITE,$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_ANSWER	include/media/ToneGenerator.h	/^        TONE_CDMA_ANSWER,$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_CALLDROP_LITE	include/media/ToneGenerator.h	/^        TONE_CDMA_CALLDROP_LITE,$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_CALL_SIGNAL_ISDN_INTERGROUP	include/media/ToneGenerator.h	/^        TONE_CDMA_CALL_SIGNAL_ISDN_INTERGROUP, \/\/ ISDN Intergroup$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_CALL_SIGNAL_ISDN_NORMAL	include/media/ToneGenerator.h	/^        TONE_CDMA_CALL_SIGNAL_ISDN_NORMAL,  \/\/ ISDN Alert Normal$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_CALL_SIGNAL_ISDN_PAT3	include/media/ToneGenerator.h	/^        TONE_CDMA_CALL_SIGNAL_ISDN_PAT3,  \/\/ ISDN Alert PAT3$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_CALL_SIGNAL_ISDN_PAT5	include/media/ToneGenerator.h	/^        TONE_CDMA_CALL_SIGNAL_ISDN_PAT5,  \/\/ ISDN Alert PAT5$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_CALL_SIGNAL_ISDN_PAT6	include/media/ToneGenerator.h	/^        TONE_CDMA_CALL_SIGNAL_ISDN_PAT6,  \/\/ ISDN Alert PAT6$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_CALL_SIGNAL_ISDN_PAT7	include/media/ToneGenerator.h	/^        TONE_CDMA_CALL_SIGNAL_ISDN_PAT7,  \/\/ ISDN Alert PAT7$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_CALL_SIGNAL_ISDN_PING_RING	include/media/ToneGenerator.h	/^        TONE_CDMA_CALL_SIGNAL_ISDN_PING_RING, \/\/ ISDN Alert PING RING$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_CALL_SIGNAL_ISDN_SP_PRI	include/media/ToneGenerator.h	/^        TONE_CDMA_CALL_SIGNAL_ISDN_SP_PRI, \/\/ ISDN SP PRI$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_CONFIRM	include/media/ToneGenerator.h	/^        TONE_CDMA_CONFIRM,$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_DIAL_TONE_LITE	include/media/ToneGenerator.h	/^        TONE_CDMA_DIAL_TONE_LITE,$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_EMERGENCY_RINGBACK	include/media/ToneGenerator.h	/^        TONE_CDMA_EMERGENCY_RINGBACK,$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_HIGH_L	include/media/ToneGenerator.h	/^        TONE_CDMA_HIGH_L,  \/\/ IS54 High Pitch Long$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_HIGH_PBX_L	include/media/ToneGenerator.h	/^        TONE_CDMA_HIGH_PBX_L, \/\/ PBX High Pitch Long$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_HIGH_PBX_SLS	include/media/ToneGenerator.h	/^        TONE_CDMA_HIGH_PBX_SLS, \/\/ PBX High  SLS$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_HIGH_PBX_SS	include/media/ToneGenerator.h	/^        TONE_CDMA_HIGH_PBX_SS, \/\/ PBX High Short Short$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_HIGH_PBX_SSL	include/media/ToneGenerator.h	/^        TONE_CDMA_HIGH_PBX_SSL, \/\/ PBX High Short Short Long$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_HIGH_PBX_S_X4	include/media/ToneGenerator.h	/^        TONE_CDMA_HIGH_PBX_S_X4, \/\/ PBX High SSSS$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_HIGH_SLS	include/media/ToneGenerator.h	/^        TONE_CDMA_HIGH_SLS, \/\/ IS54 High Pitch Short Long Short$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_HIGH_SS	include/media/ToneGenerator.h	/^        TONE_CDMA_HIGH_SS, \/\/ IS54 High Pitch Short Short$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_HIGH_SSL	include/media/ToneGenerator.h	/^        TONE_CDMA_HIGH_SSL, \/\/ IS54 High Pitch Short Short Long$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_HIGH_SS_2	include/media/ToneGenerator.h	/^        TONE_CDMA_HIGH_SS_2, \/\/ IS54 High Pitch Short Short 2$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_HIGH_S_X4	include/media/ToneGenerator.h	/^        TONE_CDMA_HIGH_S_X4, \/\/ IS54 High Pitch Short Short Short Short$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_INTERCEPT	include/media/ToneGenerator.h	/^        TONE_CDMA_INTERCEPT,$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_KEYPAD_VOLUME_KEY_LITE	include/media/ToneGenerator.h	/^        TONE_CDMA_KEYPAD_VOLUME_KEY_LITE,$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_LOW_L	include/media/ToneGenerator.h	/^        TONE_CDMA_LOW_L, \/\/ IS54 Low Pitch Long$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_LOW_PBX_L	include/media/ToneGenerator.h	/^        TONE_CDMA_LOW_PBX_L, \/\/ PBX Low  Pitch Long$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_LOW_PBX_SLS	include/media/ToneGenerator.h	/^        TONE_CDMA_LOW_PBX_SLS, \/\/ PBX Low SLS$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_LOW_PBX_SS	include/media/ToneGenerator.h	/^        TONE_CDMA_LOW_PBX_SS, \/\/ PBX Low  Short Short$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_LOW_PBX_SSL	include/media/ToneGenerator.h	/^        TONE_CDMA_LOW_PBX_SSL,  \/\/ PBX Low Short Short Long$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_LOW_PBX_S_X4	include/media/ToneGenerator.h	/^        TONE_CDMA_LOW_PBX_S_X4, \/\/ PBX LOW SSSS$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_LOW_SLS	include/media/ToneGenerator.h	/^        TONE_CDMA_LOW_SLS, \/\/ IS54 Low Pitch Short Long Short$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_LOW_SS	include/media/ToneGenerator.h	/^        TONE_CDMA_LOW_SS, \/\/ IS54 Low Pitch Short Short$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_LOW_SSL	include/media/ToneGenerator.h	/^        TONE_CDMA_LOW_SSL, \/\/ IS54 Low  Pitch Short Short Long$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_LOW_SS_2	include/media/ToneGenerator.h	/^        TONE_CDMA_LOW_SS_2, \/\/ IS54 Low  Pitch Short Short 2$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_LOW_S_X4	include/media/ToneGenerator.h	/^        TONE_CDMA_LOW_S_X4, \/\/ IS54 Low Pitch Short Short Short Short$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_MED_L	include/media/ToneGenerator.h	/^        TONE_CDMA_MED_L, \/\/ IS54 Med Pitch Long$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_MED_PBX_L	include/media/ToneGenerator.h	/^        TONE_CDMA_MED_PBX_L, \/\/ PBX Med Pitch Long$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_MED_PBX_SLS	include/media/ToneGenerator.h	/^        TONE_CDMA_MED_PBX_SLS,  \/\/ PBX Med SLS$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_MED_PBX_SS	include/media/ToneGenerator.h	/^        TONE_CDMA_MED_PBX_SS, \/\/ PBX Med Short Short$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_MED_PBX_SSL	include/media/ToneGenerator.h	/^        TONE_CDMA_MED_PBX_SSL, \/\/ PBX Med Short Short Long$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_MED_PBX_S_X4	include/media/ToneGenerator.h	/^        TONE_CDMA_MED_PBX_S_X4, \/\/ PBX Med SSSS$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_MED_SLS	include/media/ToneGenerator.h	/^        TONE_CDMA_MED_SLS, \/\/ IS54 Med Pitch Short Long Short$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_MED_SS	include/media/ToneGenerator.h	/^        TONE_CDMA_MED_SS, \/\/ IS54 Medium Pitch Short Short$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_MED_SSL	include/media/ToneGenerator.h	/^        TONE_CDMA_MED_SSL, \/\/ IS54 Medium  Pitch Short Short Long$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_MED_SS_2	include/media/ToneGenerator.h	/^        TONE_CDMA_MED_SS_2, \/\/ IS54 Med Pitch Short Short 2$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_MED_S_X4	include/media/ToneGenerator.h	/^        TONE_CDMA_MED_S_X4, \/\/ IS54 Med Pitch Short Short Short Short$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_NETWORK_BUSY	include/media/ToneGenerator.h	/^        TONE_CDMA_NETWORK_BUSY,$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_NETWORK_BUSY_ONE_SHOT	include/media/ToneGenerator.h	/^        TONE_CDMA_NETWORK_BUSY_ONE_SHOT,$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_NETWORK_CALLWAITING	include/media/ToneGenerator.h	/^        TONE_CDMA_NETWORK_CALLWAITING,$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_NETWORK_USA_RINGBACK	include/media/ToneGenerator.h	/^        TONE_CDMA_NETWORK_USA_RINGBACK,$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_ONE_MIN_BEEP	include/media/ToneGenerator.h	/^        TONE_CDMA_ONE_MIN_BEEP,$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_PIP	include/media/ToneGenerator.h	/^        TONE_CDMA_PIP,$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_PRESSHOLDKEY_LITE	include/media/ToneGenerator.h	/^        TONE_CDMA_PRESSHOLDKEY_LITE,$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_REORDER	include/media/ToneGenerator.h	/^        TONE_CDMA_REORDER,$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_SIGNAL_OFF	include/media/ToneGenerator.h	/^        TONE_CDMA_SIGNAL_OFF,$/;"	e	enum:android::ToneGenerator::tone_type
TONE_CDMA_SOFT_ERROR_LITE	include/media/ToneGenerator.h	/^        TONE_CDMA_SOFT_ERROR_LITE,$/;"	e	enum:android::ToneGenerator::tone_type
TONE_DTMF_0	include/media/ToneGenerator.h	/^        TONE_DTMF_0 = 0,  \/\/ 0 key: 1336Hz, 941Hz$/;"	e	enum:android::ToneGenerator::tone_type
TONE_DTMF_1	include/media/ToneGenerator.h	/^        TONE_DTMF_1,  \/\/ 1 key: 1209Hz, 697Hz$/;"	e	enum:android::ToneGenerator::tone_type
TONE_DTMF_2	include/media/ToneGenerator.h	/^        TONE_DTMF_2,  \/\/ 2 key: 1336Hz, 697Hz$/;"	e	enum:android::ToneGenerator::tone_type
TONE_DTMF_3	include/media/ToneGenerator.h	/^        TONE_DTMF_3,  \/\/ 3 key: 1477Hz, 697Hz$/;"	e	enum:android::ToneGenerator::tone_type
TONE_DTMF_4	include/media/ToneGenerator.h	/^        TONE_DTMF_4,  \/\/ 4 key: 1209Hz, 770Hz$/;"	e	enum:android::ToneGenerator::tone_type
TONE_DTMF_5	include/media/ToneGenerator.h	/^        TONE_DTMF_5,  \/\/ 5 key: 1336Hz, 770Hz$/;"	e	enum:android::ToneGenerator::tone_type
TONE_DTMF_6	include/media/ToneGenerator.h	/^        TONE_DTMF_6,  \/\/ 6 key: 1477Hz, 770Hz$/;"	e	enum:android::ToneGenerator::tone_type
TONE_DTMF_7	include/media/ToneGenerator.h	/^        TONE_DTMF_7,  \/\/ 7 key: 1209Hz, 852Hz$/;"	e	enum:android::ToneGenerator::tone_type
TONE_DTMF_8	include/media/ToneGenerator.h	/^        TONE_DTMF_8,  \/\/ 8 key: 1336Hz, 852Hz$/;"	e	enum:android::ToneGenerator::tone_type
TONE_DTMF_9	include/media/ToneGenerator.h	/^        TONE_DTMF_9,  \/\/ 9 key: 1477Hz, 852Hz$/;"	e	enum:android::ToneGenerator::tone_type
TONE_DTMF_A	include/media/ToneGenerator.h	/^        TONE_DTMF_A,  \/\/ A key: 1633Hz, 697Hz$/;"	e	enum:android::ToneGenerator::tone_type
TONE_DTMF_B	include/media/ToneGenerator.h	/^        TONE_DTMF_B,  \/\/ B key: 1633Hz, 770Hz$/;"	e	enum:android::ToneGenerator::tone_type
TONE_DTMF_C	include/media/ToneGenerator.h	/^        TONE_DTMF_C,  \/\/ C key: 1633Hz, 852Hz$/;"	e	enum:android::ToneGenerator::tone_type
TONE_DTMF_D	include/media/ToneGenerator.h	/^        TONE_DTMF_D,  \/\/ D key: 1633Hz, 941Hz$/;"	e	enum:android::ToneGenerator::tone_type
TONE_DTMF_P	include/media/ToneGenerator.h	/^        TONE_DTMF_P,  \/\/ # key: 1477Hz, 941Hz$/;"	e	enum:android::ToneGenerator::tone_type
TONE_DTMF_S	include/media/ToneGenerator.h	/^        TONE_DTMF_S,  \/\/ * key: 1209Hz, 941Hz$/;"	e	enum:android::ToneGenerator::tone_type
TONE_IDLE	include/media/ToneGenerator.h	/^        TONE_IDLE,  \/\/ ToneGenerator is being initialized or initialization failed$/;"	e	enum:android::ToneGenerator::tone_state
TONE_INIT	include/media/ToneGenerator.h	/^        TONE_INIT,  \/\/ ToneGenerator has been successfully initialized and is not playing$/;"	e	enum:android::ToneGenerator::tone_state
TONE_JAPAN_BUSY	include/media/ToneGenerator.h	/^        TONE_JAPAN_BUSY,            \/\/ Busy tone: 400Hz, 500ms ON, 500ms OFF...$/;"	e	enum:android::ToneGenerator::regional_tone_type
TONE_JAPAN_DIAL	include/media/ToneGenerator.h	/^        TONE_JAPAN_DIAL,            \/\/ Dial tone: 400Hz, continuous$/;"	e	enum:android::ToneGenerator::regional_tone_type
TONE_JAPAN_RADIO_ACK	include/media/ToneGenerator.h	/^        TONE_JAPAN_RADIO_ACK,       \/\/ Radio path acknowlegment: 400Hz, 1s ON, 2s OFF...$/;"	e	enum:android::ToneGenerator::regional_tone_type
TONE_PLAYING	include/media/ToneGenerator.h	/^        TONE_PLAYING,  \/\/ ToneGenerator is playing$/;"	e	enum:android::ToneGenerator::tone_state
TONE_PROP_ACK	include/media/ToneGenerator.h	/^        TONE_PROP_ACK,  \/\/ Positive Acknowlgement: 1200Hz, 100ms ON, 100ms OFF 2 bursts$/;"	e	enum:android::ToneGenerator::tone_type
TONE_PROP_BEEP	include/media/ToneGenerator.h	/^        TONE_PROP_BEEP,  \/\/ General beep: 400Hz+1200Hz, 35ms ON$/;"	e	enum:android::ToneGenerator::tone_type
TONE_PROP_BEEP2	include/media/ToneGenerator.h	/^        TONE_PROP_BEEP2,  \/\/ General double beep: 400Hz+1200Hz, 35ms ON, 200ms OFF, 35ms on$/;"	e	enum:android::ToneGenerator::tone_type
TONE_PROP_NACK	include/media/ToneGenerator.h	/^        TONE_PROP_NACK,  \/\/ Negative Acknowlgement: 300Hz+400Hz+500Hz, 400ms ON$/;"	e	enum:android::ToneGenerator::tone_type
TONE_PROP_PROMPT	include/media/ToneGenerator.h	/^        TONE_PROP_PROMPT,  \/\/ Prompt tone: 400Hz+1200Hz, 200ms ON$/;"	e	enum:android::ToneGenerator::tone_type
TONE_RESTARTING	include/media/ToneGenerator.h	/^        TONE_RESTARTING  \/\/ A start request was received in active state (playing or stopping)$/;"	e	enum:android::ToneGenerator::tone_state
TONE_STARTING	include/media/ToneGenerator.h	/^        TONE_STARTING,  \/\/ ToneGenerator is starting playing$/;"	e	enum:android::ToneGenerator::tone_state
TONE_STOPPED	include/media/ToneGenerator.h	/^        TONE_STOPPED,  \/\/ ToneGenerator is stopped: the AudioTrack will be stopped$/;"	e	enum:android::ToneGenerator::tone_state
TONE_STOPPING	include/media/ToneGenerator.h	/^        TONE_STOPPING,  \/\/ ToneGenerator is stoping$/;"	e	enum:android::ToneGenerator::tone_state
TONE_SUP_BUSY	include/media/ToneGenerator.h	/^        TONE_SUP_BUSY,  \/\/ Busy tone, CEPT: 425Hz, 500ms ON, 500ms OFF...$/;"	e	enum:android::ToneGenerator::tone_type
TONE_SUP_CALL_WAITING	include/media/ToneGenerator.h	/^        TONE_SUP_CALL_WAITING,  \/\/ Call Waiting CEPT,JAPAN:  425Hz, 200ms ON, 600ms OFF, 200ms ON, 3s OFF...$/;"	e	enum:android::ToneGenerator::tone_type
TONE_SUP_CONFIRM	include/media/ToneGenerator.h	/^        TONE_SUP_CONFIRM, \/\/ Confirm tone: a 350 Hz tone added to a 440 Hz tone repeated 3 times in a 100 ms on, 100 ms off cycle.$/;"	e	enum:android::ToneGenerator::tone_type
TONE_SUP_CONGESTION	include/media/ToneGenerator.h	/^        TONE_SUP_CONGESTION,  \/\/ Congestion tone CEPT, JAPAN: 425Hz, 200ms ON, 200ms OFF...$/;"	e	enum:android::ToneGenerator::tone_type
TONE_SUP_CONGESTION_ABBREV	include/media/ToneGenerator.h	/^        TONE_SUP_CONGESTION_ABBREV, \/\/ Abbreviated congestion: congestion tone limited to 4 seconds$/;"	e	enum:android::ToneGenerator::tone_type
TONE_SUP_DIAL	include/media/ToneGenerator.h	/^        TONE_SUP_DIAL,  \/\/ Dial tone: CEPT: 425Hz, continuous$/;"	e	enum:android::ToneGenerator::tone_type
TONE_SUP_ERROR	include/media/ToneGenerator.h	/^        TONE_SUP_ERROR,  \/\/ Error\/Special info:  950Hz+1400Hz+1800Hz, 330ms ON, 1s OFF...$/;"	e	enum:android::ToneGenerator::tone_type
TONE_SUP_INTERCEPT	include/media/ToneGenerator.h	/^        TONE_SUP_INTERCEPT, \/\/ Intercept tone: alternating 440 Hz and 620 Hz tones, each on for 250 ms.$/;"	e	enum:android::ToneGenerator::tone_type
TONE_SUP_INTERCEPT_ABBREV	include/media/ToneGenerator.h	/^        TONE_SUP_INTERCEPT_ABBREV, \/\/ Abbreviated intercept: intercept tone limited to 4 seconds$/;"	e	enum:android::ToneGenerator::tone_type
TONE_SUP_PIP	include/media/ToneGenerator.h	/^        TONE_SUP_PIP, \/\/ Pip tone: four bursts of 480 Hz tone (0.1 s on, 0.1 s off).$/;"	e	enum:android::ToneGenerator::tone_type
TONE_SUP_RADIO_ACK	include/media/ToneGenerator.h	/^        TONE_SUP_RADIO_ACK,  \/\/ Radio path acknowlegment, CEPT, ANSI: 425Hz, 200ms ON$/;"	e	enum:android::ToneGenerator::tone_type
TONE_SUP_RADIO_NOTAVAIL	include/media/ToneGenerator.h	/^        TONE_SUP_RADIO_NOTAVAIL,  \/\/ Radio path not available: 425Hz, 200ms ON, 200 OFF 3 bursts$/;"	e	enum:android::ToneGenerator::tone_type
TONE_SUP_RINGTONE	include/media/ToneGenerator.h	/^        TONE_SUP_RINGTONE,  \/\/ Ring Tone CEPT, JAPAN:  425Hz, 1s ON, 4s OFF...$/;"	e	enum:android::ToneGenerator::tone_type
ToneDescriptor	include/media/ToneGenerator.h	/^    class ToneDescriptor {$/;"	c	class:android::ToneGenerator
ToneGenerator	include/media/ToneGenerator.h	/^class ToneGenerator {$/;"	c	namespace:android
ToneSegment	include/media/ToneGenerator.h	/^    class ToneSegment {$/;"	c	class:android::ToneGenerator
WAVEGEN_CONT	include/media/ToneGenerator.h	/^            WAVEGEN_CONT,  \/\/ Continue wave from current phase$/;"	e	enum:android::ToneGenerator::WaveGenerator::gen_command
WAVEGEN_START	include/media/ToneGenerator.h	/^            WAVEGEN_START,  \/\/ Start\/restart wave from phase 0$/;"	e	enum:android::ToneGenerator::WaveGenerator::gen_command
WAVEGEN_STOP	include/media/ToneGenerator.h	/^            WAVEGEN_STOP  \/\/ Stop wave on zero crossing$/;"	e	enum:android::ToneGenerator::WaveGenerator::gen_command
WaveGenerator	include/media/ToneGenerator.h	/^    class WaveGenerator {$/;"	c	class:android::ToneGenerator
android	include/media/ToneGenerator.h	/^namespace android {$/;"	n
duration	include/media/ToneGenerator.h	/^        unsigned int duration;$/;"	m	class:android::ToneGenerator::ToneSegment
gen_command	include/media/ToneGenerator.h	/^        enum gen_command {$/;"	g	class:android::ToneGenerator::WaveGenerator
isInited	include/media/ToneGenerator.h	/^    bool isInited() { return (mState == TONE_IDLE)?false:true;}$/;"	f	class:android::ToneGenerator
loopCnt	include/media/ToneGenerator.h	/^        unsigned short loopCnt;$/;"	m	class:android::ToneGenerator::ToneSegment
loopIndx	include/media/ToneGenerator.h	/^        unsigned short loopIndx;$/;"	m	class:android::ToneGenerator::ToneSegment
mA1_Q14	include/media/ToneGenerator.h	/^        short mA1_Q14;  \/\/ Q14 coefficient$/;"	m	class:android::ToneGenerator::WaveGenerator
mAmplitude_Q15	include/media/ToneGenerator.h	/^        short mAmplitude_Q15;  \/\/ Q15 amplitude$/;"	m	class:android::ToneGenerator::WaveGenerator
mCbkCondLock	include/media/ToneGenerator.h	/^    Mutex mCbkCondLock; \/\/ Mutex associated to mWaitCbkCond$/;"	m	class:android::ToneGenerator
mCurCount	include/media/ToneGenerator.h	/^    unsigned short mCurCount;  \/\/ Current sequence repeat count$/;"	m	class:android::ToneGenerator
mCurSegment	include/media/ToneGenerator.h	/^    unsigned short mCurSegment;  \/\/ Current segment index in ToneDescriptor segments[]$/;"	m	class:android::ToneGenerator
mDurationMs	include/media/ToneGenerator.h	/^    int mDurationMs;  \/\/ Maximum tone duration in ms$/;"	m	class:android::ToneGenerator
mLock	include/media/ToneGenerator.h	/^    Mutex mLock;  \/\/ Mutex to control concurent access to ToneGenerator object from audio callback and application API$/;"	m	class:android::ToneGenerator
mLoopCounter	include/media/ToneGenerator.h	/^    unsigned short mLoopCounter; \/\/ Current tone loopback count$/;"	m	class:android::ToneGenerator
mMaxSmp	include/media/ToneGenerator.h	/^    unsigned int mMaxSmp;  \/\/ Maximum number of audio samples played (maximun tone duration)$/;"	m	class:android::ToneGenerator
mNextSegSmp	include/media/ToneGenerator.h	/^    unsigned int mNextSegSmp;  \/\/ Position of next segment transition expressed in samples$/;"	m	class:android::ToneGenerator
mProcessSize	include/media/ToneGenerator.h	/^    unsigned int mProcessSize;  \/\/ Size of audio blocks generated at a time by audioCallback() (in PCM frames).$/;"	m	class:android::ToneGenerator
mRegion	include/media/ToneGenerator.h	/^    unsigned short mRegion;$/;"	m	class:android::ToneGenerator
mS1	include/media/ToneGenerator.h	/^        short mS1, mS2;  \/\/ delay line S2 oldest$/;"	m	class:android::ToneGenerator::WaveGenerator
mS2	include/media/ToneGenerator.h	/^        short mS1, mS2;  \/\/ delay line S2 oldest$/;"	m	class:android::ToneGenerator::WaveGenerator
mS2_0	include/media/ToneGenerator.h	/^        short mS2_0;  \/\/ saved value for reinitialisation$/;"	m	class:android::ToneGenerator::WaveGenerator
mSamplingRate	include/media/ToneGenerator.h	/^    int mSamplingRate;  \/\/ AudioFlinger Sampling rate$/;"	m	class:android::ToneGenerator
mState	include/media/ToneGenerator.h	/^    volatile unsigned short mState;  \/\/ ToneGenerator state (tone_state)$/;"	m	class:android::ToneGenerator
mStreamType	include/media/ToneGenerator.h	/^    int mStreamType; \/\/ Audio stream used for output$/;"	m	class:android::ToneGenerator
mThreadCanCallJava	include/media/ToneGenerator.h	/^    bool mThreadCanCallJava;$/;"	m	class:android::ToneGenerator
mTotalSmp	include/media/ToneGenerator.h	/^    unsigned int mTotalSmp;  \/\/ Total number of audio samples played (gives current time)$/;"	m	class:android::ToneGenerator
mVolume	include/media/ToneGenerator.h	/^    float mVolume;  \/\/ Volume applied to audio track$/;"	m	class:android::ToneGenerator
mWaitCbkCond	include/media/ToneGenerator.h	/^    Condition mWaitCbkCond; \/\/ condition enabling interface to wait for audio callback completion after a change is requested$/;"	m	class:android::ToneGenerator
mWaveGens	include/media/ToneGenerator.h	/^    KeyedVector<unsigned short, WaveGenerator *> mWaveGens;  \/\/ list of active wave generators.$/;"	m	class:android::ToneGenerator
mpAudioTrack	include/media/ToneGenerator.h	/^    AudioTrack *mpAudioTrack;  \/\/ Pointer to audio track used for playback$/;"	m	class:android::ToneGenerator
mpNewToneDesc	include/media/ToneGenerator.h	/^    const ToneDescriptor *mpNewToneDesc;  \/\/ pointer to next active tone descriptor$/;"	m	class:android::ToneGenerator
mpToneDesc	include/media/ToneGenerator.h	/^    const ToneDescriptor *mpToneDesc;  \/\/ pointer to active tone descriptor$/;"	m	class:android::ToneGenerator
region	include/media/ToneGenerator.h	/^    enum region {$/;"	g	class:android::ToneGenerator
regional_tone_type	include/media/ToneGenerator.h	/^    enum regional_tone_type {$/;"	g	class:android::ToneGenerator
repeatCnt	include/media/ToneGenerator.h	/^        unsigned long repeatCnt;$/;"	m	class:android::ToneGenerator::ToneDescriptor
repeatSegment	include/media/ToneGenerator.h	/^        unsigned long repeatSegment;$/;"	m	class:android::ToneGenerator::ToneDescriptor
sToneDescriptors	include/media/ToneGenerator.h	/^    static const ToneDescriptor sToneDescriptors[];$/;"	m	class:android::ToneGenerator
sToneMappingTable	include/media/ToneGenerator.h	/^    static const unsigned char sToneMappingTable[NUM_REGIONS-1][NUM_SUP_TONES];$/;"	m	class:android::ToneGenerator
segments	include/media/ToneGenerator.h	/^        ToneSegment segments[TONEGEN_MAX_SEGMENTS+1];$/;"	m	class:android::ToneGenerator::ToneDescriptor
tone_state	include/media/ToneGenerator.h	/^    enum tone_state {$/;"	g	class:android::ToneGenerator
tone_type	include/media/ToneGenerator.h	/^    enum tone_type {$/;"	g	class:android::ToneGenerator
waveFreq	include/media/ToneGenerator.h	/^        unsigned short waveFreq[TONEGEN_MAX_WAVES+1];$/;"	m	class:android::ToneGenerator::ToneSegment
ANDROID_MEDIA_VISUALIZER_H	include/media/Visualizer.h	18;"	d
CAPTURE_CALL_JAVA	include/media/Visualizer.h	/^        CAPTURE_CALL_JAVA = 0x00000004  \/\/ the callback thread can call java$/;"	e	enum:android::Visualizer::callback_flags
CAPTURE_FFT	include/media/Visualizer.h	/^        CAPTURE_FFT = 0x00000002,       \/\/ apture callback returns a frequency representation$/;"	e	enum:android::Visualizer::callback_flags
CAPTURE_RATE_DEF	include/media/Visualizer.h	/^    static const uint32_t CAPTURE_RATE_DEF = 10000;$/;"	m	class:android::Visualizer
CAPTURE_RATE_MAX	include/media/Visualizer.h	/^    static const uint32_t CAPTURE_RATE_MAX = 20000;$/;"	m	class:android::Visualizer
CAPTURE_SIZE_DEF	include/media/Visualizer.h	/^    static const uint32_t CAPTURE_SIZE_DEF = VISUALIZER_CAPTURE_SIZE_MAX;$/;"	m	class:android::Visualizer
CAPTURE_WAVEFORM	include/media/Visualizer.h	/^        CAPTURE_WAVEFORM = 0x00000001,  \/\/ capture callback returns a PCM wave form$/;"	e	enum:android::Visualizer::callback_flags
CaptureThread	include/media/Visualizer.h	/^    class CaptureThread : public Thread$/;"	c	class:android::Visualizer
Visualizer	include/media/Visualizer.h	/^class Visualizer: public AudioEffect {$/;"	c	namespace:android
android	include/media/Visualizer.h	/^namespace android {$/;"	n
callback_flags	include/media/Visualizer.h	/^    enum callback_flags {$/;"	g	class:android::Visualizer
capture_cbk_t	include/media/Visualizer.h	/^    typedef void (*capture_cbk_t)(void* user,$/;"	t	class:android::Visualizer
getCaptureRate	include/media/Visualizer.h	/^    uint32_t getCaptureRate() { return mCaptureRate; }$/;"	f	class:android::Visualizer
getCaptureSize	include/media/Visualizer.h	/^    uint32_t getCaptureSize() { return mCaptureSize; }$/;"	f	class:android::Visualizer
getMaxCaptureRate	include/media/Visualizer.h	/^    static uint32_t getMaxCaptureRate() { return CAPTURE_RATE_MAX; }$/;"	f	class:android::Visualizer
getMaxCaptureSize	include/media/Visualizer.h	/^    static uint32_t getMaxCaptureSize() { return VISUALIZER_CAPTURE_SIZE_MAX; }$/;"	f	class:android::Visualizer
getMinCaptureSize	include/media/Visualizer.h	/^    static uint32_t getMinCaptureSize() { return VISUALIZER_CAPTURE_SIZE_MIN; }$/;"	f	class:android::Visualizer
getSamplingRate	include/media/Visualizer.h	/^    uint32_t getSamplingRate() { return mSampleRate; }$/;"	f	class:android::Visualizer
mCaptureCallBack	include/media/Visualizer.h	/^    capture_cbk_t mCaptureCallBack;$/;"	m	class:android::Visualizer
mCaptureCbkUser	include/media/Visualizer.h	/^    void *mCaptureCbkUser;$/;"	m	class:android::Visualizer
mCaptureFlags	include/media/Visualizer.h	/^    uint32_t mCaptureFlags;$/;"	m	class:android::Visualizer
mCaptureRate	include/media/Visualizer.h	/^    uint32_t mCaptureRate;$/;"	m	class:android::Visualizer
mCaptureSize	include/media/Visualizer.h	/^    uint32_t mCaptureSize;$/;"	m	class:android::Visualizer
mCaptureThread	include/media/Visualizer.h	/^    sp<CaptureThread> mCaptureThread;$/;"	m	class:android::Visualizer
mLock	include/media/Visualizer.h	/^        Mutex       mLock;$/;"	m	class:android::Visualizer::CaptureThread
mLock	include/media/Visualizer.h	/^    Mutex mLock;$/;"	m	class:android::Visualizer
mReceiver	include/media/Visualizer.h	/^        Visualizer& mReceiver;$/;"	m	class:android::Visualizer::CaptureThread
mSampleRate	include/media/Visualizer.h	/^    uint32_t mSampleRate;$/;"	m	class:android::Visualizer
mSleepTimeUs	include/media/Visualizer.h	/^        uint32_t mSleepTimeUs;$/;"	m	class:android::Visualizer::CaptureThread
DeathNotifier	include/media/mediametadataretriever.h	/^        DeathNotifier() {}$/;"	f	class:android::MediaMetadataRetriever::DeathNotifier
DeathNotifier	include/media/mediametadataretriever.h	/^    class DeathNotifier: public IBinder::DeathRecipient$/;"	c	class:android::MediaMetadataRetriever
MEDIAMETADATARETRIEVER_H	include/media/mediametadataretriever.h	19;"	d
METADATA_KEY_ALBUM	include/media/mediametadataretriever.h	/^    METADATA_KEY_ALBUM           = 1,$/;"	e	enum:android::__anon127
METADATA_KEY_ALBUMARTIST	include/media/mediametadataretriever.h	/^    METADATA_KEY_ALBUMARTIST     = 13,$/;"	e	enum:android::__anon127
METADATA_KEY_ARTIST	include/media/mediametadataretriever.h	/^    METADATA_KEY_ARTIST          = 2,$/;"	e	enum:android::__anon127
METADATA_KEY_AUTHOR	include/media/mediametadataretriever.h	/^    METADATA_KEY_AUTHOR          = 3,$/;"	e	enum:android::__anon127
METADATA_KEY_CD_TRACK_NUMBER	include/media/mediametadataretriever.h	/^    METADATA_KEY_CD_TRACK_NUMBER = 0,$/;"	e	enum:android::__anon127
METADATA_KEY_COMPILATION	include/media/mediametadataretriever.h	/^    METADATA_KEY_COMPILATION     = 15,$/;"	e	enum:android::__anon127
METADATA_KEY_COMPOSER	include/media/mediametadataretriever.h	/^    METADATA_KEY_COMPOSER        = 4,$/;"	e	enum:android::__anon127
METADATA_KEY_DATE	include/media/mediametadataretriever.h	/^    METADATA_KEY_DATE            = 5,$/;"	e	enum:android::__anon127
METADATA_KEY_DISC_NUMBER	include/media/mediametadataretriever.h	/^    METADATA_KEY_DISC_NUMBER     = 14,$/;"	e	enum:android::__anon127
METADATA_KEY_DURATION	include/media/mediametadataretriever.h	/^    METADATA_KEY_DURATION        = 9,$/;"	e	enum:android::__anon127
METADATA_KEY_GENRE	include/media/mediametadataretriever.h	/^    METADATA_KEY_GENRE           = 6,$/;"	e	enum:android::__anon127
METADATA_KEY_MIMETYPE	include/media/mediametadataretriever.h	/^    METADATA_KEY_MIMETYPE        = 12,$/;"	e	enum:android::__anon127
METADATA_KEY_NUM_TRACKS	include/media/mediametadataretriever.h	/^    METADATA_KEY_NUM_TRACKS      = 10,$/;"	e	enum:android::__anon127
METADATA_KEY_TITLE	include/media/mediametadataretriever.h	/^    METADATA_KEY_TITLE           = 7,$/;"	e	enum:android::__anon127
METADATA_KEY_WRITER	include/media/mediametadataretriever.h	/^    METADATA_KEY_WRITER          = 11,$/;"	e	enum:android::__anon127
METADATA_KEY_YEAR	include/media/mediametadataretriever.h	/^    METADATA_KEY_YEAR            = 8,$/;"	e	enum:android::__anon127
MediaMetadataRetriever	include/media/mediametadataretriever.h	/^class MediaMetadataRetriever: public RefBase$/;"	c	namespace:android
android	include/media/mediametadataretriever.h	/^namespace android {$/;"	n
mLock	include/media/mediametadataretriever.h	/^    Mutex                                     mLock;$/;"	m	class:android::MediaMetadataRetriever
mRetriever	include/media/mediametadataretriever.h	/^    sp<IMediaMetadataRetriever>               mRetriever;$/;"	m	class:android::MediaMetadataRetriever
sDeathNotifier	include/media/mediametadataretriever.h	/^    static sp<DeathNotifier>                  sDeathNotifier;$/;"	m	class:android::MediaMetadataRetriever
sService	include/media/mediametadataretriever.h	/^    static sp<IMediaPlayerService>            sService;$/;"	m	class:android::MediaMetadataRetriever
sServiceLock	include/media/mediametadataretriever.h	/^    static Mutex                              sServiceLock;$/;"	m	class:android::MediaMetadataRetriever
ANDROID_MEDIAPLAYER_H	include/media/mediaplayer.h	18;"	d
MEDIA_BUFFERING_UPDATE	include/media/mediaplayer.h	/^    MEDIA_BUFFERING_UPDATE  = 3,$/;"	e	enum:android::media_event_type
MEDIA_ERROR	include/media/mediaplayer.h	/^    MEDIA_ERROR             = 100,$/;"	e	enum:android::media_event_type
MEDIA_ERROR_NOT_VALID_FOR_PROGRESSIVE_PLAYBACK	include/media/mediaplayer.h	/^    MEDIA_ERROR_NOT_VALID_FOR_PROGRESSIVE_PLAYBACK = 200,$/;"	e	enum:android::media_error_type
MEDIA_ERROR_SERVER_DIED	include/media/mediaplayer.h	/^    MEDIA_ERROR_SERVER_DIED = 100,$/;"	e	enum:android::media_error_type
MEDIA_ERROR_UNKNOWN	include/media/mediaplayer.h	/^    MEDIA_ERROR_UNKNOWN = 1,$/;"	e	enum:android::media_error_type
MEDIA_INFO	include/media/mediaplayer.h	/^    MEDIA_INFO              = 200,$/;"	e	enum:android::media_event_type
MEDIA_INFO_BAD_INTERLEAVING	include/media/mediaplayer.h	/^    MEDIA_INFO_BAD_INTERLEAVING = 800,$/;"	e	enum:android::media_info_type
MEDIA_INFO_BUFFERING_END	include/media/mediaplayer.h	/^    MEDIA_INFO_BUFFERING_END = 702,$/;"	e	enum:android::media_info_type
MEDIA_INFO_BUFFERING_START	include/media/mediaplayer.h	/^    MEDIA_INFO_BUFFERING_START = 701,$/;"	e	enum:android::media_info_type
MEDIA_INFO_METADATA_UPDATE	include/media/mediaplayer.h	/^    MEDIA_INFO_METADATA_UPDATE = 802,$/;"	e	enum:android::media_info_type
MEDIA_INFO_NOT_SEEKABLE	include/media/mediaplayer.h	/^    MEDIA_INFO_NOT_SEEKABLE = 801,$/;"	e	enum:android::media_info_type
MEDIA_INFO_UNKNOWN	include/media/mediaplayer.h	/^    MEDIA_INFO_UNKNOWN = 1,$/;"	e	enum:android::media_info_type
MEDIA_INFO_VIDEO_TRACK_LAGGING	include/media/mediaplayer.h	/^    MEDIA_INFO_VIDEO_TRACK_LAGGING = 700,$/;"	e	enum:android::media_info_type
MEDIA_NOP	include/media/mediaplayer.h	/^    MEDIA_NOP               = 0, \/\/ interface test message$/;"	e	enum:android::media_event_type
MEDIA_PLAYBACK_COMPLETE	include/media/mediaplayer.h	/^    MEDIA_PLAYBACK_COMPLETE = 2,$/;"	e	enum:android::media_event_type
MEDIA_PLAYER_IDLE	include/media/mediaplayer.h	/^    MEDIA_PLAYER_IDLE               = 1 << 0,$/;"	e	enum:android::media_player_states
MEDIA_PLAYER_INITIALIZED	include/media/mediaplayer.h	/^    MEDIA_PLAYER_INITIALIZED        = 1 << 1,$/;"	e	enum:android::media_player_states
MEDIA_PLAYER_PAUSED	include/media/mediaplayer.h	/^    MEDIA_PLAYER_PAUSED             = 1 << 5,$/;"	e	enum:android::media_player_states
MEDIA_PLAYER_PLAYBACK_COMPLETE	include/media/mediaplayer.h	/^    MEDIA_PLAYER_PLAYBACK_COMPLETE  = 1 << 7$/;"	e	enum:android::media_player_states
MEDIA_PLAYER_PREPARED	include/media/mediaplayer.h	/^    MEDIA_PLAYER_PREPARED           = 1 << 3,$/;"	e	enum:android::media_player_states
MEDIA_PLAYER_PREPARING	include/media/mediaplayer.h	/^    MEDIA_PLAYER_PREPARING          = 1 << 2,$/;"	e	enum:android::media_player_states
MEDIA_PLAYER_STARTED	include/media/mediaplayer.h	/^    MEDIA_PLAYER_STARTED            = 1 << 4,$/;"	e	enum:android::media_player_states
MEDIA_PLAYER_STATE_ERROR	include/media/mediaplayer.h	/^    MEDIA_PLAYER_STATE_ERROR        = 0,$/;"	e	enum:android::media_player_states
MEDIA_PLAYER_STOPPED	include/media/mediaplayer.h	/^    MEDIA_PLAYER_STOPPED            = 1 << 6,$/;"	e	enum:android::media_player_states
MEDIA_PREPARED	include/media/mediaplayer.h	/^    MEDIA_PREPARED          = 1,$/;"	e	enum:android::media_event_type
MEDIA_SEEK_COMPLETE	include/media/mediaplayer.h	/^    MEDIA_SEEK_COMPLETE     = 4,$/;"	e	enum:android::media_event_type
MEDIA_SET_VIDEO_SIZE	include/media/mediaplayer.h	/^    MEDIA_SET_VIDEO_SIZE    = 5,$/;"	e	enum:android::media_event_type
MediaPlayer	include/media/mediaplayer.h	/^class MediaPlayer : public BnMediaPlayerClient,$/;"	c	namespace:android
MediaPlayerListener	include/media/mediaplayer.h	/^class MediaPlayerListener: virtual public RefBase$/;"	c	namespace:android
android	include/media/mediaplayer.h	/^namespace android {$/;"	n
mAudioSessionId	include/media/mediaplayer.h	/^    int                         mAudioSessionId;$/;"	m	class:android::MediaPlayer
mCookie	include/media/mediaplayer.h	/^    void*                       mCookie;$/;"	m	class:android::MediaPlayer
mCurrentPosition	include/media/mediaplayer.h	/^    int                         mCurrentPosition;$/;"	m	class:android::MediaPlayer
mCurrentState	include/media/mediaplayer.h	/^    media_player_states         mCurrentState;$/;"	m	class:android::MediaPlayer
mDuration	include/media/mediaplayer.h	/^    int                         mDuration;$/;"	m	class:android::MediaPlayer
mLeftVolume	include/media/mediaplayer.h	/^    float                       mLeftVolume;$/;"	m	class:android::MediaPlayer
mListener	include/media/mediaplayer.h	/^    sp<MediaPlayerListener>     mListener;$/;"	m	class:android::MediaPlayer
mLock	include/media/mediaplayer.h	/^    Mutex                       mLock;$/;"	m	class:android::MediaPlayer
mLockThreadId	include/media/mediaplayer.h	/^    thread_id_t                 mLockThreadId;$/;"	m	class:android::MediaPlayer
mLoop	include/media/mediaplayer.h	/^    bool                        mLoop;$/;"	m	class:android::MediaPlayer
mNotifyLock	include/media/mediaplayer.h	/^    Mutex                       mNotifyLock;$/;"	m	class:android::MediaPlayer
mPlayer	include/media/mediaplayer.h	/^    sp<IMediaPlayer>            mPlayer;$/;"	m	class:android::MediaPlayer
mPrepareStatus	include/media/mediaplayer.h	/^    status_t                    mPrepareStatus;$/;"	m	class:android::MediaPlayer
mPrepareSync	include/media/mediaplayer.h	/^    bool                        mPrepareSync;$/;"	m	class:android::MediaPlayer
mRightVolume	include/media/mediaplayer.h	/^    float                       mRightVolume;$/;"	m	class:android::MediaPlayer
mSeekPosition	include/media/mediaplayer.h	/^    int                         mSeekPosition;$/;"	m	class:android::MediaPlayer
mSendLevel	include/media/mediaplayer.h	/^    float                       mSendLevel;$/;"	m	class:android::MediaPlayer
mSignal	include/media/mediaplayer.h	/^    Condition                   mSignal;$/;"	m	class:android::MediaPlayer
mStreamType	include/media/mediaplayer.h	/^    int                         mStreamType;$/;"	m	class:android::MediaPlayer
mVideoHeight	include/media/mediaplayer.h	/^    int                         mVideoHeight;$/;"	m	class:android::MediaPlayer
mVideoWidth	include/media/mediaplayer.h	/^    int                         mVideoWidth;$/;"	m	class:android::MediaPlayer
media_error_type	include/media/mediaplayer.h	/^enum media_error_type {$/;"	g	namespace:android
media_event_type	include/media/mediaplayer.h	/^enum media_event_type {$/;"	g	namespace:android
media_info_type	include/media/mediaplayer.h	/^enum media_info_type {$/;"	g	namespace:android
media_player_states	include/media/mediaplayer.h	/^enum media_player_states {$/;"	g	namespace:android
ANDROID_MEDIARECORDER_H	include/media/mediarecorder.h	19;"	d
AUDIO_ENCODER_AAC	include/media/mediarecorder.h	/^    AUDIO_ENCODER_AAC = 3,$/;"	e	enum:android::audio_encoder
AUDIO_ENCODER_AAC_PLUS	include/media/mediarecorder.h	/^    AUDIO_ENCODER_AAC_PLUS = 4,$/;"	e	enum:android::audio_encoder
AUDIO_ENCODER_AMR_NB	include/media/mediarecorder.h	/^    AUDIO_ENCODER_AMR_NB = 1,$/;"	e	enum:android::audio_encoder
AUDIO_ENCODER_AMR_WB	include/media/mediarecorder.h	/^    AUDIO_ENCODER_AMR_WB = 2,$/;"	e	enum:android::audio_encoder
AUDIO_ENCODER_DEFAULT	include/media/mediarecorder.h	/^    AUDIO_ENCODER_DEFAULT = 0,$/;"	e	enum:android::audio_encoder
AUDIO_ENCODER_EAAC_PLUS	include/media/mediarecorder.h	/^    AUDIO_ENCODER_EAAC_PLUS = 5,$/;"	e	enum:android::audio_encoder
AUDIO_ENCODER_LIST_END	include/media/mediarecorder.h	/^    AUDIO_ENCODER_LIST_END \/\/ must be the last - used to validate the audio encoder type$/;"	e	enum:android::audio_encoder
AUDIO_SOURCE_CAMCORDER	include/media/mediarecorder.h	/^    AUDIO_SOURCE_CAMCORDER = 5,$/;"	e	enum:android::audio_source
AUDIO_SOURCE_DEFAULT	include/media/mediarecorder.h	/^    AUDIO_SOURCE_DEFAULT = 0,$/;"	e	enum:android::audio_source
AUDIO_SOURCE_LIST_END	include/media/mediarecorder.h	/^    AUDIO_SOURCE_LIST_END  \/\/ must be last - used to validate audio source type$/;"	e	enum:android::audio_source
AUDIO_SOURCE_MAX	include/media/mediarecorder.h	/^    AUDIO_SOURCE_MAX = AUDIO_SOURCE_VOICE_COMMUNICATION,$/;"	e	enum:android::audio_source
AUDIO_SOURCE_MIC	include/media/mediarecorder.h	/^    AUDIO_SOURCE_MIC = 1,$/;"	e	enum:android::audio_source
AUDIO_SOURCE_VOICE_CALL	include/media/mediarecorder.h	/^    AUDIO_SOURCE_VOICE_CALL = 4,$/;"	e	enum:android::audio_source
AUDIO_SOURCE_VOICE_COMMUNICATION	include/media/mediarecorder.h	/^    AUDIO_SOURCE_VOICE_COMMUNICATION = 7,$/;"	e	enum:android::audio_source
AUDIO_SOURCE_VOICE_DOWNLINK	include/media/mediarecorder.h	/^    AUDIO_SOURCE_VOICE_DOWNLINK = 3,$/;"	e	enum:android::audio_source
AUDIO_SOURCE_VOICE_RECOGNITION	include/media/mediarecorder.h	/^    AUDIO_SOURCE_VOICE_RECOGNITION = 6,$/;"	e	enum:android::audio_source
AUDIO_SOURCE_VOICE_UPLINK	include/media/mediarecorder.h	/^    AUDIO_SOURCE_VOICE_UPLINK = 2,$/;"	e	enum:android::audio_source
MEDIA_RECORDER_DATASOURCE_CONFIGURED	include/media/mediarecorder.h	/^    MEDIA_RECORDER_DATASOURCE_CONFIGURED = 1 << 2,$/;"	e	enum:android::media_recorder_states
MEDIA_RECORDER_ERROR	include/media/mediarecorder.h	/^    MEDIA_RECORDER_ERROR                 =      0,$/;"	e	enum:android::media_recorder_states
MEDIA_RECORDER_ERROR_UNKNOWN	include/media/mediarecorder.h	/^    MEDIA_RECORDER_ERROR_UNKNOWN                  = 1$/;"	e	enum:android::media_recorder_error_type
MEDIA_RECORDER_EVENT_ERROR	include/media/mediarecorder.h	/^    MEDIA_RECORDER_EVENT_ERROR                    = 1,$/;"	e	enum:android::media_recorder_event_type
MEDIA_RECORDER_EVENT_INFO	include/media/mediarecorder.h	/^    MEDIA_RECORDER_EVENT_INFO                     = 2$/;"	e	enum:android::media_recorder_event_type
MEDIA_RECORDER_IDLE	include/media/mediarecorder.h	/^    MEDIA_RECORDER_IDLE                  = 1 << 0,$/;"	e	enum:android::media_recorder_states
MEDIA_RECORDER_INFO_COMPLETION_STATUS	include/media/mediarecorder.h	/^    MEDIA_RECORDER_INFO_COMPLETION_STATUS         = 802,$/;"	e	enum:android::media_recorder_info_type
MEDIA_RECORDER_INFO_MAX_DURATION_REACHED	include/media/mediarecorder.h	/^    MEDIA_RECORDER_INFO_MAX_DURATION_REACHED      = 800,$/;"	e	enum:android::media_recorder_info_type
MEDIA_RECORDER_INFO_MAX_FILESIZE_REACHED	include/media/mediarecorder.h	/^    MEDIA_RECORDER_INFO_MAX_FILESIZE_REACHED      = 801,$/;"	e	enum:android::media_recorder_info_type
MEDIA_RECORDER_INFO_PROGRESS_FRAME_STATUS	include/media/mediarecorder.h	/^    MEDIA_RECORDER_INFO_PROGRESS_FRAME_STATUS     = 803,$/;"	e	enum:android::media_recorder_info_type
MEDIA_RECORDER_INFO_PROGRESS_TIME_STATUS	include/media/mediarecorder.h	/^    MEDIA_RECORDER_INFO_PROGRESS_TIME_STATUS      = 804,$/;"	e	enum:android::media_recorder_info_type
MEDIA_RECORDER_INFO_UNKNOWN	include/media/mediarecorder.h	/^    MEDIA_RECORDER_INFO_UNKNOWN                   = 1,$/;"	e	enum:android::media_recorder_info_type
MEDIA_RECORDER_INITIALIZED	include/media/mediarecorder.h	/^    MEDIA_RECORDER_INITIALIZED           = 1 << 1,$/;"	e	enum:android::media_recorder_states
MEDIA_RECORDER_PREPARED	include/media/mediarecorder.h	/^    MEDIA_RECORDER_PREPARED              = 1 << 3,$/;"	e	enum:android::media_recorder_states
MEDIA_RECORDER_RECORDING	include/media/mediarecorder.h	/^    MEDIA_RECORDER_RECORDING             = 1 << 4,$/;"	e	enum:android::media_recorder_states
MediaRecorder	include/media/mediarecorder.h	/^class MediaRecorder : public BnMediaRecorderClient,$/;"	c	namespace:android
MediaRecorderListener	include/media/mediarecorder.h	/^class MediaRecorderListener: virtual public RefBase$/;"	c	namespace:android
OUTPUT_FORMAT_AAC_ADIF	include/media/mediarecorder.h	/^    OUTPUT_FORMAT_AAC_ADIF = 5,$/;"	e	enum:android::output_format
OUTPUT_FORMAT_AAC_ADTS	include/media/mediarecorder.h	/^    OUTPUT_FORMAT_AAC_ADTS = 6,$/;"	e	enum:android::output_format
OUTPUT_FORMAT_AMR_NB	include/media/mediarecorder.h	/^    OUTPUT_FORMAT_AMR_NB = 3,$/;"	e	enum:android::output_format
OUTPUT_FORMAT_AMR_WB	include/media/mediarecorder.h	/^    OUTPUT_FORMAT_AMR_WB = 4,$/;"	e	enum:android::output_format
OUTPUT_FORMAT_AUDIO_ONLY_START	include/media/mediarecorder.h	/^    OUTPUT_FORMAT_AUDIO_ONLY_START = 3, \/\/ Used in validating the output format.  Should be the$/;"	e	enum:android::output_format
OUTPUT_FORMAT_DEFAULT	include/media/mediarecorder.h	/^    OUTPUT_FORMAT_DEFAULT = 0,$/;"	e	enum:android::output_format
OUTPUT_FORMAT_LIST_END	include/media/mediarecorder.h	/^    OUTPUT_FORMAT_LIST_END \/\/ must be last - used to validate format type$/;"	e	enum:android::output_format
OUTPUT_FORMAT_MPEG2TS	include/media/mediarecorder.h	/^    OUTPUT_FORMAT_MPEG2TS = 8,$/;"	e	enum:android::output_format
OUTPUT_FORMAT_MPEG_4	include/media/mediarecorder.h	/^    OUTPUT_FORMAT_MPEG_4 = 2,$/;"	e	enum:android::output_format
OUTPUT_FORMAT_RAW_AMR	include/media/mediarecorder.h	/^    OUTPUT_FORMAT_RAW_AMR = 3, \/\/to be backward compatible$/;"	e	enum:android::output_format
OUTPUT_FORMAT_RTP_AVP	include/media/mediarecorder.h	/^    OUTPUT_FORMAT_RTP_AVP = 7,$/;"	e	enum:android::output_format
OUTPUT_FORMAT_THREE_GPP	include/media/mediarecorder.h	/^    OUTPUT_FORMAT_THREE_GPP = 1,$/;"	e	enum:android::output_format
VIDEO_ENCODER_DEFAULT	include/media/mediarecorder.h	/^    VIDEO_ENCODER_DEFAULT = 0,$/;"	e	enum:android::video_encoder
VIDEO_ENCODER_H263	include/media/mediarecorder.h	/^    VIDEO_ENCODER_H263 = 1,$/;"	e	enum:android::video_encoder
VIDEO_ENCODER_H264	include/media/mediarecorder.h	/^    VIDEO_ENCODER_H264 = 2,$/;"	e	enum:android::video_encoder
VIDEO_ENCODER_LIST_END	include/media/mediarecorder.h	/^    VIDEO_ENCODER_LIST_END \/\/ must be the last - used to validate the video encoder type$/;"	e	enum:android::video_encoder
VIDEO_ENCODER_MPEG_4_SP	include/media/mediarecorder.h	/^    VIDEO_ENCODER_MPEG_4_SP = 3,$/;"	e	enum:android::video_encoder
VIDEO_SOURCE_CAMERA	include/media/mediarecorder.h	/^    VIDEO_SOURCE_CAMERA = 1,$/;"	e	enum:android::video_source
VIDEO_SOURCE_DEFAULT	include/media/mediarecorder.h	/^    VIDEO_SOURCE_DEFAULT = 0,$/;"	e	enum:android::video_source
VIDEO_SOURCE_LIST_END	include/media/mediarecorder.h	/^    VIDEO_SOURCE_LIST_END  \/\/ must be last - used to validate audio source type$/;"	e	enum:android::video_source
android	include/media/mediarecorder.h	/^namespace android {$/;"	n
audio_encoder	include/media/mediarecorder.h	/^enum audio_encoder {$/;"	g	namespace:android
audio_source	include/media/mediarecorder.h	/^enum audio_source {$/;"	g	namespace:android
mCurrentState	include/media/mediarecorder.h	/^    media_recorder_states       mCurrentState;$/;"	m	class:android::MediaRecorder
mIsAudioEncoderSet	include/media/mediarecorder.h	/^    bool                        mIsAudioEncoderSet;$/;"	m	class:android::MediaRecorder
mIsAudioSourceSet	include/media/mediarecorder.h	/^    bool                        mIsAudioSourceSet;$/;"	m	class:android::MediaRecorder
mIsOutputFileSet	include/media/mediarecorder.h	/^    bool                        mIsOutputFileSet;$/;"	m	class:android::MediaRecorder
mIsVideoEncoderSet	include/media/mediarecorder.h	/^    bool                        mIsVideoEncoderSet;$/;"	m	class:android::MediaRecorder
mIsVideoSourceSet	include/media/mediarecorder.h	/^    bool                        mIsVideoSourceSet;$/;"	m	class:android::MediaRecorder
mListener	include/media/mediarecorder.h	/^    sp<MediaRecorderListener>   mListener;$/;"	m	class:android::MediaRecorder
mLock	include/media/mediarecorder.h	/^    Mutex                       mLock;$/;"	m	class:android::MediaRecorder
mMediaRecorder	include/media/mediarecorder.h	/^    sp<IMediaRecorder>          mMediaRecorder;$/;"	m	class:android::MediaRecorder
mNotifyLock	include/media/mediarecorder.h	/^    Mutex                       mNotifyLock;$/;"	m	class:android::MediaRecorder
media_completion_f	include/media/mediarecorder.h	/^typedef void (*media_completion_f)(status_t status, void *cookie);$/;"	t	namespace:android
media_recorder_error_type	include/media/mediarecorder.h	/^enum media_recorder_error_type {$/;"	g	namespace:android
media_recorder_event_type	include/media/mediarecorder.h	/^enum media_recorder_event_type {$/;"	g	namespace:android
media_recorder_info_type	include/media/mediarecorder.h	/^enum media_recorder_info_type {$/;"	g	namespace:android
media_recorder_states	include/media/mediarecorder.h	/^enum media_recorder_states {$/;"	g	namespace:android
output_format	include/media/mediarecorder.h	/^enum output_format {$/;"	g	namespace:android
video_encoder	include/media/mediarecorder.h	/^enum video_encoder {$/;"	g	namespace:android
video_source	include/media/mediarecorder.h	/^enum video_source {$/;"	g	namespace:android
ExceptionCheck	include/media/mediascanner.h	/^    typedef bool (*ExceptionCheck)(void* env);$/;"	t	struct:android::MediaScanner
MEDIASCANNER_H	include/media/mediascanner.h	18;"	d
MediaScanner	include/media/mediascanner.h	/^struct MediaScanner {$/;"	s	namespace:android
MediaScannerClient	include/media/mediascanner.h	/^class MediaScannerClient$/;"	c	namespace:android
android	include/media/mediascanner.h	/^namespace android {$/;"	n
mLocale	include/media/mediascanner.h	/^    char *mLocale;$/;"	m	struct:android::MediaScanner
mLocaleEncoding	include/media/mediascanner.h	/^    uint32_t        mLocaleEncoding;$/;"	m	class:android::MediaScannerClient
mNames	include/media/mediascanner.h	/^    StringArray*    mNames;$/;"	m	class:android::MediaScannerClient
mValues	include/media/mediascanner.h	/^    StringArray*    mValues;$/;"	m	class:android::MediaScannerClient
AMRWriter	include/media/stagefright/AMRWriter.h	/^struct AMRWriter : public MediaWriter {$/;"	s	namespace:android
AMR_WRITER_H_	include/media/stagefright/AMRWriter.h	19;"	d
android	include/media/stagefright/AMRWriter.h	/^namespace android {$/;"	n
mDone	include/media/stagefright/AMRWriter.h	/^    volatile bool mDone;$/;"	m	struct:android::AMRWriter
mEstimatedDurationUs	include/media/stagefright/AMRWriter.h	/^    int64_t mEstimatedDurationUs;$/;"	m	struct:android::AMRWriter
mEstimatedSizeBytes	include/media/stagefright/AMRWriter.h	/^    int64_t mEstimatedSizeBytes;$/;"	m	struct:android::AMRWriter
mFile	include/media/stagefright/AMRWriter.h	/^    FILE *mFile;$/;"	m	struct:android::AMRWriter
mInitCheck	include/media/stagefright/AMRWriter.h	/^    status_t mInitCheck;$/;"	m	struct:android::AMRWriter
mPaused	include/media/stagefright/AMRWriter.h	/^    volatile bool mPaused;$/;"	m	struct:android::AMRWriter
mReachedEOS	include/media/stagefright/AMRWriter.h	/^    volatile bool mReachedEOS;$/;"	m	struct:android::AMRWriter
mResumed	include/media/stagefright/AMRWriter.h	/^    volatile bool mResumed;$/;"	m	struct:android::AMRWriter
mSource	include/media/stagefright/AMRWriter.h	/^    sp<MediaSource> mSource;$/;"	m	struct:android::AMRWriter
mStarted	include/media/stagefright/AMRWriter.h	/^    bool mStarted;$/;"	m	struct:android::AMRWriter
mThread	include/media/stagefright/AMRWriter.h	/^    pthread_t mThread;$/;"	m	struct:android::AMRWriter
AUDIO_PLAYER_H_	include/media/stagefright/AudioPlayer.h	19;"	d
AudioPlayer	include/media/stagefright/AudioPlayer.h	/^class AudioPlayer : public TimeSource {$/;"	c	namespace:android
REACHED_EOS	include/media/stagefright/AudioPlayer.h	/^        REACHED_EOS,$/;"	e	enum:android::AudioPlayer::__anon151
SEEK_COMPLETE	include/media/stagefright/AudioPlayer.h	/^        SEEK_COMPLETE$/;"	e	enum:android::AudioPlayer::__anon151
android	include/media/stagefright/AudioPlayer.h	/^namespace android {$/;"	n
mAudioSink	include/media/stagefright/AudioPlayer.h	/^    sp<MediaPlayerBase::AudioSink> mAudioSink;$/;"	m	class:android::AudioPlayer
mAudioTrack	include/media/stagefright/AudioPlayer.h	/^    AudioTrack *mAudioTrack;$/;"	m	class:android::AudioPlayer
mFinalStatus	include/media/stagefright/AudioPlayer.h	/^    status_t mFinalStatus;$/;"	m	class:android::AudioPlayer
mFirstBuffer	include/media/stagefright/AudioPlayer.h	/^    MediaBuffer *mFirstBuffer;$/;"	m	class:android::AudioPlayer
mFirstBufferResult	include/media/stagefright/AudioPlayer.h	/^    status_t mFirstBufferResult;$/;"	m	class:android::AudioPlayer
mFrameSize	include/media/stagefright/AudioPlayer.h	/^    size_t mFrameSize;$/;"	m	class:android::AudioPlayer
mInputBuffer	include/media/stagefright/AudioPlayer.h	/^    MediaBuffer *mInputBuffer;$/;"	m	class:android::AudioPlayer
mIsFirstBuffer	include/media/stagefright/AudioPlayer.h	/^    bool mIsFirstBuffer;$/;"	m	class:android::AudioPlayer
mLatencyUs	include/media/stagefright/AudioPlayer.h	/^    int64_t mLatencyUs;$/;"	m	class:android::AudioPlayer
mLock	include/media/stagefright/AudioPlayer.h	/^    Mutex mLock;$/;"	m	class:android::AudioPlayer
mNumFramesPlayed	include/media/stagefright/AudioPlayer.h	/^    int64_t mNumFramesPlayed;$/;"	m	class:android::AudioPlayer
mObserver	include/media/stagefright/AudioPlayer.h	/^    AwesomePlayer *mObserver;$/;"	m	class:android::AudioPlayer
mPositionTimeMediaUs	include/media/stagefright/AudioPlayer.h	/^    int64_t mPositionTimeMediaUs;$/;"	m	class:android::AudioPlayer
mPositionTimeRealUs	include/media/stagefright/AudioPlayer.h	/^    int64_t mPositionTimeRealUs;$/;"	m	class:android::AudioPlayer
mReachedEOS	include/media/stagefright/AudioPlayer.h	/^    bool mReachedEOS;$/;"	m	class:android::AudioPlayer
mSampleRate	include/media/stagefright/AudioPlayer.h	/^    int mSampleRate;$/;"	m	class:android::AudioPlayer
mSeekTimeUs	include/media/stagefright/AudioPlayer.h	/^    int64_t mSeekTimeUs;$/;"	m	class:android::AudioPlayer
mSeeking	include/media/stagefright/AudioPlayer.h	/^    bool mSeeking;$/;"	m	class:android::AudioPlayer
mSource	include/media/stagefright/AudioPlayer.h	/^    sp<MediaSource> mSource;$/;"	m	class:android::AudioPlayer
mStarted	include/media/stagefright/AudioPlayer.h	/^    bool mStarted;$/;"	m	class:android::AudioPlayer
AUDIO_SOURCE_H_	include/media/stagefright/AudioSource.h	19;"	d
AudioSource	include/media/stagefright/AudioSource.h	/^struct AudioSource : public MediaSource {$/;"	s	namespace:android
android	include/media/stagefright/AudioSource.h	/^namespace android {$/;"	n
kAutoRampDurationUs	include/media/stagefright/AudioSource.h	/^        kAutoRampDurationUs = 700000,$/;"	e	enum:android::AudioSource::__anon150
kAutoRampStartUs	include/media/stagefright/AudioSource.h	/^        kAutoRampStartUs = 1000000,$/;"	e	enum:android::AudioSource::__anon150
kMaxBufferSize	include/media/stagefright/AudioSource.h	/^        kMaxBufferSize = 2048,$/;"	e	enum:android::AudioSource::__anon150
mCollectStats	include/media/stagefright/AudioSource.h	/^    bool mCollectStats;$/;"	m	struct:android::AudioSource
mGroup	include/media/stagefright/AudioSource.h	/^    MediaBufferGroup *mGroup;$/;"	m	struct:android::AudioSource
mInitCheck	include/media/stagefright/AudioSource.h	/^    status_t mInitCheck;$/;"	m	struct:android::AudioSource
mInitialReadTimeUs	include/media/stagefright/AudioSource.h	/^    int64_t mInitialReadTimeUs;$/;"	m	struct:android::AudioSource
mMaxAmplitude	include/media/stagefright/AudioSource.h	/^    int16_t mMaxAmplitude;$/;"	m	struct:android::AudioSource
mPrevLostBytes	include/media/stagefright/AudioSource.h	/^    int64_t mPrevLostBytes;$/;"	m	struct:android::AudioSource
mPrevSampleTimeUs	include/media/stagefright/AudioSource.h	/^    int64_t mPrevSampleTimeUs;$/;"	m	struct:android::AudioSource
mRecord	include/media/stagefright/AudioSource.h	/^    AudioRecord *mRecord;$/;"	m	struct:android::AudioSource
mStartTimeUs	include/media/stagefright/AudioSource.h	/^    int64_t mStartTimeUs;$/;"	m	struct:android::AudioSource
mStarted	include/media/stagefright/AudioSource.h	/^    bool mStarted;$/;"	m	struct:android::AudioSource
mTotalLostFrames	include/media/stagefright/AudioSource.h	/^    int64_t mTotalLostFrames;$/;"	m	struct:android::AudioSource
mTrackMaxAmplitude	include/media/stagefright/AudioSource.h	/^    bool mTrackMaxAmplitude;$/;"	m	struct:android::AudioSource
CAMERA_SOURCE_H_	include/media/stagefright/CameraSource.h	19;"	d
CameraSource	include/media/stagefright/CameraSource.h	/^class CameraSource : public MediaSource, public MediaBufferObserver {$/;"	c	namespace:android
android	include/media/stagefright/CameraSource.h	/^namespace android {$/;"	n
mCamera	include/media/stagefright/CameraSource.h	/^    sp<Camera> mCamera;$/;"	m	class:android::CameraSource
mCollectStats	include/media/stagefright/CameraSource.h	/^    bool mCollectStats;$/;"	m	class:android::CameraSource
mFirstFrameTimeUs	include/media/stagefright/CameraSource.h	/^    int64_t mFirstFrameTimeUs;$/;"	m	class:android::CameraSource
mFrameAvailableCondition	include/media/stagefright/CameraSource.h	/^    Condition mFrameAvailableCondition;$/;"	m	class:android::CameraSource
mFrameCompleteCondition	include/media/stagefright/CameraSource.h	/^    Condition mFrameCompleteCondition;$/;"	m	class:android::CameraSource
mFrameTimes	include/media/stagefright/CameraSource.h	/^    List<int64_t> mFrameTimes;$/;"	m	class:android::CameraSource
mFramesBeingEncoded	include/media/stagefright/CameraSource.h	/^    List<sp<IMemory> > mFramesBeingEncoded;$/;"	m	class:android::CameraSource
mFramesReceived	include/media/stagefright/CameraSource.h	/^    List<sp<IMemory> > mFramesReceived;$/;"	m	class:android::CameraSource
mGlitchDurationThresholdUs	include/media/stagefright/CameraSource.h	/^    int64_t mGlitchDurationThresholdUs;$/;"	m	class:android::CameraSource
mLastFrameTimestampUs	include/media/stagefright/CameraSource.h	/^    int64_t mLastFrameTimestampUs;$/;"	m	class:android::CameraSource
mLock	include/media/stagefright/CameraSource.h	/^    Mutex mLock;$/;"	m	class:android::CameraSource
mMeta	include/media/stagefright/CameraSource.h	/^    sp<MetaData> mMeta;$/;"	m	class:android::CameraSource
mNumFramesDropped	include/media/stagefright/CameraSource.h	/^    int32_t mNumFramesDropped;$/;"	m	class:android::CameraSource
mNumFramesEncoded	include/media/stagefright/CameraSource.h	/^    int32_t mNumFramesEncoded;$/;"	m	class:android::CameraSource
mNumFramesReceived	include/media/stagefright/CameraSource.h	/^    int32_t mNumFramesReceived;$/;"	m	class:android::CameraSource
mNumGlitches	include/media/stagefright/CameraSource.h	/^    int32_t mNumGlitches;$/;"	m	class:android::CameraSource
mStartTimeUs	include/media/stagefright/CameraSource.h	/^    int64_t mStartTimeUs;$/;"	m	class:android::CameraSource
mStarted	include/media/stagefright/CameraSource.h	/^    bool mStarted;$/;"	m	class:android::CameraSource
COLOR_CONVERTER_H_	include/media/stagefright/ColorConverter.h	19;"	d
ColorConverter	include/media/stagefright/ColorConverter.h	/^struct ColorConverter {$/;"	s	namespace:android
android	include/media/stagefright/ColorConverter.h	/^namespace android {$/;"	n
mClip	include/media/stagefright/ColorConverter.h	/^    uint8_t *mClip;$/;"	m	struct:android::ColorConverter
mDstFormat	include/media/stagefright/ColorConverter.h	/^    OMX_COLOR_FORMATTYPE mSrcFormat, mDstFormat;$/;"	m	struct:android::ColorConverter
mSrcFormat	include/media/stagefright/ColorConverter.h	/^    OMX_COLOR_FORMATTYPE mSrcFormat, mDstFormat;$/;"	m	struct:android::ColorConverter
DATA_SOURCE_H_	include/media/stagefright/DataSource.h	19;"	d
DataSource	include/media/stagefright/DataSource.h	/^    DataSource() {}$/;"	f	class:android::DataSource
DataSource	include/media/stagefright/DataSource.h	/^class DataSource : public RefBase {$/;"	c	namespace:android
Flags	include/media/stagefright/DataSource.h	/^    enum Flags {$/;"	g	class:android::DataSource
SnifferFunc	include/media/stagefright/DataSource.h	/^    typedef bool (*SnifferFunc)($/;"	t	class:android::DataSource
android	include/media/stagefright/DataSource.h	/^namespace android {$/;"	n
flags	include/media/stagefright/DataSource.h	/^    virtual uint32_t flags() {$/;"	f	class:android::DataSource
gSnifferMutex	include/media/stagefright/DataSource.h	/^    static Mutex gSnifferMutex;$/;"	m	class:android::DataSource
gSniffers	include/media/stagefright/DataSource.h	/^    static List<SnifferFunc> gSniffers;$/;"	m	class:android::DataSource
kIsCachingDataSource	include/media/stagefright/DataSource.h	/^        kIsCachingDataSource   = 4,$/;"	e	enum:android::DataSource::Flags
kStreamedFromLocalHost	include/media/stagefright/DataSource.h	/^        kStreamedFromLocalHost = 2,$/;"	e	enum:android::DataSource::Flags
kWantsPrefetching	include/media/stagefright/DataSource.h	/^        kWantsPrefetching      = 1,$/;"	e	enum:android::DataSource::Flags
~DataSource	include/media/stagefright/DataSource.h	/^    virtual ~DataSource() {}$/;"	f	class:android::DataSource
FILE_SOURCE_H_	include/media/stagefright/FileSource.h	19;"	d
FileSource	include/media/stagefright/FileSource.h	/^class FileSource : public DataSource {$/;"	c	namespace:android
android	include/media/stagefright/FileSource.h	/^namespace android {$/;"	n
mFile	include/media/stagefright/FileSource.h	/^    FILE *mFile;$/;"	m	class:android::FileSource
mLength	include/media/stagefright/FileSource.h	/^    int64_t mLength;$/;"	m	class:android::FileSource
mLock	include/media/stagefright/FileSource.h	/^    Mutex mLock;$/;"	m	class:android::FileSource
mOffset	include/media/stagefright/FileSource.h	/^    int64_t mOffset;$/;"	m	class:android::FileSource
HARDWARE_API_H_	include/media/stagefright/HardwareAPI.h	19;"	d
JPEGSource	include/media/stagefright/JPEGSource.h	/^struct JPEGSource : public MediaSource {$/;"	s	namespace:android
JPEG_SOURCE_H_	include/media/stagefright/JPEGSource.h	19;"	d
android	include/media/stagefright/JPEGSource.h	/^namespace android {$/;"	n
mGroup	include/media/stagefright/JPEGSource.h	/^    MediaBufferGroup *mGroup;$/;"	m	struct:android::JPEGSource
mHeight	include/media/stagefright/JPEGSource.h	/^    int32_t mWidth, mHeight;$/;"	m	struct:android::JPEGSource
mOffset	include/media/stagefright/JPEGSource.h	/^    off_t mOffset;$/;"	m	struct:android::JPEGSource
mSize	include/media/stagefright/JPEGSource.h	/^    off_t mSize;$/;"	m	struct:android::JPEGSource
mSource	include/media/stagefright/JPEGSource.h	/^    sp<DataSource> mSource;$/;"	m	struct:android::JPEGSource
mStarted	include/media/stagefright/JPEGSource.h	/^    bool mStarted;$/;"	m	struct:android::JPEGSource
mWidth	include/media/stagefright/JPEGSource.h	/^    int32_t mWidth, mHeight;$/;"	m	struct:android::JPEGSource
MPEG2TSWriter	include/media/stagefright/MPEG2TSWriter.h	/^struct MPEG2TSWriter : public MediaWriter {$/;"	s	namespace:android
MPEG2TS_WRITER_H_	include/media/stagefright/MPEG2TSWriter.h	19;"	d
android	include/media/stagefright/MPEG2TSWriter.h	/^namespace android {$/;"	n
kWhatSourceNotify	include/media/stagefright/MPEG2TSWriter.h	/^        kWhatSourceNotify = 'noti'$/;"	e	enum:android::MPEG2TSWriter::__anon144
mFile	include/media/stagefright/MPEG2TSWriter.h	/^    FILE *mFile;$/;"	m	struct:android::MPEG2TSWriter
mLooper	include/media/stagefright/MPEG2TSWriter.h	/^    sp<ALooper> mLooper;$/;"	m	struct:android::MPEG2TSWriter
mNumSourcesDone	include/media/stagefright/MPEG2TSWriter.h	/^    size_t mNumSourcesDone;$/;"	m	struct:android::MPEG2TSWriter
mNumTSPacketsBeforeMeta	include/media/stagefright/MPEG2TSWriter.h	/^    int64_t mNumTSPacketsBeforeMeta;$/;"	m	struct:android::MPEG2TSWriter
mNumTSPacketsWritten	include/media/stagefright/MPEG2TSWriter.h	/^    int64_t mNumTSPacketsWritten;$/;"	m	struct:android::MPEG2TSWriter
mReflector	include/media/stagefright/MPEG2TSWriter.h	/^    sp<AHandlerReflector<MPEG2TSWriter> > mReflector;$/;"	m	struct:android::MPEG2TSWriter
mSources	include/media/stagefright/MPEG2TSWriter.h	/^    Vector<sp<SourceInfo> > mSources;$/;"	m	struct:android::MPEG2TSWriter
mStarted	include/media/stagefright/MPEG2TSWriter.h	/^    bool mStarted;$/;"	m	struct:android::MPEG2TSWriter
Chunk	include/media/stagefright/MPEG4Writer.h	/^        Chunk(Track *track, int64_t timeUs, List<MediaBuffer *> samples)$/;"	f	struct:android::MPEG4Writer::Chunk
Chunk	include/media/stagefright/MPEG4Writer.h	/^    struct Chunk {$/;"	s	class:android::MPEG4Writer
ChunkInfo	include/media/stagefright/MPEG4Writer.h	/^    struct ChunkInfo {$/;"	s	class:android::MPEG4Writer
MPEG4Writer	include/media/stagefright/MPEG4Writer.h	/^class MPEG4Writer : public MediaWriter {$/;"	c	namespace:android
MPEG4_WRITER_H_	include/media/stagefright/MPEG4Writer.h	19;"	d
android	include/media/stagefright/MPEG4Writer.h	/^namespace android {$/;"	n
getTimeScale	include/media/stagefright/MPEG4Writer.h	/^    int32_t getTimeScale() const { return mTimeScale; }$/;"	f	class:android::MPEG4Writer
interleaveDuration	include/media/stagefright/MPEG4Writer.h	/^    uint32_t interleaveDuration() const { return mInterleaveDurationUs; }$/;"	f	class:android::MPEG4Writer
mBoxes	include/media/stagefright/MPEG4Writer.h	/^    List<off_t> mBoxes;$/;"	m	class:android::MPEG4Writer
mChunkInfos	include/media/stagefright/MPEG4Writer.h	/^    List<ChunkInfo> mChunkInfos;            \/\/ Chunk infos$/;"	m	class:android::MPEG4Writer
mChunkReadyCondition	include/media/stagefright/MPEG4Writer.h	/^    Condition       mChunkReadyCondition;   \/\/ Signal that chunks are available$/;"	m	class:android::MPEG4Writer
mChunks	include/media/stagefright/MPEG4Writer.h	/^        List<Chunk>         mChunks;        \/\/ Remaining chunks to be written$/;"	m	struct:android::MPEG4Writer::ChunkInfo
mDone	include/media/stagefright/MPEG4Writer.h	/^    volatile bool   mDone;                  \/\/ Writer thread is done?$/;"	m	class:android::MPEG4Writer
mDriftTimeUs	include/media/stagefright/MPEG4Writer.h	/^    int64_t mDriftTimeUs;$/;"	m	class:android::MPEG4Writer
mEstimatedMoovBoxSize	include/media/stagefright/MPEG4Writer.h	/^    off_t mEstimatedMoovBoxSize;$/;"	m	class:android::MPEG4Writer
mFile	include/media/stagefright/MPEG4Writer.h	/^    FILE *mFile;$/;"	m	class:android::MPEG4Writer
mFreeBoxOffset	include/media/stagefright/MPEG4Writer.h	/^    off_t mFreeBoxOffset;$/;"	m	class:android::MPEG4Writer
mInterleaveDurationUs	include/media/stagefright/MPEG4Writer.h	/^    uint32_t mInterleaveDurationUs;$/;"	m	class:android::MPEG4Writer
mIsFileSizeLimitExplicitlyRequested	include/media/stagefright/MPEG4Writer.h	/^    bool mIsFileSizeLimitExplicitlyRequested;$/;"	m	class:android::MPEG4Writer
mIsFirstChunk	include/media/stagefright/MPEG4Writer.h	/^    bool            mIsFirstChunk;$/;"	m	class:android::MPEG4Writer
mLock	include/media/stagefright/MPEG4Writer.h	/^    Mutex mLock;$/;"	m	class:android::MPEG4Writer
mMdatOffset	include/media/stagefright/MPEG4Writer.h	/^    off_t mMdatOffset;$/;"	m	class:android::MPEG4Writer
mMoovBoxBuffer	include/media/stagefright/MPEG4Writer.h	/^    uint8_t *mMoovBoxBuffer;$/;"	m	class:android::MPEG4Writer
mMoovBoxBufferOffset	include/media/stagefright/MPEG4Writer.h	/^    off_t mMoovBoxBufferOffset;$/;"	m	class:android::MPEG4Writer
mOffset	include/media/stagefright/MPEG4Writer.h	/^    off_t mOffset;$/;"	m	class:android::MPEG4Writer
mPaused	include/media/stagefright/MPEG4Writer.h	/^    bool mPaused;$/;"	m	class:android::MPEG4Writer
mSamples	include/media/stagefright/MPEG4Writer.h	/^        List<MediaBuffer *> mSamples;       \/\/ Sample data$/;"	m	struct:android::MPEG4Writer::Chunk
mStartTimestampUs	include/media/stagefright/MPEG4Writer.h	/^    int64_t mStartTimestampUs;$/;"	m	class:android::MPEG4Writer
mStarted	include/media/stagefright/MPEG4Writer.h	/^    bool mStarted;$/;"	m	class:android::MPEG4Writer
mStreamableFile	include/media/stagefright/MPEG4Writer.h	/^    bool mStreamableFile;$/;"	m	class:android::MPEG4Writer
mThread	include/media/stagefright/MPEG4Writer.h	/^    pthread_t       mThread;                \/\/ Thread id for the writer$/;"	m	class:android::MPEG4Writer
mTimeScale	include/media/stagefright/MPEG4Writer.h	/^    int32_t mTimeScale;$/;"	m	class:android::MPEG4Writer
mTimeStampUs	include/media/stagefright/MPEG4Writer.h	/^        int64_t             mTimeStampUs;   \/\/ Timestamp of the 1st sample$/;"	m	struct:android::MPEG4Writer::Chunk
mTrack	include/media/stagefright/MPEG4Writer.h	/^        Track               *mTrack;        \/\/ Owner$/;"	m	struct:android::MPEG4Writer::Chunk
mTrack	include/media/stagefright/MPEG4Writer.h	/^        Track               *mTrack;        \/\/ Owner$/;"	m	struct:android::MPEG4Writer::ChunkInfo
mTracks	include/media/stagefright/MPEG4Writer.h	/^    List<Track *> mTracks;$/;"	m	class:android::MPEG4Writer
mUse32BitOffset	include/media/stagefright/MPEG4Writer.h	/^    bool mUse32BitOffset;$/;"	m	class:android::MPEG4Writer
mUse4ByteNalLength	include/media/stagefright/MPEG4Writer.h	/^    bool mUse4ByteNalLength;$/;"	m	class:android::MPEG4Writer
mWriteMoovBoxToMemory	include/media/stagefright/MPEG4Writer.h	/^    bool  mWriteMoovBoxToMemory;$/;"	m	class:android::MPEG4Writer
MEDIA_BUFFER_H_	include/media/stagefright/MediaBuffer.h	19;"	d
MediaBuffer	include/media/stagefright/MediaBuffer.h	/^class MediaBuffer {$/;"	c	namespace:android
MediaBufferObserver	include/media/stagefright/MediaBuffer.h	/^    MediaBufferObserver() {}$/;"	f	class:android::MediaBufferObserver
MediaBufferObserver	include/media/stagefright/MediaBuffer.h	/^class MediaBufferObserver {$/;"	c	namespace:android
android	include/media/stagefright/MediaBuffer.h	/^namespace android {$/;"	n
mData	include/media/stagefright/MediaBuffer.h	/^    void *mData;$/;"	m	class:android::MediaBuffer
mMetaData	include/media/stagefright/MediaBuffer.h	/^    sp<MetaData> mMetaData;$/;"	m	class:android::MediaBuffer
mNextBuffer	include/media/stagefright/MediaBuffer.h	/^    MediaBuffer *mNextBuffer;$/;"	m	class:android::MediaBuffer
mObserver	include/media/stagefright/MediaBuffer.h	/^    MediaBufferObserver *mObserver;$/;"	m	class:android::MediaBuffer
mOriginal	include/media/stagefright/MediaBuffer.h	/^    MediaBuffer *mOriginal;$/;"	m	class:android::MediaBuffer
mOwnsData	include/media/stagefright/MediaBuffer.h	/^    bool mOwnsData;$/;"	m	class:android::MediaBuffer
mRangeLength	include/media/stagefright/MediaBuffer.h	/^    size_t mSize, mRangeOffset, mRangeLength;$/;"	m	class:android::MediaBuffer
mRangeOffset	include/media/stagefright/MediaBuffer.h	/^    size_t mSize, mRangeOffset, mRangeLength;$/;"	m	class:android::MediaBuffer
mRefCount	include/media/stagefright/MediaBuffer.h	/^    int mRefCount;$/;"	m	class:android::MediaBuffer
mSize	include/media/stagefright/MediaBuffer.h	/^    size_t mSize, mRangeOffset, mRangeLength;$/;"	m	class:android::MediaBuffer
~MediaBufferObserver	include/media/stagefright/MediaBuffer.h	/^    virtual ~MediaBufferObserver() {}$/;"	f	class:android::MediaBufferObserver
MEDIA_BUFFER_GROUP_H_	include/media/stagefright/MediaBufferGroup.h	19;"	d
MediaBufferGroup	include/media/stagefright/MediaBufferGroup.h	/^class MediaBufferGroup : public MediaBufferObserver {$/;"	c	namespace:android
android	include/media/stagefright/MediaBufferGroup.h	/^namespace android {$/;"	n
mCondition	include/media/stagefright/MediaBufferGroup.h	/^    Condition mCondition;$/;"	m	class:android::MediaBufferGroup
mFirstBuffer	include/media/stagefright/MediaBufferGroup.h	/^    MediaBuffer *mFirstBuffer, *mLastBuffer;$/;"	m	class:android::MediaBufferGroup
mLastBuffer	include/media/stagefright/MediaBufferGroup.h	/^    MediaBuffer *mFirstBuffer, *mLastBuffer;$/;"	m	class:android::MediaBufferGroup
mLock	include/media/stagefright/MediaBufferGroup.h	/^    Mutex mLock;$/;"	m	class:android::MediaBufferGroup
CHECK	include/media/stagefright/MediaDebug.h	15;"	d
CHECK_EQ	include/media/stagefright/MediaDebug.h	10;"	d
LITERAL_TO_STRING	include/media/stagefright/MediaDebug.h	8;"	d
LITERAL_TO_STRING_INTERNAL	include/media/stagefright/MediaDebug.h	7;"	d
MEDIA_DEBUG_H_	include/media/stagefright/MediaDebug.h	3;"	d
MEDIA_DEFS_H_	include/media/stagefright/MediaDefs.h	19;"	d
android	include/media/stagefright/MediaDefs.h	/^namespace android {$/;"	n
ERROR_ALREADY_CONNECTED	include/media/stagefright/MediaErrors.h	/^    ERROR_ALREADY_CONNECTED = MEDIA_ERROR_BASE,$/;"	e	enum:android::__anon146
ERROR_BUFFER_TOO_SMALL	include/media/stagefright/MediaErrors.h	/^    ERROR_BUFFER_TOO_SMALL  = MEDIA_ERROR_BASE - 9,$/;"	e	enum:android::__anon146
ERROR_CANNOT_CONNECT	include/media/stagefright/MediaErrors.h	/^    ERROR_CANNOT_CONNECT    = MEDIA_ERROR_BASE - 3,$/;"	e	enum:android::__anon146
ERROR_CONNECTION_LOST	include/media/stagefright/MediaErrors.h	/^    ERROR_CONNECTION_LOST   = MEDIA_ERROR_BASE - 5,$/;"	e	enum:android::__anon146
ERROR_END_OF_STREAM	include/media/stagefright/MediaErrors.h	/^    ERROR_END_OF_STREAM     = MEDIA_ERROR_BASE - 11,$/;"	e	enum:android::__anon146
ERROR_IO	include/media/stagefright/MediaErrors.h	/^    ERROR_IO                = MEDIA_ERROR_BASE - 4,$/;"	e	enum:android::__anon146
ERROR_MALFORMED	include/media/stagefright/MediaErrors.h	/^    ERROR_MALFORMED         = MEDIA_ERROR_BASE - 7,$/;"	e	enum:android::__anon146
ERROR_NOT_CONNECTED	include/media/stagefright/MediaErrors.h	/^    ERROR_NOT_CONNECTED     = MEDIA_ERROR_BASE - 1,$/;"	e	enum:android::__anon146
ERROR_OUT_OF_RANGE	include/media/stagefright/MediaErrors.h	/^    ERROR_OUT_OF_RANGE      = MEDIA_ERROR_BASE - 8,$/;"	e	enum:android::__anon146
ERROR_UNKNOWN_HOST	include/media/stagefright/MediaErrors.h	/^    ERROR_UNKNOWN_HOST      = MEDIA_ERROR_BASE - 2,$/;"	e	enum:android::__anon146
ERROR_UNSUPPORTED	include/media/stagefright/MediaErrors.h	/^    ERROR_UNSUPPORTED       = MEDIA_ERROR_BASE - 10,$/;"	e	enum:android::__anon146
INFO_DISCONTINUITY	include/media/stagefright/MediaErrors.h	/^    INFO_DISCONTINUITY     = MEDIA_ERROR_BASE - 13,$/;"	e	enum:android::__anon146
INFO_FORMAT_CHANGED	include/media/stagefright/MediaErrors.h	/^    INFO_FORMAT_CHANGED    = MEDIA_ERROR_BASE - 12,$/;"	e	enum:android::__anon146
MEDIA_ERRORS_H_	include/media/stagefright/MediaErrors.h	19;"	d
MEDIA_ERROR_BASE	include/media/stagefright/MediaErrors.h	/^    MEDIA_ERROR_BASE        = -1000,$/;"	e	enum:android::__anon146
android	include/media/stagefright/MediaErrors.h	/^namespace android {$/;"	n
CAN_PAUSE	include/media/stagefright/MediaExtractor.h	/^        CAN_PAUSE          = 4,$/;"	e	enum:android::MediaExtractor::Flags
CAN_SEEK	include/media/stagefright/MediaExtractor.h	/^        CAN_SEEK           = 8,  \/\/ the "seek bar"$/;"	e	enum:android::MediaExtractor::Flags
CAN_SEEK_BACKWARD	include/media/stagefright/MediaExtractor.h	/^        CAN_SEEK_BACKWARD  = 1,  \/\/ the "seek 10secs back button"$/;"	e	enum:android::MediaExtractor::Flags
CAN_SEEK_FORWARD	include/media/stagefright/MediaExtractor.h	/^        CAN_SEEK_FORWARD   = 2,  \/\/ the "seek 10secs forward button"$/;"	e	enum:android::MediaExtractor::Flags
Flags	include/media/stagefright/MediaExtractor.h	/^    enum Flags {$/;"	g	class:android::MediaExtractor
GetTrackMetaDataFlags	include/media/stagefright/MediaExtractor.h	/^    enum GetTrackMetaDataFlags {$/;"	g	class:android::MediaExtractor
MEDIA_EXTRACTOR_H_	include/media/stagefright/MediaExtractor.h	19;"	d
MediaExtractor	include/media/stagefright/MediaExtractor.h	/^    MediaExtractor() {}$/;"	f	class:android::MediaExtractor
MediaExtractor	include/media/stagefright/MediaExtractor.h	/^class MediaExtractor : public RefBase {$/;"	c	namespace:android
android	include/media/stagefright/MediaExtractor.h	/^namespace android {$/;"	n
kIncludeExtensiveMetaData	include/media/stagefright/MediaExtractor.h	/^        kIncludeExtensiveMetaData = 1$/;"	e	enum:android::MediaExtractor::GetTrackMetaDataFlags
~MediaExtractor	include/media/stagefright/MediaExtractor.h	/^    virtual ~MediaExtractor() {}$/;"	f	class:android::MediaExtractor
MEDIA_SOURCE_H_	include/media/stagefright/MediaSource.h	19;"	d
MediaSource	include/media/stagefright/MediaSource.h	/^struct MediaSource : public RefBase {$/;"	s	namespace:android
Options	include/media/stagefright/MediaSource.h	/^        enum Options {$/;"	g	struct:android::MediaSource::ReadOptions
ReadOptions	include/media/stagefright/MediaSource.h	/^    struct ReadOptions {$/;"	s	struct:android::MediaSource
SEEK_CLOSEST	include/media/stagefright/MediaSource.h	/^            SEEK_CLOSEST,$/;"	e	enum:android::MediaSource::ReadOptions::SeekMode
SEEK_CLOSEST_SYNC	include/media/stagefright/MediaSource.h	/^            SEEK_CLOSEST_SYNC,$/;"	e	enum:android::MediaSource::ReadOptions::SeekMode
SEEK_NEXT_SYNC	include/media/stagefright/MediaSource.h	/^            SEEK_NEXT_SYNC,$/;"	e	enum:android::MediaSource::ReadOptions::SeekMode
SEEK_PREVIOUS_SYNC	include/media/stagefright/MediaSource.h	/^            SEEK_PREVIOUS_SYNC,$/;"	e	enum:android::MediaSource::ReadOptions::SeekMode
SeekMode	include/media/stagefright/MediaSource.h	/^        enum SeekMode {$/;"	g	struct:android::MediaSource::ReadOptions
android	include/media/stagefright/MediaSource.h	/^namespace android {$/;"	n
kSeekTo_Option	include/media/stagefright/MediaSource.h	/^            kSeekTo_Option      = 1,$/;"	e	enum:android::MediaSource::ReadOptions::Options
kSkipFrame_Option	include/media/stagefright/MediaSource.h	/^            kSkipFrame_Option   = 2,$/;"	e	enum:android::MediaSource::ReadOptions::Options
mLatenessUs	include/media/stagefright/MediaSource.h	/^        int64_t mLatenessUs;$/;"	m	struct:android::MediaSource::ReadOptions
mOptions	include/media/stagefright/MediaSource.h	/^        uint32_t mOptions;$/;"	m	struct:android::MediaSource::ReadOptions
mSeekMode	include/media/stagefright/MediaSource.h	/^        SeekMode mSeekMode;$/;"	m	struct:android::MediaSource::ReadOptions
mSeekTimeUs	include/media/stagefright/MediaSource.h	/^        int64_t mSeekTimeUs;$/;"	m	struct:android::MediaSource::ReadOptions
mSkipFrameUntilTimeUs	include/media/stagefright/MediaSource.h	/^        int64_t mSkipFrameUntilTimeUs;$/;"	m	struct:android::MediaSource::ReadOptions
pause	include/media/stagefright/MediaSource.h	/^    virtual status_t pause() {$/;"	f	struct:android::MediaSource
MEDIA_WRITER_H_	include/media/stagefright/MediaWriter.h	19;"	d
MediaWriter	include/media/stagefright/MediaWriter.h	/^    MediaWriter()$/;"	f	struct:android::MediaWriter
MediaWriter	include/media/stagefright/MediaWriter.h	/^struct MediaWriter : public RefBase {$/;"	s	namespace:android
android	include/media/stagefright/MediaWriter.h	/^namespace android {$/;"	n
dump	include/media/stagefright/MediaWriter.h	/^    virtual status_t dump(int fd, const Vector<String16>& args) {$/;"	f	struct:android::MediaWriter
mListener	include/media/stagefright/MediaWriter.h	/^    sp<IMediaRecorderClient> mListener;$/;"	m	struct:android::MediaWriter
mMaxFileDurationLimitUs	include/media/stagefright/MediaWriter.h	/^    int64_t mMaxFileDurationLimitUs;$/;"	m	struct:android::MediaWriter
mMaxFileSizeLimitBytes	include/media/stagefright/MediaWriter.h	/^    int64_t mMaxFileSizeLimitBytes;$/;"	m	struct:android::MediaWriter
notify	include/media/stagefright/MediaWriter.h	/^    void notify(int msg, int ext1, int ext2) {$/;"	f	struct:android::MediaWriter
setListener	include/media/stagefright/MediaWriter.h	/^    virtual void setListener(const sp<IMediaRecorderClient>& listener) {$/;"	f	struct:android::MediaWriter
setMaxFileDuration	include/media/stagefright/MediaWriter.h	/^    virtual void setMaxFileDuration(int64_t durationUs) { mMaxFileDurationLimitUs = durationUs; }$/;"	f	struct:android::MediaWriter
setMaxFileSize	include/media/stagefright/MediaWriter.h	/^    virtual void setMaxFileSize(int64_t bytes) { mMaxFileSizeLimitBytes = bytes; }$/;"	f	struct:android::MediaWriter
~MediaWriter	include/media/stagefright/MediaWriter.h	/^    virtual ~MediaWriter() {}$/;"	f	struct:android::MediaWriter
META_DATA_H_	include/media/stagefright/MetaData.h	19;"	d
MetaData	include/media/stagefright/MetaData.h	/^class MetaData : public RefBase {$/;"	c	namespace:android
TYPE_C_STRING	include/media/stagefright/MetaData.h	/^        TYPE_C_STRING = 'cstr',$/;"	e	enum:android::MetaData::Type
TYPE_FLOAT	include/media/stagefright/MetaData.h	/^        TYPE_FLOAT    = 'floa',$/;"	e	enum:android::MetaData::Type
TYPE_INT32	include/media/stagefright/MetaData.h	/^        TYPE_INT32    = 'in32',$/;"	e	enum:android::MetaData::Type
TYPE_INT64	include/media/stagefright/MetaData.h	/^        TYPE_INT64    = 'in64',$/;"	e	enum:android::MetaData::Type
TYPE_NONE	include/media/stagefright/MetaData.h	/^        TYPE_NONE     = 'none',$/;"	e	enum:android::MetaData::Type
TYPE_POINTER	include/media/stagefright/MetaData.h	/^        TYPE_POINTER  = 'ptr ',$/;"	e	enum:android::MetaData::Type
Type	include/media/stagefright/MetaData.h	/^    enum Type {$/;"	g	class:android::MetaData
android	include/media/stagefright/MetaData.h	/^namespace android {$/;"	n
ext_data	include/media/stagefright/MetaData.h	/^            void *ext_data;$/;"	m	union:android::MetaData::typed_data::__anon149
kKey2ByteNalLength	include/media/stagefright/MetaData.h	/^    kKey2ByteNalLength    = '2NAL',  \/\/ int32_t (bool)$/;"	e	enum:android::__anon147
kKey64BitFileOffset	include/media/stagefright/MetaData.h	/^    kKey64BitFileOffset   = 'fobt',  \/\/ int32_t (bool)$/;"	e	enum:android::__anon147
kKeyAVCC	include/media/stagefright/MetaData.h	/^    kKeyAVCC              = 'avcc',  \/\/ raw data$/;"	e	enum:android::__anon147
kKeyAlbum	include/media/stagefright/MetaData.h	/^    kKeyAlbum             = 'albu',  \/\/ cstring$/;"	e	enum:android::__anon147
kKeyAlbumArt	include/media/stagefright/MetaData.h	/^    kKeyAlbumArt          = 'albA',  \/\/ compressed image data$/;"	e	enum:android::__anon147
kKeyAlbumArtMIME	include/media/stagefright/MetaData.h	/^    kKeyAlbumArtMIME      = 'alAM',  \/\/ cstring$/;"	e	enum:android::__anon147
kKeyAlbumArtist	include/media/stagefright/MetaData.h	/^    kKeyAlbumArtist       = 'aart',  \/\/ cstring$/;"	e	enum:android::__anon147
kKeyAnchorTime	include/media/stagefright/MetaData.h	/^    kKeyAnchorTime        = 'ancT',  \/\/ int64_t (usecs)$/;"	e	enum:android::__anon147
kKeyArtist	include/media/stagefright/MetaData.h	/^    kKeyArtist            = 'arti',  \/\/ cstring$/;"	e	enum:android::__anon147
kKeyAuthor	include/media/stagefright/MetaData.h	/^    kKeyAuthor            = 'auth',  \/\/ cstring$/;"	e	enum:android::__anon147
kKeyAutoLoop	include/media/stagefright/MetaData.h	/^    kKeyAutoLoop          = 'autL',  \/\/ bool (int32_t)$/;"	e	enum:android::__anon147
kKeyBitRate	include/media/stagefright/MetaData.h	/^    kKeyBitRate           = 'brte',  \/\/ int32_t (bps)$/;"	e	enum:android::__anon147
kKeyBufferID	include/media/stagefright/MetaData.h	/^    kKeyBufferID          = 'bfID',$/;"	e	enum:android::__anon147
kKeyCDTrackNumber	include/media/stagefright/MetaData.h	/^    kKeyCDTrackNumber     = 'cdtr',  \/\/ cstring$/;"	e	enum:android::__anon147
kKeyChannelCount	include/media/stagefright/MetaData.h	/^    kKeyChannelCount      = '#chn',  \/\/ int32_t$/;"	e	enum:android::__anon147
kKeyColorFormat	include/media/stagefright/MetaData.h	/^    kKeyColorFormat       = 'colf',$/;"	e	enum:android::__anon147
kKeyCompilation	include/media/stagefright/MetaData.h	/^    kKeyCompilation       = 'cpil',  \/\/ cstring$/;"	e	enum:android::__anon147
kKeyComposer	include/media/stagefright/MetaData.h	/^    kKeyComposer          = 'comp',  \/\/ cstring$/;"	e	enum:android::__anon147
kKeyDate	include/media/stagefright/MetaData.h	/^    kKeyDate              = 'date',  \/\/ cstring$/;"	e	enum:android::__anon147
kKeyDecoderComponent	include/media/stagefright/MetaData.h	/^    kKeyDecoderComponent  = 'decC',  \/\/ cstring$/;"	e	enum:android::__anon147
kKeyDiscNumber	include/media/stagefright/MetaData.h	/^    kKeyDiscNumber        = 'dnum',  \/\/ cstring$/;"	e	enum:android::__anon147
kKeyDriftTime	include/media/stagefright/MetaData.h	/^    kKeyDriftTime         = 'dftT',  \/\/ int64_t (usecs)$/;"	e	enum:android::__anon147
kKeyDuration	include/media/stagefright/MetaData.h	/^    kKeyDuration          = 'dura',  \/\/ int64_t (usecs)$/;"	e	enum:android::__anon147
kKeyESDS	include/media/stagefright/MetaData.h	/^    kKeyESDS              = 'esds',  \/\/ raw data$/;"	e	enum:android::__anon147
kKeyFileType	include/media/stagefright/MetaData.h	/^    kKeyFileType          = 'ftyp',  \/\/ int32_t$/;"	e	enum:android::__anon147
kKeyGenre	include/media/stagefright/MetaData.h	/^    kKeyGenre             = 'genr',  \/\/ cstring$/;"	e	enum:android::__anon147
kKeyHeight	include/media/stagefright/MetaData.h	/^    kKeyHeight            = 'heig',  \/\/ int32_t$/;"	e	enum:android::__anon147
kKeyIFramesInterval	include/media/stagefright/MetaData.h	/^    kKeyIFramesInterval   = 'ifiv',  \/\/ int32_t$/;"	e	enum:android::__anon147
kKeyIsCodecConfig	include/media/stagefright/MetaData.h	/^    kKeyIsCodecConfig     = 'conf',  \/\/ int32_t (bool)$/;"	e	enum:android::__anon147
kKeyIsSyncFrame	include/media/stagefright/MetaData.h	/^    kKeyIsSyncFrame       = 'sync',  \/\/ int32_t (bool)$/;"	e	enum:android::__anon147
kKeyIsUnreadable	include/media/stagefright/MetaData.h	/^    kKeyIsUnreadable      = 'unre',  \/\/ bool (int32_t)$/;"	e	enum:android::__anon147
kKeyMIMEType	include/media/stagefright/MetaData.h	/^    kKeyMIMEType          = 'mime',  \/\/ cstring$/;"	e	enum:android::__anon147
kKeyMaxInputSize	include/media/stagefright/MetaData.h	/^    kKeyMaxInputSize      = 'inpS',$/;"	e	enum:android::__anon147
kKeyNTPTime	include/media/stagefright/MetaData.h	/^    kKeyNTPTime           = 'ntpT',  \/\/ uint64_t (ntp-timestamp)$/;"	e	enum:android::__anon147
kKeyNotRealTime	include/media/stagefright/MetaData.h	/^    kKeyNotRealTime       = 'ntrt',  \/\/ bool (int32_t)$/;"	e	enum:android::__anon147
kKeyPlatformPrivate	include/media/stagefright/MetaData.h	/^    kKeyPlatformPrivate   = 'priv',  \/\/ pointer$/;"	e	enum:android::__anon147
kKeyRotation	include/media/stagefright/MetaData.h	/^    kKeyRotation          = 'rotA',  \/\/ int32_t (angle in degrees)$/;"	e	enum:android::__anon147
kKeyRotationDegree	include/media/stagefright/MetaData.h	/^    kKeyRotationDegree    = 'rdge',  \/\/ int32_t (clockwise, in degree)$/;"	e	enum:android::__anon147
kKeySampleRate	include/media/stagefright/MetaData.h	/^    kKeySampleRate        = 'srte',  \/\/ int32_t (also video frame rate)$/;"	e	enum:android::__anon147
kKeySliceHeight	include/media/stagefright/MetaData.h	/^    kKeySliceHeight       = 'slht',  \/\/ int32_t$/;"	e	enum:android::__anon147
kKeyStride	include/media/stagefright/MetaData.h	/^    kKeyStride            = 'strd',  \/\/ int32_t$/;"	e	enum:android::__anon147
kKeyTargetTime	include/media/stagefright/MetaData.h	/^    kKeyTargetTime        = 'tarT',  \/\/ int64_t (usecs)$/;"	e	enum:android::__anon147
kKeyThumbnailTime	include/media/stagefright/MetaData.h	/^    kKeyThumbnailTime     = 'thbT',  \/\/ int64_t (usecs)$/;"	e	enum:android::__anon147
kKeyTime	include/media/stagefright/MetaData.h	/^    kKeyTime              = 'time',  \/\/ int64_t (usecs)$/;"	e	enum:android::__anon147
kKeyTimeScale	include/media/stagefright/MetaData.h	/^    kKeyTimeScale         = 'tmsl',  \/\/ int32_t$/;"	e	enum:android::__anon147
kKeyTitle	include/media/stagefright/MetaData.h	/^    kKeyTitle             = 'titl',  \/\/ cstring$/;"	e	enum:android::__anon147
kKeyTrackTimeStatus	include/media/stagefright/MetaData.h	/^    kKeyTrackTimeStatus   = 'tktm',  \/\/ int64_t$/;"	e	enum:android::__anon147
kKeyValidSamples	include/media/stagefright/MetaData.h	/^    kKeyValidSamples      = 'valD',  \/\/ int32_t$/;"	e	enum:android::__anon147
kKeyVideoLevel	include/media/stagefright/MetaData.h	/^    kKeyVideoLevel        = 'vlev',  \/\/ int32_t$/;"	e	enum:android::__anon147
kKeyVideoProfile	include/media/stagefright/MetaData.h	/^    kKeyVideoProfile      = 'vprf',  \/\/ int32_t$/;"	e	enum:android::__anon147
kKeyVorbisBooks	include/media/stagefright/MetaData.h	/^    kKeyVorbisBooks       = 'vboo',  \/\/ raw data$/;"	e	enum:android::__anon147
kKeyVorbisInfo	include/media/stagefright/MetaData.h	/^    kKeyVorbisInfo        = 'vinf',  \/\/ raw data$/;"	e	enum:android::__anon147
kKeyWantsNALFragments	include/media/stagefright/MetaData.h	/^    kKeyWantsNALFragments = 'NALf',$/;"	e	enum:android::__anon147
kKeyWidth	include/media/stagefright/MetaData.h	/^    kKeyWidth             = 'widt',  \/\/ int32_t$/;"	e	enum:android::__anon147
kKeyWriter	include/media/stagefright/MetaData.h	/^    kKeyWriter            = 'writ',  \/\/ cstring$/;"	e	enum:android::__anon147
kKeyYear	include/media/stagefright/MetaData.h	/^    kKeyYear              = 'year',  \/\/ cstring$/;"	e	enum:android::__anon147
kTypeAVCC	include/media/stagefright/MetaData.h	/^    kTypeAVCC        = 'avcc',$/;"	e	enum:android::__anon148
kTypeESDS	include/media/stagefright/MetaData.h	/^    kTypeESDS        = 'esds',$/;"	e	enum:android::__anon148
mItems	include/media/stagefright/MetaData.h	/^    KeyedVector<uint32_t, typed_data> mItems;$/;"	m	class:android::MetaData
mSize	include/media/stagefright/MetaData.h	/^        size_t mSize;$/;"	m	struct:android::MetaData::typed_data
mType	include/media/stagefright/MetaData.h	/^        uint32_t mType;$/;"	m	struct:android::MetaData::typed_data
reservoir	include/media/stagefright/MetaData.h	/^            float reservoir;$/;"	m	union:android::MetaData::typed_data::__anon149
storage	include/media/stagefright/MetaData.h	/^        const void *storage() const {$/;"	f	struct:android::MetaData::typed_data
storage	include/media/stagefright/MetaData.h	/^        void *storage() {$/;"	f	struct:android::MetaData::typed_data
typed_data	include/media/stagefright/MetaData.h	/^    struct typed_data {$/;"	s	class:android::MetaData
u	include/media/stagefright/MetaData.h	/^        } u;$/;"	m	struct:android::MetaData::typed_data	typeref:union:android::MetaData::typed_data::__anon149
usesReservoir	include/media/stagefright/MetaData.h	/^        bool usesReservoir() const {$/;"	f	struct:android::MetaData::typed_data
OMXClient	include/media/stagefright/OMXClient.h	/^class OMXClient {$/;"	c	namespace:android
OMX_CLIENT_H_	include/media/stagefright/OMXClient.h	19;"	d
android	include/media/stagefright/OMXClient.h	/^namespace android {$/;"	n
interface	include/media/stagefright/OMXClient.h	/^    sp<IOMX> interface() {$/;"	f	class:android::OMXClient
mOMX	include/media/stagefright/OMXClient.h	/^    sp<IOMX> mOMX;$/;"	m	class:android::OMXClient
BufferInfo	include/media/stagefright/OMXCodec.h	/^    struct BufferInfo {$/;"	s	struct:android::OMXCodec
CodecCapabilities	include/media/stagefright/OMXCodec.h	/^struct CodecCapabilities {$/;"	s	namespace:android
CodecProfileLevel	include/media/stagefright/OMXCodec.h	/^struct CodecProfileLevel {$/;"	s	namespace:android
CodecSpecificData	include/media/stagefright/OMXCodec.h	/^    struct CodecSpecificData {$/;"	s	struct:android::OMXCodec
CreationFlags	include/media/stagefright/OMXCodec.h	/^    enum CreationFlags {$/;"	g	struct:android::OMXCodec
DEAD	include/media/stagefright/OMXCodec.h	/^        DEAD,$/;"	e	enum:android::OMXCodec::State
DISABLED	include/media/stagefright/OMXCodec.h	/^        DISABLED,$/;"	e	enum:android::OMXCodec::PortStatus
DISABLING	include/media/stagefright/OMXCodec.h	/^        DISABLING,$/;"	e	enum:android::OMXCodec::PortStatus
ENABLED	include/media/stagefright/OMXCodec.h	/^        ENABLED,$/;"	e	enum:android::OMXCodec::PortStatus
ENABLING	include/media/stagefright/OMXCodec.h	/^        ENABLING,$/;"	e	enum:android::OMXCodec::PortStatus
ERROR	include/media/stagefright/OMXCodec.h	/^        ERROR$/;"	e	enum:android::OMXCodec::State
EXECUTING	include/media/stagefright/OMXCodec.h	/^        EXECUTING,$/;"	e	enum:android::OMXCodec::State
EXECUTING_TO_IDLE	include/media/stagefright/OMXCodec.h	/^        EXECUTING_TO_IDLE,$/;"	e	enum:android::OMXCodec::State
IDLE_TO_EXECUTING	include/media/stagefright/OMXCodec.h	/^        IDLE_TO_EXECUTING,$/;"	e	enum:android::OMXCodec::State
IDLE_TO_LOADED	include/media/stagefright/OMXCodec.h	/^        IDLE_TO_LOADED,$/;"	e	enum:android::OMXCodec::State
LOADED	include/media/stagefright/OMXCodec.h	/^        LOADED,$/;"	e	enum:android::OMXCodec::State
LOADED_TO_IDLE	include/media/stagefright/OMXCodec.h	/^        LOADED_TO_IDLE,$/;"	e	enum:android::OMXCodec::State
OMXCodec	include/media/stagefright/OMXCodec.h	/^struct OMXCodec : public MediaSource,$/;"	s	namespace:android
OMX_CODEC_H_	include/media/stagefright/OMXCodec.h	19;"	d
PortStatus	include/media/stagefright/OMXCodec.h	/^    enum PortStatus {$/;"	g	struct:android::OMXCodec
Quirks	include/media/stagefright/OMXCodec.h	/^    enum Quirks {$/;"	g	struct:android::OMXCodec
RECONFIGURING	include/media/stagefright/OMXCodec.h	/^        RECONFIGURING,$/;"	e	enum:android::OMXCodec::State
SHUTTING_DOWN	include/media/stagefright/OMXCodec.h	/^        SHUTTING_DOWN,$/;"	e	enum:android::OMXCodec::PortStatus
State	include/media/stagefright/OMXCodec.h	/^    enum State {$/;"	g	struct:android::OMXCodec
android	include/media/stagefright/OMXCodec.h	/^namespace android {$/;"	n
kAvoidMemcopyInputRecordingFrames	include/media/stagefright/OMXCodec.h	/^        kAvoidMemcopyInputRecordingFrames     = 2048,$/;"	e	enum:android::OMXCodec::Quirks
kClientNeedsFramebuffer	include/media/stagefright/OMXCodec.h	/^        kClientNeedsFramebuffer  = 4,$/;"	e	enum:android::OMXCodec::CreationFlags
kDecoderLiesAboutNumberOfChannels	include/media/stagefright/OMXCodec.h	/^        kDecoderLiesAboutNumberOfChannels     = 256,$/;"	e	enum:android::OMXCodec::Quirks
kDefersOutputBufferAllocation	include/media/stagefright/OMXCodec.h	/^        kDefersOutputBufferAllocation         = 128,$/;"	e	enum:android::OMXCodec::Quirks
kIgnoreCodecSpecificData	include/media/stagefright/OMXCodec.h	/^        kIgnoreCodecSpecificData = 2,$/;"	e	enum:android::OMXCodec::CreationFlags
kInputBufferSizesAreBogus	include/media/stagefright/OMXCodec.h	/^        kInputBufferSizesAreBogus             = 512,$/;"	e	enum:android::OMXCodec::Quirks
kNeedsFlushBeforeDisable	include/media/stagefright/OMXCodec.h	/^        kNeedsFlushBeforeDisable              = 1,$/;"	e	enum:android::OMXCodec::Quirks
kOutputBuffersAreUnreadable	include/media/stagefright/OMXCodec.h	/^        kOutputBuffersAreUnreadable           = 8192,$/;"	e	enum:android::OMXCodec::Quirks
kPortIndexInput	include/media/stagefright/OMXCodec.h	/^        kPortIndexInput  = 0,$/;"	e	enum:android::OMXCodec::__anon145
kPortIndexOutput	include/media/stagefright/OMXCodec.h	/^        kPortIndexOutput = 1$/;"	e	enum:android::OMXCodec::__anon145
kPreferSoftwareCodecs	include/media/stagefright/OMXCodec.h	/^        kPreferSoftwareCodecs    = 1,$/;"	e	enum:android::OMXCodec::CreationFlags
kRequiresAllocateBufferOnInputPorts	include/media/stagefright/OMXCodec.h	/^        kRequiresAllocateBufferOnInputPorts   = 8,$/;"	e	enum:android::OMXCodec::Quirks
kRequiresAllocateBufferOnOutputPorts	include/media/stagefright/OMXCodec.h	/^        kRequiresAllocateBufferOnOutputPorts  = 32,$/;"	e	enum:android::OMXCodec::Quirks
kRequiresFlushBeforeShutdown	include/media/stagefright/OMXCodec.h	/^        kRequiresFlushBeforeShutdown          = 64,$/;"	e	enum:android::OMXCodec::Quirks
kRequiresFlushCompleteEmulation	include/media/stagefright/OMXCodec.h	/^        kRequiresFlushCompleteEmulation       = 16,$/;"	e	enum:android::OMXCodec::Quirks
kRequiresLargerEncoderOutputBuffer	include/media/stagefright/OMXCodec.h	/^        kRequiresLargerEncoderOutputBuffer    = 4096,$/;"	e	enum:android::OMXCodec::Quirks
kRequiresLoadedToIdleAfterAllocation	include/media/stagefright/OMXCodec.h	/^        kRequiresLoadedToIdleAfterAllocation  = 4,$/;"	e	enum:android::OMXCodec::Quirks
kStoreMetaDataInInputVideoBuffers	include/media/stagefright/OMXCodec.h	/^        kStoreMetaDataInInputVideoBuffers     = 16384,$/;"	e	enum:android::OMXCodec::Quirks
kSupportsMultipleFramesPerInputBuffer	include/media/stagefright/OMXCodec.h	/^        kSupportsMultipleFramesPerInputBuffer = 1024,$/;"	e	enum:android::OMXCodec::Quirks
kWantsNALFragments	include/media/stagefright/OMXCodec.h	/^        kWantsNALFragments                    = 2,$/;"	e	enum:android::OMXCodec::Quirks
mAsyncCompletion	include/media/stagefright/OMXCodec.h	/^    Condition mAsyncCompletion;$/;"	m	struct:android::OMXCodec
mBuffer	include/media/stagefright/OMXCodec.h	/^        IOMX::buffer_id mBuffer;$/;"	m	struct:android::OMXCodec::BufferInfo
mBufferFilled	include/media/stagefright/OMXCodec.h	/^    Condition mBufferFilled;$/;"	m	struct:android::OMXCodec
mCodecSpecificData	include/media/stagefright/OMXCodec.h	/^    Vector<CodecSpecificData *> mCodecSpecificData;$/;"	m	struct:android::OMXCodec
mCodecSpecificDataIndex	include/media/stagefright/OMXCodec.h	/^    size_t mCodecSpecificDataIndex;$/;"	m	struct:android::OMXCodec
mComponentName	include/media/stagefright/OMXCodec.h	/^    String8 mComponentName;$/;"	m	struct:android::CodecCapabilities
mComponentName	include/media/stagefright/OMXCodec.h	/^    char *mComponentName;$/;"	m	struct:android::OMXCodec
mData	include/media/stagefright/OMXCodec.h	/^        uint8_t mData[1];$/;"	m	struct:android::OMXCodec::CodecSpecificData
mData	include/media/stagefright/OMXCodec.h	/^        void *mData;$/;"	m	struct:android::OMXCodec::BufferInfo
mDealer	include/media/stagefright/OMXCodec.h	/^    sp<MemoryDealer> mDealer[2];$/;"	m	struct:android::OMXCodec
mFilledBuffers	include/media/stagefright/OMXCodec.h	/^    List<size_t> mFilledBuffers;$/;"	m	struct:android::OMXCodec
mFinalStatus	include/media/stagefright/OMXCodec.h	/^    status_t mFinalStatus;$/;"	m	struct:android::OMXCodec
mInitialBufferSubmit	include/media/stagefright/OMXCodec.h	/^    bool mInitialBufferSubmit;$/;"	m	struct:android::OMXCodec
mIsEncoder	include/media/stagefright/OMXCodec.h	/^    bool mIsEncoder;$/;"	m	struct:android::OMXCodec
mLeftOverBuffer	include/media/stagefright/OMXCodec.h	/^    MediaBuffer *mLeftOverBuffer;$/;"	m	struct:android::OMXCodec
mLevel	include/media/stagefright/OMXCodec.h	/^    OMX_U32 mLevel;$/;"	m	struct:android::CodecProfileLevel
mLock	include/media/stagefright/OMXCodec.h	/^    Mutex mLock;$/;"	m	struct:android::OMXCodec
mMIME	include/media/stagefright/OMXCodec.h	/^    char *mMIME;$/;"	m	struct:android::OMXCodec
mMediaBuffer	include/media/stagefright/OMXCodec.h	/^        MediaBuffer *mMediaBuffer;$/;"	m	struct:android::OMXCodec::BufferInfo
mMem	include/media/stagefright/OMXCodec.h	/^        sp<IMemory> mMem;$/;"	m	struct:android::OMXCodec::BufferInfo
mNoMoreOutputData	include/media/stagefright/OMXCodec.h	/^    bool mNoMoreOutputData;$/;"	m	struct:android::OMXCodec
mNode	include/media/stagefright/OMXCodec.h	/^    IOMX::node_id mNode;$/;"	m	struct:android::OMXCodec
mOMX	include/media/stagefright/OMXCodec.h	/^    sp<IOMX> mOMX;$/;"	m	struct:android::OMXCodec
mOMXLivesLocally	include/media/stagefright/OMXCodec.h	/^    bool mOMXLivesLocally;$/;"	m	struct:android::OMXCodec
mOutputFormat	include/media/stagefright/OMXCodec.h	/^    sp<MetaData> mOutputFormat;$/;"	m	struct:android::OMXCodec
mOutputPortSettingsHaveChanged	include/media/stagefright/OMXCodec.h	/^    bool mOutputPortSettingsHaveChanged;$/;"	m	struct:android::OMXCodec
mOwnedByComponent	include/media/stagefright/OMXCodec.h	/^        bool mOwnedByComponent;$/;"	m	struct:android::OMXCodec::BufferInfo
mPaused	include/media/stagefright/OMXCodec.h	/^    bool mPaused;$/;"	m	struct:android::OMXCodec
mPortBuffers	include/media/stagefright/OMXCodec.h	/^    Vector<BufferInfo> mPortBuffers[2];$/;"	m	struct:android::OMXCodec
mPortStatus	include/media/stagefright/OMXCodec.h	/^    PortStatus mPortStatus[2];$/;"	m	struct:android::OMXCodec
mProfile	include/media/stagefright/OMXCodec.h	/^    OMX_U32 mProfile;$/;"	m	struct:android::CodecProfileLevel
mProfileLevels	include/media/stagefright/OMXCodec.h	/^    Vector<CodecProfileLevel> mProfileLevels;$/;"	m	struct:android::CodecCapabilities
mQuirks	include/media/stagefright/OMXCodec.h	/^    uint32_t mQuirks;$/;"	m	struct:android::OMXCodec
mSeekMode	include/media/stagefright/OMXCodec.h	/^    ReadOptions::SeekMode mSeekMode;$/;"	m	struct:android::OMXCodec
mSeekTimeUs	include/media/stagefright/OMXCodec.h	/^    int64_t mSeekTimeUs;$/;"	m	struct:android::OMXCodec
mSignalledEOS	include/media/stagefright/OMXCodec.h	/^    bool mSignalledEOS;$/;"	m	struct:android::OMXCodec
mSize	include/media/stagefright/OMXCodec.h	/^        size_t mSize;$/;"	m	struct:android::OMXCodec::BufferInfo
mSize	include/media/stagefright/OMXCodec.h	/^        size_t mSize;$/;"	m	struct:android::OMXCodec::CodecSpecificData
mSkipTimeUs	include/media/stagefright/OMXCodec.h	/^    int64_t mSkipTimeUs;$/;"	m	struct:android::OMXCodec
mSource	include/media/stagefright/OMXCodec.h	/^    sp<MediaSource> mSource;$/;"	m	struct:android::OMXCodec
mState	include/media/stagefright/OMXCodec.h	/^    State mState;$/;"	m	struct:android::OMXCodec
mTargetTimeUs	include/media/stagefright/OMXCodec.h	/^    int64_t mTargetTimeUs;$/;"	m	struct:android::OMXCodec
OMXPluginBase	include/media/stagefright/OMXPluginBase.h	/^    OMXPluginBase() {}$/;"	f	struct:android::OMXPluginBase
OMXPluginBase	include/media/stagefright/OMXPluginBase.h	/^struct OMXPluginBase {$/;"	s	namespace:android
OMX_PLUGIN_BASE_H_	include/media/stagefright/OMXPluginBase.h	19;"	d
android	include/media/stagefright/OMXPluginBase.h	/^namespace android {$/;"	n
~OMXPluginBase	include/media/stagefright/OMXPluginBase.h	/^    virtual ~OMXPluginBase() {}$/;"	f	struct:android::OMXPluginBase
SHOUTCAST_SOURCE_H_	include/media/stagefright/ShoutcastSource.h	19;"	d
ShoutcastSource	include/media/stagefright/ShoutcastSource.h	/^class ShoutcastSource : public MediaSource {$/;"	c	namespace:android
android	include/media/stagefright/ShoutcastSource.h	/^namespace android {$/;"	n
mBytesUntilMetaData	include/media/stagefright/ShoutcastSource.h	/^    size_t mBytesUntilMetaData;$/;"	m	class:android::ShoutcastSource
mGroup	include/media/stagefright/ShoutcastSource.h	/^    MediaBufferGroup *mGroup;$/;"	m	class:android::ShoutcastSource
mHttp	include/media/stagefright/ShoutcastSource.h	/^    HTTPStream *mHttp;$/;"	m	class:android::ShoutcastSource
mMetaDataOffset	include/media/stagefright/ShoutcastSource.h	/^    size_t mMetaDataOffset;$/;"	m	class:android::ShoutcastSource
mStarted	include/media/stagefright/ShoutcastSource.h	/^    bool mStarted;$/;"	m	class:android::ShoutcastSource
STAGEFRIGHT_MEDIA_SCANNER_H_	include/media/stagefright/StagefrightMediaScanner.h	19;"	d
StagefrightMediaScanner	include/media/stagefright/StagefrightMediaScanner.h	/^struct StagefrightMediaScanner : public MediaScanner {$/;"	s	namespace:android
android	include/media/stagefright/StagefrightMediaScanner.h	/^namespace android {$/;"	n
mRetriever	include/media/stagefright/StagefrightMediaScanner.h	/^    sp<MediaMetadataRetriever> mRetriever;$/;"	m	struct:android::StagefrightMediaScanner
SystemTimeSource	include/media/stagefright/TimeSource.h	/^class SystemTimeSource : public TimeSource {$/;"	c	namespace:android
TIME_SOURCE_H_	include/media/stagefright/TimeSource.h	19;"	d
TimeSource	include/media/stagefright/TimeSource.h	/^    TimeSource() {}$/;"	f	class:android::TimeSource
TimeSource	include/media/stagefright/TimeSource.h	/^class TimeSource {$/;"	c	namespace:android
android	include/media/stagefright/TimeSource.h	/^namespace android {$/;"	n
mStartTimeUs	include/media/stagefright/TimeSource.h	/^    int64_t mStartTimeUs;$/;"	m	class:android::SystemTimeSource
~TimeSource	include/media/stagefright/TimeSource.h	/^    virtual ~TimeSource() {}$/;"	f	class:android::TimeSource
FOURCC	include/media/stagefright/Utils.h	25;"	d
UTILS_H_	include/media/stagefright/Utils.h	19;"	d
android	include/media/stagefright/Utils.h	/^namespace android {$/;"	n
VIDEO_RENDERER_H_	include/media/stagefright/VideoRenderer.h	19;"	d
VideoRenderer	include/media/stagefright/VideoRenderer.h	/^    VideoRenderer() {}$/;"	f	class:android::VideoRenderer
VideoRenderer	include/media/stagefright/VideoRenderer.h	/^class VideoRenderer {$/;"	c	namespace:android
android	include/media/stagefright/VideoRenderer.h	/^namespace android {$/;"	n
~VideoRenderer	include/media/stagefright/VideoRenderer.h	/^    virtual ~VideoRenderer() {}$/;"	f	class:android::VideoRenderer
AAtomizer	include/media/stagefright/foundation/AAtomizer.h	/^struct AAtomizer {$/;"	s	namespace:android
A_ATOMIZER_H_	include/media/stagefright/foundation/AAtomizer.h	19;"	d
android	include/media/stagefright/foundation/AAtomizer.h	/^namespace android {$/;"	n
gAtomizer	include/media/stagefright/foundation/AAtomizer.h	/^    static AAtomizer gAtomizer;$/;"	m	struct:android::AAtomizer
mAtoms	include/media/stagefright/foundation/AAtomizer.h	/^    Vector<List<AString> > mAtoms;$/;"	m	struct:android::AAtomizer
mLock	include/media/stagefright/foundation/AAtomizer.h	/^    Mutex mLock;$/;"	m	struct:android::AAtomizer
A_BASE_H_	include/media/stagefright/foundation/ABase.h	19;"	d
DISALLOW_EVIL_CONSTRUCTORS	include/media/stagefright/foundation/ABase.h	21;"	d
ABitReader	include/media/stagefright/foundation/ABitReader.h	/^struct ABitReader {$/;"	s	namespace:android
A_BIT_READER_H_	include/media/stagefright/foundation/ABitReader.h	19;"	d
android	include/media/stagefright/foundation/ABitReader.h	/^namespace android {$/;"	n
mData	include/media/stagefright/foundation/ABitReader.h	/^    const uint8_t *mData;$/;"	m	struct:android::ABitReader
mNumBitsLeft	include/media/stagefright/foundation/ABitReader.h	/^    size_t mNumBitsLeft;$/;"	m	struct:android::ABitReader
mReservoir	include/media/stagefright/foundation/ABitReader.h	/^    uint32_t mReservoir;  \/\/ left-aligned bits$/;"	m	struct:android::ABitReader
mSize	include/media/stagefright/foundation/ABitReader.h	/^    size_t mSize;$/;"	m	struct:android::ABitReader
ABuffer	include/media/stagefright/foundation/ABuffer.h	/^struct ABuffer : public RefBase {$/;"	s	namespace:android
A_BUFFER_H_	include/media/stagefright/foundation/ABuffer.h	19;"	d
android	include/media/stagefright/foundation/ABuffer.h	/^namespace android {$/;"	n
base	include/media/stagefright/foundation/ABuffer.h	/^    uint8_t *base() { return (uint8_t *)mData; }$/;"	f	struct:android::ABuffer
capacity	include/media/stagefright/foundation/ABuffer.h	/^    size_t capacity() const { return mCapacity; }$/;"	f	struct:android::ABuffer
data	include/media/stagefright/foundation/ABuffer.h	/^    uint8_t *data() { return (uint8_t *)mData + mRangeOffset; }$/;"	f	struct:android::ABuffer
int32Data	include/media/stagefright/foundation/ABuffer.h	/^    int32_t int32Data() const { return mInt32Data; }$/;"	f	struct:android::ABuffer
mCapacity	include/media/stagefright/foundation/ABuffer.h	/^    size_t mCapacity;$/;"	m	struct:android::ABuffer
mData	include/media/stagefright/foundation/ABuffer.h	/^    void *mData;$/;"	m	struct:android::ABuffer
mFarewell	include/media/stagefright/foundation/ABuffer.h	/^    sp<AMessage> mFarewell;$/;"	m	struct:android::ABuffer
mInt32Data	include/media/stagefright/foundation/ABuffer.h	/^    int32_t mInt32Data;$/;"	m	struct:android::ABuffer
mMeta	include/media/stagefright/foundation/ABuffer.h	/^    sp<AMessage> mMeta;$/;"	m	struct:android::ABuffer
mOwnsData	include/media/stagefright/foundation/ABuffer.h	/^    bool mOwnsData;$/;"	m	struct:android::ABuffer
mRangeLength	include/media/stagefright/foundation/ABuffer.h	/^    size_t mRangeLength;$/;"	m	struct:android::ABuffer
mRangeOffset	include/media/stagefright/foundation/ABuffer.h	/^    size_t mRangeOffset;$/;"	m	struct:android::ABuffer
offset	include/media/stagefright/foundation/ABuffer.h	/^    size_t offset() const { return mRangeOffset; }$/;"	f	struct:android::ABuffer
setInt32Data	include/media/stagefright/foundation/ABuffer.h	/^    void setInt32Data(int32_t data) { mInt32Data = data; }$/;"	f	struct:android::ABuffer
size	include/media/stagefright/foundation/ABuffer.h	/^    size_t size() const { return mRangeLength; }$/;"	f	struct:android::ABuffer
A_DEBUG_H_	include/media/stagefright/foundation/ADebug.h	19;"	d
CHECK	include/media/stagefright/foundation/ADebug.h	32;"	d
CHECK_EQ	include/media/stagefright/foundation/ADebug.h	68;"	d
CHECK_GE	include/media/stagefright/foundation/ADebug.h	72;"	d
CHECK_GT	include/media/stagefright/foundation/ADebug.h	73;"	d
CHECK_LE	include/media/stagefright/foundation/ADebug.h	70;"	d
CHECK_LT	include/media/stagefright/foundation/ADebug.h	71;"	d
CHECK_NE	include/media/stagefright/foundation/ADebug.h	69;"	d
CHECK_OP	include/media/stagefright/foundation/ADebug.h	57;"	d
LITERAL_TO_STRING	include/media/stagefright/foundation/ADebug.h	30;"	d
LITERAL_TO_STRING_INTERNAL	include/media/stagefright/foundation/ADebug.h	29;"	d
MAKE_COMPARATOR	include/media/stagefright/foundation/ADebug.h	38;"	d
TRESPASS	include/media/stagefright/foundation/ADebug.h	75;"	d
android	include/media/stagefright/foundation/ADebug.h	/^namespace android {$/;"	n
AHandler	include/media/stagefright/foundation/AHandler.h	/^    AHandler()$/;"	f	struct:android::AHandler
AHandler	include/media/stagefright/foundation/AHandler.h	/^struct AHandler : public RefBase {$/;"	s	namespace:android
A_HANDLER_H_	include/media/stagefright/foundation/AHandler.h	19;"	d
android	include/media/stagefright/foundation/AHandler.h	/^namespace android {$/;"	n
id	include/media/stagefright/foundation/AHandler.h	/^    ALooper::handler_id id() const {$/;"	f	struct:android::AHandler
mID	include/media/stagefright/foundation/AHandler.h	/^    ALooper::handler_id mID;$/;"	m	struct:android::AHandler
setID	include/media/stagefright/foundation/AHandler.h	/^    void setID(ALooper::handler_id id) {$/;"	f	struct:android::AHandler
AHandlerReflector	include/media/stagefright/foundation/AHandlerReflector.h	/^    AHandlerReflector(T *target)$/;"	f	struct:android::AHandlerReflector
AHandlerReflector	include/media/stagefright/foundation/AHandlerReflector.h	/^struct AHandlerReflector : public AHandler {$/;"	s	namespace:android
A_HANDLER_REFLECTOR_H_	include/media/stagefright/foundation/AHandlerReflector.h	3;"	d
android	include/media/stagefright/foundation/AHandlerReflector.h	/^namespace android {$/;"	n
mTarget	include/media/stagefright/foundation/AHandlerReflector.h	/^    wp<T> mTarget;$/;"	m	struct:android::AHandlerReflector
onMessageReceived	include/media/stagefright/foundation/AHandlerReflector.h	/^    virtual void onMessageReceived(const sp<AMessage> &msg) {$/;"	f	struct:android::AHandlerReflector
ALooper	include/media/stagefright/foundation/ALooper.h	/^struct ALooper : public RefBase {$/;"	s	namespace:android
A_LOOPER_H_	include/media/stagefright/foundation/ALooper.h	19;"	d
Event	include/media/stagefright/foundation/ALooper.h	/^    struct Event {$/;"	s	struct:android::ALooper
android	include/media/stagefright/foundation/ALooper.h	/^namespace android {$/;"	n
event_id	include/media/stagefright/foundation/ALooper.h	/^    typedef int32_t event_id;$/;"	t	struct:android::ALooper
handler_id	include/media/stagefright/foundation/ALooper.h	/^    typedef int32_t handler_id;$/;"	t	struct:android::ALooper
mEventQueue	include/media/stagefright/foundation/ALooper.h	/^    List<Event> mEventQueue;$/;"	m	struct:android::ALooper
mLock	include/media/stagefright/foundation/ALooper.h	/^    Mutex mLock;$/;"	m	struct:android::ALooper
mMessage	include/media/stagefright/foundation/ALooper.h	/^        sp<AMessage> mMessage;$/;"	m	struct:android::ALooper::Event
mName	include/media/stagefright/foundation/ALooper.h	/^    AString mName;$/;"	m	struct:android::ALooper
mQueueChangedCondition	include/media/stagefright/foundation/ALooper.h	/^    Condition mQueueChangedCondition;$/;"	m	struct:android::ALooper
mRunningLocally	include/media/stagefright/foundation/ALooper.h	/^    bool mRunningLocally;$/;"	m	struct:android::ALooper
mThread	include/media/stagefright/foundation/ALooper.h	/^    sp<LooperThread> mThread;$/;"	m	struct:android::ALooper
mWhenUs	include/media/stagefright/foundation/ALooper.h	/^        int64_t mWhenUs;$/;"	m	struct:android::ALooper::Event
ALooperRoster	include/media/stagefright/foundation/ALooperRoster.h	/^struct ALooperRoster {$/;"	s	namespace:android
A_LOOPER_ROSTER_H_	include/media/stagefright/foundation/ALooperRoster.h	19;"	d
HandlerInfo	include/media/stagefright/foundation/ALooperRoster.h	/^    struct HandlerInfo {$/;"	s	struct:android::ALooperRoster
android	include/media/stagefright/foundation/ALooperRoster.h	/^namespace android {$/;"	n
mHandler	include/media/stagefright/foundation/ALooperRoster.h	/^        wp<AHandler> mHandler;$/;"	m	struct:android::ALooperRoster::HandlerInfo
mHandlers	include/media/stagefright/foundation/ALooperRoster.h	/^    KeyedVector<ALooper::handler_id, HandlerInfo> mHandlers;$/;"	m	struct:android::ALooperRoster
mLock	include/media/stagefright/foundation/ALooperRoster.h	/^    Mutex mLock;$/;"	m	struct:android::ALooperRoster
mLooper	include/media/stagefright/foundation/ALooperRoster.h	/^        wp<ALooper> mLooper;$/;"	m	struct:android::ALooperRoster::HandlerInfo
mNextHandlerID	include/media/stagefright/foundation/ALooperRoster.h	/^    ALooper::handler_id mNextHandlerID;$/;"	m	struct:android::ALooperRoster
AMessage	include/media/stagefright/foundation/AMessage.h	/^struct AMessage : public RefBase {$/;"	s	namespace:android
A_MESSAGE_H_	include/media/stagefright/foundation/AMessage.h	19;"	d
Item	include/media/stagefright/foundation/AMessage.h	/^    struct Item {$/;"	s	struct:android::AMessage
Type	include/media/stagefright/foundation/AMessage.h	/^    enum Type {$/;"	g	struct:android::AMessage
android	include/media/stagefright/foundation/AMessage.h	/^namespace android {$/;"	n
doubleValue	include/media/stagefright/foundation/AMessage.h	/^            double doubleValue;$/;"	m	union:android::AMessage::Item::__anon152
floatValue	include/media/stagefright/foundation/AMessage.h	/^            float floatValue;$/;"	m	union:android::AMessage::Item::__anon152
int32Value	include/media/stagefright/foundation/AMessage.h	/^            int32_t int32Value;$/;"	m	union:android::AMessage::Item::__anon152
int64Value	include/media/stagefright/foundation/AMessage.h	/^            int64_t int64Value;$/;"	m	union:android::AMessage::Item::__anon152
kMaxNumItems	include/media/stagefright/foundation/AMessage.h	/^        kMaxNumItems = 16$/;"	e	enum:android::AMessage::__anon153
kTypeDouble	include/media/stagefright/foundation/AMessage.h	/^        kTypeDouble,$/;"	e	enum:android::AMessage::Type
kTypeFloat	include/media/stagefright/foundation/AMessage.h	/^        kTypeFloat,$/;"	e	enum:android::AMessage::Type
kTypeInt32	include/media/stagefright/foundation/AMessage.h	/^        kTypeInt32,$/;"	e	enum:android::AMessage::Type
kTypeInt64	include/media/stagefright/foundation/AMessage.h	/^        kTypeInt64,$/;"	e	enum:android::AMessage::Type
kTypeMessage	include/media/stagefright/foundation/AMessage.h	/^        kTypeMessage,$/;"	e	enum:android::AMessage::Type
kTypeObject	include/media/stagefright/foundation/AMessage.h	/^        kTypeObject,$/;"	e	enum:android::AMessage::Type
kTypePointer	include/media/stagefright/foundation/AMessage.h	/^        kTypePointer,$/;"	e	enum:android::AMessage::Type
kTypeSize	include/media/stagefright/foundation/AMessage.h	/^        kTypeSize,$/;"	e	enum:android::AMessage::Type
kTypeString	include/media/stagefright/foundation/AMessage.h	/^        kTypeString,$/;"	e	enum:android::AMessage::Type
mItems	include/media/stagefright/foundation/AMessage.h	/^    Item mItems[kMaxNumItems];$/;"	m	struct:android::AMessage
mName	include/media/stagefright/foundation/AMessage.h	/^        const char *mName;$/;"	m	struct:android::AMessage::Item
mNumItems	include/media/stagefright/foundation/AMessage.h	/^    size_t mNumItems;$/;"	m	struct:android::AMessage
mTarget	include/media/stagefright/foundation/AMessage.h	/^    ALooper::handler_id mTarget;$/;"	m	struct:android::AMessage
mType	include/media/stagefright/foundation/AMessage.h	/^        Type mType;$/;"	m	struct:android::AMessage::Item
mWhat	include/media/stagefright/foundation/AMessage.h	/^    uint32_t mWhat;$/;"	m	struct:android::AMessage
ptrValue	include/media/stagefright/foundation/AMessage.h	/^            void *ptrValue;$/;"	m	union:android::AMessage::Item::__anon152
refValue	include/media/stagefright/foundation/AMessage.h	/^            RefBase *refValue;$/;"	m	union:android::AMessage::Item::__anon152
sizeValue	include/media/stagefright/foundation/AMessage.h	/^            size_t sizeValue;$/;"	m	union:android::AMessage::Item::__anon152
stringValue	include/media/stagefright/foundation/AMessage.h	/^            AString *stringValue;$/;"	m	union:android::AMessage::Item::__anon152
u	include/media/stagefright/foundation/AMessage.h	/^        } u;$/;"	m	struct:android::AMessage::Item	typeref:union:android::AMessage::Item::__anon152
AString	include/media/stagefright/foundation/AString.h	/^struct AString {$/;"	s	namespace:android
A_STRING_H_	include/media/stagefright/foundation/AString.h	19;"	d
android	include/media/stagefright/foundation/AString.h	/^namespace android {$/;"	n
append	include/media/stagefright/foundation/AString.h	/^    void append(char c) { append(&c, 1); }$/;"	f	struct:android::AString
kEmptyString	include/media/stagefright/foundation/AString.h	/^    static const char *kEmptyString;$/;"	m	struct:android::AString
mAllocSize	include/media/stagefright/foundation/AString.h	/^    size_t mAllocSize;$/;"	m	struct:android::AString
mData	include/media/stagefright/foundation/AString.h	/^    char *mData;$/;"	m	struct:android::AString
mSize	include/media/stagefright/foundation/AString.h	/^    size_t mSize;$/;"	m	struct:android::AString
BASE_64_H_	include/media/stagefright/foundation/base64.h	19;"	d
android	include/media/stagefright/foundation/base64.h	/^namespace android {$/;"	n
HEXDUMP_H_	include/media/stagefright/foundation/hexdump.h	19;"	d
android	include/media/stagefright/foundation/hexdump.h	/^namespace android {$/;"	n
OMX_AUDIO_AACERAll	include/media/stagefright/openmax/OMX_Audio.h	287;"	d
OMX_AUDIO_AACERHCR	include/media/stagefright/openmax/OMX_Audio.h	286;"	d
OMX_AUDIO_AACERNone	include/media/stagefright/openmax/OMX_Audio.h	283;"	d
OMX_AUDIO_AACERRVLC	include/media/stagefright/openmax/OMX_Audio.h	285;"	d
OMX_AUDIO_AACERVCB11	include/media/stagefright/openmax/OMX_Audio.h	284;"	d
OMX_AUDIO_AACObjectERLC	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectERLC = 17,     \/**< ER AAC Low Complexity object (Error Resilient AAC-LC) *\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectHE	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectHE,            \/**< AAC High Efficiency (object type SBR, HE-AAC profile) *\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectHE_PS	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectHE_PS = 29,    \/**< AAC High Efficiency with Parametric Stereo coding (HE-AAC v2, object type PS) *\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectKhronosExtensions	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectLC	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectLC,            \/**< AAC Low Complexity object (AAC profile) *\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectLD	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectLD = 23,       \/**< AAC Low Delay object (Error Resilient) *\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectLTP	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectLTP,           \/**< AAC Long Term Prediction object *\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectMain	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectMain = 1,      \/**< AAC Main object *\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectMax	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectNull	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectNull = 0,      \/**< Null, not used *\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectSSR	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectSSR,           \/**< AAC Scalable Sample Rate object *\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectScalable	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectScalable,      \/**< AAC Scalable object *\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectVendorStartUnused	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACPROFILETYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_AACPROFILETYPE{$/;"	g
OMX_AUDIO_AACPROFILETYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_AACPROFILETYPE;$/;"	t	typeref:enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACSTREAMFORMATTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_AACSTREAMFORMATTYPE {$/;"	g
OMX_AUDIO_AACSTREAMFORMATTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_AACSTREAMFORMATTYPE;$/;"	t	typeref:enum:OMX_AUDIO_AACSTREAMFORMATTYPE
OMX_AUDIO_AACStreamFormatADIF	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACStreamFormatADIF,        \/**< AAC Audio Data Interchange Format *\/$/;"	e	enum:OMX_AUDIO_AACSTREAMFORMATTYPE
OMX_AUDIO_AACStreamFormatKhronosExtensions	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACStreamFormatKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_AACSTREAMFORMATTYPE
OMX_AUDIO_AACStreamFormatMP2ADTS	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACStreamFormatMP2ADTS = 0, \/**< AAC Audio Data Transport Stream 2 format *\/$/;"	e	enum:OMX_AUDIO_AACSTREAMFORMATTYPE
OMX_AUDIO_AACStreamFormatMP4ADTS	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACStreamFormatMP4ADTS,     \/**< AAC Audio Data Transport Stream 4 format *\/$/;"	e	enum:OMX_AUDIO_AACSTREAMFORMATTYPE
OMX_AUDIO_AACStreamFormatMP4FF	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACStreamFormatMP4FF,       \/**< AAC inside MPEG-4\/ISO File Format *\/$/;"	e	enum:OMX_AUDIO_AACSTREAMFORMATTYPE
OMX_AUDIO_AACStreamFormatMP4LATM	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACStreamFormatMP4LATM,     \/**< AAC Low overhead Audio Transport Multiplex *\/$/;"	e	enum:OMX_AUDIO_AACSTREAMFORMATTYPE
OMX_AUDIO_AACStreamFormatMP4LOAS	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACStreamFormatMP4LOAS,     \/**< AAC Low Overhead Audio Stream format *\/$/;"	e	enum:OMX_AUDIO_AACSTREAMFORMATTYPE
OMX_AUDIO_AACStreamFormatMax	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACStreamFormatMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_AACSTREAMFORMATTYPE
OMX_AUDIO_AACStreamFormatRAW	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACStreamFormatRAW,         \/**< AAC Raw Format *\/$/;"	e	enum:OMX_AUDIO_AACSTREAMFORMATTYPE
OMX_AUDIO_AACStreamFormatVendorStartUnused	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACStreamFormatVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_AACSTREAMFORMATTYPE
OMX_AUDIO_AACToolAll	include/media/stagefright/openmax/OMX_Audio.h	279;"	d
OMX_AUDIO_AACToolIS	include/media/stagefright/openmax/OMX_Audio.h	275;"	d
OMX_AUDIO_AACToolLTP	include/media/stagefright/openmax/OMX_Audio.h	278;"	d
OMX_AUDIO_AACToolMS	include/media/stagefright/openmax/OMX_Audio.h	274;"	d
OMX_AUDIO_AACToolNone	include/media/stagefright/openmax/OMX_Audio.h	273;"	d
OMX_AUDIO_AACToolPNS	include/media/stagefright/openmax/OMX_Audio.h	277;"	d
OMX_AUDIO_AACToolTNS	include/media/stagefright/openmax/OMX_Audio.h	276;"	d
OMX_AUDIO_AMRBANDMODETYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_AMRBANDMODETYPE {$/;"	g
OMX_AUDIO_AMRBANDMODETYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_AMRBANDMODETYPE;$/;"	t	typeref:enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeKhronosExtensions	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeMax	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeNB0	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeNB0,                 \/**< AMRNB Mode 0 =  4750 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeNB1	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeNB1,                 \/**< AMRNB Mode 1 =  5150 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeNB2	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeNB2,                 \/**< AMRNB Mode 2 =  5900 bps *\/ $/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeNB3	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeNB3,                 \/**< AMRNB Mode 3 =  6700 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeNB4	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeNB4,                 \/**< AMRNB Mode 4 =  7400 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeNB5	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeNB5,                 \/**< AMRNB Mode 5 =  7950 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeNB6	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeNB6,                 \/**< AMRNB Mode 6 = 10200 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeNB7	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeNB7,                 \/**< AMRNB Mode 7 = 12200 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeUnused	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeUnused = 0,          \/**< AMRNB Mode unused \/ unknown *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeVendorStartUnused	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeWB0	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeWB0,                 \/**< AMRWB Mode 0 =  6600 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeWB1	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeWB1,                 \/**< AMRWB Mode 1 =  8850 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeWB2	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeWB2,                 \/**< AMRWB Mode 2 = 12650 bps *\/ $/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeWB3	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeWB3,                 \/**< AMRWB Mode 3 = 14250 bps *\/ $/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeWB4	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeWB4,                 \/**< AMRWB Mode 4 = 15850 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeWB5	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeWB5,                 \/**< AMRWB Mode 5 = 18250 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeWB6	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeWB6,                 \/**< AMRWB Mode 6 = 19850 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeWB7	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeWB7,                 \/**< AMRWB Mode 7 = 23050 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeWB8	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeWB8,                 \/**< AMRWB Mode 8 = 23850 bps *\/      $/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRDTXMODETYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_AMRDTXMODETYPE { $/;"	g
OMX_AUDIO_AMRDTXMODETYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_AMRDTXMODETYPE; $/;"	t	typeref:enum:OMX_AUDIO_AMRDTXMODETYPE
OMX_AUDIO_AMRDTXModeKhronosExtensions	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRDTXModeKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_AMRDTXMODETYPE
OMX_AUDIO_AMRDTXModeMax	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRDTXModeMax = 0x7FFFFFFF $/;"	e	enum:OMX_AUDIO_AMRDTXMODETYPE
OMX_AUDIO_AMRDTXModeOff	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRDTXModeOff = 0,        \/**< AMR Discontinuous Transmission Mode is disabled *\/ $/;"	e	enum:OMX_AUDIO_AMRDTXMODETYPE
OMX_AUDIO_AMRDTXModeOnAuto	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRDTXModeOnAuto,         \/**< The codec will automatically select between $/;"	e	enum:OMX_AUDIO_AMRDTXMODETYPE
OMX_AUDIO_AMRDTXModeOnVAD1	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRDTXModeOnVAD1,         \/**< AMR Discontinuous Transmission Mode using $/;"	e	enum:OMX_AUDIO_AMRDTXMODETYPE
OMX_AUDIO_AMRDTXModeOnVAD2	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRDTXModeOnVAD2,         \/**< AMR Discontinuous Transmission Mode using $/;"	e	enum:OMX_AUDIO_AMRDTXMODETYPE
OMX_AUDIO_AMRDTXModeVendorStartUnused	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRDTXModeVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_AMRDTXMODETYPE
OMX_AUDIO_AMRDTXasEFR	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRDTXasEFR,             \/**< DTX as EFR instead of AMR standard (3GPP 26.101, frame type =8,9,10) *\/$/;"	e	enum:OMX_AUDIO_AMRDTXMODETYPE
OMX_AUDIO_AMRFRAMEFORMATTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_AMRFRAMEFORMATTYPE { $/;"	g
OMX_AUDIO_AMRFRAMEFORMATTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_AMRFRAMEFORMATTYPE; $/;"	t	typeref:enum:OMX_AUDIO_AMRFRAMEFORMATTYPE
OMX_AUDIO_AMRFrameFormatConformance	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRFrameFormatConformance = 0,  \/**< Frame Format is AMR Conformance $/;"	e	enum:OMX_AUDIO_AMRFRAMEFORMATTYPE
OMX_AUDIO_AMRFrameFormatFSF	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRFrameFormatFSF,              \/**< Frame Format is AMR File Storage $/;"	e	enum:OMX_AUDIO_AMRFRAMEFORMATTYPE
OMX_AUDIO_AMRFrameFormatIF1	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRFrameFormatIF1,              \/**< Frame Format is AMR Interface $/;"	e	enum:OMX_AUDIO_AMRFRAMEFORMATTYPE
OMX_AUDIO_AMRFrameFormatIF2	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRFrameFormatIF2,              \/**< Frame Format is AMR Interface $/;"	e	enum:OMX_AUDIO_AMRFRAMEFORMATTYPE
OMX_AUDIO_AMRFrameFormatITU	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRFrameFormatITU,              \/**< Frame Format is ITU Format (added at Motorola request) *\/ $/;"	e	enum:OMX_AUDIO_AMRFRAMEFORMATTYPE
OMX_AUDIO_AMRFrameFormatKhronosExtensions	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRFrameFormatKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_AMRFRAMEFORMATTYPE
OMX_AUDIO_AMRFrameFormatMax	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRFrameFormatMax = 0x7FFFFFFF $/;"	e	enum:OMX_AUDIO_AMRFRAMEFORMATTYPE
OMX_AUDIO_AMRFrameFormatRTPPayload	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRFrameFormatRTPPayload,       \/**< Frame Format is AMR Real-Time $/;"	e	enum:OMX_AUDIO_AMRFRAMEFORMATTYPE
OMX_AUDIO_AMRFrameFormatVendorStartUnused	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRFrameFormatVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_AMRFRAMEFORMATTYPE
OMX_AUDIO_CDMARATETYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_CDMARATETYPE {$/;"	g
OMX_AUDIO_CDMARATETYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_CDMARATETYPE;$/;"	t	typeref:enum:OMX_AUDIO_CDMARATETYPE
OMX_AUDIO_CDMARateBlank	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARateBlank = 0,          \/**< CDMA encoded frame is blank *\/$/;"	e	enum:OMX_AUDIO_CDMARATETYPE
OMX_AUDIO_CDMARateEighth	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARateEighth,             \/**< CDMA encoded frame in eighth rate (DTX)*\/$/;"	e	enum:OMX_AUDIO_CDMARATETYPE
OMX_AUDIO_CDMARateErasure	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARateErasure,            \/**< CDMA erasure frame *\/$/;"	e	enum:OMX_AUDIO_CDMARATETYPE
OMX_AUDIO_CDMARateFull	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARateFull,               \/**< CDMA encoded frame in full rate *\/$/;"	e	enum:OMX_AUDIO_CDMARATETYPE
OMX_AUDIO_CDMARateHalf	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARateHalf,               \/**< CDMA encoded frame in half rate *\/$/;"	e	enum:OMX_AUDIO_CDMARATETYPE
OMX_AUDIO_CDMARateKhronosExtensions	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARateKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_CDMARATETYPE
OMX_AUDIO_CDMARateMax	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARateMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_CDMARATETYPE
OMX_AUDIO_CDMARateQuarter	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARateQuarter,            \/**< CDMA encoded frame in quarter rate *\/$/;"	e	enum:OMX_AUDIO_CDMARATETYPE
OMX_AUDIO_CDMARateVendorStartUnused	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARateVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_CDMARATETYPE
OMX_AUDIO_CHANNELMODETYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_CHANNELMODETYPE {$/;"	g
OMX_AUDIO_CHANNELMODETYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_CHANNELMODETYPE;$/;"	t	typeref:enum:OMX_AUDIO_CHANNELMODETYPE
OMX_AUDIO_CHANNELTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_CHANNELTYPE {$/;"	g
OMX_AUDIO_CHANNELTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_CHANNELTYPE;$/;"	t	typeref:enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_CODINGTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_CODINGTYPE {$/;"	g
OMX_AUDIO_CODINGTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_CODINGTYPE;$/;"	t	typeref:enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CONFIG_BALANCETYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_BALANCETYPE {$/;"	s
OMX_AUDIO_CONFIG_BALANCETYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_BALANCETYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_BALANCETYPE
OMX_AUDIO_CONFIG_BASSTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_BASSTYPE {$/;"	s
OMX_AUDIO_CONFIG_BASSTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_BASSTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_BASSTYPE
OMX_AUDIO_CONFIG_CHANNELMUTETYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_CHANNELMUTETYPE {$/;"	s
OMX_AUDIO_CONFIG_CHANNELMUTETYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_CHANNELMUTETYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_CHANNELMUTETYPE
OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE {$/;"	s
OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE
OMX_AUDIO_CONFIG_CHORUSTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_CHORUSTYPE {$/;"	s
OMX_AUDIO_CONFIG_CHORUSTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_CHORUSTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_CHORUSTYPE
OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE {$/;"	s
OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE
OMX_AUDIO_CONFIG_EQUALIZERTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_EQUALIZERTYPE {$/;"	s
OMX_AUDIO_CONFIG_EQUALIZERTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_EQUALIZERTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_EQUALIZERTYPE
OMX_AUDIO_CONFIG_LOUDNESSTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_LOUDNESSTYPE {$/;"	s
OMX_AUDIO_CONFIG_LOUDNESSTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_LOUDNESSTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_LOUDNESSTYPE
OMX_AUDIO_CONFIG_MIDICONTROLTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_MIDICONTROLTYPE {$/;"	s
OMX_AUDIO_CONFIG_MIDICONTROLTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_MIDICONTROLTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE
OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE {$/;"	s
OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE
OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE{ $/;"	s
OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE{ $/;"	s
OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE; $/;"	t	typeref:struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE
OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE {$/;"	s
OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE
OMX_AUDIO_CONFIG_MIDISTATUSTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_MIDISTATUSTYPE {$/;"	s
OMX_AUDIO_CONFIG_MIDISTATUSTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_MIDISTATUSTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE
OMX_AUDIO_CONFIG_MUTETYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_MUTETYPE {$/;"	s
OMX_AUDIO_CONFIG_MUTETYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_MUTETYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_MUTETYPE
OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE {$/;"	s
OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE
OMX_AUDIO_CONFIG_REVERBERATIONTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_REVERBERATIONTYPE {$/;"	s
OMX_AUDIO_CONFIG_REVERBERATIONTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_REVERBERATIONTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE
OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE {$/;"	s
OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE
OMX_AUDIO_CONFIG_TREBLETYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_TREBLETYPE {$/;"	s
OMX_AUDIO_CONFIG_TREBLETYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_TREBLETYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_TREBLETYPE
OMX_AUDIO_CONFIG_VOLUMETYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_VOLUMETYPE {$/;"	s
OMX_AUDIO_CONFIG_VOLUMETYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_VOLUMETYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_VOLUMETYPE
OMX_AUDIO_CONFIG__MIDIMETAEVENTDATATYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG__MIDIMETAEVENTDATATYPE; $/;"	t	typeref:struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE
OMX_AUDIO_ChannelCF	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelCF   = 0x3,    \/**< Center front *\/$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelCS	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelCS   = 0x7,    \/**< Back surround *\/$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelKhronosExtensions	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelLF	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelLF   = 0x1,    \/**< Left front *\/$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelLFE	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelLFE  = 0x6,    \/**< Low frequency effects *\/$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelLR	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelLR   = 0x8,    \/**< Left rear. *\/$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelLS	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelLS   = 0x4,    \/**< Left surround *\/$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelMax	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelMax  = 0x7FFFFFFF $/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelModeDual	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelModeDual,        \/**< 2 mono-channels, each channel is encoded with half $/;"	e	enum:OMX_AUDIO_CHANNELMODETYPE
OMX_AUDIO_ChannelModeJointStereo	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelModeJointStereo, \/**< mode that takes advantage of what is common between $/;"	e	enum:OMX_AUDIO_CHANNELMODETYPE
OMX_AUDIO_ChannelModeKhronosExtensions	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelModeKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_CHANNELMODETYPE
OMX_AUDIO_ChannelModeMax	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelModeMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_CHANNELMODETYPE
OMX_AUDIO_ChannelModeMono	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelModeMono,        \/**< Mono channel mode *\/$/;"	e	enum:OMX_AUDIO_CHANNELMODETYPE
OMX_AUDIO_ChannelModeStereo	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelModeStereo = 0,  \/**< 2 channels, the bitrate allocation between those $/;"	e	enum:OMX_AUDIO_CHANNELMODETYPE
OMX_AUDIO_ChannelModeVendorStartUnused	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelModeVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_CHANNELMODETYPE
OMX_AUDIO_ChannelNone	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelNone = 0x0,    \/**< Unused or empty *\/$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelRF	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelRF   = 0x2,    \/**< Right front *\/$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelRR	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelRR   = 0x9,    \/**< Right rear. *\/$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelRS	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelRS   = 0x5,    \/**< Right surround *\/$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelVendorStartUnused	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_CodingAAC	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingAAC,         \/**< Any variant of AAC encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingADPCM	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingADPCM,       \/**< Any variant of ADPCM encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingAMR	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingAMR,         \/**< Any variant of AMR encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingAutoDetect	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingAutoDetect,  \/**< auto detection of audio format *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingEVRC	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingEVRC,        \/**< Any variant of EVRC encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingG711	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingG711,        \/**< Any variant of G.711 encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingG723	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingG723,        \/**< Any variant of G.723 dot 1 encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingG726	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingG726,        \/**< Any variant of G.726 encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingG729	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingG729,        \/**< Any variant of G.729 encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingGSMEFR	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingGSMEFR,      \/**< Any variant of GSM Enhanced Fullrate encoded data*\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingGSMFR	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingGSMFR,       \/**< Any variant of GSM fullrate (i.e. GSM610) *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingGSMHR	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingGSMHR,       \/**< Any variant of GSM Halfrate encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingKhronosExtensions	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingMIDI	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingMIDI,        \/**< Any variant of MIDI encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingMP3	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingMP3,         \/**< Any variant of MP3 encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingMax	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingPCM	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingPCM,         \/**< Any variant of PCM coding *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingPDCEFR	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingPDCEFR,      \/**< Any variant of PDC Enhanced Fullrate encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingPDCFR	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingPDCFR,       \/**< Any variant of PDC Fullrate encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingPDCHR	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingPDCHR,       \/**< Any variant of PDC Halfrate encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingQCELP13	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingQCELP13,     \/**< Any variant of QCELP 13kbps encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingQCELP8	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingQCELP8,      \/**< Any variant of QCELP 8kbps encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingRA	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingRA,          \/**< Any variant of RA encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingSBC	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingSBC,         \/**< Any variant of SBC encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingSMV	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingSMV,         \/**< Any variant of SMV encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingTDMAEFR	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingTDMAEFR,     \/**< Any variant of TDMA Enhanced Fullrate encoded data (TIA\/EIA-136-410) *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingTDMAFR	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingTDMAFR,      \/**< Any variant of TDMA Fullrate encoded data (TIA\/EIA-136-420) *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingUnused	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingUnused = 0,  \/**< Placeholder value when coding is N\/A  *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingVORBIS	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingVORBIS,      \/**< Any variant of VORBIS encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingVendorStartUnused	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingWMA	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingWMA,         \/**< Any variant of WMA encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_ECHOCANTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_ECHOCANTYPE {$/;"	g
OMX_AUDIO_ECHOCANTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_ECHOCANTYPE;$/;"	t	typeref:enum:OMX_AUDIO_ECHOCANTYPE
OMX_AUDIO_EchoCanCarKit	include/media/stagefright/openmax/OMX_Audio.h	/^   OMX_AUDIO_EchoCanCarKit,    \/**< Echo Cancellation optimized for $/;"	e	enum:OMX_AUDIO_ECHOCANTYPE
OMX_AUDIO_EchoCanHFree	include/media/stagefright/openmax/OMX_Audio.h	/^   OMX_AUDIO_EchoCanHFree,      \/**< Echo Cancellation optimized for $/;"	e	enum:OMX_AUDIO_ECHOCANTYPE
OMX_AUDIO_EchoCanKhronosExtensions	include/media/stagefright/openmax/OMX_Audio.h	/^   OMX_AUDIO_EchoCanKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_ECHOCANTYPE
OMX_AUDIO_EchoCanMax	include/media/stagefright/openmax/OMX_Audio.h	/^   OMX_AUDIO_EchoCanMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_ECHOCANTYPE
OMX_AUDIO_EchoCanNormal	include/media/stagefright/openmax/OMX_Audio.h	/^   OMX_AUDIO_EchoCanNormal,     \/**< Echo Cancellation normal operation - $/;"	e	enum:OMX_AUDIO_ECHOCANTYPE
OMX_AUDIO_EchoCanOff	include/media/stagefright/openmax/OMX_Audio.h	/^   OMX_AUDIO_EchoCanOff = 0,    \/**< Echo Cancellation is disabled *\/$/;"	e	enum:OMX_AUDIO_ECHOCANTYPE
OMX_AUDIO_EchoCanVendorStartUnused	include/media/stagefright/openmax/OMX_Audio.h	/^   OMX_AUDIO_EchoCanVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_ECHOCANTYPE
OMX_AUDIO_G723ModeHigh	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_G723ModeHigh,        \/**< 6300 bps *\/$/;"	e	enum:OMX_AUDIO_G723RATE
OMX_AUDIO_G723ModeKhronosExtensions	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_G723ModeKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_G723RATE
OMX_AUDIO_G723ModeLow	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_G723ModeLow,         \/**< 5300 bps *\/$/;"	e	enum:OMX_AUDIO_G723RATE
OMX_AUDIO_G723ModeMax	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_G723ModeMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_G723RATE
OMX_AUDIO_G723ModeUnused	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_G723ModeUnused = 0,  \/**< AMRNB Mode unused \/ unknown *\/$/;"	e	enum:OMX_AUDIO_G723RATE
OMX_AUDIO_G723ModeVendorStartUnused	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_G723ModeVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_G723RATE
OMX_AUDIO_G723RATE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_G723RATE {$/;"	g
OMX_AUDIO_G723RATE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_G723RATE;$/;"	t	typeref:enum:OMX_AUDIO_G723RATE
OMX_AUDIO_G726MODE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_G726MODE {$/;"	g
OMX_AUDIO_G726MODE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_G726MODE;$/;"	t	typeref:enum:OMX_AUDIO_G726MODE
OMX_AUDIO_G726Mode16	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_G726Mode16,          \/**< 16 kbps *\/$/;"	e	enum:OMX_AUDIO_G726MODE
OMX_AUDIO_G726Mode24	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_G726Mode24,          \/**< 24 kbps *\/$/;"	e	enum:OMX_AUDIO_G726MODE
OMX_AUDIO_G726Mode32	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_G726Mode32,          \/**< 32 kbps, most common rate, also G721 *\/$/;"	e	enum:OMX_AUDIO_G726MODE
OMX_AUDIO_G726Mode40	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_G726Mode40,          \/**< 40 kbps *\/$/;"	e	enum:OMX_AUDIO_G726MODE
OMX_AUDIO_G726ModeKhronosExtensions	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_G726ModeKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_G726MODE
OMX_AUDIO_G726ModeMax	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_G726ModeMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_G726MODE
OMX_AUDIO_G726ModeUnused	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_G726ModeUnused = 0,  \/**< G726 Mode unused \/ unknown *\/$/;"	e	enum:OMX_AUDIO_G726MODE
OMX_AUDIO_G726ModeVendorStartUnused	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_G726ModeVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_G726MODE
OMX_AUDIO_G729	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_G729 = 0,           \/**< ITU G.729  encoded data *\/$/;"	e	enum:OMX_AUDIO_G729TYPE
OMX_AUDIO_G729A	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_G729A,              \/**< ITU G.729 annex A  encoded data *\/$/;"	e	enum:OMX_AUDIO_G729TYPE
OMX_AUDIO_G729AB	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_G729AB,             \/**< ITU G.729 annexes A and B encoded data *\/$/;"	e	enum:OMX_AUDIO_G729TYPE
OMX_AUDIO_G729B	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_G729B,              \/**< ITU G.729 with annex B encoded data *\/$/;"	e	enum:OMX_AUDIO_G729TYPE
OMX_AUDIO_G729KhronosExtensions	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_G729KhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_G729TYPE
OMX_AUDIO_G729Max	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_G729Max = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_G729TYPE
OMX_AUDIO_G729TYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_G729TYPE {$/;"	g
OMX_AUDIO_G729TYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_G729TYPE;$/;"	t	typeref:enum:OMX_AUDIO_G729TYPE
OMX_AUDIO_G729VendorStartUnused	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_G729VendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_G729TYPE
OMX_AUDIO_MAXCHANNELS	include/media/stagefright/openmax/OMX_Audio.h	172;"	d
OMX_AUDIO_MIDIFORMATTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_MIDIFORMATTYPE$/;"	g
OMX_AUDIO_MIDIFORMATTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_MIDIFORMATTYPE;$/;"	t	typeref:enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIFormatKhronosExtensions	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFormatKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIFormatMax	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFormatMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIFormatMobileXMF	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFormatMobileXMF,   \/**< Mobile XMF (eXtensible Music Format type 2) *\/$/;"	e	enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIFormatSMF0	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFormatSMF0,        \/**< Standard MIDI File Type 0 *\/$/;"	e	enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIFormatSMF1	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFormatSMF1,        \/**< Standard MIDI File Type 1 *\/$/;"	e	enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIFormatSMF2	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFormatSMF2,        \/**< Standard MIDI File Type 2 *\/$/;"	e	enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIFormatSPMIDI	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFormatSPMIDI,      \/**< SP-MIDI *\/$/;"	e	enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIFormatUnknown	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFormatUnknown = 0, \/**< MIDI Format unknown or don't care *\/$/;"	e	enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIFormatVendorStartUnused	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFormatVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIFormatXMF0	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFormatXMF0,        \/**< eXtensible Music Format type 0 *\/$/;"	e	enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIFormatXMF1	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFormatXMF1,        \/**< eXtensible Music Format type 1 *\/$/;"	e	enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIPLAYBACKSTATETYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_MIDIPLAYBACKSTATETYPE {$/;"	g
OMX_AUDIO_MIDIPLAYBACKSTATETYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_MIDIPLAYBACKSTATETYPE;$/;"	t	typeref:enum:OMX_AUDIO_MIDIPLAYBACKSTATETYPE
OMX_AUDIO_MIDIPlayBackStateClosedEngaged	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_MIDIPlayBackStateClosedEngaged,    \/**< No MIDI resource is currently open. $/;"	e	enum:OMX_AUDIO_MIDIPLAYBACKSTATETYPE
OMX_AUDIO_MIDIPlayBackStateKhronosExtensions	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_MIDIPlayBackStateKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_MIDIPLAYBACKSTATETYPE
OMX_AUDIO_MIDIPlayBackStateMax	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_MIDIPlayBackStateMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_MIDIPLAYBACKSTATETYPE
OMX_AUDIO_MIDIPlayBackStateOpenEngaged	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_MIDIPlayBackStateOpenEngaged,      \/**< A MIDI resource is open and primed but $/;"	e	enum:OMX_AUDIO_MIDIPLAYBACKSTATETYPE
OMX_AUDIO_MIDIPlayBackStateParsing	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_MIDIPlayBackStateParsing,          \/**< A MIDI resource is open and is being $/;"	e	enum:OMX_AUDIO_MIDIPLAYBACKSTATETYPE
OMX_AUDIO_MIDIPlayBackStatePlaying	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_MIDIPlayBackStatePlaying,          \/**< A MIDI resource is open and currently$/;"	e	enum:OMX_AUDIO_MIDIPLAYBACKSTATETYPE
OMX_AUDIO_MIDIPlayBackStatePlayingPartially	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_MIDIPlayBackStatePlayingPartially, \/**< Best-effort playback due to SP-MIDI\/DLS$/;"	e	enum:OMX_AUDIO_MIDIPLAYBACKSTATETYPE
OMX_AUDIO_MIDIPlayBackStatePlayingSilently	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_MIDIPlayBackStatePlayingSilently,  \/**< Due to system resource constraints and$/;"	e	enum:OMX_AUDIO_MIDIPLAYBACKSTATETYPE
OMX_AUDIO_MIDIPlayBackStateUnknown	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_MIDIPlayBackStateUnknown = 0,      \/**< Unknown state or state does not map to $/;"	e	enum:OMX_AUDIO_MIDIPLAYBACKSTATETYPE
OMX_AUDIO_MIDIPlayBackStateVendorStartUnused	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_MIDIPlayBackStateVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_MIDIPLAYBACKSTATETYPE
OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE {$/;"	g
OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE;$/;"	t	typeref:enum:OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE
OMX_AUDIO_MIDISOUNDBANKTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_MIDISOUNDBANKTYPE {$/;"	g
OMX_AUDIO_MIDISOUNDBANKTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_MIDISOUNDBANKTYPE;$/;"	t	typeref:enum:OMX_AUDIO_MIDISOUNDBANKTYPE
OMX_AUDIO_MIDISoundBankDLS1	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDISoundBankDLS1,                 \/**< DLS version 1 *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKTYPE
OMX_AUDIO_MIDISoundBankDLS2	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDISoundBankDLS2,                 \/**< DLS version 2 *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKTYPE
OMX_AUDIO_MIDISoundBankKhronosExtensions	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDISoundBankKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKTYPE
OMX_AUDIO_MIDISoundBankLayoutGM	include/media/stagefright/openmax/OMX_Audio.h	/^   OMX_AUDIO_MIDISoundBankLayoutGM,           \/**< GS layout (based on bank MSB 0x00) *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE
OMX_AUDIO_MIDISoundBankLayoutGM2	include/media/stagefright/openmax/OMX_Audio.h	/^   OMX_AUDIO_MIDISoundBankLayoutGM2,          \/**< General MIDI 2 layout (using MSB 0x78\/0x79, LSB 0x00) *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE
OMX_AUDIO_MIDISoundBankLayoutKhronosExtensions	include/media/stagefright/openmax/OMX_Audio.h	/^   OMX_AUDIO_MIDISoundBankLayoutKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE
OMX_AUDIO_MIDISoundBankLayoutMax	include/media/stagefright/openmax/OMX_Audio.h	/^   OMX_AUDIO_MIDISoundBankLayoutMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE
OMX_AUDIO_MIDISoundBankLayoutUnused	include/media/stagefright/openmax/OMX_Audio.h	/^   OMX_AUDIO_MIDISoundBankLayoutUnused = 0,   \/**< unused\/unknown soundbank type *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE
OMX_AUDIO_MIDISoundBankLayoutUser	include/media/stagefright/openmax/OMX_Audio.h	/^   OMX_AUDIO_MIDISoundBankLayoutUser,         \/**< Does not conform to any bank numbering standards *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE
OMX_AUDIO_MIDISoundBankLayoutVendorStartUnused	include/media/stagefright/openmax/OMX_Audio.h	/^   OMX_AUDIO_MIDISoundBankLayoutVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE
OMX_AUDIO_MIDISoundBankMax	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDISoundBankMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKTYPE
OMX_AUDIO_MIDISoundBankMobileDLSBase	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDISoundBankMobileDLSBase,        \/**< Mobile DLS, using the base functionality *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKTYPE
OMX_AUDIO_MIDISoundBankMobileDLSPlusOptions	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDISoundBankMobileDLSPlusOptions, \/**< Mobile DLS, using the specification-defined optional feature set *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKTYPE
OMX_AUDIO_MIDISoundBankUnused	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDISoundBankUnused = 0,           \/**< unused\/unknown soundbank type *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKTYPE
OMX_AUDIO_MIDISoundBankVendorStartUnused	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDISoundBankVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKTYPE
OMX_AUDIO_MP3STREAMFORMATTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_MP3STREAMFORMATTYPE {$/;"	g
OMX_AUDIO_MP3STREAMFORMATTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_MP3STREAMFORMATTYPE;$/;"	t	typeref:enum:OMX_AUDIO_MP3STREAMFORMATTYPE
OMX_AUDIO_MP3StreamFormatKhronosExtensions	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_MP3StreamFormatKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_MP3STREAMFORMATTYPE
OMX_AUDIO_MP3StreamFormatMP1Layer3	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_MP3StreamFormatMP1Layer3 = 0, \/**< MP3 Audio MPEG 1 Layer 3 Stream format *\/$/;"	e	enum:OMX_AUDIO_MP3STREAMFORMATTYPE
OMX_AUDIO_MP3StreamFormatMP2Layer3	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_MP3StreamFormatMP2Layer3,     \/**< MP3 Audio MPEG 2 Layer 3 Stream format *\/$/;"	e	enum:OMX_AUDIO_MP3STREAMFORMATTYPE
OMX_AUDIO_MP3StreamFormatMP2_5Layer3	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_MP3StreamFormatMP2_5Layer3,   \/**< MP3 Audio MPEG2.5 Layer 3 Stream format *\/$/;"	e	enum:OMX_AUDIO_MP3STREAMFORMATTYPE
OMX_AUDIO_MP3StreamFormatMax	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_MP3StreamFormatMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_MP3STREAMFORMATTYPE
OMX_AUDIO_MP3StreamFormatVendorStartUnused	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_MP3StreamFormatVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_MP3STREAMFORMATTYPE
OMX_AUDIO_PARAM_AACPROFILETYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_AACPROFILETYPE {$/;"	s
OMX_AUDIO_PARAM_AACPROFILETYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_AACPROFILETYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_AACPROFILETYPE
OMX_AUDIO_PARAM_ADPCMTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_ADPCMTYPE { $/;"	s
OMX_AUDIO_PARAM_ADPCMTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_ADPCMTYPE; $/;"	t	typeref:struct:OMX_AUDIO_PARAM_ADPCMTYPE
OMX_AUDIO_PARAM_AMRTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_AMRTYPE {$/;"	s
OMX_AUDIO_PARAM_AMRTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_AMRTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_AMRTYPE
OMX_AUDIO_PARAM_EVRCTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_EVRCTYPE {$/;"	s
OMX_AUDIO_PARAM_EVRCTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_EVRCTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_EVRCTYPE
OMX_AUDIO_PARAM_G723TYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_G723TYPE { $/;"	s
OMX_AUDIO_PARAM_G723TYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_G723TYPE; $/;"	t	typeref:struct:OMX_AUDIO_PARAM_G723TYPE
OMX_AUDIO_PARAM_G726TYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_G726TYPE { $/;"	s
OMX_AUDIO_PARAM_G726TYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_G726TYPE; $/;"	t	typeref:struct:OMX_AUDIO_PARAM_G726TYPE
OMX_AUDIO_PARAM_G729TYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_G729TYPE {$/;"	s
OMX_AUDIO_PARAM_G729TYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_G729TYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_G729TYPE
OMX_AUDIO_PARAM_GSMEFRTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_GSMEFRTYPE {$/;"	s
OMX_AUDIO_PARAM_GSMEFRTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_GSMEFRTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_GSMEFRTYPE
OMX_AUDIO_PARAM_GSMFRTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_GSMFRTYPE {$/;"	s
OMX_AUDIO_PARAM_GSMFRTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_GSMFRTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_GSMFRTYPE
OMX_AUDIO_PARAM_GSMHRTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_GSMHRTYPE {$/;"	s
OMX_AUDIO_PARAM_GSMHRTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_GSMHRTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_GSMHRTYPE
OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE {$/;"	s
OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE
OMX_AUDIO_PARAM_MIDITYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_MIDITYPE {$/;"	s
OMX_AUDIO_PARAM_MIDITYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_MIDITYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_MIDITYPE
OMX_AUDIO_PARAM_MP3TYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_MP3TYPE {$/;"	s
OMX_AUDIO_PARAM_MP3TYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_MP3TYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_MP3TYPE
OMX_AUDIO_PARAM_PCMMODETYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_PCMMODETYPE { $/;"	s
OMX_AUDIO_PARAM_PCMMODETYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_PCMMODETYPE; $/;"	t	typeref:struct:OMX_AUDIO_PARAM_PCMMODETYPE
OMX_AUDIO_PARAM_PDCEFRTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_PDCEFRTYPE {$/;"	s
OMX_AUDIO_PARAM_PDCEFRTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_PDCEFRTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_PDCEFRTYPE
OMX_AUDIO_PARAM_PDCFRTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_PDCFRTYPE {$/;"	s
OMX_AUDIO_PARAM_PDCFRTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_PDCFRTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_PDCFRTYPE
OMX_AUDIO_PARAM_PDCHRTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_PDCHRTYPE {$/;"	s
OMX_AUDIO_PARAM_PDCHRTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_PDCHRTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_PDCHRTYPE
OMX_AUDIO_PARAM_PORTFORMATTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_PORTFORMATTYPE {$/;"	s
OMX_AUDIO_PARAM_PORTFORMATTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_PORTFORMATTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_PORTFORMATTYPE
OMX_AUDIO_PARAM_QCELP13TYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_QCELP13TYPE {$/;"	s
OMX_AUDIO_PARAM_QCELP13TYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_QCELP13TYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_QCELP13TYPE
OMX_AUDIO_PARAM_QCELP8TYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_QCELP8TYPE {$/;"	s
OMX_AUDIO_PARAM_QCELP8TYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_QCELP8TYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_QCELP8TYPE
OMX_AUDIO_PARAM_RATYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_RATYPE { $/;"	s
OMX_AUDIO_PARAM_RATYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_RATYPE; $/;"	t	typeref:struct:OMX_AUDIO_PARAM_RATYPE
OMX_AUDIO_PARAM_SBCTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_SBCTYPE {$/;"	s
OMX_AUDIO_PARAM_SBCTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_SBCTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_SBCTYPE
OMX_AUDIO_PARAM_SMVTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_SMVTYPE {$/;"	s
OMX_AUDIO_PARAM_SMVTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_SMVTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_SMVTYPE
OMX_AUDIO_PARAM_TDMAEFRTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_TDMAEFRTYPE {$/;"	s
OMX_AUDIO_PARAM_TDMAEFRTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_TDMAEFRTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_TDMAEFRTYPE
OMX_AUDIO_PARAM_TDMAFRTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_TDMAFRTYPE {$/;"	s
OMX_AUDIO_PARAM_TDMAFRTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_TDMAFRTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_TDMAFRTYPE
OMX_AUDIO_PARAM_VORBISTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_VORBISTYPE {$/;"	s
OMX_AUDIO_PARAM_VORBISTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_VORBISTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_VORBISTYPE
OMX_AUDIO_PARAM_WMATYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_WMATYPE {$/;"	s
OMX_AUDIO_PARAM_WMATYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_WMATYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_WMATYPE
OMX_AUDIO_PCMMODETYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_PCMMODETYPE { $/;"	g
OMX_AUDIO_PCMMODETYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_PCMMODETYPE; $/;"	t	typeref:enum:OMX_AUDIO_PCMMODETYPE
OMX_AUDIO_PCMModeALaw	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_PCMModeALaw,        \/**< A law PCM encoded data (G.711) *\/ $/;"	e	enum:OMX_AUDIO_PCMMODETYPE
OMX_AUDIO_PCMModeKhronosExtensions	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_PCMModeKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_PCMMODETYPE
OMX_AUDIO_PCMModeLinear	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_PCMModeLinear = 0,  \/**< Linear PCM encoded data *\/ $/;"	e	enum:OMX_AUDIO_PCMMODETYPE
OMX_AUDIO_PCMModeMULaw	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_PCMModeMULaw,       \/**< Mu law PCM encoded data (G.711)  *\/ $/;"	e	enum:OMX_AUDIO_PCMMODETYPE
OMX_AUDIO_PCMModeMax	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_PCMModeMax = 0x7FFFFFFF $/;"	e	enum:OMX_AUDIO_PCMMODETYPE
OMX_AUDIO_PCMModeVendorStartUnused	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_PCMModeVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_PCMMODETYPE
OMX_AUDIO_PORTDEFINITIONTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PORTDEFINITIONTYPE {$/;"	s
OMX_AUDIO_PORTDEFINITIONTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_PORTDEFINITIONTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PORTDEFINITIONTYPE
OMX_AUDIO_RA10_AAC	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_RA10_AAC,           \/**< MPEG-4 AAC codec for bitrates of more than 128kbps *\/$/;"	e	enum:OMX_AUDIO_RAFORMATTYPE
OMX_AUDIO_RA10_CODEC	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_RA10_CODEC,         \/**< RealAudio codec for bitrates less than 128 kbps *\/$/;"	e	enum:OMX_AUDIO_RAFORMATTYPE
OMX_AUDIO_RA10_LOSSLESS	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_RA10_LOSSLESS,      \/**< RealAudio Lossless *\/$/;"	e	enum:OMX_AUDIO_RAFORMATTYPE
OMX_AUDIO_RA10_MULTICHANNEL	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_RA10_MULTICHANNEL,  \/**< RealAudio Multichannel *\/$/;"	e	enum:OMX_AUDIO_RAFORMATTYPE
OMX_AUDIO_RA10_VOICE	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_RA10_VOICE,         \/**< RealAudio Voice for bitrates below 15 kbps *\/$/;"	e	enum:OMX_AUDIO_RAFORMATTYPE
OMX_AUDIO_RA8	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_RA8,                \/**< RealAudio 8 codec *\/$/;"	e	enum:OMX_AUDIO_RAFORMATTYPE
OMX_AUDIO_RA9	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_RA9,                \/**< RealAudio 9 codec *\/$/;"	e	enum:OMX_AUDIO_RAFORMATTYPE
OMX_AUDIO_RAFORMATTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_RAFORMATTYPE {$/;"	g
OMX_AUDIO_RAFORMATTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_RAFORMATTYPE;$/;"	t	typeref:enum:OMX_AUDIO_RAFORMATTYPE
OMX_AUDIO_RAFormatKhronosExtensions	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_RAFormatKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_RAFORMATTYPE
OMX_AUDIO_RAFormatUnused	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_RAFormatUnused = 0, \/**< Format unused or unknown *\/$/;"	e	enum:OMX_AUDIO_RAFORMATTYPE
OMX_AUDIO_RAFormatVendorStartUnused	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_RAFormatVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_RAFORMATTYPE
OMX_AUDIO_SBCALLOCMETHODTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_SBCALLOCMETHODTYPE {$/;"	g
OMX_AUDIO_SBCALLOCMETHODTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_SBCALLOCMETHODTYPE;$/;"	t	typeref:enum:OMX_AUDIO_SBCALLOCMETHODTYPE
OMX_AUDIO_SBCAllocMethodKhronosExtensions	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_SBCAllocMethodKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_SBCALLOCMETHODTYPE
OMX_AUDIO_SBCAllocMethodLoudness	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_SBCAllocMethodLoudness, \/**< Loudness allocation method *\/$/;"	e	enum:OMX_AUDIO_SBCALLOCMETHODTYPE
OMX_AUDIO_SBCAllocMethodMax	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_SBCAllocMethodMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_SBCALLOCMETHODTYPE
OMX_AUDIO_SBCAllocMethodSNR	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_SBCAllocMethodSNR,      \/**< SNR allocation method *\/$/;"	e	enum:OMX_AUDIO_SBCALLOCMETHODTYPE
OMX_AUDIO_SBCAllocMethodVendorStartUnused	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_SBCAllocMethodVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_SBCALLOCMETHODTYPE
OMX_AUDIO_STEREOWIDENINGTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_STEREOWIDENINGTYPE {$/;"	g
OMX_AUDIO_STEREOWIDENINGTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_STEREOWIDENINGTYPE;$/;"	t	typeref:enum:OMX_AUDIO_STEREOWIDENINGTYPE
OMX_AUDIO_StereoWideningHeadphones	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_StereoWideningHeadphones,    \/**< Stereo widening for loudspeakers *\/$/;"	e	enum:OMX_AUDIO_STEREOWIDENINGTYPE
OMX_AUDIO_StereoWideningKhronosExtensions	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_StereoWideningKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_STEREOWIDENINGTYPE
OMX_AUDIO_StereoWideningLoudspeakers	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_StereoWideningLoudspeakers,  \/**< Stereo widening for closely spaced loudspeakers *\/$/;"	e	enum:OMX_AUDIO_STEREOWIDENINGTYPE
OMX_AUDIO_StereoWideningMax	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_StereoWideningMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_STEREOWIDENINGTYPE
OMX_AUDIO_StereoWideningVendorStartUnused	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_StereoWideningVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_STEREOWIDENINGTYPE
OMX_AUDIO_WMAFORMATTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_WMAFORMATTYPE {$/;"	g
OMX_AUDIO_WMAFORMATTYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_WMAFORMATTYPE;$/;"	t	typeref:enum:OMX_AUDIO_WMAFORMATTYPE
OMX_AUDIO_WMAFormat7	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAFormat7,          \/**< Windows Media Audio format 7 *\/$/;"	e	enum:OMX_AUDIO_WMAFORMATTYPE
OMX_AUDIO_WMAFormat8	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAFormat8,          \/**< Windows Media Audio format 8 *\/$/;"	e	enum:OMX_AUDIO_WMAFORMATTYPE
OMX_AUDIO_WMAFormat9	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAFormat9,          \/**< Windows Media Audio format 9 *\/$/;"	e	enum:OMX_AUDIO_WMAFORMATTYPE
OMX_AUDIO_WMAFormatKhronosExtensions	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAFormatKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_WMAFORMATTYPE
OMX_AUDIO_WMAFormatMax	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAFormatMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_WMAFORMATTYPE
OMX_AUDIO_WMAFormatUnused	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAFormatUnused = 0, \/**< format unused or unknown *\/$/;"	e	enum:OMX_AUDIO_WMAFORMATTYPE
OMX_AUDIO_WMAFormatVendorStartUnused	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAFormatVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_WMAFORMATTYPE
OMX_AUDIO_WMAPROFILETYPE	include/media/stagefright/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_WMAPROFILETYPE {$/;"	g
OMX_AUDIO_WMAPROFILETYPE	include/media/stagefright/openmax/OMX_Audio.h	/^} OMX_AUDIO_WMAPROFILETYPE;$/;"	t	typeref:enum:OMX_AUDIO_WMAPROFILETYPE
OMX_AUDIO_WMAProfileKhronosExtensions	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAProfileKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_WMAPROFILETYPE
OMX_AUDIO_WMAProfileL1	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAProfileL1,          \/**< Windows Media audio version 9 profile L1 *\/$/;"	e	enum:OMX_AUDIO_WMAPROFILETYPE
OMX_AUDIO_WMAProfileL2	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAProfileL2,          \/**< Windows Media audio version 9 profile L2 *\/$/;"	e	enum:OMX_AUDIO_WMAPROFILETYPE
OMX_AUDIO_WMAProfileL3	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAProfileL3,          \/**< Windows Media audio version 9 profile L3 *\/$/;"	e	enum:OMX_AUDIO_WMAPROFILETYPE
OMX_AUDIO_WMAProfileMax	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAProfileMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_WMAPROFILETYPE
OMX_AUDIO_WMAProfileUnused	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAProfileUnused = 0,  \/**< profile unused or unknown *\/$/;"	e	enum:OMX_AUDIO_WMAPROFILETYPE
OMX_AUDIO_WMAProfileVendorStartUnused	include/media/stagefright/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAProfileVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_WMAPROFILETYPE
OMX_Audio_h	include/media/stagefright/openmax/OMX_Audio.h	47;"	d
OMX_MIN_PCMPAYLOAD_MSEC	include/media/stagefright/openmax/OMX_Audio.h	173;"	d
OMX_VIDEO_RAFormatMax	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VIDEO_RAFormatMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_RAFORMATTYPE
bDTX	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;                \/**< Enable Discontinuous Transmisssion *\/ $/;"	m	struct:OMX_AUDIO_PARAM_G723TYPE
bDTX	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;                \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCEFRTYPE
bDTX	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;                \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCFRTYPE
bDTX	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;                \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCHRTYPE
bDTX	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;                \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAEFRTYPE
bDTX	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;                \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAFRTYPE
bDTX	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;            \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_G729TYPE
bDTX	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;            \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMEFRTYPE
bDTX	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;            \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMFRTYPE
bDTX	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;            \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMHRTYPE
bDownmix	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bDownmix;		  \/**< Downmix input from stereo to mono (has no effect on $/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE
bEnable	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bEnable;             \/**< Enable\/disable for reverberation control *\/$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE
bEnable	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bEnable;          \/**< Enable\/disable for bass control *\/$/;"	m	struct:OMX_AUDIO_CONFIG_BASSTYPE
bEnable	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bEnable;          \/**< Enable\/disable for chorus *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHORUSTYPE
bEnable	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bEnable;          \/**< Enable\/disable for equalizer *\/$/;"	m	struct:OMX_AUDIO_CONFIG_EQUALIZERTYPE
bEnable	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bEnable;          \/**< Enable\/disable for stereo widening control *\/$/;"	m	struct:OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE
bEnable	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bEnable;          \/**< Enable\/disable for treble control *\/$/;"	m	struct:OMX_AUDIO_CONFIG_TREBLETYPE
bEnableBitrate	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bEnableBitrate;   \/**< Use bitrate value instead of bitpool *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE
bFlagErrorConcealment	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bFlagErrorConcealment;  \/**< Turns on error concealment if it is $/;"	m	struct:OMX_AUDIO_PORTDEFINITIONTYPE
bHiPassFilter	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;       \/**< Enable High Pass Filter *\/ $/;"	m	struct:OMX_AUDIO_PARAM_G723TYPE
bHiPassFilter	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;       \/**< Enable High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCEFRTYPE
bHiPassFilter	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;       \/**< Enable High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCFRTYPE
bHiPassFilter	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;       \/**< Enable High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCHRTYPE
bHiPassFilter	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;       \/**< Enable High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAEFRTYPE
bHiPassFilter	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;       \/**< Enable High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAFRTYPE
bHiPassFilter	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;       \/**< Enable encoder's High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE
bHiPassFilter	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;       \/**< Enable encoder's High Pass Filter ??*\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE
bHiPassFilter	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;   \/**< Enable High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMEFRTYPE
bHiPassFilter	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;   \/**< Enable High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMFRTYPE
bHiPassFilter	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;   \/**< Enable High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMHRTYPE
bInterleaved	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bInterleaved;            \/**< True for normal interleaved data; false for $/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE
bIsMIDI	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bIsMIDI;           \/**< TRUE if nChannel refers to a MIDI channel,$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELMUTETYPE
bIsMIDI	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bIsMIDI;           \/**< TRUE if nChannel refers to a MIDI channel,$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE
bLinear	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bLinear;           \/**< Is the volume to be set in linear (0.100) $/;"	m	struct:OMX_AUDIO_CONFIG_VOLUMETYPE
bLinear	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bLinear;           \/**< Is the volume to be set in linear (0.100) or $/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE
bLoadDefaultSound	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bLoadDefaultSound;    \/**< Whether to load default sound $/;"	m	struct:OMX_AUDIO_PARAM_MIDITYPE
bLoudness	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bLoudness;        \/**< Enable\/disable for loudness *\/$/;"	m	struct:OMX_AUDIO_CONFIG_LOUDNESSTYPE
bManaged	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bManaged;		  \/**< Set  bitrate  management  mode. This turns off the$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE
bMute	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bMute;             \/**< Mute setting for this channel *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELMUTETYPE
bMute	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bMute;             \/**< Mute setting for this port *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MUTETYPE
bNoiseReduction	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bNoiseReduction;  \/**< Enable\/disable for noise reduction *\/$/;"	m	struct:OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE
bNoiseSuppressor	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bNoiseSuppressor;    \/**< Enable encoder's noise suppressor pre-processing *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE
bNoiseSuppressor	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bNoiseSuppressor;    \/**< Enable encoder's noise suppressor pre-processing *\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE
bPostFilter	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bPostFilter;         \/**< Enable Post Filter *\/ $/;"	m	struct:OMX_AUDIO_PARAM_G723TYPE
bPostFilter	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bPostFilter;         \/**< Enable decoder's post Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE
bPostFilter	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bPostFilter;         \/**< Enable decoder's post Filter ??*\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE
bRATE_REDUCon	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bRATE_REDUCon;           \/**< RATE_REDUCtion is requested for this frame *\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE
bRATE_REDUCon	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bRATE_REDUCon;       \/**< RATE_REDUCtion is requested for this frame *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE
bVibra	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BOOL bVibra;            \/**< Does Vibra track exist? NOTE: May not return a meaningful $/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE
cMIMEType	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_STRING cMIMEType;            \/**< MIME type of data for the port *\/$/;"	m	struct:OMX_AUDIO_PORTDEFINITIONTYPE
eAACProfile	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACPROFILETYPE eAACProfile;   \/**< AAC profile enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE
eAACStreamFormat	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACSTREAMFORMATTYPE eAACStreamFormat; \/**< AAC stream format enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE
eAMRBandMode	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBANDMODETYPE eAMRBandMode; \/**< AMR Band Mode enumeration *\/ $/;"	m	struct:OMX_AUDIO_PARAM_AMRTYPE
eAMRDTXMode	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRDTXMODETYPE  eAMRDTXMode;  \/**< AMR DTX Mode enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_AMRTYPE
eAMRFrameFormat	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRFRAMEFORMATTYPE eAMRFrameFormat; \/**< AMR frame format enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_AMRTYPE
eBitRate	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_G723RATE eBitRate;  \/**< todo: Should this be moved to a config? *\/$/;"	m	struct:OMX_AUDIO_PARAM_G723TYPE
eBitType	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_G729TYPE eBitType;$/;"	m	struct:OMX_AUDIO_PARAM_G729TYPE
eCDMARate	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARATETYPE eCDMARate; \/**< Frame rate *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP13TYPE
eCDMARate	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARATETYPE eCDMARate; \/**< Frame rate *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP8TYPE
eCDMARate	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARATETYPE eCDMARate; \/**< Frame rate *\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE
eCDMARate	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARATETYPE eCDMARate; \/**< actual Frame rate *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE
eChannelMapping	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CHANNELTYPE eChannelMapping[OMX_AUDIO_MAXCHANNELS]; \/**< Slot i contains channel defined by eChannelMap[i] *\/$/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE
eChannelMode	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CHANNELMODETYPE eChannelMode;   \/**< Channel mode enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE
eChannelMode	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CHANNELMODETYPE eChannelMode;   \/**< Channel mode enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE
eChannelMode	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CHANNELMODETYPE eChannelMode; \/**< Channel mode enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE
eEchoCancelation	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_ECHOCANTYPE eEchoCancelation; \/**< Echo cancelation settings *\/$/;"	m	struct:OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE
eEncoding	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CODINGTYPE eEncoding;  \/**< Type of data expected for this $/;"	m	struct:OMX_AUDIO_PORTDEFINITIONTYPE
eEncoding	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_CODINGTYPE eEncoding; \/**< Type of data expected for this port (e.g. PCM, AMR, MP3, etc) *\/$/;"	m	struct:OMX_AUDIO_PARAM_PORTFORMATTYPE
eEndian	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_ENDIANTYPE eEndian;           \/**< indicates PCM data as little or big endian *\/ $/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE
eFormat	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_MP3STREAMFORMATTYPE eFormat;  \/**< MP3 stream format *\/$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE
eFormat	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_RAFORMATTYPE eFormat; \/**< is the RealAudio audio format *\/$/;"	m	struct:OMX_AUDIO_PARAM_RATYPE
eFormat	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_WMAFORMATTYPE eFormat; \/**< Version of WMA stream \/ data *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE
eG726Mode	include/media/stagefright/openmax/OMX_Audio.h	/^     OMX_AUDIO_G726MODE eG726Mode;$/;"	m	struct:OMX_AUDIO_PARAM_G726TYPE
eMIDIPlayBackState	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIPLAYBACKSTATETYPE eMIDIPlayBackState;  \/**< MIDI playback state enumeration, read only field *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE
eMidiFormat	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFORMATTYPE eMidiFormat; \/**< Version of the MIDI file *\/                                                                           $/;"	m	struct:OMX_AUDIO_PARAM_MIDITYPE
eMidiSoundBank	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDISOUNDBANKTYPE eMidiSoundBank;   \/**< Midi sound bank type enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE
eMidiSoundBankLayout	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE eMidiSoundBankLayout; \/**< Midi sound bank layout enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE
eNumData	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_NUMERICALDATATYPE eNumData;   \/**< indicates PCM data as signed or unsigned *\/ $/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE
ePCMMode	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_PCMMODETYPE ePCMMode;   \/**< PCM mode enumeration *\/ $/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE
eProfile	include/media/stagefright/openmax/OMX_Audio.h	/^	OMX_AUDIO_WMAPROFILETYPE eProfile;  \/**< Profile of WMA stream \/ data *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE
eSBCAllocType	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_SBCALLOCMETHODTYPE eSBCAllocType;   \/**< SBC Allocation method type *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE
eWideningType	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_AUDIO_STEREOWIDENINGTYPE eWideningType; \/**< Stereo widening algorithm type *\/$/;"	m	struct:OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE
nAACERtools	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nAACERtools;           \/**< MPEG-4 AAC error resilience tool usage *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE
nAACtools	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nAACtools;             \/**< AAC tool usage *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE
nAudioBandWidth	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nAudioBandWidth;       \/**< Audio band width (in Hz) to which an encoder should$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE
nAudioBandWidth	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nAudioBandWidth;       \/**< Audio band width (in Hz) to which an encoder should$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE
nAudioBandWidth	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nAudioBandWidth;  \/**< Audio band width (in Hz) to which an encoder should$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE
nBalance	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_S32 nBalance;           \/**< balance setting for this port $/;"	m	struct:OMX_AUDIO_CONFIG_BALANCETYPE
nBass	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_S32 nBass;             \/**< bass setting for the port, as a $/;"	m	struct:OMX_AUDIO_CONFIG_BASSTYPE
nBitPerSample	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nBitPerSample;            \/**< Bit per sample *\/ $/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE
nBitPool	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nBitPool;          \/**< Bitpool value *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE
nBitRate	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nBitRate;                       \/**< Bit rate read only field *\/$/;"	m	struct:OMX_AUDIO_PARAM_AMRTYPE
nBitRate	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nBitRate;              \/**< Bit rate of the input data.  Use 0 for variable$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE
nBitRate	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nBitRate;              \/**< Bit rate of the input data.  Use 0 for variable$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE
nBitRate	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nBitRate;             \/**< Bit rate of the input data.  Use 0 for variable$/;"	m	struct:OMX_AUDIO_PARAM_QCELP8TYPE
nBitRate	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nBitRate;          \/**< Bit rate of the input data.  Use 0 for variable$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE
nBitRate	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nBitRate;         \/**< Bit rate of the encoded data data.  Use 0 for variable$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE
nBitRate	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nBitRate;         \/**< Bit rate of the input data.  Use 0 for variable$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE
nBitsPerFrame	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nBitsPerFrame;      \/**< is the value for bits per frame  *\/ $/;"	m	struct:OMX_AUDIO_PARAM_RATYPE
nBitsPerSample	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nBitsPerSample;     \/**< Number of bits in each sample *\/ $/;"	m	struct:OMX_AUDIO_PARAM_ADPCMTYPE
nBlockAlign	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U16 nBlockAlign;      \/**< is the block alignment, or block size, in bytes of the audio codec *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE
nBlocks	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nBlocks;           \/**< Number of blocks *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE
nChannel	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nChannel;           \/**< Valid channel values range from 1 to 16 *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE
nChannel	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nChannel;           \/**< channel to select from 0 to N-1, $/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELMUTETYPE
nChannel	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nChannel;           \/**< channel to select from 0 to N-1, $/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE
nChannelMuteMask	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U16 nChannelMuteMask;     \/**< 16 bit mask for channel mute status *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE
nChannelSoloMask	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U16 nChannelSoloMask;     \/**< 16 bit mask for channel solo status *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE
nChannels	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U16 nChannels;        \/**< Number of channels *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE
nChannels	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;                      \/**< Number of channels *\/$/;"	m	struct:OMX_AUDIO_PARAM_AMRTYPE
nChannels	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;                \/**< Number of channels (e.g. 2 for stereo) *\/ $/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE
nChannels	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;             \/**< Number of channels *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE
nChannels	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;             \/**< Number of channels *\/$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE
nChannels	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not $/;"	m	struct:OMX_AUDIO_PARAM_G723TYPE
nChannels	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE
nChannels	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_PDCEFRTYPE
nChannels	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_PDCFRTYPE
nChannels	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_PDCHRTYPE
nChannels	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_QCELP13TYPE
nChannels	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_QCELP8TYPE
nChannels	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE
nChannels	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_TDMAEFRTYPE
nChannels	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_TDMAFRTYPE
nChannels	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;          \/**< Number of channels *\/ $/;"	m	struct:OMX_AUDIO_PARAM_RATYPE
nChannels	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;          \/**< Number of channels in the data stream (not $/;"	m	struct:OMX_AUDIO_PARAM_ADPCMTYPE
nChannels	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;          \/**< Number of channels in the data stream (not $/;"	m	struct:OMX_AUDIO_PARAM_G726TYPE
nChannels	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;         \/**< Number of channels *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE
nChannels	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;        \/**< Number of channels *\/$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE
nChannels	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;        \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_G729TYPE
nCouplingQuantBits	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nCouplingQuantBits; \/**< is the number of coupling quantization bits in the stream *\/ $/;"	m	struct:OMX_AUDIO_PARAM_RATYPE
nCouplingStartRegion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nCouplingStartRegion;   \/**< is the coupling start region in the stream  *\/ $/;"	m	struct:OMX_AUDIO_PARAM_RATYPE
nDLSIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nDLSIndex;        \/**< DLS file index to be loaded *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE
nDLSSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nDLSSize;         \/**< Size in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE
nData	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U8 nData[1];          \/**< array of one or more bytes of meta data $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE
nDecayHighFreqRatio	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BU32 nDecayHighFreqRatio; \/**< Ratio of high frequency decay time relative $/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE
nDensity	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nDensity;             \/**< Modal density in the late reverberation decay,$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE
nDiffusion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nDiffusion;           \/**< Echo density in the late reverberation decay,$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE
nDuration	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nDuration;          \/**< The length of the currently open MIDI resource $/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE
nEncodeOptions	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U16 nEncodeOptions;   \/**< WMA Type-specific data *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE
nFeedback	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BU32 nFeedback;        \/**< Feedback from chorus output to input in percentage *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHORUSTYPE
nFileSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nFileSize;             \/**< size of the MIDI file in bytes, where the entire $/;"	m	struct:OMX_AUDIO_PARAM_MIDITYPE
nFrameLength	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nFrameLength;          \/**< Frame length (in audio samples per channel) of the codec.$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE
nIDProgram	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U16 nIDProgram;         \/**< Valid program ID range is 1 to 128 *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE
nIDSoundBank	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U16 nIDSoundBank;       \/**< Sound bank ID *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE
nIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nIndex;                 \/**< Indicates the enumeration index for the format from 0x0 to N-1 *\/$/;"	m	struct:OMX_AUDIO_PARAM_PORTFORMATTYPE
nIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nIndex;           \/**< Index of Meta Event *\/ $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE
nIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nIndex;           \/**< Index of Meta Event *\/ $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE
nMaxBitRate	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nMaxBitRate;          \/**< maximal rate for the encoder = 1,2,3,4, default = 4 *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE
nMaxBitRate	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nMaxBitRate;          \/**< maximal rate for the encoder = 1,2,3,4, default = 4 *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP13TYPE
nMaxBitRate	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nMaxBitRate;          \/**< maximal rate for the encoder = 1,2,3,4, default = 4 *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP8TYPE
nMaxBitRate	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nMaxBitRate;          \/**< maximal rate for the encoder = 1,2,3,4, default = 4 ??*\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE
nMaxBitRate	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nMaxBitRate;      \/**< Sets maximum bitrate (in bps). *\/$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE
nMaxPolyphony	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nMaxPolyphony;        \/**< Specifies the maximum simultaneous polyphonic $/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE
nMetaEventSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nMetaEventSize;   \/**< size of the Meta Event in bytes *\/ $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE
nMetaEventSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nMetaEventSize;   \/**< size of the Meta Event in bytes *\/ $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE
nMetaEventType	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U8 nMetaEventType;    \/**< Meta Event Type, 7bits (i.e. 0 - 127) *\/ $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE
nMidiEventSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nMidiEventSize;   \/**< Size of immediate MIDI events or MIP message in bytes  *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE
nMidiEvents	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U8 nMidiEvents[1];    \/**< MIDI event array to be rendered immediately, or an$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE
nMinBitRate	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nMinBitRate;          \/**< minmal rate for the encoder = 1,2,3,4, default = 1 *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE
nMinBitRate	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nMinBitRate;          \/**< minmal rate for the encoder = 1,2,3,4, default = 1 *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP13TYPE
nMinBitRate	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nMinBitRate;          \/**< minmal rate for the encoder = 1,2,3,4, default = 1 *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP8TYPE
nMinBitRate	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nMinBitRate;          \/**< minmal rate for the encoder = 1,2,3,4, default = 1 ??*\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE
nMinBitRate	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nMinBitRate;      \/**< Sets minimum bitrate (in bps). *\/$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE
nModulationDepth	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nModulationDepth;  \/**< depth of modulation as a percentage of $/;"	m	struct:OMX_AUDIO_CONFIG_CHORUSTYPE
nNumActiveVoices	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nNumActiveVoices;   \/**< Number of active voices in the currently playing $/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE
nNumMetaEvents	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nNumMetaEvents;     \/**< Total number of MIDI Meta Events in the currently $/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE
nNumRegions	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nNumRegions;        \/**< is the number of regions value *\/ $/;"	m	struct:OMX_AUDIO_PARAM_RATYPE
nNumRepeat	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nNumRepeat;           \/**< Number of times to repeat playback *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE
nNumTracks	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U16 nNumTracks;         \/**< Number of MIDI tracks in the file, read only field. $/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;                     \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_AMRTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;               \/**< port that this structure applies to *\/ $/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;             \/**< Indicates which port to set *\/$/;"	m	struct:OMX_AUDIO_PARAM_PORTFORMATTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;            \/**< Port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;            \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDITYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;            \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/ $/;"	m	struct:OMX_AUDIO_PARAM_G723TYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCEFRTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCFRTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCHRTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP13TYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP8TYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAEFRTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAFRTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< Port index indicating which port to $/;"	m	struct:OMX_AUDIO_CONFIG_BALANCETYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< Port index indicating which port to $/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< Port index indicating which port to $/;"	m	struct:OMX_AUDIO_CONFIG_MUTETYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< Port index indicating which port to $/;"	m	struct:OMX_AUDIO_CONFIG_VOLUMETYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< Port that this structure applies to *\/ $/;"	m	struct:OMX_AUDIO_PARAM_RATYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< Port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< port that this structure applies to *\/ $/;"	m	struct:OMX_AUDIO_PARAM_ADPCMTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< port that this structure applies to *\/ $/;"	m	struct:OMX_AUDIO_PARAM_G726TYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELMUTETYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_BASSTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHORUSTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_EQUALIZERTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_LOUDNESSTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_TREBLETYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< Port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/ $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/ $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_G729TYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMEFRTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMFRTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMHRTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE
nPosition	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPosition;          \/**< Current Position of the MIDI resource being played $/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE
nPosition	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nPosition;        \/**< Position of the meta-event in milliseconds *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE
nQuality	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_S32 nQuality;		  \/**< Sets encoding quality to n, between -1 (low) and 10 (high).$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE
nSamplePerFrame	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSamplePerFrame;    \/**< is the value for samples per frame *\/ $/;"	m	struct:OMX_AUDIO_PARAM_RATYPE
nSampleRate	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSampleRate;           \/**< Sampling rate of the source data.  Use 0 for$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE
nSampleRate	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSampleRate;           \/**< Sampling rate of the source data.  Use 0 for$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE
nSampleRate	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSampleRate;        \/**< Sampling rate of the source data.  Use 0 for $/;"	m	struct:OMX_AUDIO_PARAM_ADPCMTYPE
nSampleRate	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSampleRate;       \/**< Sampling rate of the source data.  Use 0 for$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE
nSampleRate	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSampleRate;      \/**< Sampling rate of the source data.  Use 0 for$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE
nSamplingRate	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSamplingRate;            \/**< Sampling rate of the source data.  Use 0 for $/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE
nSamplingRate	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSamplingRate;      \/**< is the sampling rate of the source data *\/ $/;"	m	struct:OMX_AUDIO_PARAM_RATYPE
nSamplingRate	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSamplingRate;    \/**< Sampling rate of the source data *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                          \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_AMRTYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                    \/**< Size of this structure, in Bytes *\/ $/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                  \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_PORTFORMATTYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                 \/**< Size of this structure, in Bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                 \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDITYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                 \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/ $/;"	m	struct:OMX_AUDIO_PARAM_G723TYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCEFRTYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCFRTYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCHRTYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP13TYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP8TYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAEFRTYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAFRTYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< Size of this structure, in Bytes *\/ $/;"	m	struct:OMX_AUDIO_PARAM_RATYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/ $/;"	m	struct:OMX_AUDIO_PARAM_ADPCMTYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/ $/;"	m	struct:OMX_AUDIO_PARAM_G726TYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_BALANCETYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELMUTETYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MUTETYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_VOLUMETYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_BASSTYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHORUSTYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_EQUALIZERTYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_LOUDNESSTYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_TREBLETYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/ $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/ $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_G729TYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMEFRTYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMFRTYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMHRTYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE
nSize	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE
nStereoWidening	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32  nStereoWidening;  \/**< stereo widening setting for the port,$/;"	m	struct:OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE
nStopTime	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nStopTime;            \/**< Time in milliseconds to indicate when playback $/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE
nSubbands	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSubbands;         \/**< Number of subbands *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE
nSuperBlockAlign	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nSuperBlockAlign; \/**< WMA Type-specific data *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE
nTrack	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nTrack;           \/**< track number for the meta event *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE
nTrack0031MuteMask	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nTrack0031MuteMask;   \/**< 32 bit mask for track mute status. Note: This is for tracks 0-31 *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE
nTrack0031SoloMask	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nTrack0031SoloMask;   \/**< 32 bit mask for track solo status. Note: This is for tracks 0-31 *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE
nTrack3263MuteMask	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nTrack3263MuteMask;   \/**< 32 bit mask for track mute status. Note: This is for tracks 32-63 *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE
nTrack3263SoloMask	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nTrack3263SoloMask;   \/**< 32 bit mask for track solo status. Note: This is for tracks 32-63 *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE
nTreble	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_S32  nTreble;          \/**< treble setting for the port, as a$/;"	m	struct:OMX_AUDIO_CONFIG_TREBLETYPE
nUserSoundBankIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_U32 nUserSoundBankIndex;\/**< User soundbank index, easier to access soundbanks $/;"	m	struct:OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;               \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_AMRTYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;         \/**< OMX specification version information *\/ $/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;       \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_PORTFORMATTYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;      \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;      \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDITYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;      \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/ $/;"	m	struct:OMX_AUDIO_PARAM_G723TYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCEFRTYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCFRTYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCHRTYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP13TYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP8TYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAEFRTYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAFRTYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/ $/;"	m	struct:OMX_AUDIO_PARAM_ADPCMTYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/ $/;"	m	struct:OMX_AUDIO_PARAM_G726TYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/ $/;"	m	struct:OMX_AUDIO_PARAM_RATYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_BALANCETYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELMUTETYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MUTETYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_VOLUMETYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_BASSTYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHORUSTYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_EQUALIZERTYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_LOUDNESSTYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_TREBLETYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/ $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/ $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_G729TYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMEFRTYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMFRTYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMHRTYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE
nVersion	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE
pDLSData	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_PTR pDLSData;         \/**< Pointer to DLS file data *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE
pNativeRender	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_NATIVE_DEVICETYPE pNativeRender; \/** < platform specific reference$/;"	m	struct:OMX_AUDIO_PORTDEFINITIONTYPE
sBandIndex	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BU32 sBandIndex;       \/**< Band number to be set.  Upper Limit is $/;"	m	struct:OMX_AUDIO_CONFIG_EQUALIZERTYPE
sBandLevel	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BS32 sBandLevel;       \/**< band level in millibels *\/$/;"	m	struct:OMX_AUDIO_CONFIG_EQUALIZERTYPE
sCenterFreq	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BU32 sCenterFreq;      \/**< Center frequecies in Hz.  This is a$/;"	m	struct:OMX_AUDIO_CONFIG_EQUALIZERTYPE
sDecayTime	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BU32 sDecayTime;          \/**< Late reverberation decay time at low$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE
sDelay	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BU32 sDelay;           \/**< average delay in milliseconds *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHORUSTYPE
sMaxPolyphony	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BU32 sMaxPolyphony;        \/**< Specifies the maximum simultaneous polyphonic $/;"	m	struct:OMX_AUDIO_PARAM_MIDITYPE
sModulationRate	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BU32 sModulationRate;  \/**< rate of modulation in millihertz *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHORUSTYPE
sPitchTransposition	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BS32 sPitchTransposition; \/**< Pitch transposition in semitones, stored as Q22.10 $/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE
sPlayBackRate	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BU32 sPlayBackRate;       \/**< Relative playback rate, stored as Q14.17 fixed-point$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE
sReferenceHighFreq	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BU32 sReferenceHighFreq;  \/**< Reference high frequency in Hertz. This is $/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE
sReflectionsDelay	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BU32 sReflectionsDelay;   \/**< Delay time of the first reflection relative $/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE
sReflectionsLevel	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BS32 sReflectionsLevel;   \/**< Intensity level of early reflections$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE
sReverbDelay	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BU32 sReverbDelay;        \/**< Time delay from the first early reflection $/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE
sReverbLevel	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BS32 sReverbLevel;        \/**< Intensity level of late reverberation$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE
sRoomHighFreqLevel	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BS32 sRoomHighFreqLevel;  \/**< Attenuation at high frequencies$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE
sRoomLevel	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BS32 sRoomLevel;          \/**< Intensity level for the whole room effect $/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE
sTempo	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BU32 sTempo ;             \/**< Tempo in beats per minute (BPM), stored as Q22.10 $/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE
sVolume	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BS32 sVolume;           \/**< Volume linear setting in the 0..100 range, OR$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE
sVolume	include/media/stagefright/openmax/OMX_Audio.h	/^    OMX_BS32 sVolume;           \/**< Volume linear setting in the 0..100 range, OR$/;"	m	struct:OMX_AUDIO_CONFIG_VOLUMETYPE
AllocateBuffer	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*AllocateBuffer)($/;"	m	struct:OMX_COMPONENTTYPE
ComponentDeInit	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*ComponentDeInit)($/;"	m	struct:OMX_COMPONENTTYPE
ComponentRoleEnum	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*ComponentRoleEnum)($/;"	m	struct:OMX_COMPONENTTYPE
ComponentTunnelRequest	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*ComponentTunnelRequest)($/;"	m	struct:OMX_COMPONENTTYPE
EmptyThisBuffer	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*EmptyThisBuffer)($/;"	m	struct:OMX_COMPONENTTYPE
FillThisBuffer	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*FillThisBuffer)($/;"	m	struct:OMX_COMPONENTTYPE
FreeBuffer	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*FreeBuffer)($/;"	m	struct:OMX_COMPONENTTYPE
GetComponentVersion	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*GetComponentVersion)($/;"	m	struct:OMX_COMPONENTTYPE
GetConfig	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*GetConfig)($/;"	m	struct:OMX_COMPONENTTYPE
GetExtensionIndex	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*GetExtensionIndex)($/;"	m	struct:OMX_COMPONENTTYPE
GetParameter	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*GetParameter)($/;"	m	struct:OMX_COMPONENTTYPE
GetState	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*GetState)($/;"	m	struct:OMX_COMPONENTTYPE
OMX_COMPONENTTYPE	include/media/stagefright/openmax/OMX_Component.h	/^typedef struct OMX_COMPONENTTYPE$/;"	s
OMX_COMPONENTTYPE	include/media/stagefright/openmax/OMX_Component.h	/^} OMX_COMPONENTTYPE;$/;"	t	typeref:struct:OMX_COMPONENTTYPE
OMX_CONFIG_BOOLEANTYPE	include/media/stagefright/openmax/OMX_Component.h	/^typedef struct OMX_CONFIG_BOOLEANTYPE {$/;"	s
OMX_CONFIG_BOOLEANTYPE	include/media/stagefright/openmax/OMX_Component.h	/^} OMX_CONFIG_BOOLEANTYPE;$/;"	t	typeref:struct:OMX_CONFIG_BOOLEANTYPE
OMX_CONFIG_CONTAINERNODECOUNTTYPE	include/media/stagefright/openmax/OMX_Component.h	/^typedef struct OMX_CONFIG_CONTAINERNODECOUNTTYPE$/;"	s
OMX_CONFIG_CONTAINERNODECOUNTTYPE	include/media/stagefright/openmax/OMX_Component.h	/^} OMX_CONFIG_CONTAINERNODECOUNTTYPE;$/;"	t	typeref:struct:OMX_CONFIG_CONTAINERNODECOUNTTYPE
OMX_CONFIG_CONTAINERNODEIDTYPE	include/media/stagefright/openmax/OMX_Component.h	/^typedef struct OMX_CONFIG_CONTAINERNODEIDTYPE$/;"	s
OMX_CONFIG_CONTAINERNODEIDTYPE	include/media/stagefright/openmax/OMX_Component.h	/^} OMX_CONFIG_CONTAINERNODEIDTYPE;$/;"	t	typeref:struct:OMX_CONFIG_CONTAINERNODEIDTYPE
OMX_CONFIG_METADATAITEMCOUNTTYPE	include/media/stagefright/openmax/OMX_Component.h	/^typedef struct OMX_CONFIG_METADATAITEMCOUNTTYPE$/;"	s
OMX_CONFIG_METADATAITEMCOUNTTYPE	include/media/stagefright/openmax/OMX_Component.h	/^} OMX_CONFIG_METADATAITEMCOUNTTYPE;$/;"	t	typeref:struct:OMX_CONFIG_METADATAITEMCOUNTTYPE
OMX_CONFIG_METADATAITEMTYPE	include/media/stagefright/openmax/OMX_Component.h	/^typedef struct OMX_CONFIG_METADATAITEMTYPE$/;"	s
OMX_CONFIG_METADATAITEMTYPE	include/media/stagefright/openmax/OMX_Component.h	/^} OMX_CONFIG_METADATAITEMTYPE;$/;"	t	typeref:struct:OMX_CONFIG_METADATAITEMTYPE
OMX_Component_h	include/media/stagefright/openmax/OMX_Component.h	48;"	d
OMX_METADATACHARSETTYPE	include/media/stagefright/openmax/OMX_Component.h	/^typedef enum OMX_METADATACHARSETTYPE {$/;"	g
OMX_METADATACHARSETTYPE	include/media/stagefright/openmax/OMX_Component.h	/^} OMX_METADATACHARSETTYPE;$/;"	t	typeref:enum:OMX_METADATACHARSETTYPE
OMX_METADATASCOPETYPE	include/media/stagefright/openmax/OMX_Component.h	/^typedef enum OMX_METADATASCOPETYPE$/;"	g
OMX_METADATASCOPETYPE	include/media/stagefright/openmax/OMX_Component.h	/^} OMX_METADATASCOPETYPE;$/;"	t	typeref:enum:OMX_METADATASCOPETYPE
OMX_METADATASEARCHMODETYPE	include/media/stagefright/openmax/OMX_Component.h	/^typedef enum OMX_METADATASEARCHMODETYPE$/;"	g
OMX_METADATASEARCHMODETYPE	include/media/stagefright/openmax/OMX_Component.h	/^} OMX_METADATASEARCHMODETYPE;$/;"	t	typeref:enum:OMX_METADATASEARCHMODETYPE
OMX_MetadataCharsetASCII	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetASCII,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetBig5	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetBig5,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetBinary	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetBinary,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetCodePage1252	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetCodePage1252,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetGB12345	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetGB12345,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetGB18030	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetGB18030,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetGB2312	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetGB2312,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetGBK	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetGBK,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetHZGB2312	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetHZGB2312,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO2022JP	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO2022JP,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO2022JP1	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO2022JP1,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO88591	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO88591,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO885910	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO885910,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO885913	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO885913,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO885914	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO885914,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO885915	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO885915,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO88592	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO88592,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO88593	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO88593,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO88594	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO88594,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO88595	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO88595,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO88596	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO88596,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO88597	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO88597,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO88598	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO88598,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO88599	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO88599,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISOEUCJP	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISOEUCJP,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetImapUTF7	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetImapUTF7,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetJavaConformantUTF8	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetJavaConformantUTF8,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetKhronosExtensions	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetSMS7Bit	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetSMS7Bit,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetShiftJIS	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetShiftJIS,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetTypeMax	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetTypeMax= 0x7FFFFFFF$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetUTF16BE	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetUTF16BE,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetUTF16LE	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetUTF16LE, $/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetUTF7	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetUTF7,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetUTF8	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetUTF8,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetUnknown	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetUnknown = 0,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetVendorStartUnused	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataCharsetVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataScopeAllLevels	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataScopeAllLevels,$/;"	e	enum:OMX_METADATASCOPETYPE
OMX_MetadataScopeKhronosExtensions	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataScopeKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_METADATASCOPETYPE
OMX_MetadataScopeNodeLevel	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataScopeNodeLevel,$/;"	e	enum:OMX_METADATASCOPETYPE
OMX_MetadataScopePortLevel	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataScopePortLevel,$/;"	e	enum:OMX_METADATASCOPETYPE
OMX_MetadataScopeTopLevel	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataScopeTopLevel,$/;"	e	enum:OMX_METADATASCOPETYPE
OMX_MetadataScopeTypeMax	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataScopeTypeMax = 0x7fffffff$/;"	e	enum:OMX_METADATASCOPETYPE
OMX_MetadataScopeVendorStartUnused	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataScopeVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_METADATASCOPETYPE
OMX_MetadataSearchItemByIndex	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataSearchItemByIndex,$/;"	e	enum:OMX_METADATASEARCHMODETYPE
OMX_MetadataSearchKhronosExtensions	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataSearchKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_METADATASEARCHMODETYPE
OMX_MetadataSearchNextItemByKey	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataSearchNextItemByKey,$/;"	e	enum:OMX_METADATASEARCHMODETYPE
OMX_MetadataSearchTypeMax	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataSearchTypeMax = 0x7fffffff$/;"	e	enum:OMX_METADATASEARCHMODETYPE
OMX_MetadataSearchValueSizeByIndex	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataSearchValueSizeByIndex,$/;"	e	enum:OMX_METADATASEARCHMODETYPE
OMX_MetadataSearchVendorStartUnused	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_MetadataSearchVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_METADATASEARCHMODETYPE
OMX_NotSuspended	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_NotSuspended, \/**< component is not suspended *\/$/;"	e	enum:OMX_SUSPENSIONTYPE
OMX_PARAM_CONTENTPIPETYPE	include/media/stagefright/openmax/OMX_Component.h	/^typedef struct OMX_PARAM_CONTENTPIPETYPE$/;"	s
OMX_PARAM_CONTENTPIPETYPE	include/media/stagefright/openmax/OMX_Component.h	/^} OMX_PARAM_CONTENTPIPETYPE;$/;"	t	typeref:struct:OMX_PARAM_CONTENTPIPETYPE
OMX_PARAM_CONTENTURITYPE	include/media/stagefright/openmax/OMX_Component.h	/^typedef struct OMX_PARAM_CONTENTURITYPE$/;"	s
OMX_PARAM_CONTENTURITYPE	include/media/stagefright/openmax/OMX_Component.h	/^} OMX_PARAM_CONTENTURITYPE;$/;"	t	typeref:struct:OMX_PARAM_CONTENTURITYPE
OMX_PARAM_METADATAFILTERTYPE	include/media/stagefright/openmax/OMX_Component.h	/^typedef struct OMX_PARAM_METADATAFILTERTYPE $/;"	s
OMX_PARAM_METADATAFILTERTYPE	include/media/stagefright/openmax/OMX_Component.h	/^} OMX_PARAM_METADATAFILTERTYPE; $/;"	t	typeref:struct:OMX_PARAM_METADATAFILTERTYPE
OMX_PARAM_PORTDEFINITIONTYPE	include/media/stagefright/openmax/OMX_Component.h	/^typedef struct OMX_PARAM_PORTDEFINITIONTYPE {$/;"	s
OMX_PARAM_PORTDEFINITIONTYPE	include/media/stagefright/openmax/OMX_Component.h	/^} OMX_PARAM_PORTDEFINITIONTYPE;$/;"	t	typeref:struct:OMX_PARAM_PORTDEFINITIONTYPE
OMX_PARAM_SUSPENSIONPOLICYTYPE	include/media/stagefright/openmax/OMX_Component.h	/^typedef struct OMX_PARAM_SUSPENSIONPOLICYTYPE {$/;"	s
OMX_PARAM_SUSPENSIONPOLICYTYPE	include/media/stagefright/openmax/OMX_Component.h	/^} OMX_PARAM_SUSPENSIONPOLICYTYPE;$/;"	t	typeref:struct:OMX_PARAM_SUSPENSIONPOLICYTYPE
OMX_PARAM_SUSPENSIONTYPE	include/media/stagefright/openmax/OMX_Component.h	/^typedef struct OMX_PARAM_SUSPENSIONTYPE {$/;"	s
OMX_PARAM_SUSPENSIONTYPE	include/media/stagefright/openmax/OMX_Component.h	/^} OMX_PARAM_SUSPENSIONTYPE ;$/;"	t	typeref:struct:OMX_PARAM_SUSPENSIONTYPE
OMX_PARAM_U32TYPE	include/media/stagefright/openmax/OMX_Component.h	/^typedef struct OMX_PARAM_U32TYPE { $/;"	s
OMX_PARAM_U32TYPE	include/media/stagefright/openmax/OMX_Component.h	/^} OMX_PARAM_U32TYPE;$/;"	t	typeref:struct:OMX_PARAM_U32TYPE
OMX_PORTDOMAINTYPE	include/media/stagefright/openmax/OMX_Component.h	/^typedef enum OMX_PORTDOMAINTYPE { $/;"	g
OMX_PORTDOMAINTYPE	include/media/stagefright/openmax/OMX_Component.h	/^} OMX_PORTDOMAINTYPE;$/;"	t	typeref:enum:OMX_PORTDOMAINTYPE
OMX_PortDomainAudio	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_PortDomainAudio, $/;"	e	enum:OMX_PORTDOMAINTYPE
OMX_PortDomainImage	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_PortDomainImage, $/;"	e	enum:OMX_PORTDOMAINTYPE
OMX_PortDomainKhronosExtensions	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_PortDomainKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_PORTDOMAINTYPE
OMX_PortDomainMax	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_PortDomainMax = 0x7ffffff$/;"	e	enum:OMX_PORTDOMAINTYPE
OMX_PortDomainOther	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_PortDomainOther,$/;"	e	enum:OMX_PORTDOMAINTYPE
OMX_PortDomainVendorStartUnused	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_PortDomainVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_PORTDOMAINTYPE
OMX_PortDomainVideo	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_PortDomainVideo, $/;"	e	enum:OMX_PORTDOMAINTYPE
OMX_RESOURCECONCEALMENTTYPE	include/media/stagefright/openmax/OMX_Component.h	/^typedef struct OMX_RESOURCECONCEALMENTTYPE {$/;"	s
OMX_RESOURCECONCEALMENTTYPE	include/media/stagefright/openmax/OMX_Component.h	/^} OMX_RESOURCECONCEALMENTTYPE;$/;"	t	typeref:struct:OMX_RESOURCECONCEALMENTTYPE
OMX_SUSPENSIONPOLICYTYPE	include/media/stagefright/openmax/OMX_Component.h	/^typedef enum OMX_SUSPENSIONPOLICYTYPE {$/;"	g
OMX_SUSPENSIONPOLICYTYPE	include/media/stagefright/openmax/OMX_Component.h	/^} OMX_SUSPENSIONPOLICYTYPE;$/;"	t	typeref:enum:OMX_SUSPENSIONPOLICYTYPE
OMX_SUSPENSIONTYPE	include/media/stagefright/openmax/OMX_Component.h	/^typedef enum OMX_SUSPENSIONTYPE {$/;"	g
OMX_SUSPENSIONTYPE	include/media/stagefright/openmax/OMX_Component.h	/^} OMX_SUSPENSIONTYPE;$/;"	t	typeref:enum:OMX_SUSPENSIONTYPE
OMX_SuspendMax	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_SuspendMax = 0x7FFFFFFF$/;"	e	enum:OMX_SUSPENSIONTYPE
OMX_Suspended	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_Suspended,    \/**< component is suspended *\/$/;"	e	enum:OMX_SUSPENSIONTYPE
OMX_SuspensionDisabled	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_SuspensionDisabled, \/**< No suspension; v1.0 behavior *\/$/;"	e	enum:OMX_SUSPENSIONPOLICYTYPE
OMX_SuspensionEnabled	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_SuspensionEnabled,  \/**< Suspension allowed *\/   $/;"	e	enum:OMX_SUSPENSIONPOLICYTYPE
OMX_SuspensionKhronosExtensions	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_SuspensionKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_SUSPENSIONTYPE
OMX_SuspensionPolicyKhronosExtensions	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_SuspensionPolicyKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_SUSPENSIONPOLICYTYPE
OMX_SuspensionPolicyMax	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_SuspensionPolicyMax = 0x7fffffff$/;"	e	enum:OMX_SUSPENSIONPOLICYTYPE
OMX_SuspensionPolicyStartUnused	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_SuspensionPolicyStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_SUSPENSIONPOLICYTYPE
OMX_SuspensionVendorStartUnused	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_SuspensionVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_SUSPENSIONTYPE
SendCommand	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*SendCommand)($/;"	m	struct:OMX_COMPONENTTYPE
SetCallbacks	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*SetCallbacks)($/;"	m	struct:OMX_COMPONENTTYPE
SetConfig	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*SetConfig)($/;"	m	struct:OMX_COMPONENTTYPE
SetParameter	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*SetParameter)($/;"	m	struct:OMX_COMPONENTTYPE
UseBuffer	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*UseBuffer)($/;"	m	struct:OMX_COMPONENTTYPE
UseEGLImage	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*UseEGLImage)($/;"	m	struct:OMX_COMPONENTTYPE
audio	include/media/stagefright/openmax/OMX_Component.h	/^        OMX_AUDIO_PORTDEFINITIONTYPE audio;$/;"	m	union:OMX_PARAM_PORTDEFINITIONTYPE::__anon155
bAllKeys	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_BOOL bAllKeys;	\/* if true then this structure refers to all keys and $/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE
bAllKeys	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_BOOL bAllKeys;$/;"	m	struct:OMX_CONFIG_CONTAINERNODECOUNTTYPE
bAllKeys	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_BOOL bAllKeys;$/;"	m	struct:OMX_CONFIG_CONTAINERNODEIDTYPE
bBuffersContiguous	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_BOOL bBuffersContiguous;$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE
bEnabled	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_BOOL bEnabled;	\/* if true then key is part of filter (e.g. $/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE
bEnabled	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_BOOL bEnabled;             \/**< Ports default to enabled and are enabled\/disabled by$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE
bEnabled	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_BOOL bEnabled;    $/;"	m	struct:OMX_CONFIG_BOOLEANTYPE
bIsLeafType	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_BOOL bIsLeafType;$/;"	m	struct:OMX_CONFIG_CONTAINERNODEIDTYPE
bPopulated	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_BOOL bPopulated;           \/**< Port is populated with all of its buffers as indicated by$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE
bResourceConcealmentForbidden	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_BOOL bResourceConcealmentForbidden; \/**< disallow the use of resource concealment $/;"	m	struct:OMX_RESOURCECONCEALMENTTYPE
cNodeName	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_STRING cNodeName;$/;"	m	struct:OMX_CONFIG_CONTAINERNODEIDTYPE
contentURI	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U8 contentURI[1];               \/**< The URI name *\/$/;"	m	struct:OMX_PARAM_CONTENTURITYPE
eDir	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_DIRTYPE eDir;              \/**< Direction (input or output) of this port *\/$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE
eDomain	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_PORTDOMAINTYPE eDomain;    \/**< Domain of the port. Determines the contents of metadata below. *\/$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE
eKeyCharset	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_METADATACHARSETTYPE eKeyCharset;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE
eKeyCharset	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_METADATACHARSETTYPE eKeyCharset;$/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE
ePolicy	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_SUSPENSIONPOLICYTYPE ePolicy;$/;"	m	struct:OMX_PARAM_SUSPENSIONPOLICYTYPE
eScopeMode	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_METADATASCOPETYPE eScopeMode;$/;"	m	struct:OMX_CONFIG_METADATAITEMCOUNTTYPE
eScopeMode	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_METADATASCOPETYPE eScopeMode;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE
eSearchMode	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_METADATASEARCHMODETYPE eSearchMode;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE
eType	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_SUSPENSIONTYPE eType;             $/;"	m	struct:OMX_PARAM_SUSPENSIONTYPE
eValueCharset	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_METADATACHARSETTYPE eValueCharset;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE
format	include/media/stagefright/openmax/OMX_Component.h	/^    } format;$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE	typeref:union:OMX_PARAM_PORTDEFINITIONTYPE::__anon155
hPipe	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_HANDLETYPE hPipe;       \/**< The pipe handle*\/$/;"	m	struct:OMX_PARAM_CONTENTPIPETYPE
image	include/media/stagefright/openmax/OMX_Component.h	/^        OMX_IMAGE_PORTDEFINITIONTYPE image;$/;"	m	union:OMX_PARAM_PORTDEFINITIONTYPE::__anon155
nBufferAlignment	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U32 nBufferAlignment;$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE
nBufferCountActual	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U32 nBufferCountActual;    \/**< The actual number of buffers allocated on this port *\/$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE
nBufferCountMin	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U32 nBufferCountMin;       \/**< The minimum number of buffers this port requires *\/$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE
nBufferSize	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U32 nBufferSize;           \/**< Size, in bytes, for buffers to be used for this channel *\/$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE
nKey	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U8   nKey [128]; $/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE
nKey	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U8 nKey[128];$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE
nKeySizeUsed	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U32 nKeySizeUsed; $/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE
nKeySizeUsed	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U8 nKeySizeUsed;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE
nLanguageCountry	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U8 nLanguageCountry[128];$/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE
nLanguageCountrySizeUsed	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U32 nLanguageCountrySizeUsed;$/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE
nMetadataItemCount	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U32 nMetadataItemCount;$/;"	m	struct:OMX_CONFIG_METADATAITEMCOUNTTYPE
nMetadataItemIndex	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U32 nMetadataItemIndex;  $/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE
nNodeID	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U32 nNodeID; $/;"	m	struct:OMX_CONFIG_CONTAINERNODEIDTYPE
nNodeIndex	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U32 nNodeIndex; $/;"	m	struct:OMX_CONFIG_CONTAINERNODEIDTYPE
nNumNodes	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U32 nNumNodes;$/;"	m	struct:OMX_CONFIG_CONTAINERNODECOUNTTYPE
nParentNodeID	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U32 nParentNodeID;$/;"	m	struct:OMX_CONFIG_CONTAINERNODECOUNTTYPE
nParentNodeID	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U32 nParentNodeID;$/;"	m	struct:OMX_CONFIG_CONTAINERNODEIDTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U32 nPortIndex;               \/**< port that this structure applies to *\/ $/;"	m	struct:OMX_PARAM_U32TYPE
nPortIndex	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U32 nPortIndex;            \/**< Port number the structure applies to *\/$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE
nScopeSpecifier	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U32 nScopeSpecifier;$/;"	m	struct:OMX_CONFIG_METADATAITEMCOUNTTYPE
nScopeSpecifier	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U32 nScopeSpecifier;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE
nSize	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U32 nSize;                      \/**< size of the structure in bytes, including$/;"	m	struct:OMX_PARAM_CONTENTURITYPE
nSize	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U32 nSize;                    \/**< Size of this structure, in Bytes *\/ $/;"	m	struct:OMX_PARAM_U32TYPE
nSize	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U32 nSize;                  $/;"	m	struct:OMX_PARAM_SUSPENSIONPOLICYTYPE
nSize	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U32 nSize;                  $/;"	m	struct:OMX_PARAM_SUSPENSIONTYPE
nSize	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U32 nSize;                 \/**< Size of the structure in bytes *\/$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE
nSize	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_PARAM_CONTENTPIPETYPE
nSize	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_RESOURCECONCEALMENTTYPE
nSize	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U32 nSize; $/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE
nSize	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_COMPONENTTYPE
nSize	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_BOOLEANTYPE
nSize	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_CONTAINERNODECOUNTTYPE
nSize	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_CONTAINERNODEIDTYPE
nSize	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_METADATAITEMCOUNTTYPE
nSize	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE
nU32	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U32 nU32;                     \/**< U32 value *\/$/;"	m	struct:OMX_PARAM_U32TYPE
nValue	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U8 nValue[1];$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE
nValueMaxSize	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U32 nValueMaxSize;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE
nValueSizeUsed	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_U32 nValueSizeUsed;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE
nVersion	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;           \/**< OMX specification version information *\/$/;"	m	struct:OMX_PARAM_CONTENTURITYPE
nVersion	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;         \/**< OMX specification version information *\/ $/;"	m	struct:OMX_PARAM_U32TYPE
nVersion	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;        $/;"	m	struct:OMX_PARAM_SUSPENSIONPOLICYTYPE
nVersion	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;       $/;"	m	struct:OMX_PARAM_SUSPENSIONTYPE
nVersion	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;      \/**< OMX specification version information *\/$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE
nVersion	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_PARAM_CONTENTPIPETYPE
nVersion	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_RESOURCECONCEALMENTTYPE
nVersion	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion; $/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE
nVersion	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_COMPONENTTYPE
nVersion	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_BOOLEANTYPE
nVersion	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_CONTAINERNODECOUNTTYPE
nVersion	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_CONTAINERNODEIDTYPE
nVersion	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_METADATAITEMCOUNTTYPE
nVersion	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE
other	include/media/stagefright/openmax/OMX_Component.h	/^        OMX_OTHER_PORTDEFINITIONTYPE other;$/;"	m	union:OMX_PARAM_PORTDEFINITIONTYPE::__anon155
pApplicationPrivate	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_PTR pApplicationPrivate;$/;"	m	struct:OMX_COMPONENTTYPE
pComponentPrivate	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_PTR pComponentPrivate;$/;"	m	struct:OMX_COMPONENTTYPE
sLanguageCountry	include/media/stagefright/openmax/OMX_Component.h	/^    OMX_STRING sLanguageCountry;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE
video	include/media/stagefright/openmax/OMX_Component.h	/^        OMX_VIDEO_PORTDEFINITIONTYPE video;$/;"	m	union:OMX_PARAM_PORTDEFINITIONTYPE::__anon155
CP_ACCESSTYPE	include/media/stagefright/openmax/OMX_ContentPipe.h	/^typedef enum CP_ACCESSTYPE {$/;"	g
CP_ACCESSTYPE	include/media/stagefright/openmax/OMX_ContentPipe.h	/^} CP_ACCESSTYPE;$/;"	t	typeref:enum:CP_ACCESSTYPE
CP_AccessKhronosExtensions	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CP_AccessKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:CP_ACCESSTYPE
CP_AccessMax	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CP_AccessMax = 0X7FFFFFFF$/;"	e	enum:CP_ACCESSTYPE
CP_AccessRead	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CP_AccessRead,      $/;"	e	enum:CP_ACCESSTYPE
CP_AccessReadWrite	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CP_AccessReadWrite ,  $/;"	e	enum:CP_ACCESSTYPE
CP_AccessVendorStartUnused	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CP_AccessVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:CP_ACCESSTYPE
CP_AccessWrite	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CP_AccessWrite,  $/;"	e	enum:CP_ACCESSTYPE
CP_BytesAvailable	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CP_BytesAvailable,      	    \/** bytes requested in a CheckAvailableBytes call are now available*\/$/;"	e	enum:CP_EVENTTYPE
CP_CHECKBYTESRESULTTYPE	include/media/stagefright/openmax/OMX_ContentPipe.h	/^typedef enum CP_CHECKBYTESRESULTTYPE$/;"	g
CP_CHECKBYTESRESULTTYPE	include/media/stagefright/openmax/OMX_ContentPipe.h	/^} CP_CHECKBYTESRESULTTYPE;$/;"	t	typeref:enum:CP_CHECKBYTESRESULTTYPE
CP_CheckBytesAtEndOfStream	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CP_CheckBytesAtEndOfStream,         \/**< The pipe has reached the end of stream$/;"	e	enum:CP_CHECKBYTESRESULTTYPE
CP_CheckBytesInsufficientBytes	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CP_CheckBytesInsufficientBytes  ,     \/**< The pipe has retrieved all bytes $/;"	e	enum:CP_CHECKBYTESRESULTTYPE
CP_CheckBytesKhronosExtensions	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CP_CheckBytesKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:CP_CHECKBYTESRESULTTYPE
CP_CheckBytesMax	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CP_CheckBytesMax = 0X7FFFFFFF$/;"	e	enum:CP_CHECKBYTESRESULTTYPE
CP_CheckBytesNotReady	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CP_CheckBytesNotReady,              \/**< The pipe is still retrieving bytes $/;"	e	enum:CP_CHECKBYTESRESULTTYPE
CP_CheckBytesOk	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CP_CheckBytesOk,                    \/**< There are at least the request number $/;"	e	enum:CP_CHECKBYTESRESULTTYPE
CP_CheckBytesOutOfBuffers	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CP_CheckBytesOutOfBuffers,          \/**< All read\/write buffers are currently in use. *\/$/;"	e	enum:CP_CHECKBYTESRESULTTYPE
CP_CheckBytesVendorStartUnused	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CP_CheckBytesVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:CP_CHECKBYTESRESULTTYPE
CP_EVENTTYPE	include/media/stagefright/openmax/OMX_ContentPipe.h	/^typedef enum CP_EVENTTYPE{$/;"	g
CP_EVENTTYPE	include/media/stagefright/openmax/OMX_ContentPipe.h	/^} CP_EVENTTYPE;$/;"	t	typeref:enum:CP_EVENTTYPE
CP_EventKhronosExtensions	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CP_EventKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:CP_EVENTTYPE
CP_EventMax	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CP_EventMax = 0X7FFFFFFF$/;"	e	enum:CP_EVENTTYPE
CP_EventVendorStartUnused	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CP_EventVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:CP_EVENTTYPE
CP_ORIGINTYPE	include/media/stagefright/openmax/OMX_ContentPipe.h	/^typedef enum CP_ORIGINTYPE {$/;"	g
CP_ORIGINTYPE	include/media/stagefright/openmax/OMX_ContentPipe.h	/^} CP_ORIGINTYPE;$/;"	t	typeref:enum:CP_ORIGINTYPE
CP_OriginBegin	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CP_OriginBegin,      $/;"	e	enum:CP_ORIGINTYPE
CP_OriginCur	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CP_OriginCur,      $/;"	e	enum:CP_ORIGINTYPE
CP_OriginEnd	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CP_OriginEnd,      $/;"	e	enum:CP_ORIGINTYPE
CP_OriginKhronosExtensions	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CP_OriginKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:CP_ORIGINTYPE
CP_OriginMax	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CP_OriginMax = 0X7FFFFFFF$/;"	e	enum:CP_ORIGINTYPE
CP_OriginVendorStartUnused	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CP_OriginVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:CP_ORIGINTYPE
CP_Overflow	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CP_Overflow,  		           \/** enumeration of content pipe events sent to the client callback*\/$/;"	e	enum:CP_EVENTTYPE
CP_PIPETYPE	include/media/stagefright/openmax/OMX_ContentPipe.h	/^typedef struct CP_PIPETYPE$/;"	s
CP_PIPETYPE	include/media/stagefright/openmax/OMX_ContentPipe.h	/^} CP_PIPETYPE;$/;"	t	typeref:struct:CP_PIPETYPE
CP_PipeDisconnected	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CP_PipeDisconnected  ,  		    \/** enumeration of content pipe events sent to the client callback*\/$/;"	e	enum:CP_EVENTTYPE
CPbool	include/media/stagefright/openmax/OMX_ContentPipe.h	/^typedef OMX_BOOL   CPbool;$/;"	t
CPbyte	include/media/stagefright/openmax/OMX_ContentPipe.h	/^typedef char       CPbyte;  $/;"	t
CPhandle	include/media/stagefright/openmax/OMX_ContentPipe.h	/^typedef void *     CPhandle;$/;"	t
CPint	include/media/stagefright/openmax/OMX_ContentPipe.h	/^typedef OMX_S32    CPint;  $/;"	t
CPresult	include/media/stagefright/openmax/OMX_ContentPipe.h	/^typedef OMX_U32    CPresult;$/;"	t
CPstring	include/media/stagefright/openmax/OMX_ContentPipe.h	/^typedef char *     CPstring;  $/;"	t
CPuint	include/media/stagefright/openmax/OMX_ContentPipe.h	/^typedef OMX_U32    CPuint;$/;"	t
CheckAvailableBytes	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CPresult (*CheckAvailableBytes)( CPhandle hContent, CPuint nBytesRequested, CP_CHECKBYTESRESULTTYPE *eResult );$/;"	m	struct:CP_PIPETYPE
Close	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CPresult (*Close)( CPhandle hContent );$/;"	m	struct:CP_PIPETYPE
Create	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CPresult (*Create)( CPhandle *hContent, CPstring szURI );$/;"	m	struct:CP_PIPETYPE
GetPosition	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CPresult (*GetPosition)( CPhandle hContent, CPuint *pPosition);$/;"	m	struct:CP_PIPETYPE
GetWriteBuffer	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CPresult (*GetWriteBuffer)( CPhandle hContent, CPbyte **ppBuffer, CPuint nSize);$/;"	m	struct:CP_PIPETYPE
KD_EACCES	include/media/stagefright/openmax/OMX_ContentPipe.h	53;"	d
KD_EADDRINUSE	include/media/stagefright/openmax/OMX_ContentPipe.h	54;"	d
KD_EAGAIN	include/media/stagefright/openmax/OMX_ContentPipe.h	55;"	d
KD_EBADF	include/media/stagefright/openmax/OMX_ContentPipe.h	56;"	d
KD_EBUSY	include/media/stagefright/openmax/OMX_ContentPipe.h	57;"	d
KD_ECONNREFUSED	include/media/stagefright/openmax/OMX_ContentPipe.h	58;"	d
KD_ECONNRESET	include/media/stagefright/openmax/OMX_ContentPipe.h	59;"	d
KD_EDEADLK	include/media/stagefright/openmax/OMX_ContentPipe.h	60;"	d
KD_EDESTADDRREQ	include/media/stagefright/openmax/OMX_ContentPipe.h	61;"	d
KD_EEXIST	include/media/stagefright/openmax/OMX_ContentPipe.h	63;"	d
KD_EFBIG	include/media/stagefright/openmax/OMX_ContentPipe.h	64;"	d
KD_EHOSTUNREACH	include/media/stagefright/openmax/OMX_ContentPipe.h	65;"	d
KD_EILSEQ	include/media/stagefright/openmax/OMX_ContentPipe.h	79;"	d
KD_EINVAL	include/media/stagefright/openmax/OMX_ContentPipe.h	66;"	d
KD_EIO	include/media/stagefright/openmax/OMX_ContentPipe.h	67;"	d
KD_EISCONN	include/media/stagefright/openmax/OMX_ContentPipe.h	68;"	d
KD_EISDIR	include/media/stagefright/openmax/OMX_ContentPipe.h	69;"	d
KD_EMFILE	include/media/stagefright/openmax/OMX_ContentPipe.h	70;"	d
KD_ENAMETOOLONG	include/media/stagefright/openmax/OMX_ContentPipe.h	71;"	d
KD_ENOENT	include/media/stagefright/openmax/OMX_ContentPipe.h	72;"	d
KD_ENOMEM	include/media/stagefright/openmax/OMX_ContentPipe.h	73;"	d
KD_ENOSPC	include/media/stagefright/openmax/OMX_ContentPipe.h	74;"	d
KD_ENOSYS	include/media/stagefright/openmax/OMX_ContentPipe.h	75;"	d
KD_ENOTCONN	include/media/stagefright/openmax/OMX_ContentPipe.h	76;"	d
KD_EPERM	include/media/stagefright/openmax/OMX_ContentPipe.h	77;"	d
KD_ERANGE	include/media/stagefright/openmax/OMX_ContentPipe.h	62;"	d
KD_ETIMEDOUT	include/media/stagefright/openmax/OMX_ContentPipe.h	78;"	d
OMX_CONTENTPIPE_H	include/media/stagefright/openmax/OMX_ContentPipe.h	48;"	d
Open	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CPresult (*Open)( CPhandle* hContent, CPstring szURI, CP_ACCESSTYPE eAccess );$/;"	m	struct:CP_PIPETYPE
Read	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CPresult (*Read)( CPhandle hContent, CPbyte *pData, CPuint nSize); $/;"	m	struct:CP_PIPETYPE
ReadBuffer	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CPresult (*ReadBuffer)( CPhandle hContent, CPbyte **ppBuffer, CPuint *nSize, CPbool bForbidCopy);$/;"	m	struct:CP_PIPETYPE
RegisterCallback	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CPresult (*RegisterCallback)( CPhandle hContent, CPresult (*ClientCallback)(CP_EVENTTYPE eEvent, CPuint iParam));$/;"	m	struct:CP_PIPETYPE
ReleaseReadBuffer	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CPresult (*ReleaseReadBuffer)(CPhandle hContent, CPbyte *pBuffer);$/;"	m	struct:CP_PIPETYPE
SetPosition	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CPresult (*SetPosition)( CPhandle  hContent, CPint nOffset, CP_ORIGINTYPE eOrigin);$/;"	m	struct:CP_PIPETYPE
Write	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CPresult (*Write)( CPhandle hContent, CPbyte *data, CPuint nSize); $/;"	m	struct:CP_PIPETYPE
WriteBuffer	include/media/stagefright/openmax/OMX_ContentPipe.h	/^    CPresult (*WriteBuffer)( CPhandle hContent, CPbyte *pBuffer, CPuint nFilledSize);$/;"	m	struct:CP_PIPETYPE
EmptyBufferDone	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_ERRORTYPE (*EmptyBufferDone)($/;"	m	struct:OMX_CALLBACKTYPE
EventHandler	include/media/stagefright/openmax/OMX_Core.h	/^   OMX_ERRORTYPE (*EventHandler)($/;"	m	struct:OMX_CALLBACKTYPE
FillBufferDone	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_ERRORTYPE (*FillBufferDone)($/;"	m	struct:OMX_CALLBACKTYPE
OMX_AllocateBuffer	include/media/stagefright/openmax/OMX_Core.h	1045;"	d
OMX_BUFFERFLAG_CODECCONFIG	include/media/stagefright/openmax/OMX_Core.h	410;"	d
OMX_BUFFERFLAG_DATACORRUPT	include/media/stagefright/openmax/OMX_Core.h	373;"	d
OMX_BUFFERFLAG_DECODEONLY	include/media/stagefright/openmax/OMX_Core.h	366;"	d
OMX_BUFFERFLAG_ENDOFFRAME	include/media/stagefright/openmax/OMX_Core.h	380;"	d
OMX_BUFFERFLAG_EOS	include/media/stagefright/openmax/OMX_Core.h	316;"	d
OMX_BUFFERFLAG_EXTRADATA	include/media/stagefright/openmax/OMX_Core.h	392;"	d
OMX_BUFFERFLAG_STARTTIME	include/media/stagefright/openmax/OMX_Core.h	343;"	d
OMX_BUFFERFLAG_SYNCFRAME	include/media/stagefright/openmax/OMX_Core.h	386;"	d
OMX_BUFFERHEADERTYPE	include/media/stagefright/openmax/OMX_Core.h	/^typedef struct OMX_BUFFERHEADERTYPE$/;"	s
OMX_BUFFERHEADERTYPE	include/media/stagefright/openmax/OMX_Core.h	/^} OMX_BUFFERHEADERTYPE;$/;"	t	typeref:struct:OMX_BUFFERHEADERTYPE
OMX_BUFFERSUPPLIERTYPE	include/media/stagefright/openmax/OMX_Core.h	/^typedef enum OMX_BUFFERSUPPLIERTYPE$/;"	g
OMX_BUFFERSUPPLIERTYPE	include/media/stagefright/openmax/OMX_Core.h	/^} OMX_BUFFERSUPPLIERTYPE;$/;"	t	typeref:enum:OMX_BUFFERSUPPLIERTYPE
OMX_BufferSupplyInput	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_BufferSupplyInput,             \/**< input port supplies the buffers *\/$/;"	e	enum:OMX_BUFFERSUPPLIERTYPE
OMX_BufferSupplyKhronosExtensions	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_BufferSupplyKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_BUFFERSUPPLIERTYPE
OMX_BufferSupplyMax	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_BufferSupplyMax = 0x7FFFFFFF$/;"	e	enum:OMX_BUFFERSUPPLIERTYPE
OMX_BufferSupplyOutput	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_BufferSupplyOutput,            \/**< output port supplies the buffers *\/$/;"	e	enum:OMX_BUFFERSUPPLIERTYPE
OMX_BufferSupplyUnspecified	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_BufferSupplyUnspecified = 0x0, \/**< port supplying the buffers is unspecified,$/;"	e	enum:OMX_BUFFERSUPPLIERTYPE
OMX_BufferSupplyVendorStartUnused	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_BufferSupplyVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_BUFFERSUPPLIERTYPE
OMX_CALLBACKTYPE	include/media/stagefright/openmax/OMX_Core.h	/^typedef struct OMX_CALLBACKTYPE$/;"	s
OMX_CALLBACKTYPE	include/media/stagefright/openmax/OMX_Core.h	/^} OMX_CALLBACKTYPE;$/;"	t	typeref:struct:OMX_CALLBACKTYPE
OMX_COMMANDTYPE	include/media/stagefright/openmax/OMX_Core.h	/^typedef enum OMX_COMMANDTYPE$/;"	g
OMX_COMMANDTYPE	include/media/stagefright/openmax/OMX_Core.h	/^} OMX_COMMANDTYPE;$/;"	t	typeref:enum:OMX_COMMANDTYPE
OMX_COMPONENTINITTYPE	include/media/stagefright/openmax/OMX_Core.h	/^typedef OMX_ERRORTYPE (* OMX_COMPONENTINITTYPE)(OMX_IN  OMX_HANDLETYPE hComponent);$/;"	t
OMX_COMPONENTREGISTERTYPE	include/media/stagefright/openmax/OMX_Core.h	/^typedef struct OMX_COMPONENTREGISTERTYPE$/;"	s
OMX_COMPONENTREGISTERTYPE	include/media/stagefright/openmax/OMX_Core.h	/^} OMX_COMPONENTREGISTERTYPE;$/;"	t	typeref:struct:OMX_COMPONENTREGISTERTYPE
OMX_CommandFlush	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_CommandFlush,       \/**< Flush the data queue(s) of a component *\/$/;"	e	enum:OMX_COMMANDTYPE
OMX_CommandKhronosExtensions	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_CommandKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_COMMANDTYPE
OMX_CommandMarkBuffer	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_CommandMarkBuffer,  \/**< Mark a component\/buffer for observation *\/$/;"	e	enum:OMX_COMMANDTYPE
OMX_CommandMax	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_CommandMax = 0X7FFFFFFF$/;"	e	enum:OMX_COMMANDTYPE
OMX_CommandPortDisable	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_CommandPortDisable, \/**< Disable a port on a component. *\/$/;"	e	enum:OMX_COMMANDTYPE
OMX_CommandPortEnable	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_CommandPortEnable,  \/**< Enable a port on a component. *\/$/;"	e	enum:OMX_COMMANDTYPE
OMX_CommandStateSet	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_CommandStateSet,    \/**< Change the component state *\/$/;"	e	enum:OMX_COMMANDTYPE
OMX_CommandVendorStartUnused	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_CommandVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_COMMANDTYPE
OMX_Core_h	include/media/stagefright/openmax/OMX_Core.h	47;"	d
OMX_ERRORTYPE	include/media/stagefright/openmax/OMX_Core.h	/^typedef enum OMX_ERRORTYPE$/;"	g
OMX_ERRORTYPE	include/media/stagefright/openmax/OMX_Core.h	/^} OMX_ERRORTYPE;$/;"	t	typeref:enum:OMX_ERRORTYPE
OMX_EVENTTYPE	include/media/stagefright/openmax/OMX_Core.h	/^typedef enum OMX_EVENTTYPE$/;"	g
OMX_EVENTTYPE	include/media/stagefright/openmax/OMX_Core.h	/^} OMX_EVENTTYPE;$/;"	t	typeref:enum:OMX_EVENTTYPE
OMX_EXTRADATATYPE	include/media/stagefright/openmax/OMX_Core.h	/^typedef enum OMX_EXTRADATATYPE$/;"	g
OMX_EXTRADATATYPE	include/media/stagefright/openmax/OMX_Core.h	/^} OMX_EXTRADATATYPE;$/;"	t	typeref:enum:OMX_EXTRADATATYPE
OMX_EmptyThisBuffer	include/media/stagefright/openmax/OMX_Core.h	1113;"	d
OMX_ErrorBadParameter	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorBadParameter = (OMX_S32) 0x80001005,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorBadPortIndex	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorBadPortIndex = (OMX_S32) 0x8000101B,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorComponentNotFound	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorComponentNotFound = (OMX_S32) 0x80001003,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorComponentSuspended	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorComponentSuspended = (OMX_S32) 0x8000101D,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorContentPipeCreationFailed	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorContentPipeCreationFailed = (OMX_S32) 0x80001022,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorContentPipeOpenFailed	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorContentPipeOpenFailed = (OMX_S32) 0x80001021,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorDynamicResourcesUnavailable	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorDynamicResourcesUnavailable = (OMX_S32) 0x8000101E,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorFormatNotDetected	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorFormatNotDetected = (OMX_S32) 0x80001020, $/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorHardware	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorHardware = (OMX_S32) 0x80001009,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorIncorrectStateOperation	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorIncorrectStateOperation = (OMX_S32) 0x80001018, $/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorIncorrectStateTransition	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorIncorrectStateTransition = (OMX_S32) 0x80001017,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorInsufficientResources	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorInsufficientResources = (OMX_S32) 0x80001000,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorInvalidComponent	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorInvalidComponent = (OMX_S32) 0x80001004,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorInvalidComponentName	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorInvalidComponentName = (OMX_S32) 0x80001002,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorInvalidState	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorInvalidState = (OMX_S32) 0x8000100A,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorKhronosExtensions	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorKhronosExtensions = (OMX_S32)0x8F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorMax	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorMax = 0x7FFFFFFF$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorMbErrorsInFrame	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorMbErrorsInFrame = (OMX_S32) 0x8000101F,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorNoMore	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorNoMore = (OMX_S32) 0x8000100E,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorNone	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorNone = 0,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorNotImplemented	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorNotImplemented = (OMX_S32) 0x80001006,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorNotReady	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorNotReady = (OMX_S32) 0x80001010,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorOverflow	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorOverflow = (OMX_S32) 0x80001008,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorPortUnpopulated	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorPortUnpopulated = (OMX_S32) 0x8000101C,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorPortUnresponsiveDuringAllocation	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorPortUnresponsiveDuringAllocation = (OMX_S32) 0x80001014,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorPortUnresponsiveDuringDeallocation	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorPortUnresponsiveDuringDeallocation = (OMX_S32) 0x80001015,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorPortUnresponsiveDuringStop	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorPortUnresponsiveDuringStop = (OMX_S32) 0x80001016,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorPortsNotCompatible	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorPortsNotCompatible = (OMX_S32) 0x8000100C,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorResourcesLost	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorResourcesLost = (OMX_S32) 0x8000100D,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorResourcesPreempted	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorResourcesPreempted = (OMX_S32) 0x80001013, $/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorSameState	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorSameState = (OMX_S32) 0x80001012,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorSeperateTablesUsed	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorSeperateTablesUsed = (OMX_S32) 0x80001023,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorStreamCorrupt	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorStreamCorrupt = (OMX_S32) 0x8000100B,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorTimeout	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorTimeout = (OMX_S32) 0x80001011,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorTunnelingUnsupported	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorTunnelingUnsupported = (OMX_S32) 0x80001024,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorUndefined	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorUndefined = (OMX_S32) 0x80001001,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorUnderflow	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorUnderflow = (OMX_S32) 0x80001007,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorUnsupportedIndex	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorUnsupportedIndex = (OMX_S32) 0x8000101A,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorUnsupportedSetting	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorUnsupportedSetting = (OMX_S32) 0x80001019,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorVendorStartUnused	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorVendorStartUnused = (OMX_S32)0x90000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorVersionMismatch	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_ErrorVersionMismatch = (OMX_S32) 0x8000100F,$/;"	e	enum:OMX_ERRORTYPE
OMX_EventBufferFlag	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_EventBufferFlag,          \/**< component has detected an EOS *\/ $/;"	e	enum:OMX_EVENTTYPE
OMX_EventCmdComplete	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_EventCmdComplete,         \/**< component has sucessfully completed a command *\/$/;"	e	enum:OMX_EVENTTYPE
OMX_EventComponentResumed	include/media/stagefright/openmax/OMX_Core.h	/^   OMX_EventComponentResumed,     \/**< Component resumed due to reacquisition of resources *\/$/;"	e	enum:OMX_EVENTTYPE
OMX_EventDynamicResourcesAvailable	include/media/stagefright/openmax/OMX_Core.h	/^   OMX_EventDynamicResourcesAvailable, \/**< Component has acquired previously unavailable dynamic resources *\/$/;"	e	enum:OMX_EVENTTYPE
OMX_EventError	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_EventError,               \/**< component has detected an error condition *\/$/;"	e	enum:OMX_EVENTTYPE
OMX_EventKhronosExtensions	include/media/stagefright/openmax/OMX_Core.h	/^   OMX_EventKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_EVENTTYPE
OMX_EventMark	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_EventMark,                \/**< component has detected a buffer mark *\/$/;"	e	enum:OMX_EVENTTYPE
OMX_EventMax	include/media/stagefright/openmax/OMX_Core.h	/^   OMX_EventMax = 0x7FFFFFFF$/;"	e	enum:OMX_EVENTTYPE
OMX_EventPortFormatDetected	include/media/stagefright/openmax/OMX_Core.h	/^   OMX_EventPortFormatDetected,      \/**< Component has detected a supported format. *\/$/;"	e	enum:OMX_EVENTTYPE
OMX_EventPortSettingsChanged	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_EventPortSettingsChanged, \/**< component is reported a port settings change *\/$/;"	e	enum:OMX_EVENTTYPE
OMX_EventResourcesAcquired	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_EventResourcesAcquired,   \/**< component has been granted resources and is$/;"	e	enum:OMX_EVENTTYPE
OMX_EventVendorStartUnused	include/media/stagefright/openmax/OMX_Core.h	/^   OMX_EventVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_EVENTTYPE
OMX_ExtraDataKhronosExtensions	include/media/stagefright/openmax/OMX_Core.h	/^   OMX_ExtraDataKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_EXTRADATATYPE
OMX_ExtraDataMax	include/media/stagefright/openmax/OMX_Core.h	/^   OMX_ExtraDataMax = 0x7FFFFFFF$/;"	e	enum:OMX_EXTRADATATYPE
OMX_ExtraDataNone	include/media/stagefright/openmax/OMX_Core.h	/^   OMX_ExtraDataNone = 0,                       \/**< Indicates that no more extra data sections follow *\/        $/;"	e	enum:OMX_EXTRADATATYPE
OMX_ExtraDataQuantization	include/media/stagefright/openmax/OMX_Core.h	/^   OMX_ExtraDataQuantization,                   \/**< The data payload contains quantization data *\/$/;"	e	enum:OMX_EXTRADATATYPE
OMX_ExtraDataVendorStartUnused	include/media/stagefright/openmax/OMX_Core.h	/^   OMX_ExtraDataVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_EXTRADATATYPE
OMX_FillThisBuffer	include/media/stagefright/openmax/OMX_Core.h	1143;"	d
OMX_FreeBuffer	include/media/stagefright/openmax/OMX_Core.h	1081;"	d
OMX_GetComponentVersion	include/media/stagefright/openmax/OMX_Core.h	701;"	d
OMX_GetConfig	include/media/stagefright/openmax/OMX_Core.h	878;"	d
OMX_GetExtensionIndex	include/media/stagefright/openmax/OMX_Core.h	948;"	d
OMX_GetParameter	include/media/stagefright/openmax/OMX_Core.h	803;"	d
OMX_GetState	include/media/stagefright/openmax/OMX_Core.h	975;"	d
OMX_MAX_STRINGNAME_SIZE	include/media/stagefright/openmax/OMX_Core.h	298;"	d
OMX_OTHER_EXTRADATATYPE	include/media/stagefright/openmax/OMX_Core.h	/^typedef struct OMX_OTHER_EXTRADATATYPE  {$/;"	s
OMX_OTHER_EXTRADATATYPE	include/media/stagefright/openmax/OMX_Core.h	/^} OMX_OTHER_EXTRADATATYPE;$/;"	t	typeref:struct:OMX_OTHER_EXTRADATATYPE
OMX_PARAM_BUFFERSUPPLIERTYPE	include/media/stagefright/openmax/OMX_Core.h	/^typedef struct OMX_PARAM_BUFFERSUPPLIERTYPE {$/;"	s
OMX_PARAM_BUFFERSUPPLIERTYPE	include/media/stagefright/openmax/OMX_Core.h	/^} OMX_PARAM_BUFFERSUPPLIERTYPE;$/;"	t	typeref:struct:OMX_PARAM_BUFFERSUPPLIERTYPE
OMX_PARAM_COMPONENTROLETYPE	include/media/stagefright/openmax/OMX_Core.h	/^typedef struct OMX_PARAM_COMPONENTROLETYPE {$/;"	s
OMX_PARAM_COMPONENTROLETYPE	include/media/stagefright/openmax/OMX_Core.h	/^} OMX_PARAM_COMPONENTROLETYPE;$/;"	t	typeref:struct:OMX_PARAM_COMPONENTROLETYPE
OMX_PORTTUNNELFLAG_READONLY	include/media/stagefright/openmax/OMX_Core.h	644;"	d
OMX_PORT_PARAM_TYPE	include/media/stagefright/openmax/OMX_Core.h	/^typedef struct OMX_PORT_PARAM_TYPE {$/;"	s
OMX_PORT_PARAM_TYPE	include/media/stagefright/openmax/OMX_Core.h	/^} OMX_PORT_PARAM_TYPE; $/;"	t	typeref:struct:OMX_PORT_PARAM_TYPE
OMX_PRIORITYMGMTTYPE	include/media/stagefright/openmax/OMX_Core.h	/^typedef struct OMX_PRIORITYMGMTTYPE {$/;"	s
OMX_PRIORITYMGMTTYPE	include/media/stagefright/openmax/OMX_Core.h	/^} OMX_PRIORITYMGMTTYPE;$/;"	t	typeref:struct:OMX_PRIORITYMGMTTYPE
OMX_STATETYPE	include/media/stagefright/openmax/OMX_Core.h	/^typedef enum OMX_STATETYPE$/;"	g
OMX_STATETYPE	include/media/stagefright/openmax/OMX_Core.h	/^} OMX_STATETYPE;$/;"	t	typeref:enum:OMX_STATETYPE
OMX_SendCommand	include/media/stagefright/openmax/OMX_Core.h	762;"	d
OMX_SetConfig	include/media/stagefright/openmax/OMX_Core.h	914;"	d
OMX_SetParameter	include/media/stagefright/openmax/OMX_Core.h	842;"	d
OMX_StateExecuting	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_StateExecuting,   \/**< component has accepted the start command and$/;"	e	enum:OMX_STATETYPE
OMX_StateIdle	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_StateIdle,        \/**< component initialization has been completed$/;"	e	enum:OMX_STATETYPE
OMX_StateInvalid	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_StateInvalid,      \/**< component has detected that it's internal data $/;"	e	enum:OMX_STATETYPE
OMX_StateKhronosExtensions	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_StateKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_STATETYPE
OMX_StateLoaded	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_StateLoaded,      \/**< component has been loaded but has not completed$/;"	e	enum:OMX_STATETYPE
OMX_StateMax	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_StateMax = 0X7FFFFFFF$/;"	e	enum:OMX_STATETYPE
OMX_StatePause	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_StatePause,       \/**< component has received pause command *\/$/;"	e	enum:OMX_STATETYPE
OMX_StateVendorStartUnused	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_StateVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_STATETYPE
OMX_StateWaitForResources	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_StateWaitForResources, \/**< component is waiting for resources, either after $/;"	e	enum:OMX_STATETYPE
OMX_TUNNELSETUPTYPE	include/media/stagefright/openmax/OMX_Core.h	/^typedef struct OMX_TUNNELSETUPTYPE$/;"	s
OMX_TUNNELSETUPTYPE	include/media/stagefright/openmax/OMX_Core.h	/^} OMX_TUNNELSETUPTYPE; $/;"	t	typeref:struct:OMX_TUNNELSETUPTYPE
OMX_UseBuffer	include/media/stagefright/openmax/OMX_Core.h	1002;"	d
OMX_UseEGLImage	include/media/stagefright/openmax/OMX_Core.h	1182;"	d
cRole	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_U8 cRole[OMX_MAX_STRINGNAME_SIZE];  \/**< name of standard component which defines component role *\/$/;"	m	struct:OMX_PARAM_COMPONENTROLETYPE
data	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_U8  data[1];     \/* Supporting data hint  *\/$/;"	m	struct:OMX_OTHER_EXTRADATATYPE
eBufferSupplier	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_BUFFERSUPPLIERTYPE eBufferSupplier; \/**< buffer supplier *\/$/;"	m	struct:OMX_PARAM_BUFFERSUPPLIERTYPE
eSupplier	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_BUFFERSUPPLIERTYPE eSupplier; \/**< supplier preference *\/$/;"	m	struct:OMX_TUNNELSETUPTYPE
eType	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_EXTRADATATYPE eType;       \/* Extra Data type *\/$/;"	m	struct:OMX_OTHER_EXTRADATATYPE
hMarkTargetComponent	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_HANDLETYPE hMarkTargetComponent; \/**< The component that will generate a $/;"	m	struct:OMX_BUFFERHEADERTYPE
nAllocLen	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_U32 nAllocLen;          \/**< size of the buffer allocated, in bytes *\/$/;"	m	struct:OMX_BUFFERHEADERTYPE
nDataSize	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_U32 nDataSize;   \/* Size of the supporting data to follow *\/$/;"	m	struct:OMX_OTHER_EXTRADATATYPE
nFilledLen	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_U32 nFilledLen;         \/**< number of bytes currently in the $/;"	m	struct:OMX_BUFFERHEADERTYPE
nFlags	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_U32     nFlags;           \/**< buffer specific flags *\/$/;"	m	struct:OMX_BUFFERHEADERTYPE
nGroupID	include/media/stagefright/openmax/OMX_Core.h	/^ OMX_U32 nGroupID;                  \/**< ID of the component group *\/$/;"	m	struct:OMX_PRIORITYMGMTTYPE
nGroupPriority	include/media/stagefright/openmax/OMX_Core.h	/^ OMX_U32 nGroupPriority;            \/**< Priority of the component group *\/$/;"	m	struct:OMX_PRIORITYMGMTTYPE
nInputPortIndex	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_U32 nInputPortIndex;      \/**< The index of the input port (if any) using$/;"	m	struct:OMX_BUFFERHEADERTYPE
nOffset	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_U32 nOffset;            \/**< start offset of valid data in bytes from$/;"	m	struct:OMX_BUFFERHEADERTYPE
nOutputPortIndex	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_U32 nOutputPortIndex;     \/**< The index of the output port (if any) using $/;"	m	struct:OMX_BUFFERHEADERTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_U32 nPortIndex; \/**< port that this structure applies to *\/$/;"	m	struct:OMX_PARAM_BUFFERSUPPLIERTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_OTHER_EXTRADATATYPE
nPorts	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_U32 nPorts;             \/**< The number of ports for this component *\/$/;"	m	struct:OMX_PORT_PARAM_TYPE
nSize	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_BUFFERHEADERTYPE
nSize	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_PARAM_COMPONENTROLETYPE
nSize	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_PORT_PARAM_TYPE
nSize	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_U32 nSize; \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_PARAM_BUFFERSUPPLIERTYPE
nSize	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_OTHER_EXTRADATATYPE
nSize	include/media/stagefright/openmax/OMX_Core.h	/^ OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_PRIORITYMGMTTYPE
nStartPortNumber	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_U32 nStartPortNumber;   \/** first port number for this type of port *\/$/;"	m	struct:OMX_PORT_PARAM_TYPE
nTickCount	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_U32 nTickCount;         \/**< Optional entry that the component and$/;"	m	struct:OMX_BUFFERHEADERTYPE
nTimeStamp	include/media/stagefright/openmax/OMX_Core.h	/^ OMX_TICKS nTimeStamp;          \/**< Timestamp corresponding to the sample $/;"	m	struct:OMX_BUFFERHEADERTYPE
nTunnelFlags	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_U32 nTunnelFlags;             \/**< bit flags for tunneling *\/$/;"	m	struct:OMX_TUNNELSETUPTYPE
nVersion	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_VERSIONTYPE nVersion;               $/;"	m	struct:OMX_OTHER_EXTRADATATYPE
nVersion	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_BUFFERHEADERTYPE
nVersion	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_PARAM_COMPONENTROLETYPE
nVersion	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_PORT_PARAM_TYPE
nVersion	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_PARAM_BUFFERSUPPLIERTYPE
nVersion	include/media/stagefright/openmax/OMX_Core.h	/^ OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_PRIORITYMGMTTYPE
pAppPrivate	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_PTR pAppPrivate;        \/**< pointer to any data the application$/;"	m	struct:OMX_BUFFERHEADERTYPE
pBuffer	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_U8* pBuffer;            \/**< Pointer to actual block of memory $/;"	m	struct:OMX_BUFFERHEADERTYPE
pInitialize	include/media/stagefright/openmax/OMX_Core.h	/^  OMX_COMPONENTINITTYPE pInitialize; \/* Component instance initialization function *\/$/;"	m	struct:OMX_COMPONENTREGISTERTYPE
pInputPortPrivate	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_PTR pInputPortPrivate;  \/**< pointer to any data the input port$/;"	m	struct:OMX_BUFFERHEADERTYPE
pMarkData	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_PTR pMarkData;          \/**< Application specific data associated with $/;"	m	struct:OMX_BUFFERHEADERTYPE
pName	include/media/stagefright/openmax/OMX_Core.h	/^  const char          * pName;       \/* Component name, 128 byte limit (including '\\0') applies *\/$/;"	m	struct:OMX_COMPONENTREGISTERTYPE
pOutputPortPrivate	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_PTR pOutputPortPrivate; \/**< pointer to any data the output port$/;"	m	struct:OMX_BUFFERHEADERTYPE
pPlatformPrivate	include/media/stagefright/openmax/OMX_Core.h	/^    OMX_PTR pPlatformPrivate;   \/**< pointer to any data the platform$/;"	m	struct:OMX_BUFFERHEADERTYPE
OMX_COLORBLENDTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef enum OMX_COLORBLENDTYPE {$/;"	g
OMX_COLORBLENDTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_COLORBLENDTYPE;$/;"	t	typeref:enum:OMX_COLORBLENDTYPE
OMX_COLOR_FORMATTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef enum OMX_COLOR_FORMATTYPE {$/;"	g
OMX_COLOR_FORMATTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_COLOR_FORMATTYPE;$/;"	t	typeref:enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format12bitRGB444	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format12bitRGB444,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format16bitARGB1555	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format16bitARGB1555,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format16bitARGB4444	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format16bitARGB4444,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format16bitBGR565	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format16bitBGR565,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format16bitRGB565	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format16bitRGB565,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format18BitBGR666	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format18BitBGR666,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format18bitARGB1665	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format18bitARGB1665,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format18bitRGB666	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format18bitRGB666,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format19bitARGB1666	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format19bitARGB1666, $/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format24BitABGR6666	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format24BitABGR6666,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format24BitARGB6666	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format24BitARGB6666,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format24bitARGB1887	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format24bitARGB1887,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format24bitBGR888	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format24bitBGR888,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format24bitRGB888	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format24bitRGB888,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format25bitARGB1888	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format25bitARGB1888,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format32bitARGB8888	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format32bitARGB8888,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format32bitBGRA8888	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format32bitBGRA8888,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format8bitRGB332	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format8bitRGB332,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatCbYCrY	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatCbYCrY,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatCrYCbY	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatCrYCbY,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatKhronosExtensions	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatL16	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatL16, $/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatL2	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatL2, $/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatL24	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatL24, $/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatL32	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatL32,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatL4	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatL4, $/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatL8	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatL8, $/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatMax	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatMax = 0x7FFFFFFF$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatMonochrome	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatMonochrome,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatRawBayer10bit	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatRawBayer10bit,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatRawBayer8bit	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatRawBayer8bit,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatRawBayer8bitcompressed	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatRawBayer8bitcompressed,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatUnused	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatUnused,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatVendorStartUnused	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYCbYCr	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYCbYCr,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYCrYCb	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYCrYCb,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYUV411PackedPlanar	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYUV411PackedPlanar,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYUV411Planar	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYUV411Planar,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYUV420PackedPlanar	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYUV420PackedPlanar,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYUV420PackedSemiPlanar	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYUV420PackedSemiPlanar,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYUV420Planar	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYUV420Planar,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYUV420SemiPlanar	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYUV420SemiPlanar,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYUV422PackedPlanar	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYUV422PackedPlanar,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYUV422PackedSemiPlanar	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYUV422PackedSemiPlanar,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYUV422Planar	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYUV422Planar,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYUV422SemiPlanar	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYUV422SemiPlanar,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYUV444Interleaved	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYUV444Interleaved,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_CONFIG_BACKLIGHTTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_BACKLIGHTTYPE {$/;"	s
OMX_CONFIG_BACKLIGHTTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_BACKLIGHTTYPE;$/;"	t	typeref:struct:OMX_CONFIG_BACKLIGHTTYPE
OMX_CONFIG_BRIGHTNESSTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_BRIGHTNESSTYPE {$/;"	s
OMX_CONFIG_BRIGHTNESSTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_BRIGHTNESSTYPE;$/;"	t	typeref:struct:OMX_CONFIG_BRIGHTNESSTYPE
OMX_CONFIG_CAPTUREMODETYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_CAPTUREMODETYPE {$/;"	s
OMX_CONFIG_CAPTUREMODETYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_CAPTUREMODETYPE;$/;"	t	typeref:struct:OMX_CONFIG_CAPTUREMODETYPE
OMX_CONFIG_COLORBLENDTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_COLORBLENDTYPE {$/;"	s
OMX_CONFIG_COLORBLENDTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_COLORBLENDTYPE;$/;"	t	typeref:struct:OMX_CONFIG_COLORBLENDTYPE
OMX_CONFIG_COLORCONVERSIONTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_COLORCONVERSIONTYPE {$/;"	s
OMX_CONFIG_COLORCONVERSIONTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^}OMX_CONFIG_COLORCONVERSIONTYPE;$/;"	t	typeref:struct:OMX_CONFIG_COLORCONVERSIONTYPE
OMX_CONFIG_COLORENHANCEMENTTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_COLORENHANCEMENTTYPE {$/;"	s
OMX_CONFIG_COLORENHANCEMENTTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_COLORENHANCEMENTTYPE;$/;"	t	typeref:struct:OMX_CONFIG_COLORENHANCEMENTTYPE
OMX_CONFIG_COLORKEYTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_COLORKEYTYPE {$/;"	s
OMX_CONFIG_COLORKEYTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_COLORKEYTYPE;$/;"	t	typeref:struct:OMX_CONFIG_COLORKEYTYPE
OMX_CONFIG_CONTRASTTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_CONTRASTTYPE {$/;"	s
OMX_CONFIG_CONTRASTTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_CONTRASTTYPE;$/;"	t	typeref:struct:OMX_CONFIG_CONTRASTTYPE
OMX_CONFIG_DITHERTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_DITHERTYPE {$/;"	s
OMX_CONFIG_DITHERTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_DITHERTYPE;$/;"	t	typeref:struct:OMX_CONFIG_DITHERTYPE
OMX_CONFIG_EXPOSURECONTROLTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_EXPOSURECONTROLTYPE {$/;"	s
OMX_CONFIG_EXPOSURECONTROLTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_EXPOSURECONTROLTYPE;$/;"	t	typeref:struct:OMX_CONFIG_EXPOSURECONTROLTYPE
OMX_CONFIG_EXPOSUREVALUETYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_EXPOSUREVALUETYPE {$/;"	s
OMX_CONFIG_EXPOSUREVALUETYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_EXPOSUREVALUETYPE;$/;"	t	typeref:struct:OMX_CONFIG_EXPOSUREVALUETYPE
OMX_CONFIG_FOCUSREGIONTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_FOCUSREGIONTYPE {$/;"	s
OMX_CONFIG_FOCUSREGIONTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_FOCUSREGIONTYPE;$/;"	t	typeref:struct:OMX_CONFIG_FOCUSREGIONTYPE
OMX_CONFIG_FRAMESTABTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_FRAMESTABTYPE {$/;"	s
OMX_CONFIG_FRAMESTABTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_FRAMESTABTYPE;$/;"	t	typeref:struct:OMX_CONFIG_FRAMESTABTYPE
OMX_CONFIG_GAMMATYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_GAMMATYPE {$/;"	s
OMX_CONFIG_GAMMATYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_GAMMATYPE;$/;"	t	typeref:struct:OMX_CONFIG_GAMMATYPE
OMX_CONFIG_IMAGEFILTERTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_IMAGEFILTERTYPE {$/;"	s
OMX_CONFIG_IMAGEFILTERTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_IMAGEFILTERTYPE;$/;"	t	typeref:struct:OMX_CONFIG_IMAGEFILTERTYPE
OMX_CONFIG_LIGHTNESSTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_LIGHTNESSTYPE {$/;"	s
OMX_CONFIG_LIGHTNESSTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_LIGHTNESSTYPE;$/;"	t	typeref:struct:OMX_CONFIG_LIGHTNESSTYPE
OMX_CONFIG_MIRRORTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_MIRRORTYPE {$/;"	s
OMX_CONFIG_MIRRORTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_MIRRORTYPE;$/;"	t	typeref:struct:OMX_CONFIG_MIRRORTYPE
OMX_CONFIG_PLANEBLENDTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_PLANEBLENDTYPE {$/;"	s
OMX_CONFIG_PLANEBLENDTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_PLANEBLENDTYPE;$/;"	t	typeref:struct:OMX_CONFIG_PLANEBLENDTYPE
OMX_CONFIG_POINTTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_POINTTYPE {$/;"	s
OMX_CONFIG_POINTTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_POINTTYPE;$/;"	t	typeref:struct:OMX_CONFIG_POINTTYPE
OMX_CONFIG_RECTTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_RECTTYPE {$/;"	s
OMX_CONFIG_RECTTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_RECTTYPE;$/;"	t	typeref:struct:OMX_CONFIG_RECTTYPE
OMX_CONFIG_ROTATIONTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_ROTATIONTYPE {$/;"	s
OMX_CONFIG_ROTATIONTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_ROTATIONTYPE;$/;"	t	typeref:struct:OMX_CONFIG_ROTATIONTYPE
OMX_CONFIG_SATURATIONTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_SATURATIONTYPE {$/;"	s
OMX_CONFIG_SATURATIONTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_SATURATIONTYPE;$/;"	t	typeref:struct:OMX_CONFIG_SATURATIONTYPE
OMX_CONFIG_SCALEFACTORTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_SCALEFACTORTYPE {$/;"	s
OMX_CONFIG_SCALEFACTORTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^}OMX_CONFIG_SCALEFACTORTYPE;$/;"	t	typeref:struct:OMX_CONFIG_SCALEFACTORTYPE
OMX_CONFIG_TRANSITIONEFFECTTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_TRANSITIONEFFECTTYPE {$/;"	s
OMX_CONFIG_TRANSITIONEFFECTTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_TRANSITIONEFFECTTYPE;$/;"	t	typeref:struct:OMX_CONFIG_TRANSITIONEFFECTTYPE
OMX_CONFIG_WHITEBALCONTROLTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_WHITEBALCONTROLTYPE {$/;"	s
OMX_CONFIG_WHITEBALCONTROLTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_WHITEBALCONTROLTYPE;$/;"	t	typeref:struct:OMX_CONFIG_WHITEBALCONTROLTYPE
OMX_ColorBlendAlphaConstant	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ColorBlendAlphaConstant,$/;"	e	enum:OMX_COLORBLENDTYPE
OMX_ColorBlendAlphaPerPixel	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ColorBlendAlphaPerPixel,$/;"	e	enum:OMX_COLORBLENDTYPE
OMX_ColorBlendAlternate	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ColorBlendAlternate,$/;"	e	enum:OMX_COLORBLENDTYPE
OMX_ColorBlendAnd	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ColorBlendAnd,$/;"	e	enum:OMX_COLORBLENDTYPE
OMX_ColorBlendInvert	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ColorBlendInvert,$/;"	e	enum:OMX_COLORBLENDTYPE
OMX_ColorBlendKhronosExtensions	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ColorBlendKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_COLORBLENDTYPE
OMX_ColorBlendMax	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ColorBlendMax = 0x7FFFFFFF$/;"	e	enum:OMX_COLORBLENDTYPE
OMX_ColorBlendNone	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ColorBlendNone,$/;"	e	enum:OMX_COLORBLENDTYPE
OMX_ColorBlendOr	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ColorBlendOr,$/;"	e	enum:OMX_COLORBLENDTYPE
OMX_ColorBlendVendorStartUnused	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ColorBlendVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_COLORBLENDTYPE
OMX_DATAUNITENCAPSULATIONTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef enum OMX_DATAUNITENCAPSULATIONTYPE {$/;"	g
OMX_DATAUNITENCAPSULATIONTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_DATAUNITENCAPSULATIONTYPE;$/;"	t	typeref:enum:OMX_DATAUNITENCAPSULATIONTYPE
OMX_DATAUNITTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef enum OMX_DATAUNITTYPE {$/;"	g
OMX_DATAUNITTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_DATAUNITTYPE;$/;"	t	typeref:enum:OMX_DATAUNITTYPE
OMX_DITHERTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef enum OMX_DITHERTYPE {$/;"	g
OMX_DITHERTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_DITHERTYPE;$/;"	t	typeref:enum:OMX_DITHERTYPE
OMX_DataEncapsulationElementaryStream	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_DataEncapsulationElementaryStream,$/;"	e	enum:OMX_DATAUNITENCAPSULATIONTYPE
OMX_DataEncapsulationGenericPayload	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_DataEncapsulationGenericPayload,$/;"	e	enum:OMX_DATAUNITENCAPSULATIONTYPE
OMX_DataEncapsulationKhronosExtensions	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_DataEncapsulationKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_DATAUNITENCAPSULATIONTYPE
OMX_DataEncapsulationMax	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_DataEncapsulationMax = 0x7FFFFFFF$/;"	e	enum:OMX_DATAUNITENCAPSULATIONTYPE
OMX_DataEncapsulationRtpPayload	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_DataEncapsulationRtpPayload,$/;"	e	enum:OMX_DATAUNITENCAPSULATIONTYPE
OMX_DataEncapsulationVendorStartUnused	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_DataEncapsulationVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_DATAUNITENCAPSULATIONTYPE
OMX_DataUnitArbitraryStreamSection	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_DataUnitArbitraryStreamSection,$/;"	e	enum:OMX_DATAUNITTYPE
OMX_DataUnitCodedPicture	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_DataUnitCodedPicture,$/;"	e	enum:OMX_DATAUNITTYPE
OMX_DataUnitKhronosExtensions	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_DataUnitKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_DATAUNITTYPE
OMX_DataUnitMax	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_DataUnitMax = 0x7FFFFFFF$/;"	e	enum:OMX_DATAUNITTYPE
OMX_DataUnitSeveralSegments	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_DataUnitSeveralSegments,$/;"	e	enum:OMX_DATAUNITTYPE
OMX_DataUnitVendorStartUnused	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_DataUnitVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_DATAUNITTYPE
OMX_DataUnitVideoSegment	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_DataUnitVideoSegment,$/;"	e	enum:OMX_DATAUNITTYPE
OMX_DitherErrorDiffusion	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_DitherErrorDiffusion,$/;"	e	enum:OMX_DITHERTYPE
OMX_DitherKhronosExtensions	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_DitherKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_DITHERTYPE
OMX_DitherMax	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_DitherMax = 0x7FFFFFFF$/;"	e	enum:OMX_DITHERTYPE
OMX_DitherNone	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_DitherNone,$/;"	e	enum:OMX_DITHERTYPE
OMX_DitherOrdered	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_DitherOrdered,$/;"	e	enum:OMX_DITHERTYPE
OMX_DitherOther	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_DitherOther,$/;"	e	enum:OMX_DITHERTYPE
OMX_DitherVendorStartUnused	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_DitherVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_DITHERTYPE
OMX_EVModeMax	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_EVModeMax = 0x7fffffff$/;"	e	enum:OMX_METERINGTYPE
OMX_EXPOSURECONTROLTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef enum OMX_EXPOSURECONTROLTYPE {$/;"	g
OMX_EXPOSURECONTROLTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_EXPOSURECONTROLTYPE;$/;"	t	typeref:enum:OMX_EXPOSURECONTROLTYPE
OMX_EffectDissolve	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_EffectDissolve,$/;"	e	enum:OMX_TRANSITIONEFFECTTYPE
OMX_EffectFadeFromBlack	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_EffectFadeFromBlack,$/;"	e	enum:OMX_TRANSITIONEFFECTTYPE
OMX_EffectFadeToBlack	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_EffectFadeToBlack,$/;"	e	enum:OMX_TRANSITIONEFFECTTYPE
OMX_EffectKhronosExtensions	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_EffectKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_TRANSITIONEFFECTTYPE
OMX_EffectMax	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_EffectMax = 0x7FFFFFFF$/;"	e	enum:OMX_TRANSITIONEFFECTTYPE
OMX_EffectNone	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_EffectNone,$/;"	e	enum:OMX_TRANSITIONEFFECTTYPE
OMX_EffectUnspecifiedMixOfTwoScenes	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_EffectUnspecifiedMixOfTwoScenes,$/;"	e	enum:OMX_TRANSITIONEFFECTTYPE
OMX_EffectUnspecifiedThroughConstantColor	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_EffectUnspecifiedThroughConstantColor,$/;"	e	enum:OMX_TRANSITIONEFFECTTYPE
OMX_EffectVendorStartUnused	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_EffectVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_TRANSITIONEFFECTTYPE
OMX_EffectWipe	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_EffectWipe,$/;"	e	enum:OMX_TRANSITIONEFFECTTYPE
OMX_ExposureControlAuto	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlAuto,$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlBackLight	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlBackLight,$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlBeach	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlBeach,$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlKhronosExtensions	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlLargeAperture	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlLargeAperture,$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlMax	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlMax = 0x7FFFFFFF$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlNight	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlNight,$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlOff	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlOff = 0,$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlSmallApperture	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlSmallApperture,$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlSnow	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlSnow,$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlSports	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlSports,$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlSpotLight	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlSpotLight,$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlVendorStartUnused	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_FOCUSSTATUSTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef enum OMX_FOCUSSTATUSTYPE {$/;"	g
OMX_FOCUSSTATUSTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_FOCUSSTATUSTYPE;$/;"	t	typeref:enum:OMX_FOCUSSTATUSTYPE
OMX_FRAMESIZETYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef struct OMX_FRAMESIZETYPE {$/;"	s
OMX_FRAMESIZETYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_FRAMESIZETYPE;$/;"	t	typeref:struct:OMX_FRAMESIZETYPE
OMX_FocusStatusKhronosExtensions	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_FocusStatusKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_FOCUSSTATUSTYPE
OMX_FocusStatusLost	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_FocusStatusLost,$/;"	e	enum:OMX_FOCUSSTATUSTYPE
OMX_FocusStatusMax	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_FocusStatusMax = 0x7FFFFFFF$/;"	e	enum:OMX_FOCUSSTATUSTYPE
OMX_FocusStatusOff	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_FocusStatusOff = 0,$/;"	e	enum:OMX_FOCUSSTATUSTYPE
OMX_FocusStatusReached	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_FocusStatusReached,$/;"	e	enum:OMX_FOCUSSTATUSTYPE
OMX_FocusStatusRequest	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_FocusStatusRequest,$/;"	e	enum:OMX_FOCUSSTATUSTYPE
OMX_FocusStatusUnableToReach	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_FocusStatusUnableToReach,$/;"	e	enum:OMX_FOCUSSTATUSTYPE
OMX_FocusStatusVendorStartUnused	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_FocusStatusVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_FOCUSSTATUSTYPE
OMX_IMAGEFILTERTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef enum OMX_IMAGEFILTERTYPE {$/;"	g
OMX_IMAGEFILTERTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_IMAGEFILTERTYPE;$/;"	t	typeref:enum:OMX_IMAGEFILTERTYPE
OMX_IVCommon_h	include/media/stagefright/openmax/OMX_IVCommon.h	47;"	d
OMX_ImageFilterAntialias	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterAntialias, $/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterDeRing	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterDeRing,       $/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterEmboss	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterEmboss,$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterGpen	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterGpen,$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterHatch	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterHatch,$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterKhronosExtensions	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterMax	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterMax = 0x7FFFFFFF$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterNegative	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterNegative,$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterNoise	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterNoise,$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterNone	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterNone,$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterOilPaint	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterOilPaint,$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterSketch	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterSketch,$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterSolarize	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterSolarize,$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterVendorStartUnused	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_METERINGTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef enum OMX_METERINGTYPE {$/;"	g
OMX_METERINGTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_METERINGTYPE;$/;"	t	typeref:enum:OMX_METERINGTYPE
OMX_MIRRORTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef enum OMX_MIRRORTYPE {$/;"	g
OMX_MIRRORTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_MIRRORTYPE;$/;"	t	typeref:enum:OMX_MIRRORTYPE
OMX_MeteringKhronosExtensions	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_MeteringKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_METERINGTYPE
OMX_MeteringModeAverage	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_MeteringModeAverage,     \/**< Center-weighted average metering. *\/$/;"	e	enum:OMX_METERINGTYPE
OMX_MeteringModeMatrix	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_MeteringModeMatrix,      \/**< Matrix or evaluative metering. *\/$/;"	e	enum:OMX_METERINGTYPE
OMX_MeteringModeSpot	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_MeteringModeSpot,  	      \/**< Spot (partial) metering. *\/$/;"	e	enum:OMX_METERINGTYPE
OMX_MeteringVendorStartUnused	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_MeteringVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_METERINGTYPE
OMX_MirrorBoth	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_MirrorBoth, $/;"	e	enum:OMX_MIRRORTYPE
OMX_MirrorHorizontal	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_MirrorHorizontal,$/;"	e	enum:OMX_MIRRORTYPE
OMX_MirrorKhronosExtensions	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_MirrorKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_MIRRORTYPE
OMX_MirrorMax	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_MirrorMax = 0x7FFFFFFF   $/;"	e	enum:OMX_MIRRORTYPE
OMX_MirrorNone	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_MirrorNone = 0,$/;"	e	enum:OMX_MIRRORTYPE
OMX_MirrorVendorStartUnused	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_MirrorVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_MIRRORTYPE
OMX_MirrorVertical	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_MirrorVertical,$/;"	e	enum:OMX_MIRRORTYPE
OMX_PARAM_DATAUNITTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef struct OMX_PARAM_DATAUNITTYPE {$/;"	s
OMX_PARAM_DATAUNITTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_PARAM_DATAUNITTYPE;$/;"	t	typeref:struct:OMX_PARAM_DATAUNITTYPE
OMX_PARAM_DEBLOCKINGTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef struct OMX_PARAM_DEBLOCKINGTYPE {$/;"	s
OMX_PARAM_DEBLOCKINGTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_PARAM_DEBLOCKINGTYPE;$/;"	t	typeref:struct:OMX_PARAM_DEBLOCKINGTYPE
OMX_PARAM_FOCUSSTATUSTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef struct OMX_PARAM_FOCUSSTATUSTYPE {$/;"	s
OMX_PARAM_FOCUSSTATUSTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_PARAM_FOCUSSTATUSTYPE;$/;"	t	typeref:struct:OMX_PARAM_FOCUSSTATUSTYPE
OMX_PARAM_INTERLEAVETYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef struct OMX_PARAM_INTERLEAVETYPE {$/;"	s
OMX_PARAM_INTERLEAVETYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_PARAM_INTERLEAVETYPE;$/;"	t	typeref:struct:OMX_PARAM_INTERLEAVETYPE
OMX_PARAM_SENSORMODETYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef struct OMX_PARAM_SENSORMODETYPE {$/;"	s
OMX_PARAM_SENSORMODETYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_PARAM_SENSORMODETYPE;$/;"	t	typeref:struct:OMX_PARAM_SENSORMODETYPE
OMX_TRANSITIONEFFECTTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef enum OMX_TRANSITIONEFFECTTYPE {$/;"	g
OMX_TRANSITIONEFFECTTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_TRANSITIONEFFECTTYPE;$/;"	t	typeref:enum:OMX_TRANSITIONEFFECTTYPE
OMX_WHITEBALCONTROLTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^typedef enum OMX_WHITEBALCONTROLTYPE {$/;"	g
OMX_WHITEBALCONTROLTYPE	include/media/stagefright/openmax/OMX_IVCommon.h	/^} OMX_WHITEBALCONTROLTYPE;$/;"	t	typeref:enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlAuto	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlAuto,$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlCloudy	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlCloudy,$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlFlash	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlFlash,$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlFluorescent	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlFluorescent,$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlHorizon	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlHorizon,$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlIncandescent	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlIncandescent,$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlKhronosExtensions	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlMax	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlMax = 0x7FFFFFFF$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlOff	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlOff = 0,$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlShade	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlShade,$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlSunLight	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlSunLight,$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlTungsten	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlTungsten,$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlVendorStartUnused	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
bAutoAperture	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_BOOL bAutoAperture;		\/**< Whether aperture number is defined automatically *\/$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE
bAutoSensitivity	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_BOOL bAutoSensitivity;	\/**< Whether sensitivity is defined automatically *\/$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE
bAutoShutterSpeed	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_BOOL bAutoShutterSpeed;	\/**< Whether shutter speed is defined automatically *\/ $/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE
bBottom	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_BOOL bBottom;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE
bBottomLeft	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_BOOL bBottomLeft;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE
bBottomLeftStatus	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_BOOL bBottomLeftStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE
bBottomRight	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_BOOL bBottomRight;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE
bBottomRightStatus	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_BOOL bBottomRightStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE
bBottomStatus	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_BOOL bBottomStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE
bCenter	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_BOOL bCenter;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE
bCenterStatus	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_BOOL bCenterStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE
bColorEnhancement	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_BOOL bColorEnhancement;$/;"	m	struct:OMX_CONFIG_COLORENHANCEMENTTYPE
bContinuous	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_BOOL bContinuous;   \/**< If true then ignore frame rate and emit capture $/;"	m	struct:OMX_CONFIG_CAPTUREMODETYPE
bDeblocking	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_BOOL bDeblocking;$/;"	m	struct:OMX_PARAM_DEBLOCKINGTYPE
bEnable	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_BOOL bEnable;$/;"	m	struct:OMX_PARAM_INTERLEAVETYPE
bFrameLimited	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_BOOL bFrameLimited; \/**< If true then terminate capture after the port emits the $/;"	m	struct:OMX_CONFIG_CAPTUREMODETYPE
bLeft	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_BOOL bLeft;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE
bLeftStatus	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_BOOL bLeftStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE
bOneShot	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_BOOL bOneShot;$/;"	m	struct:OMX_PARAM_SENSORMODETYPE
bRight	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_BOOL bRight;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE
bRightStatus	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_BOOL bRightStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE
bStab	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_BOOL bStab;$/;"	m	struct:OMX_CONFIG_FRAMESTABTYPE
bTop	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_BOOL bTop;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE
bTopLeft	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_BOOL bTopLeft;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE
bTopLeftStatus	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_BOOL bTopLeftStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE
bTopRight	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_BOOL bTopRight;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE
bTopRightStatus	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_BOOL bTopRightStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE
bTopStatus	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_BOOL bTopStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE
eColorBlend	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_COLORBLENDTYPE  eColorBlend;$/;"	m	struct:OMX_CONFIG_COLORBLENDTYPE
eDither	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_DITHERTYPE eDither;   \/**< Type of dithering to use *\/$/;"	m	struct:OMX_CONFIG_DITHERTYPE
eEffect	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_TRANSITIONEFFECTTYPE eEffect;$/;"	m	struct:OMX_CONFIG_TRANSITIONEFFECTTYPE
eEncapsulationType	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_DATAUNITENCAPSULATIONTYPE eEncapsulationType;$/;"	m	struct:OMX_PARAM_DATAUNITTYPE
eExposureControl	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_EXPOSURECONTROLTYPE eExposureControl;$/;"	m	struct:OMX_CONFIG_EXPOSURECONTROLTYPE
eFocusStatus	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_FOCUSSTATUSTYPE eFocusStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE
eImageFilter	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_IMAGEFILTERTYPE eImageFilter;$/;"	m	struct:OMX_CONFIG_IMAGEFILTERTYPE
eMetering	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_METERINGTYPE eMetering;$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE
eMirror	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_MIRRORTYPE  eMirror;$/;"	m	struct:OMX_CONFIG_MIRRORTYPE
eUnitType	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_DATAUNITTYPE eUnitType;$/;"	m	struct:OMX_PARAM_DATAUNITTYPE
eWhiteBalControl	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_WHITEBALCONTROLTYPE eWhiteBalControl;$/;"	m	struct:OMX_CONFIG_WHITEBALCONTROLTYPE
nARGBColor	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nARGBColor;$/;"	m	struct:OMX_CONFIG_COLORKEYTYPE
nARGBMask	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nARGBMask;$/;"	m	struct:OMX_CONFIG_COLORKEYTYPE
nAlpha	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nAlpha;$/;"	m	struct:OMX_CONFIG_PLANEBLENDTYPE
nApertureFNumber	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nApertureFNumber;     \/**< e.g. nApertureFNumber = 2 implies "f\/2" - Q16 format *\/$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE
nBacklight	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nBacklight;$/;"	m	struct:OMX_CONFIG_BACKLIGHTTYPE
nBrightness	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nBrightness;$/;"	m	struct:OMX_CONFIG_BRIGHTNESSTYPE
nContrast	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_S32 nContrast;$/;"	m	struct:OMX_CONFIG_CONTRASTTYPE
nCustomizedU	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U8 nCustomizedU;$/;"	m	struct:OMX_CONFIG_COLORENHANCEMENTTYPE
nCustomizedV	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U8 nCustomizedV;$/;"	m	struct:OMX_CONFIG_COLORENHANCEMENTTYPE
nDepth	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nDepth;$/;"	m	struct:OMX_CONFIG_PLANEBLENDTYPE
nFrameLimit	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nFrameLimit;      \/**< Limit on number of frames emitted during a capture (only$/;"	m	struct:OMX_CONFIG_CAPTUREMODETYPE
nFrameRate	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nFrameRate;$/;"	m	struct:OMX_PARAM_SENSORMODETYPE
nGamma	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_S32 nGamma;$/;"	m	struct:OMX_CONFIG_GAMMATYPE
nHeight	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nHeight;$/;"	m	struct:OMX_CONFIG_RECTTYPE
nHeight	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nHeight;$/;"	m	struct:OMX_FRAMESIZETYPE
nInterleavePortIndex	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nInterleavePortIndex;$/;"	m	struct:OMX_PARAM_INTERLEAVETYPE
nLeft	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_S32 nLeft; $/;"	m	struct:OMX_CONFIG_RECTTYPE
nLightness	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_S32 nLightness;$/;"	m	struct:OMX_CONFIG_LIGHTNESSTYPE
nPortIndex	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;         \/**< Port that this struct applies to *\/$/;"	m	struct:OMX_CONFIG_COLORCONVERSIONTYPE
nPortIndex	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;       \/**< Port that this struct applies to *\/$/;"	m	struct:OMX_CONFIG_SCALEFACTORTYPE
nPortIndex	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;       \/**< Port that this structure applies to *\/$/;"	m	struct:OMX_CONFIG_DITHERTYPE
nPortIndex	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;       \/**< Port that this structure applies to *\/$/;"	m	struct:OMX_PARAM_DATAUNITTYPE
nPortIndex	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;     \/**< Port that this structure applies to *\/$/;"	m	struct:OMX_CONFIG_CAPTUREMODETYPE
nPortIndex	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex; $/;"	m	struct:OMX_CONFIG_RECTTYPE
nPortIndex	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_BACKLIGHTTYPE
nPortIndex	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_BRIGHTNESSTYPE
nPortIndex	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_COLORBLENDTYPE
nPortIndex	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_COLORENHANCEMENTTYPE
nPortIndex	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_COLORKEYTYPE
nPortIndex	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_CONTRASTTYPE
nPortIndex	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_EXPOSURECONTROLTYPE
nPortIndex	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE
nPortIndex	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE
nPortIndex	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_FRAMESTABTYPE
nPortIndex	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_GAMMATYPE
nPortIndex	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_IMAGEFILTERTYPE
nPortIndex	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_LIGHTNESSTYPE
nPortIndex	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_MIRRORTYPE
nPortIndex	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_PLANEBLENDTYPE
nPortIndex	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_POINTTYPE
nPortIndex	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_ROTATIONTYPE
nPortIndex	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_SATURATIONTYPE
nPortIndex	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_TRANSITIONEFFECTTYPE
nPortIndex	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_WHITEBALCONTROLTYPE
nPortIndex	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_FRAMESIZETYPE
nPortIndex	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_PARAM_DEBLOCKINGTYPE
nPortIndex	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE
nPortIndex	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_PARAM_INTERLEAVETYPE
nPortIndex	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_PARAM_SENSORMODETYPE
nRGBAlphaConstant	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nRGBAlphaConstant;$/;"	m	struct:OMX_CONFIG_COLORBLENDTYPE
nRotation	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_S32 nRotation; $/;"	m	struct:OMX_CONFIG_ROTATIONTYPE
nSaturation	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_S32 nSaturation;$/;"	m	struct:OMX_CONFIG_SATURATIONTYPE
nSensitivity	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nSensitivity;         \/**< e.g. nSensitivity = 100 implies "ISO 100" *\/$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE
nShutterSpeedMsec	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nShutterSpeedMsec;    \/**< Shutterspeed in milliseconds *\/ $/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE
nSize	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;              \/**< Size of the structure in bytes *\/$/;"	m	struct:OMX_CONFIG_COLORCONVERSIONTYPE
nSize	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;            \/**< Size of the structure in bytes *\/$/;"	m	struct:OMX_CONFIG_DITHERTYPE
nSize	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;            \/**< Size of the structure in bytes *\/$/;"	m	struct:OMX_CONFIG_SCALEFACTORTYPE
nSize	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;            \/**< Size of the structure in bytes *\/$/;"	m	struct:OMX_PARAM_DATAUNITTYPE
nSize	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_BACKLIGHTTYPE
nSize	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_BRIGHTNESSTYPE
nSize	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_CAPTUREMODETYPE
nSize	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_COLORBLENDTYPE
nSize	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_COLORENHANCEMENTTYPE
nSize	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_COLORKEYTYPE
nSize	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_CONTRASTTYPE
nSize	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_EXPOSURECONTROLTYPE
nSize	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE
nSize	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE
nSize	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_FRAMESTABTYPE
nSize	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_GAMMATYPE
nSize	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_IMAGEFILTERTYPE
nSize	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_LIGHTNESSTYPE
nSize	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_MIRRORTYPE
nSize	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_PLANEBLENDTYPE
nSize	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_POINTTYPE
nSize	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_RECTTYPE
nSize	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_ROTATIONTYPE
nSize	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_SATURATIONTYPE
nSize	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_TRANSITIONEFFECTTYPE
nSize	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_WHITEBALCONTROLTYPE
nSize	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_FRAMESIZETYPE
nSize	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_PARAM_DEBLOCKINGTYPE
nSize	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE
nSize	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_PARAM_INTERLEAVETYPE
nSize	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_PARAM_SENSORMODETYPE
nTimeout	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nTimeout;$/;"	m	struct:OMX_CONFIG_BACKLIGHTTYPE
nTop	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_S32 nTop;$/;"	m	struct:OMX_CONFIG_RECTTYPE
nVersion	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version info *\/ $/;"	m	struct:OMX_CONFIG_COLORCONVERSIONTYPE
nVersion	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;  $/;"	m	struct:OMX_CONFIG_RECTTYPE
nVersion	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion; $/;"	m	struct:OMX_CONFIG_COLORENHANCEMENTTYPE
nVersion	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion; $/;"	m	struct:OMX_CONFIG_MIRRORTYPE
nVersion	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version info *\/ $/;"	m	struct:OMX_CONFIG_SCALEFACTORTYPE
nVersion	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/ $/;"	m	struct:OMX_CONFIG_DITHERTYPE
nVersion	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/ $/;"	m	struct:OMX_PARAM_DATAUNITTYPE
nVersion	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_BACKLIGHTTYPE
nVersion	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_BRIGHTNESSTYPE
nVersion	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_CAPTUREMODETYPE
nVersion	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_COLORBLENDTYPE
nVersion	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_COLORKEYTYPE
nVersion	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_CONTRASTTYPE
nVersion	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_EXPOSURECONTROLTYPE
nVersion	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE
nVersion	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE
nVersion	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_FRAMESTABTYPE
nVersion	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_GAMMATYPE
nVersion	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_IMAGEFILTERTYPE
nVersion	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_LIGHTNESSTYPE
nVersion	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_PLANEBLENDTYPE
nVersion	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_POINTTYPE
nVersion	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_ROTATIONTYPE
nVersion	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_SATURATIONTYPE
nVersion	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_TRANSITIONEFFECTTYPE
nVersion	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_WHITEBALCONTROLTYPE
nVersion	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_FRAMESIZETYPE
nVersion	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_PARAM_DEBLOCKINGTYPE
nVersion	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE
nVersion	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_PARAM_INTERLEAVETYPE
nVersion	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_PARAM_SENSORMODETYPE
nWidth	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nWidth;$/;"	m	struct:OMX_CONFIG_RECTTYPE
nWidth	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_U32 nWidth;$/;"	m	struct:OMX_FRAMESIZETYPE
nX	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_S32 nX;$/;"	m	struct:OMX_CONFIG_POINTTYPE
nY	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_S32 nY;$/;"	m	struct:OMX_CONFIG_POINTTYPE
sFrameSize	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_FRAMESIZETYPE sFrameSize;$/;"	m	struct:OMX_PARAM_SENSORMODETYPE
xColorMatrix	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_S32 xColorMatrix[3][3]; \/**< Stored in signed Q16 format *\/$/;"	m	struct:OMX_CONFIG_COLORCONVERSIONTYPE
xColorOffset	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_S32 xColorOffset[4];    \/**< Stored in signed Q16 format *\/$/;"	m	struct:OMX_CONFIG_COLORCONVERSIONTYPE
xEVCompensation	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_S32 xEVCompensation;      \/**< Fixed point value stored as Q16 *\/$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE
xHeight	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_S32 xHeight;          \/**< Fixed point value stored as Q16 *\/$/;"	m	struct:OMX_CONFIG_SCALEFACTORTYPE
xWidth	include/media/stagefright/openmax/OMX_IVCommon.h	/^    OMX_S32 xWidth;           \/**< Fixed point value stored as Q16 *\/$/;"	m	struct:OMX_CONFIG_SCALEFACTORTYPE
OMX_IMAGE_CODINGTYPE	include/media/stagefright/openmax/OMX_Image.h	/^typedef enum OMX_IMAGE_CODINGTYPE {$/;"	g
OMX_IMAGE_CODINGTYPE	include/media/stagefright/openmax/OMX_Image.h	/^} OMX_IMAGE_CODINGTYPE;$/;"	t	typeref:enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE	include/media/stagefright/openmax/OMX_Image.h	/^typedef struct OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE {$/;"	s
OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE	include/media/stagefright/openmax/OMX_Image.h	/^} OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE;$/;"	t	typeref:struct:OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE
OMX_IMAGE_CodingAutoDetect	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingAutoDetect,  \/**< Auto detection of image format *\/$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingBMP	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingBMP,         \/**< Windows Bitmap format *\/$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingEXIF	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingEXIF,        \/**< EXIF image format *\/$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingGIF	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingGIF,         \/**< Graphics image format *\/$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingJPEG	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingJPEG,        \/**< JPEG\/JFIF image format *\/$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingJPEG2K	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingJPEG2K,      \/**< JPEG 2000 image format *\/$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingKhronosExtensions	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingLZW	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingLZW,         \/**< LZW image format *\/$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingMax	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingMax = 0x7FFFFFFF$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingPNG	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingPNG,         \/**< PNG image format *\/$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingTIFF	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingTIFF,        \/**< TIFF image format *\/$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingUnused	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingUnused,      \/**< Value when format is N\/A *\/$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingVendorStartUnused	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_FLASHCONTROLTYPE	include/media/stagefright/openmax/OMX_Image.h	/^typedef enum OMX_IMAGE_FLASHCONTROLTYPE {$/;"	g
OMX_IMAGE_FLASHCONTROLTYPE	include/media/stagefright/openmax/OMX_Image.h	/^} OMX_IMAGE_FLASHCONTROLTYPE;$/;"	t	typeref:enum:OMX_IMAGE_FLASHCONTROLTYPE
OMX_IMAGE_FOCUSCONTROLTYPE	include/media/stagefright/openmax/OMX_Image.h	/^typedef enum OMX_IMAGE_FOCUSCONTROLTYPE {$/;"	g
OMX_IMAGE_FOCUSCONTROLTYPE	include/media/stagefright/openmax/OMX_Image.h	/^} OMX_IMAGE_FOCUSCONTROLTYPE;$/;"	t	typeref:enum:OMX_IMAGE_FOCUSCONTROLTYPE
OMX_IMAGE_FlashControlAuto	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_FlashControlAuto,$/;"	e	enum:OMX_IMAGE_FLASHCONTROLTYPE
OMX_IMAGE_FlashControlFillin	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_FlashControlFillin,$/;"	e	enum:OMX_IMAGE_FLASHCONTROLTYPE
OMX_IMAGE_FlashControlKhronosExtensions	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_FlashControlKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_IMAGE_FLASHCONTROLTYPE
OMX_IMAGE_FlashControlMax	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_FlashControlMax = 0x7FFFFFFF$/;"	e	enum:OMX_IMAGE_FLASHCONTROLTYPE
OMX_IMAGE_FlashControlOff	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_FlashControlOff,$/;"	e	enum:OMX_IMAGE_FLASHCONTROLTYPE
OMX_IMAGE_FlashControlOn	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_FlashControlOn = 0,$/;"	e	enum:OMX_IMAGE_FLASHCONTROLTYPE
OMX_IMAGE_FlashControlRedEyeReduction	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_FlashControlRedEyeReduction,$/;"	e	enum:OMX_IMAGE_FLASHCONTROLTYPE
OMX_IMAGE_FlashControlTorch	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_FlashControlTorch,$/;"	e	enum:OMX_IMAGE_FLASHCONTROLTYPE
OMX_IMAGE_FlashControlVendorStartUnused	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_FlashControlVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_IMAGE_FLASHCONTROLTYPE
OMX_IMAGE_FocusControlAuto	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_FocusControlAuto,$/;"	e	enum:OMX_IMAGE_FOCUSCONTROLTYPE
OMX_IMAGE_FocusControlAutoLock	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_FocusControlAutoLock,$/;"	e	enum:OMX_IMAGE_FOCUSCONTROLTYPE
OMX_IMAGE_FocusControlKhronosExtensions	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_FocusControlKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_IMAGE_FOCUSCONTROLTYPE
OMX_IMAGE_FocusControlMax	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_FocusControlMax = 0x7FFFFFFF$/;"	e	enum:OMX_IMAGE_FOCUSCONTROLTYPE
OMX_IMAGE_FocusControlOff	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_FocusControlOff,$/;"	e	enum:OMX_IMAGE_FOCUSCONTROLTYPE
OMX_IMAGE_FocusControlOn	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_FocusControlOn = 0,$/;"	e	enum:OMX_IMAGE_FOCUSCONTROLTYPE
OMX_IMAGE_FocusControlVendorStartUnused	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_FocusControlVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_IMAGE_FOCUSCONTROLTYPE
OMX_IMAGE_HUFFMANTABLETYPE	include/media/stagefright/openmax/OMX_Image.h	/^typedef enum OMX_IMAGE_HUFFMANTABLETYPE {$/;"	g
OMX_IMAGE_HUFFMANTABLETYPE	include/media/stagefright/openmax/OMX_Image.h	/^} OMX_IMAGE_HUFFMANTABLETYPE;$/;"	t	typeref:enum:OMX_IMAGE_HUFFMANTABLETYPE
OMX_IMAGE_HuffmanTableAC	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_HuffmanTableAC = 0,$/;"	e	enum:OMX_IMAGE_HUFFMANTABLETYPE
OMX_IMAGE_HuffmanTableACChroma	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_HuffmanTableACChroma,$/;"	e	enum:OMX_IMAGE_HUFFMANTABLETYPE
OMX_IMAGE_HuffmanTableACLuma	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_HuffmanTableACLuma,$/;"	e	enum:OMX_IMAGE_HUFFMANTABLETYPE
OMX_IMAGE_HuffmanTableDC	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_HuffmanTableDC,$/;"	e	enum:OMX_IMAGE_HUFFMANTABLETYPE
OMX_IMAGE_HuffmanTableDCChroma	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_HuffmanTableDCChroma,$/;"	e	enum:OMX_IMAGE_HUFFMANTABLETYPE
OMX_IMAGE_HuffmanTableDCLuma	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_HuffmanTableDCLuma,$/;"	e	enum:OMX_IMAGE_HUFFMANTABLETYPE
OMX_IMAGE_HuffmanTableKhronosExtensions	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_HuffmanTableKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_IMAGE_HUFFMANTABLETYPE
OMX_IMAGE_HuffmanTableMax	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_HuffmanTableMax = 0x7FFFFFFF$/;"	e	enum:OMX_IMAGE_HUFFMANTABLETYPE
OMX_IMAGE_HuffmanTableVendorStartUnused	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_HuffmanTableVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_IMAGE_HUFFMANTABLETYPE
OMX_IMAGE_PARAM_FLASHCONTROLTYPE	include/media/stagefright/openmax/OMX_Image.h	/^typedef struct OMX_IMAGE_PARAM_FLASHCONTROLTYPE {$/;"	s
OMX_IMAGE_PARAM_FLASHCONTROLTYPE	include/media/stagefright/openmax/OMX_Image.h	/^} OMX_IMAGE_PARAM_FLASHCONTROLTYPE;$/;"	t	typeref:struct:OMX_IMAGE_PARAM_FLASHCONTROLTYPE
OMX_IMAGE_PARAM_HUFFMANTTABLETYPE	include/media/stagefright/openmax/OMX_Image.h	/^typedef struct OMX_IMAGE_PARAM_HUFFMANTTABLETYPE {$/;"	s
OMX_IMAGE_PARAM_HUFFMANTTABLETYPE	include/media/stagefright/openmax/OMX_Image.h	/^}OMX_IMAGE_PARAM_HUFFMANTTABLETYPE;$/;"	t	typeref:struct:OMX_IMAGE_PARAM_HUFFMANTTABLETYPE
OMX_IMAGE_PARAM_PORTFORMATTYPE	include/media/stagefright/openmax/OMX_Image.h	/^typedef struct OMX_IMAGE_PARAM_PORTFORMATTYPE {$/;"	s
OMX_IMAGE_PARAM_PORTFORMATTYPE	include/media/stagefright/openmax/OMX_Image.h	/^} OMX_IMAGE_PARAM_PORTFORMATTYPE;$/;"	t	typeref:struct:OMX_IMAGE_PARAM_PORTFORMATTYPE
OMX_IMAGE_PARAM_QFACTORTYPE	include/media/stagefright/openmax/OMX_Image.h	/^typedef struct OMX_IMAGE_PARAM_QFACTORTYPE {$/;"	s
OMX_IMAGE_PARAM_QFACTORTYPE	include/media/stagefright/openmax/OMX_Image.h	/^} OMX_IMAGE_PARAM_QFACTORTYPE;$/;"	t	typeref:struct:OMX_IMAGE_PARAM_QFACTORTYPE
OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE	include/media/stagefright/openmax/OMX_Image.h	/^typedef struct OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE {$/;"	s
OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE	include/media/stagefright/openmax/OMX_Image.h	/^} OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE;$/;"	t	typeref:struct:OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE
OMX_IMAGE_PORTDEFINITIONTYPE	include/media/stagefright/openmax/OMX_Image.h	/^typedef struct OMX_IMAGE_PORTDEFINITIONTYPE {$/;"	s
OMX_IMAGE_PORTDEFINITIONTYPE	include/media/stagefright/openmax/OMX_Image.h	/^} OMX_IMAGE_PORTDEFINITIONTYPE;$/;"	t	typeref:struct:OMX_IMAGE_PORTDEFINITIONTYPE
OMX_IMAGE_QUANTIZATIONTABLETYPE	include/media/stagefright/openmax/OMX_Image.h	/^typedef enum OMX_IMAGE_QUANTIZATIONTABLETYPE {$/;"	g
OMX_IMAGE_QUANTIZATIONTABLETYPE	include/media/stagefright/openmax/OMX_Image.h	/^} OMX_IMAGE_QUANTIZATIONTABLETYPE;$/;"	t	typeref:enum:OMX_IMAGE_QUANTIZATIONTABLETYPE
OMX_IMAGE_QuantizationTableChroma	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_QuantizationTableChroma,$/;"	e	enum:OMX_IMAGE_QUANTIZATIONTABLETYPE
OMX_IMAGE_QuantizationTableChromaCb	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_QuantizationTableChromaCb,$/;"	e	enum:OMX_IMAGE_QUANTIZATIONTABLETYPE
OMX_IMAGE_QuantizationTableChromaCr	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_QuantizationTableChromaCr,$/;"	e	enum:OMX_IMAGE_QUANTIZATIONTABLETYPE
OMX_IMAGE_QuantizationTableKhronosExtensions	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_QuantizationTableKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_IMAGE_QUANTIZATIONTABLETYPE
OMX_IMAGE_QuantizationTableLuma	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_QuantizationTableLuma = 0,$/;"	e	enum:OMX_IMAGE_QUANTIZATIONTABLETYPE
OMX_IMAGE_QuantizationTableMax	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_QuantizationTableMax = 0x7FFFFFFF$/;"	e	enum:OMX_IMAGE_QUANTIZATIONTABLETYPE
OMX_IMAGE_QuantizationTableVendorStartUnused	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_QuantizationTableVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_IMAGE_QUANTIZATIONTABLETYPE
OMX_Image_h	include/media/stagefright/openmax/OMX_Image.h	46;"	d
bFlagErrorConcealment	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_BOOL bFlagErrorConcealment;$/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE
cMIMEType	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_STRING cMIMEType;$/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE
eColorFormat	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_COLOR_FORMATTYPE eColorFormat;$/;"	m	struct:OMX_IMAGE_PARAM_PORTFORMATTYPE
eColorFormat	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_COLOR_FORMATTYPE eColorFormat;$/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE
eCompressionFormat	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_CODINGTYPE eCompressionFormat;$/;"	m	struct:OMX_IMAGE_PARAM_PORTFORMATTYPE
eCompressionFormat	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_CODINGTYPE eCompressionFormat;$/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE
eFlashControl	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_FLASHCONTROLTYPE eFlashControl;$/;"	m	struct:OMX_IMAGE_PARAM_FLASHCONTROLTYPE
eFocusControl	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_FOCUSCONTROLTYPE eFocusControl;$/;"	m	struct:OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE
eHuffmanTable	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_HUFFMANTABLETYPE eHuffmanTable;$/;"	m	struct:OMX_IMAGE_PARAM_HUFFMANTTABLETYPE
eQuantizationTable	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_IMAGE_QUANTIZATIONTABLETYPE eQuantizationTable;$/;"	m	struct:OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE
nFocusStepIndex	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_U32 nFocusStepIndex;$/;"	m	struct:OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE
nFocusSteps	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_U32 nFocusSteps;$/;"	m	struct:OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE
nFrameHeight	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_U32 nFrameHeight;$/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE
nFrameWidth	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_U32 nFrameWidth; $/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE
nHuffmanTable	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_U8 nHuffmanTable[256];$/;"	m	struct:OMX_IMAGE_PARAM_HUFFMANTTABLETYPE
nIndex	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_U32 nIndex;$/;"	m	struct:OMX_IMAGE_PARAM_PORTFORMATTYPE
nNumberOfHuffmanCodeOfLength	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_U8 nNumberOfHuffmanCodeOfLength[16];$/;"	m	struct:OMX_IMAGE_PARAM_HUFFMANTTABLETYPE
nPortIndex	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_U32 nPortIndex;       $/;"	m	struct:OMX_IMAGE_PARAM_QFACTORTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_IMAGE_PARAM_FLASHCONTROLTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_IMAGE_PARAM_HUFFMANTTABLETYPE
nPortIndex	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_IMAGE_PARAM_PORTFORMATTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE
nQFactor	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_U32 nQFactor;                                        $/;"	m	struct:OMX_IMAGE_PARAM_QFACTORTYPE
nQuantizationMatrix	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_U8 nQuantizationMatrix[64];$/;"	m	struct:OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE
nSize	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_U32 nSize;            $/;"	m	struct:OMX_IMAGE_PARAM_QFACTORTYPE
nSize	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE
nSize	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_IMAGE_PARAM_FLASHCONTROLTYPE
nSize	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_IMAGE_PARAM_HUFFMANTTABLETYPE
nSize	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_IMAGE_PARAM_PORTFORMATTYPE
nSize	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE
nSliceHeight	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_U32 nSliceHeight;$/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE
nStride	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_S32 nStride;     $/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE
nVersion	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_VERSIONTYPE nVersion; $/;"	m	struct:OMX_IMAGE_PARAM_QFACTORTYPE
nVersion	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE
nVersion	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_IMAGE_PARAM_FLASHCONTROLTYPE
nVersion	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_IMAGE_PARAM_HUFFMANTTABLETYPE
nVersion	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_IMAGE_PARAM_PORTFORMATTYPE
nVersion	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE
pNativeRender	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_NATIVE_DEVICETYPE pNativeRender;$/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE
pNativeWindow	include/media/stagefright/openmax/OMX_Image.h	/^    OMX_NATIVE_WINDOWTYPE pNativeWindow;$/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE
OMX_INDEXTYPE	include/media/stagefright/openmax/OMX_Index.h	/^typedef enum OMX_INDEXTYPE {$/;"	g
OMX_INDEXTYPE	include/media/stagefright/openmax/OMX_Index.h	/^} OMX_INDEXTYPE;$/;"	t	typeref:enum:OMX_INDEXTYPE
OMX_IndexAudioStartUnused	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexAudioStartUnused = 0x04000000,$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexAutoPauseAfterCapture	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexAutoPauseAfterCapture,         \/**< reference: OMX_CONFIG_BOOLEANTYPE *\/ $/;"	e	enum:OMX_INDEXTYPE
OMX_IndexCommonStartUnused	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexCommonStartUnused = 0x07000000,$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexComponentStartUnused	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexComponentStartUnused = 0x01000000,$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioBalance	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioBalance,            \/**< reference: OMX_AUDIO_CONFIG_BALANCETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioBass	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioBass,               \/**< reference: OMX_AUDIO_CONFIG_BASSTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioChannelMute	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioChannelMute,        \/**< reference: OMX_AUDIO_CONFIG_CHANNELMUTETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioChannelVolume	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioChannelVolume,      \/**< reference: OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioChorus	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioChorus,             \/**< reference: OMX_AUDIO_CONFIG_CHORUSTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioEchoCancelation	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioEchoCancelation,    \/**< reference: OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioEqualizer	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioEqualizer,          \/**< reference: OMX_AUDIO_CONFIG_EQUALIZERTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioLoudness	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioLoudness,           \/**< reference: OMX_AUDIO_CONFIG_LOUDNESSTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioMidiControl	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioMidiControl,        \/**< reference: OMX_AUDIO_CONFIG_MIDICONTROLTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioMidiImmediateEvent	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioMidiImmediateEvent, \/**< reference: OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioMidiMetaEvent	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioMidiMetaEvent,      \/**< reference: OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioMidiMetaEventData	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioMidiMetaEventData,  \/**< reference: OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioMidiSoundBankProgram	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioMidiSoundBankProgram, \/**< reference: OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioMidiStatus	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioMidiStatus,         \/**< reference: OMX_AUDIO_CONFIG_MIDISTATUSTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioMute	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioMute,               \/**< reference: OMX_AUDIO_CONFIG_MUTETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioNoiseReduction	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioNoiseReduction,     \/**< reference: OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioReverberation	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioReverberation,      \/**< reference: OMX_AUDIO_CONFIG_REVERBERATIONTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioStereoWidening	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioStereoWidening,     \/**< reference: OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioTreble	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioTreble,             \/**< reference: OMX_AUDIO_CONFIG_TREBLETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioVolume	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioVolume,             \/**< reference: OMX_AUDIO_CONFIG_VOLUMETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCaptureMode	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigCaptureMode,             \/**< reference: OMX_CONFIG_CAPTUREMODETYPE *\/ $/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCapturing	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigCapturing,               \/**< reference: OMX_CONFIG_BOOLEANTYPE *\/ $/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonBacklight	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonBacklight,         \/**< reference: OMX_CONFIG_BACKLIGHTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonBrightness	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonBrightness,        \/**< reference: OMX_CONFIG_BRIGHTNESSTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonColorBlend	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonColorBlend,        \/**< reference: OMX_CONFIG_COLORBLENDTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonColorEnhancement	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonColorEnhancement,  \/**< reference: OMX_CONFIG_COLORENHANCEMENTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonColorFormatConversion	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonColorFormatConversion, \/**< reference: OMX_CONFIG_COLORCONVERSIONTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonColorKey	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonColorKey,          \/**< reference: OMX_CONFIG_COLORKEYTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonContrast	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonContrast,          \/**< reference: OMX_CONFIG_CONTRASTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonDigitalZoom	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonDigitalZoom,       \/**< reference: OMX_CONFIG_SCALEFACTORTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonDithering	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonDithering,         \/**< reference: OMX_CONFIG_DITHERTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonExclusionRect	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonExclusionRect,     \/**< reference: OMX_CONFIG_RECTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonExposure	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonExposure,          \/**< reference: OMX_CONFIG_EXPOSURECONTROLTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonExposureValue	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonExposureValue,     \/**< reference: OMX_CONFIG_EXPOSUREVALUETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonFocusRegion	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonFocusRegion,       \/**< reference: OMX_CONFIG_FOCUSREGIONTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonFocusStatus	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonFocusStatus,       \/**< reference: OMX_PARAM_FOCUSSTATUSTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonFrameStabilisation	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonFrameStabilisation,\/**< reference: OMX_CONFIG_FRAMESTABTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonGamma	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonGamma,             \/**< reference: OMX_CONFIG_GAMMATYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonImageFilter	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonImageFilter,       \/**< reference: OMX_CONFIG_IMAGEFILTERTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonInputCrop	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonInputCrop,         \/**< reference: OMX_CONFIG_RECTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonLightness	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonLightness,         \/**< reference: OMX_CONFIG_LIGHTNESSTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonMirror	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonMirror,            \/**< reference: OMX_CONFIG_MIRRORTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonOpticalZoom	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonOpticalZoom,       \/**< reference: OMX_CONFIG_SCALEFACTORTYPE*\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonOutputCrop	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonOutputCrop,        \/**< reference: OMX_CONFIG_RECTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonOutputPosition	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonOutputPosition,    \/**< reference: OMX_CONFIG_POINTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonOutputSize	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonOutputSize,        \/**< reference: OMX_FRAMESIZETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonPlaneBlend	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonPlaneBlend,        \/**< reference: OMX_CONFIG_PLANEBLENDTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonRotate	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonRotate,            \/**< reference: OMX_CONFIG_ROTATIONTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonSaturation	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonSaturation,        \/**< reference: OMX_CONFIG_SATURATIONTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonScale	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonScale,             \/**< reference: OMX_CONFIG_SCALEFACTORTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonTransitionEffect	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonTransitionEffect,  \/**< reference: OMX_CONFIG_TRANSITIONEFFECTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonWhiteBalance	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonWhiteBalance,      \/**< reference: OMX_CONFIG_WHITEBALCONTROLTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigContainerNodeCount	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigContainerNodeCount,      \/**< reference: OMX_CONFIG_CONTAINERNODECOUNTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCounterNodeID	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigCounterNodeID,           \/**< reference: OMX_CONFIG_CONTAINERNODEIDTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigFlashControl	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigFlashControl,            \/**< reference: OMX_IMAGE_PARAM_FLASHCONTROLTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigFocusControl	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigFocusControl,            \/**< reference: OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigMetadataItem	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigMetadataItem,            \/**< reference: OMX_CONFIG_METADATAITEMTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigMetadataItemCount	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigMetadataItemCount,       \/**< reference: OMX_CONFIG_METADATAITEMCOUNTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigOtherPower	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigOtherPower,              \/**< reference: OMX_OTHER_CONFIG_POWERTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigOtherStats	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigOtherStats,              \/**< reference: OMX_OTHER_CONFIG_STATSTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigPriorityMgmt	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigPriorityMgmt,            \/**< reference: OMX_PRIORITYMGMTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigTimeActiveRefClock	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigTimeActiveRefClock,      \/**< reference: OMX_TIME_CONFIG_ACTIVEREFCLOCKTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigTimeClientStartTime	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigTimeClientStartTime,     \/**<reference:  OMX_TIME_CONFIG_TIMESTAMPTYPE (write only) *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigTimeClockState	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigTimeClockState,          \/**< reference: OMX_TIME_CONFIG_CLOCKSTATETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigTimeCurrentAudioReference	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigTimeCurrentAudioReference, \/**< reference: OMX_TIME_CONFIG_TIMESTAMPTYPE (write only) *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigTimeCurrentMediaTime	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigTimeCurrentMediaTime,    \/**< reference: OMX_TIME_CONFIG_TIMESTAMPTYPE (read only) *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigTimeCurrentVideoReference	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigTimeCurrentVideoReference, \/**< reference: OMX_TIME_CONFIG_TIMESTAMPTYPE (write only) *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigTimeCurrentWallTime	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigTimeCurrentWallTime,     \/**< reference: OMX_TIME_CONFIG_TIMESTAMPTYPE (read only) *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigTimeMediaTimeRequest	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigTimeMediaTimeRequest,    \/**< reference: OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE (write only) *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigTimePosition	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigTimePosition,            \/**< reference: OMX_TIME_CONFIG_TIMESTAMPTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigTimeScale	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigTimeScale,               \/**< reference: OMX_TIME_CONFIG_SCALETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigTimeSeekMode	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigTimeSeekMode,            \/**< reference: OMX_TIME_CONFIG_SEEKMODETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigVideoAVCIntraPeriod	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigVideoAVCIntraPeriod,     \/**< reference: OMX_VIDEO_CONFIG_AVCINTRAPERIOD *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigVideoBitrate	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigVideoBitrate,            \/**< reference: OMX_VIDEO_CONFIG_BITRATETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigVideoFramerate	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigVideoFramerate,          \/**< reference: OMX_CONFIG_FRAMERATETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigVideoIntraMBRefresh	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigVideoIntraMBRefresh,     \/**< reference: OMX_CONFIG_MACROBLOCKERRORMAPTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigVideoIntraVOPRefresh	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigVideoIntraVOPRefresh,    \/**< reference: OMX_CONFIG_INTRAREFRESHVOPTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigVideoMBErrorReporting	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigVideoMBErrorReporting,   \/**< reference: OMX_CONFIG_MBERRORREPORTINGTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigVideoMacroBlockErrorMap	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigVideoMacroBlockErrorMap, \/**< reference: OMX_CONFIG_MACROBLOCKERRORMAPTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigVideoNalSize	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexConfigVideoNalSize,            \/**< reference: OMX_VIDEO_CONFIG_NALSIZE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexImageStartUnused	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexImageStartUnused = 0x05000000,$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexKhronosExtensions	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_INDEXTYPE
OMX_IndexMax	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexMax = 0x7FFFFFFF$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexOtherStartUnused	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexOtherStartUnused = 0x08000000,$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamActiveStream	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamActiveStream,             \/**< reference: OMX_PARAM_U32TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioAac	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamAudioAac,                 \/**< reference: OMX_AUDIO_PARAM_AACPROFILETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioAdpcm	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamAudioAdpcm,               \/**< reference: OMX_AUDIO_PARAM_ADPCMTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioAmr	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamAudioAmr,                 \/**< reference: OMX_AUDIO_PARAM_AMRTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioEvrc	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamAudioEvrc,                \/**< reference: OMX_AUDIO_PARAM_EVRCTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioG723	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamAudioG723,                \/**< reference: OMX_AUDIO_PARAM_G723TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioG726	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamAudioG726,                \/**< reference: OMX_AUDIO_PARAM_G726TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioG729	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamAudioG729,                \/**< reference: OMX_AUDIO_PARAM_G729TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioGsm_EFR	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamAudioGsm_EFR,             \/**< reference: OMX_AUDIO_PARAM_GSMEFRTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioGsm_FR	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamAudioGsm_FR,              \/**< reference: OMX_AUDIO_PARAM_GSMFRTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioGsm_HR	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamAudioGsm_HR,              \/**< reference: OMX_AUDIO_PARAM_GSMHRTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioInit	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamAudioInit,                \/**< reference: OMX_PORT_PARAM_TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioMidi	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamAudioMidi,                \/**< reference: OMX_AUDIO_PARAM_MIDITYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioMidiLoadUserSound	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamAudioMidiLoadUserSound,   \/**< reference: OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioMp3	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamAudioMp3,                 \/**< reference: OMX_AUDIO_PARAM_MP3TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioPcm	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamAudioPcm,                 \/**< reference: OMX_AUDIO_PARAM_PCMMODETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioPdc_EFR	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamAudioPdc_EFR,             \/**< reference: OMX_AUDIO_PARAM_PDCEFRTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioPdc_FR	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamAudioPdc_FR,              \/**< reference: OMX_AUDIO_PARAM_PDCFRTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioPdc_HR	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamAudioPdc_HR,              \/**< reference: OMX_AUDIO_PARAM_PDCHRTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioPortFormat	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamAudioPortFormat,          \/**< reference: OMX_AUDIO_PARAM_PORTFORMATTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioQcelp13	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamAudioQcelp13,             \/**< reference: OMX_AUDIO_PARAM_QCELP13TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioQcelp8	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamAudioQcelp8,              \/**< reference: OMX_AUDIO_PARAM_QCELP8TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioRa	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamAudioRa,                  \/**< reference: OMX_AUDIO_PARAM_RATYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioSbc	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamAudioSbc,                 \/**< reference: OMX_AUDIO_PARAM_SBCTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioSmv	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamAudioSmv,                 \/**< reference: OMX_AUDIO_PARAM_SMVTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioTdma_EFR	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamAudioTdma_EFR,            \/**< reference: OMX_AUDIO_PARAM_TDMAEFRTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioTdma_FR	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamAudioTdma_FR,             \/**< reference: OMX_AUDIO_PARAM_TDMAFRTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioVorbis	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamAudioVorbis,              \/**< reference: OMX_AUDIO_PARAM_VORBISTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioWma	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamAudioWma,                 \/**< reference: OMX_AUDIO_PARAM_WMATYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamCommonDeblocking	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamCommonDeblocking,         \/**< reference: OMX_PARAM_DEBLOCKINGTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamCommonExtraQuantData	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamCommonExtraQuantData,     \/**< reference: OMX_OTHER_EXTRADATATYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamCommonInterleave	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamCommonInterleave,         \/**< reference: OMX_PARAM_INTERLEAVETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamCommonSensorMode	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamCommonSensorMode,         \/**< reference: OMX_PARAM_SENSORMODETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamCompBufferSupplier	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamCompBufferSupplier,       \/**< reference: OMX_PARAM_BUFFERSUPPLIERTYPE *\/ $/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamComponentSuspended	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamComponentSuspended,       \/**< reference: OMX_PARAM_SUSPENSIONTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamContentURI	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamContentURI,               \/**< reference: OMX_PARAM_CONTENTURITYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamCustomContentPipe	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamCustomContentPipe,        \/**< reference: OMX_PARAM_CONTENTPIPETYPE *\/ $/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamDisableResourceConcealment	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamDisableResourceConcealment, \/**< reference: OMX_RESOURCECONCEALMENTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamFlashControl	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamFlashControl,             \/**< reference: OMX_IMAGE_PARAM_FLASHCONTROLTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamHuffmanTable	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamHuffmanTable,             \/**< reference: OMX_IMAGE_PARAM_HUFFMANTTABLETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamImageInit	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamImageInit,                \/**< reference: OMX_PORT_PARAM_TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamImagePortFormat	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamImagePortFormat,          \/**< reference: OMX_IMAGE_PARAM_PORTFORMATTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamMetadataFilterType	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamMetadataFilterType,       \/**< reference: OMX_PARAM_METADATAFILTERTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamMetadataKeyFilter	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamMetadataKeyFilter,        \/**< reference: OMX_PARAM_METADATAFILTERTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamNumAvailableStreams	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamNumAvailableStreams,      \/**< reference: OMX_PARAM_U32TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamOtherInit	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamOtherInit,                \/**< reference: OMX_PORT_PARAM_TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamOtherPortFormat	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamOtherPortFormat,          \/**< reference: OMX_OTHER_PARAM_PORTFORMATTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamPortDefinition	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamPortDefinition,           \/**< reference: OMX_PARAM_PORTDEFINITIONTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamPriorityMgmt	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamPriorityMgmt,             \/**< reference: OMX_PRIORITYMGMTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamQFactor	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamQFactor,                  \/**< reference: OMX_IMAGE_PARAM_QFACTORTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamQuantizationTable	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamQuantizationTable,        \/**< reference: OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamStandardComponentRole	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamStandardComponentRole,    \/**< reference: OMX_PARAM_COMPONENTROLETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamSuspensionPolicy	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamSuspensionPolicy,         \/**< reference: OMX_PARAM_SUSPENSIONPOLICYTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoAvc	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamVideoAvc,                 \/**< reference: OMX_VIDEO_PARAM_AVCTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoBitrate	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamVideoBitrate,             \/**< reference: OMX_VIDEO_PARAM_BITRATETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoErrorCorrection	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamVideoErrorCorrection,     \/**< reference: OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoFastUpdate	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamVideoFastUpdate,          \/**< reference: OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoH263	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamVideoH263,                \/**< reference: OMX_VIDEO_PARAM_H263TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoInit	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamVideoInit,                \/**< reference: OMX_PORT_PARAM_TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoIntraRefresh	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamVideoIntraRefresh,        \/**< reference: OMX_VIDEO_PARAM_INTRAREFRESHTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoMacroblocksPerFrame	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamVideoMacroblocksPerFrame, \/**< reference: OMX_PARAM_MACROBLOCKSTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoMotionVector	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamVideoMotionVector,        \/**< reference: OMX_VIDEO_PARAM_MOTIONVECTORTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoMpeg2	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamVideoMpeg2,               \/**< reference: OMX_VIDEO_PARAM_MPEG2TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoMpeg4	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamVideoMpeg4,               \/**< reference: OMX_VIDEO_PARAM_MPEG4TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoPortFormat	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamVideoPortFormat,          \/**< reference: OMX_VIDEO_PARAM_PORTFORMATTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoProfileLevelCurrent	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamVideoProfileLevelCurrent, \/**< reference: OMX_VIDEO_PARAM_PROFILELEVELTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoProfileLevelQuerySupported	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamVideoProfileLevelQuerySupported, \/**< reference: OMX_VIDEO_PARAM_PROFILELEVELTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoQuantization	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamVideoQuantization,        \/**< reference: OMX_VIDEO_PARAM_QUANTIZATIONTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoRv	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamVideoRv,                  \/**< reference: OMX_VIDEO_PARAM_RVTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoSliceFMO	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamVideoSliceFMO,            \/**< reference: OMX_VIDEO_PARAM_AVCSLICEFMO *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoVBSMC	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamVideoVBSMC,               \/**< reference: OMX_VIDEO_PARAM_VBSMCTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoWmv	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexParamVideoWmv,                 \/**< reference: OMX_VIDEO_PARAM_WMVTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexPortStartUnused	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexPortStartUnused = 0x02000000,$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexReservedStartUnused	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexReservedStartUnused = 0x03000000,$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexTimeStartUnused	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexTimeStartUnused = 0x09000000,$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexVendorStartUnused	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexVendorStartUnused = 0x7F000000,$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexVideoStartUnused	include/media/stagefright/openmax/OMX_Index.h	/^    OMX_IndexVideoStartUnused = 0x06000000,$/;"	e	enum:OMX_INDEXTYPE
OMX_Index_h	include/media/stagefright/openmax/OMX_Index.h	48;"	d
OMX_CLOCKPORT0	include/media/stagefright/openmax/OMX_Other.h	268;"	d
OMX_CLOCKPORT1	include/media/stagefright/openmax/OMX_Other.h	269;"	d
OMX_CLOCKPORT2	include/media/stagefright/openmax/OMX_Other.h	270;"	d
OMX_CLOCKPORT3	include/media/stagefright/openmax/OMX_Other.h	271;"	d
OMX_CLOCKPORT4	include/media/stagefright/openmax/OMX_Other.h	272;"	d
OMX_CLOCKPORT5	include/media/stagefright/openmax/OMX_Other.h	273;"	d
OMX_CLOCKPORT6	include/media/stagefright/openmax/OMX_Other.h	274;"	d
OMX_CLOCKPORT7	include/media/stagefright/openmax/OMX_Other.h	275;"	d
OMX_OTHER_CONFIG_POWERTYPE	include/media/stagefright/openmax/OMX_Other.h	/^typedef struct OMX_OTHER_CONFIG_POWERTYPE {$/;"	s
OMX_OTHER_CONFIG_POWERTYPE	include/media/stagefright/openmax/OMX_Other.h	/^} OMX_OTHER_CONFIG_POWERTYPE;$/;"	t	typeref:struct:OMX_OTHER_CONFIG_POWERTYPE
OMX_OTHER_CONFIG_STATSTYPE	include/media/stagefright/openmax/OMX_Other.h	/^typedef struct OMX_OTHER_CONFIG_STATSTYPE {$/;"	s
OMX_OTHER_CONFIG_STATSTYPE	include/media/stagefright/openmax/OMX_Other.h	/^} OMX_OTHER_CONFIG_STATSTYPE;$/;"	t	typeref:struct:OMX_OTHER_CONFIG_STATSTYPE
OMX_OTHER_FORMATTYPE	include/media/stagefright/openmax/OMX_Other.h	/^typedef enum OMX_OTHER_FORMATTYPE {$/;"	g
OMX_OTHER_FORMATTYPE	include/media/stagefright/openmax/OMX_Other.h	/^} OMX_OTHER_FORMATTYPE;$/;"	t	typeref:enum:OMX_OTHER_FORMATTYPE
OMX_OTHER_FormatBinary	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_OTHER_FormatBinary,   \/**< Arbitrary binary data *\/$/;"	e	enum:OMX_OTHER_FORMATTYPE
OMX_OTHER_FormatKhronosExtensions	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_OTHER_FormatKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_OTHER_FORMATTYPE
OMX_OTHER_FormatMax	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_OTHER_FormatMax = 0x7FFFFFFF$/;"	e	enum:OMX_OTHER_FORMATTYPE
OMX_OTHER_FormatPower	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_OTHER_FormatPower,    \/**< Perhaps used for enabling\/disabling power $/;"	e	enum:OMX_OTHER_FORMATTYPE
OMX_OTHER_FormatStats	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_OTHER_FormatStats,    \/**< Could be things such as frame rate, frames $/;"	e	enum:OMX_OTHER_FORMATTYPE
OMX_OTHER_FormatTime	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_OTHER_FormatTime = 0, \/**< Transmission of various timestamps, elapsed time, $/;"	e	enum:OMX_OTHER_FORMATTYPE
OMX_OTHER_FormatVendorReserved	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_OTHER_FormatVendorReserved = 1000, \/**< Starting value for vendor specific $/;"	e	enum:OMX_OTHER_FORMATTYPE
OMX_OTHER_FormatVendorStartUnused	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_OTHER_FormatVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_OTHER_FORMATTYPE
OMX_OTHER_PARAM_PORTFORMATTYPE	include/media/stagefright/openmax/OMX_Other.h	/^typedef struct OMX_OTHER_PARAM_PORTFORMATTYPE {$/;"	s
OMX_OTHER_PARAM_PORTFORMATTYPE	include/media/stagefright/openmax/OMX_Other.h	/^} OMX_OTHER_PARAM_PORTFORMATTYPE; $/;"	t	typeref:struct:OMX_OTHER_PARAM_PORTFORMATTYPE
OMX_OTHER_PORTDEFINITIONTYPE	include/media/stagefright/openmax/OMX_Other.h	/^typedef struct OMX_OTHER_PORTDEFINITIONTYPE {$/;"	s
OMX_OTHER_PORTDEFINITIONTYPE	include/media/stagefright/openmax/OMX_Other.h	/^} OMX_OTHER_PORTDEFINITIONTYPE;$/;"	t	typeref:struct:OMX_OTHER_PORTDEFINITIONTYPE
OMX_Other_h	include/media/stagefright/openmax/OMX_Other.h	47;"	d
OMX_TIME_CLOCKSTATE	include/media/stagefright/openmax/OMX_Other.h	/^typedef enum OMX_TIME_CLOCKSTATE {$/;"	g
OMX_TIME_CLOCKSTATE	include/media/stagefright/openmax/OMX_Other.h	/^} OMX_TIME_CLOCKSTATE;$/;"	t	typeref:enum:OMX_TIME_CLOCKSTATE
OMX_TIME_CONFIG_ACTIVEREFCLOCKTYPE	include/media/stagefright/openmax/OMX_Other.h	/^typedef struct OMX_TIME_CONFIG_ACTIVEREFCLOCKTYPE {$/;"	s
OMX_TIME_CONFIG_ACTIVEREFCLOCKTYPE	include/media/stagefright/openmax/OMX_Other.h	/^} OMX_TIME_CONFIG_ACTIVEREFCLOCKTYPE;$/;"	t	typeref:struct:OMX_TIME_CONFIG_ACTIVEREFCLOCKTYPE
OMX_TIME_CONFIG_CLOCKSTATETYPE	include/media/stagefright/openmax/OMX_Other.h	/^typedef struct OMX_TIME_CONFIG_CLOCKSTATETYPE {$/;"	s
OMX_TIME_CONFIG_CLOCKSTATETYPE	include/media/stagefright/openmax/OMX_Other.h	/^} OMX_TIME_CONFIG_CLOCKSTATETYPE;$/;"	t	typeref:struct:OMX_TIME_CONFIG_CLOCKSTATETYPE
OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE	include/media/stagefright/openmax/OMX_Other.h	/^typedef struct OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE {$/;"	s
OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE	include/media/stagefright/openmax/OMX_Other.h	/^} OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE;$/;"	t	typeref:struct:OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE
OMX_TIME_CONFIG_SCALETYPE	include/media/stagefright/openmax/OMX_Other.h	/^typedef struct OMX_TIME_CONFIG_SCALETYPE {$/;"	s
OMX_TIME_CONFIG_SCALETYPE	include/media/stagefright/openmax/OMX_Other.h	/^} OMX_TIME_CONFIG_SCALETYPE;$/;"	t	typeref:struct:OMX_TIME_CONFIG_SCALETYPE
OMX_TIME_CONFIG_SEEKMODETYPE	include/media/stagefright/openmax/OMX_Other.h	/^typedef struct OMX_TIME_CONFIG_SEEKMODETYPE {$/;"	s
OMX_TIME_CONFIG_SEEKMODETYPE	include/media/stagefright/openmax/OMX_Other.h	/^} OMX_TIME_CONFIG_SEEKMODETYPE;$/;"	t	typeref:struct:OMX_TIME_CONFIG_SEEKMODETYPE
OMX_TIME_CONFIG_TIMESTAMPTYPE	include/media/stagefright/openmax/OMX_Other.h	/^typedef struct OMX_TIME_CONFIG_TIMESTAMPTYPE {$/;"	s
OMX_TIME_CONFIG_TIMESTAMPTYPE	include/media/stagefright/openmax/OMX_Other.h	/^} OMX_TIME_CONFIG_TIMESTAMPTYPE;  $/;"	t	typeref:struct:OMX_TIME_CONFIG_TIMESTAMPTYPE
OMX_TIME_ClockStateKhronosExtensions	include/media/stagefright/openmax/OMX_Other.h	/^      OMX_TIME_ClockStateKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_TIME_CLOCKSTATE
OMX_TIME_ClockStateMax	include/media/stagefright/openmax/OMX_Other.h	/^      OMX_TIME_ClockStateMax = 0x7FFFFFFF$/;"	e	enum:OMX_TIME_CLOCKSTATE
OMX_TIME_ClockStateRunning	include/media/stagefright/openmax/OMX_Other.h	/^      OMX_TIME_ClockStateRunning,             \/**< Clock running. *\/$/;"	e	enum:OMX_TIME_CLOCKSTATE
OMX_TIME_ClockStateStopped	include/media/stagefright/openmax/OMX_Other.h	/^      OMX_TIME_ClockStateStopped,             \/**< Clock stopped. *\/$/;"	e	enum:OMX_TIME_CLOCKSTATE
OMX_TIME_ClockStateVendorStartUnused	include/media/stagefright/openmax/OMX_Other.h	/^      OMX_TIME_ClockStateVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_TIME_CLOCKSTATE
OMX_TIME_ClockStateWaitingForStartTime	include/media/stagefright/openmax/OMX_Other.h	/^      OMX_TIME_ClockStateWaitingForStartTime, \/**< Clock waiting until the $/;"	e	enum:OMX_TIME_CLOCKSTATE
OMX_TIME_MEDIATIMETYPE	include/media/stagefright/openmax/OMX_Other.h	/^typedef struct OMX_TIME_MEDIATIMETYPE {$/;"	s
OMX_TIME_MEDIATIMETYPE	include/media/stagefright/openmax/OMX_Other.h	/^} OMX_TIME_MEDIATIMETYPE;  $/;"	t	typeref:struct:OMX_TIME_MEDIATIMETYPE
OMX_TIME_REFCLOCKTYPE	include/media/stagefright/openmax/OMX_Other.h	/^typedef enum OMX_TIME_REFCLOCKTYPE {$/;"	g
OMX_TIME_REFCLOCKTYPE	include/media/stagefright/openmax/OMX_Other.h	/^} OMX_TIME_REFCLOCKTYPE;$/;"	t	typeref:enum:OMX_TIME_REFCLOCKTYPE
OMX_TIME_RefClockAudio	include/media/stagefright/openmax/OMX_Other.h	/^      OMX_TIME_RefClockAudio,	\/**< Use references sent through OMX_IndexConfigTimeCurrentAudioReference *\/$/;"	e	enum:OMX_TIME_REFCLOCKTYPE
OMX_TIME_RefClockKhronosExtensions	include/media/stagefright/openmax/OMX_Other.h	/^      OMX_TIME_RefClockKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_TIME_REFCLOCKTYPE
OMX_TIME_RefClockMax	include/media/stagefright/openmax/OMX_Other.h	/^      OMX_TIME_RefClockMax = 0x7FFFFFFF$/;"	e	enum:OMX_TIME_REFCLOCKTYPE
OMX_TIME_RefClockNone	include/media/stagefright/openmax/OMX_Other.h	/^      OMX_TIME_RefClockNone,    \/**< Use no references. *\/$/;"	e	enum:OMX_TIME_REFCLOCKTYPE
OMX_TIME_RefClockVendorStartUnused	include/media/stagefright/openmax/OMX_Other.h	/^      OMX_TIME_RefClockVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_TIME_REFCLOCKTYPE
OMX_TIME_RefClockVideo	include/media/stagefright/openmax/OMX_Other.h	/^      OMX_TIME_RefClockVideo,   \/**< Use references sent through OMX_IndexConfigTimeCurrentVideoReference *\/$/;"	e	enum:OMX_TIME_REFCLOCKTYPE
OMX_TIME_SEEKMODETYPE	include/media/stagefright/openmax/OMX_Other.h	/^typedef enum OMX_TIME_SEEKMODETYPE {$/;"	g
OMX_TIME_SEEKMODETYPE	include/media/stagefright/openmax/OMX_Other.h	/^} OMX_TIME_SEEKMODETYPE;$/;"	t	typeref:enum:OMX_TIME_SEEKMODETYPE
OMX_TIME_SeekModeAccurate	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_TIME_SeekModeAccurate, \/**< Prefer seeking to the actual seek $/;"	e	enum:OMX_TIME_SEEKMODETYPE
OMX_TIME_SeekModeFast	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_TIME_SeekModeFast = 0, \/**< Prefer seeking to an approximation$/;"	e	enum:OMX_TIME_SEEKMODETYPE
OMX_TIME_SeekModeKhronosExtensions	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_TIME_SeekModeKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_TIME_SEEKMODETYPE
OMX_TIME_SeekModeMax	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_TIME_SeekModeMax = 0x7FFFFFFF$/;"	e	enum:OMX_TIME_SEEKMODETYPE
OMX_TIME_SeekModeVendorStartUnused	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_TIME_SeekModeVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_TIME_SEEKMODETYPE
OMX_TIME_UPDATETYPE	include/media/stagefright/openmax/OMX_Other.h	/^typedef enum OMX_TIME_UPDATETYPE {$/;"	g
OMX_TIME_UPDATETYPE	include/media/stagefright/openmax/OMX_Other.h	/^} OMX_TIME_UPDATETYPE;$/;"	t	typeref:enum:OMX_TIME_UPDATETYPE
OMX_TIME_UpdateClockStateChanged	include/media/stagefright/openmax/OMX_Other.h	/^      OMX_TIME_UpdateClockStateChanged,     \/**< Update was generated because the clock state changed. *\/$/;"	e	enum:OMX_TIME_UPDATETYPE
OMX_TIME_UpdateKhronosExtensions	include/media/stagefright/openmax/OMX_Other.h	/^      OMX_TIME_UpdateKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_TIME_UPDATETYPE
OMX_TIME_UpdateMax	include/media/stagefright/openmax/OMX_Other.h	/^      OMX_TIME_UpdateMax = 0x7FFFFFFF$/;"	e	enum:OMX_TIME_UPDATETYPE
OMX_TIME_UpdateRequestFulfillment	include/media/stagefright/openmax/OMX_Other.h	/^      OMX_TIME_UpdateRequestFulfillment,    \/**< Update is the fulfillment of a media time request. *\/$/;"	e	enum:OMX_TIME_UPDATETYPE
OMX_TIME_UpdateScaleChanged	include/media/stagefright/openmax/OMX_Other.h	/^      OMX_TIME_UpdateScaleChanged,	        \/**< Update was generated because the scale chagned. *\/$/;"	e	enum:OMX_TIME_UPDATETYPE
OMX_TIME_UpdateVendorStartUnused	include/media/stagefright/openmax/OMX_Other.h	/^      OMX_TIME_UpdateVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_TIME_UPDATETYPE
bEnablePM	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_BOOL bEnablePM;       \/**< Flag to enable Power Management *\/$/;"	m	struct:OMX_OTHER_CONFIG_POWERTYPE
eClock	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_TIME_REFCLOCKTYPE eClock;   \/**< Reference clock used to compute media time *\/                        $/;"	m	struct:OMX_TIME_CONFIG_ACTIVEREFCLOCKTYPE
eFormat	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_OTHER_FORMATTYPE eFormat;  \/**< Type of data expected for this channel *\/$/;"	m	struct:OMX_OTHER_PORTDEFINITIONTYPE
eFormat	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_OTHER_FORMATTYPE eFormat; \/**< Type of data expected for this channel *\/$/;"	m	struct:OMX_OTHER_PARAM_PORTFORMATTYPE
eState	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_TIME_CLOCKSTATE eState;     \/* Seeking Change. Added 7\/12.*\/$/;"	m	struct:OMX_TIME_MEDIATIMETYPE
eState	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_TIME_CLOCKSTATE eState; \/**< State of the media time. *\/$/;"	m	struct:OMX_TIME_CONFIG_CLOCKSTATETYPE
eType	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_TIME_SEEKMODETYPE eType;    \/**< The seek mode *\/$/;"	m	struct:OMX_TIME_CONFIG_SEEKMODETYPE
eUpdateType	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_TIME_UPDATETYPE eUpdateType; \/**< Reason for the update *\/$/;"	m	struct:OMX_TIME_MEDIATIMETYPE
nClientPrivate	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_U32 nClientPrivate;         \/**< Client private data to disabiguate this media time $/;"	m	struct:OMX_TIME_MEDIATIMETYPE
nIndex	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_U32 nIndex; \/**< Indicates the enumeration index for the format from 0x0 to N-1 *\/$/;"	m	struct:OMX_OTHER_PARAM_PORTFORMATTYPE
nMediaTimestamp	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_TICKS nMediaTimestamp;      \/**< Media time requested. If no media time was $/;"	m	struct:OMX_TIME_MEDIATIMETYPE
nMediaTimestamp	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_TICKS nMediaTimestamp;  \/**< Media timestamp requested.*\/ $/;"	m	struct:OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE
nOffset	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_TICKS nOffset;              \/**< Amount of wall clock time by which this$/;"	m	struct:OMX_TIME_MEDIATIMETYPE
nOffset	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_TICKS nOffset;          \/**< Amount of wall clock time by which this$/;"	m	struct:OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE
nOffset	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_TICKS nOffset;          \/**< Time to offset the media time by $/;"	m	struct:OMX_TIME_CONFIG_CLOCKSTATETYPE
nPortIndex	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_U32 nPortIndex;         \/**< port that this structure applies to *\/$/;"	m	struct:OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_U32 nPortIndex;     \/**< port that this structure applies to *\/$/;"	m	struct:OMX_TIME_CONFIG_TIMESTAMPTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_U32 nPortIndex; \/**< Indicates which port to set *\/$/;"	m	struct:OMX_OTHER_PARAM_PORTFORMATTYPE
nSize	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_U32 nSize;                  \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_TIME_CONFIG_ACTIVEREFCLOCKTYPE
nSize	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_U32 nSize;                  \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_TIME_CONFIG_SCALETYPE
nSize	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_U32 nSize;                  \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_TIME_CONFIG_SEEKMODETYPE
nSize	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_U32 nSize;                  \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_TIME_MEDIATIMETYPE
nSize	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_U32 nSize;               \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_TIME_CONFIG_TIMESTAMPTYPE
nSize	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_TIME_CONFIG_CLOCKSTATETYPE
nSize	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE
nSize	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_OTHER_CONFIG_POWERTYPE
nSize	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_OTHER_CONFIG_STATSTYPE
nSize	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_U32 nSize; \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_OTHER_PARAM_PORTFORMATTYPE
nStartTime	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_TICKS nStartTime;       \/**< Start time of the media time. *\/$/;"	m	struct:OMX_TIME_CONFIG_CLOCKSTATETYPE
nTimestamp	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_TICKS nTimestamp;  	     \/**< timestamp .*\/ $/;"	m	struct:OMX_TIME_CONFIG_TIMESTAMPTYPE
nVersion	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion;       \/**< OMX specification version information *\/$/;"	m	struct:OMX_TIME_CONFIG_ACTIVEREFCLOCKTYPE
nVersion	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion;       \/**< OMX specification version information *\/$/;"	m	struct:OMX_TIME_CONFIG_SCALETYPE
nVersion	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion;       \/**< OMX specification version information *\/$/;"	m	struct:OMX_TIME_CONFIG_SEEKMODETYPE
nVersion	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion;       \/**< OMX specification version information *\/$/;"	m	struct:OMX_TIME_MEDIATIMETYPE
nVersion	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion;    \/**< OMX specification version$/;"	m	struct:OMX_TIME_CONFIG_TIMESTAMPTYPE
nVersion	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version $/;"	m	struct:OMX_TIME_CONFIG_CLOCKSTATETYPE
nVersion	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE
nVersion	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_OTHER_CONFIG_POWERTYPE
nVersion	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_OTHER_CONFIG_STATSTYPE
nVersion	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_OTHER_PARAM_PORTFORMATTYPE
nWaitMask	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_U32 nWaitMask;          \/**< Mask of OMX_CLOCKPORT values. *\/$/;"	m	struct:OMX_TIME_CONFIG_CLOCKSTATETYPE
nWallTimeAtMediaTime	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_TICKS nWallTimeAtMediaTime; \/**< Wall time corresponding to nMediaTimeStamp.$/;"	m	struct:OMX_TIME_MEDIATIMETYPE
pClientPrivate	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_PTR pClientPrivate;     \/**< Client private data to disabiguate this media time $/;"	m	struct:OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE
xScale	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_S32 xScale;                 \/**< Current media time scale in Q16 format. *\/$/;"	m	struct:OMX_TIME_MEDIATIMETYPE
xScale	include/media/stagefright/openmax/OMX_Other.h	/^    OMX_S32 xScale;                 \/**< This is a value in Q16 format which is used for$/;"	m	struct:OMX_TIME_CONFIG_SCALETYPE
OMX_ALL	include/media/stagefright/openmax/OMX_Types.h	117;"	d
OMX_API	include/media/stagefright/openmax/OMX_Types.h	60;"	d
OMX_API	include/media/stagefright/openmax/OMX_Types.h	63;"	d
OMX_API	include/media/stagefright/openmax/OMX_Types.h	65;"	d
OMX_API	include/media/stagefright/openmax/OMX_Types.h	71;"	d
OMX_API	include/media/stagefright/openmax/OMX_Types.h	74;"	d
OMX_API	include/media/stagefright/openmax/OMX_Types.h	78;"	d
OMX_API	include/media/stagefright/openmax/OMX_Types.h	80;"	d
OMX_APIENTRY	include/media/stagefright/openmax/OMX_Types.h	86;"	d
OMX_BOOL	include/media/stagefright/openmax/OMX_Types.h	/^typedef enum OMX_BOOL {$/;"	g
OMX_BOOL	include/media/stagefright/openmax/OMX_Types.h	/^} OMX_BOOL; $/;"	t	typeref:enum:OMX_BOOL
OMX_BOOL_MAX	include/media/stagefright/openmax/OMX_Types.h	/^    OMX_BOOL_MAX = 0x7FFFFFFF$/;"	e	enum:OMX_BOOL
OMX_BS32	include/media/stagefright/openmax/OMX_Types.h	/^typedef struct OMX_BS32 {$/;"	s
OMX_BS32	include/media/stagefright/openmax/OMX_Types.h	/^} OMX_BS32;$/;"	t	typeref:struct:OMX_BS32
OMX_BU32	include/media/stagefright/openmax/OMX_Types.h	/^typedef struct OMX_BU32 {$/;"	s
OMX_BU32	include/media/stagefright/openmax/OMX_Types.h	/^} OMX_BU32;$/;"	t	typeref:struct:OMX_BU32
OMX_BYTE	include/media/stagefright/openmax/OMX_Types.h	/^typedef unsigned char* OMX_BYTE;$/;"	t
OMX_DIRTYPE	include/media/stagefright/openmax/OMX_Types.h	/^typedef enum OMX_DIRTYPE$/;"	g
OMX_DIRTYPE	include/media/stagefright/openmax/OMX_Types.h	/^} OMX_DIRTYPE;$/;"	t	typeref:enum:OMX_DIRTYPE
OMX_DirInput	include/media/stagefright/openmax/OMX_Types.h	/^    OMX_DirInput,              \/**< Port is an input port *\/$/;"	e	enum:OMX_DIRTYPE
OMX_DirMax	include/media/stagefright/openmax/OMX_Types.h	/^    OMX_DirMax = 0x7FFFFFFF$/;"	e	enum:OMX_DIRTYPE
OMX_DirOutput	include/media/stagefright/openmax/OMX_Types.h	/^    OMX_DirOutput,             \/**< Port is an output port *\/$/;"	e	enum:OMX_DIRTYPE
OMX_ENDIANTYPE	include/media/stagefright/openmax/OMX_Types.h	/^typedef enum OMX_ENDIANTYPE$/;"	g
OMX_ENDIANTYPE	include/media/stagefright/openmax/OMX_Types.h	/^} OMX_ENDIANTYPE;$/;"	t	typeref:enum:OMX_ENDIANTYPE
OMX_EndianBig	include/media/stagefright/openmax/OMX_Types.h	/^    OMX_EndianBig, \/**< big endian *\/$/;"	e	enum:OMX_ENDIANTYPE
OMX_EndianLittle	include/media/stagefright/openmax/OMX_Types.h	/^    OMX_EndianLittle, \/**< little endian *\/$/;"	e	enum:OMX_ENDIANTYPE
OMX_EndianMax	include/media/stagefright/openmax/OMX_Types.h	/^    OMX_EndianMax = 0x7FFFFFFF$/;"	e	enum:OMX_ENDIANTYPE
OMX_FALSE	include/media/stagefright/openmax/OMX_Types.h	/^    OMX_FALSE = 0,$/;"	e	enum:OMX_BOOL
OMX_HANDLETYPE	include/media/stagefright/openmax/OMX_Types.h	/^typedef void* OMX_HANDLETYPE;$/;"	t
OMX_IN	include/media/stagefright/openmax/OMX_Types.h	93;"	d
OMX_INOUT	include/media/stagefright/openmax/OMX_Types.h	109;"	d
OMX_MARKTYPE	include/media/stagefright/openmax/OMX_Types.h	/^typedef struct OMX_MARKTYPE$/;"	s
OMX_MARKTYPE	include/media/stagefright/openmax/OMX_Types.h	/^} OMX_MARKTYPE;$/;"	t	typeref:struct:OMX_MARKTYPE
OMX_NATIVE_DEVICETYPE	include/media/stagefright/openmax/OMX_Types.h	/^typedef void* OMX_NATIVE_DEVICETYPE;$/;"	t
OMX_NATIVE_WINDOWTYPE	include/media/stagefright/openmax/OMX_Types.h	/^typedef void* OMX_NATIVE_WINDOWTYPE;$/;"	t
OMX_NUMERICALDATATYPE	include/media/stagefright/openmax/OMX_Types.h	/^typedef enum OMX_NUMERICALDATATYPE$/;"	g
OMX_NUMERICALDATATYPE	include/media/stagefright/openmax/OMX_Types.h	/^} OMX_NUMERICALDATATYPE;$/;"	t	typeref:enum:OMX_NUMERICALDATATYPE
OMX_NumercialDataMax	include/media/stagefright/openmax/OMX_Types.h	/^    OMX_NumercialDataMax = 0x7FFFFFFF$/;"	e	enum:OMX_NUMERICALDATATYPE
OMX_NumericalDataSigned	include/media/stagefright/openmax/OMX_Types.h	/^    OMX_NumericalDataSigned, \/**< signed data *\/$/;"	e	enum:OMX_NUMERICALDATATYPE
OMX_NumericalDataUnsigned	include/media/stagefright/openmax/OMX_Types.h	/^    OMX_NumericalDataUnsigned, \/**< unsigned data *\/$/;"	e	enum:OMX_NUMERICALDATATYPE
OMX_OUT	include/media/stagefright/openmax/OMX_Types.h	100;"	d
OMX_PTR	include/media/stagefright/openmax/OMX_Types.h	/^typedef void* OMX_PTR;$/;"	t
OMX_S16	include/media/stagefright/openmax/OMX_Types.h	/^typedef signed short OMX_S16;$/;"	t
OMX_S32	include/media/stagefright/openmax/OMX_Types.h	/^typedef signed long OMX_S32;$/;"	t
OMX_S64	include/media/stagefright/openmax/OMX_Types.h	/^typedef signed   __int64  OMX_S64;$/;"	t
OMX_S64	include/media/stagefright/openmax/OMX_Types.h	/^typedef signed long long OMX_S64;$/;"	t
OMX_S8	include/media/stagefright/openmax/OMX_Types.h	/^typedef signed char OMX_S8;$/;"	t
OMX_STRING	include/media/stagefright/openmax/OMX_Types.h	/^typedef char* OMX_STRING;$/;"	t
OMX_TICKS	include/media/stagefright/openmax/OMX_Types.h	/^typedef OMX_S64 OMX_TICKS;$/;"	t
OMX_TICKS	include/media/stagefright/openmax/OMX_Types.h	/^typedef struct OMX_TICKS$/;"	s
OMX_TICKS	include/media/stagefright/openmax/OMX_Types.h	/^} OMX_TICKS;$/;"	t	typeref:struct:OMX_TICKS
OMX_TICKS_PER_SECOND	include/media/stagefright/openmax/OMX_Types.h	308;"	d
OMX_TRUE	include/media/stagefright/openmax/OMX_Types.h	/^    OMX_TRUE = !OMX_FALSE,$/;"	e	enum:OMX_BOOL
OMX_Types_h	include/media/stagefright/openmax/OMX_Types.h	49;"	d
OMX_U16	include/media/stagefright/openmax/OMX_Types.h	/^typedef unsigned short OMX_U16;$/;"	t
OMX_U32	include/media/stagefright/openmax/OMX_Types.h	/^typedef unsigned long OMX_U32;$/;"	t
OMX_U64	include/media/stagefright/openmax/OMX_Types.h	/^typedef unsigned __int64  OMX_U64;$/;"	t
OMX_U64	include/media/stagefright/openmax/OMX_Types.h	/^typedef unsigned long long OMX_U64;$/;"	t
OMX_U8	include/media/stagefright/openmax/OMX_Types.h	/^typedef unsigned char OMX_U8;$/;"	t
OMX_UUIDTYPE	include/media/stagefright/openmax/OMX_Types.h	/^typedef unsigned char OMX_UUIDTYPE[128];$/;"	t
OMX_VERSIONTYPE	include/media/stagefright/openmax/OMX_Types.h	/^typedef union OMX_VERSIONTYPE$/;"	u
OMX_VERSIONTYPE	include/media/stagefright/openmax/OMX_Types.h	/^} OMX_VERSIONTYPE;$/;"	t	typeref:union:OMX_VERSIONTYPE
hMarkTargetComponent	include/media/stagefright/openmax/OMX_Types.h	/^    OMX_HANDLETYPE hMarkTargetComponent;   \/**< The component that will $/;"	m	struct:OMX_MARKTYPE
nHighPart	include/media/stagefright/openmax/OMX_Types.h	/^    OMX_U32 nHighPart;   \/** high bits of the signed 64 bit tick value *\/$/;"	m	struct:OMX_TICKS
nLowPart	include/media/stagefright/openmax/OMX_Types.h	/^    OMX_U32 nLowPart;    \/** low bits of the signed 64 bit tick value *\/$/;"	m	struct:OMX_TICKS
nMax	include/media/stagefright/openmax/OMX_Types.h	/^    OMX_S32 nMax;   \/**< maximum for value (i.e. nValue <= nMax) *\/$/;"	m	struct:OMX_BS32
nMax	include/media/stagefright/openmax/OMX_Types.h	/^    OMX_U32 nMax;   \/**< maximum for value (i.e. nValue <= nMax) *\/$/;"	m	struct:OMX_BU32
nMin	include/media/stagefright/openmax/OMX_Types.h	/^    OMX_S32 nMin;   \/**< minimum for value (i.e. nValue >= nMin) *\/$/;"	m	struct:OMX_BS32
nMin	include/media/stagefright/openmax/OMX_Types.h	/^    OMX_U32 nMin;   \/**< minimum for value (i.e. nValue >= nMin) *\/$/;"	m	struct:OMX_BU32
nRevision	include/media/stagefright/openmax/OMX_Types.h	/^        OMX_U8 nRevision;       \/**< Revision version accessor element *\/$/;"	m	struct:OMX_VERSIONTYPE::__anon154
nStep	include/media/stagefright/openmax/OMX_Types.h	/^        OMX_U8 nStep;           \/**< Step version accessor element *\/$/;"	m	struct:OMX_VERSIONTYPE::__anon154
nValue	include/media/stagefright/openmax/OMX_Types.h	/^    OMX_S32 nValue; \/**< actual value *\/$/;"	m	struct:OMX_BS32
nValue	include/media/stagefright/openmax/OMX_Types.h	/^    OMX_U32 nValue; \/**< actual value *\/$/;"	m	struct:OMX_BU32
nVersion	include/media/stagefright/openmax/OMX_Types.h	/^    OMX_U32 nVersion;           \/**< 32 bit value to make accessing the$/;"	m	union:OMX_VERSIONTYPE
nVersionMajor	include/media/stagefright/openmax/OMX_Types.h	/^        OMX_U8 nVersionMajor;   \/**< Major version accessor element *\/$/;"	m	struct:OMX_VERSIONTYPE::__anon154
nVersionMinor	include/media/stagefright/openmax/OMX_Types.h	/^        OMX_U8 nVersionMinor;   \/**< Minor version accessor element *\/$/;"	m	struct:OMX_VERSIONTYPE::__anon154
pMarkData	include/media/stagefright/openmax/OMX_Types.h	/^    OMX_PTR pMarkData;   \/**< Application specific data associated with $/;"	m	struct:OMX_MARKTYPE
s	include/media/stagefright/openmax/OMX_Types.h	/^    } s;$/;"	m	union:OMX_VERSIONTYPE	typeref:struct:OMX_VERSIONTYPE::__anon154
ErrMap	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U8  ErrMap[1];             \/* Error map hint *\/$/;"	m	struct:OMX_CONFIG_MACROBLOCKERRORMAPTYPE
IntraRefreshVOP	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL IntraRefreshVOP;$/;"	m	struct:OMX_CONFIG_INTRAREFRESHVOPTYPE
OMX_CONFIG_FRAMERATETYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef struct OMX_CONFIG_FRAMERATETYPE {$/;"	s
OMX_CONFIG_FRAMERATETYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_CONFIG_FRAMERATETYPE;$/;"	t	typeref:struct:OMX_CONFIG_FRAMERATETYPE
OMX_CONFIG_INTRAREFRESHVOPTYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef struct OMX_CONFIG_INTRAREFRESHVOPTYPE {$/;"	s
OMX_CONFIG_INTRAREFRESHVOPTYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_CONFIG_INTRAREFRESHVOPTYPE;$/;"	t	typeref:struct:OMX_CONFIG_INTRAREFRESHVOPTYPE
OMX_CONFIG_MACROBLOCKERRORMAPTYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef struct OMX_CONFIG_MACROBLOCKERRORMAPTYPE {$/;"	s
OMX_CONFIG_MACROBLOCKERRORMAPTYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_CONFIG_MACROBLOCKERRORMAPTYPE;$/;"	t	typeref:struct:OMX_CONFIG_MACROBLOCKERRORMAPTYPE
OMX_CONFIG_MBERRORREPORTINGTYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef struct OMX_CONFIG_MBERRORREPORTINGTYPE {$/;"	s
OMX_CONFIG_MBERRORREPORTINGTYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_CONFIG_MBERRORREPORTINGTYPE;$/;"	t	typeref:struct:OMX_CONFIG_MBERRORREPORTINGTYPE
OMX_PARAM_MACROBLOCKSTYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef struct OMX_PARAM_MACROBLOCKSTYPE {$/;"	s
OMX_PARAM_MACROBLOCKSTYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_PARAM_MACROBLOCKSTYPE;$/;"	t	typeref:struct:OMX_PARAM_MACROBLOCKSTYPE
OMX_VIDEO_AVCLEVELTYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_AVCLEVELTYPE {$/;"	g
OMX_VIDEO_AVCLEVELTYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_AVCLEVELTYPE;$/;"	t	typeref:enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLOOPFILTERTYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_AVCLOOPFILTERTYPE {$/;"	g
OMX_VIDEO_AVCLOOPFILTERTYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_AVCLOOPFILTERTYPE;$/;"	t	typeref:enum:OMX_VIDEO_AVCLOOPFILTERTYPE
OMX_VIDEO_AVCLevel1	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel1   = 0x01,     \/**< Level 1 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel11	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel11  = 0x04,     \/**< Level 1.1 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel12	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel12  = 0x08,     \/**< Level 1.2 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel13	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel13  = 0x10,     \/**< Level 1.3 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel1b	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel1b  = 0x02,     \/**< Level 1b *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel2	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel2   = 0x20,     \/**< Level 2 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel21	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel21  = 0x40,     \/**< Level 2.1 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel22	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel22  = 0x80,     \/**< Level 2.2 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel3	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel3   = 0x100,    \/**< Level 3 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel31	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel31  = 0x200,    \/**< Level 3.1 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel32	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel32  = 0x400,    \/**< Level 3.2 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel4	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel4   = 0x800,    \/**< Level 4 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel41	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel41  = 0x1000,   \/**< Level 4.1 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel42	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel42  = 0x2000,   \/**< Level 4.2 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel5	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel5   = 0x4000,   \/**< Level 5 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel51	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel51  = 0x8000,   \/**< Level 5.1 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevelKhronosExtensions	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevelKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevelMax	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevelMax = 0x7FFFFFFF  $/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevelVendorStartUnused	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevelVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLoopFilterDisable	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLoopFilterDisable,$/;"	e	enum:OMX_VIDEO_AVCLOOPFILTERTYPE
OMX_VIDEO_AVCLoopFilterDisableSliceBoundary	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLoopFilterDisableSliceBoundary,$/;"	e	enum:OMX_VIDEO_AVCLOOPFILTERTYPE
OMX_VIDEO_AVCLoopFilterEnable	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLoopFilterEnable = 0,$/;"	e	enum:OMX_VIDEO_AVCLOOPFILTERTYPE
OMX_VIDEO_AVCLoopFilterKhronosExtensions	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLoopFilterKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_VIDEO_AVCLOOPFILTERTYPE
OMX_VIDEO_AVCLoopFilterMax	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLoopFilterMax = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_AVCLOOPFILTERTYPE
OMX_VIDEO_AVCLoopFilterVendorStartUnused	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLoopFilterVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_AVCLOOPFILTERTYPE
OMX_VIDEO_AVCPROFILETYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_AVCPROFILETYPE {$/;"	g
OMX_VIDEO_AVCPROFILETYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_AVCPROFILETYPE;$/;"	t	typeref:enum:OMX_VIDEO_AVCPROFILETYPE
OMX_VIDEO_AVCProfileBaseline	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCProfileBaseline = 0x01,   \/**< Baseline profile *\/$/;"	e	enum:OMX_VIDEO_AVCPROFILETYPE
OMX_VIDEO_AVCProfileExtended	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCProfileExtended = 0x04,   \/**< Extended profile *\/$/;"	e	enum:OMX_VIDEO_AVCPROFILETYPE
OMX_VIDEO_AVCProfileHigh	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCProfileHigh     = 0x08,   \/**< High profile *\/$/;"	e	enum:OMX_VIDEO_AVCPROFILETYPE
OMX_VIDEO_AVCProfileHigh10	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCProfileHigh10   = 0x10,   \/**< High 10 profile *\/$/;"	e	enum:OMX_VIDEO_AVCPROFILETYPE
OMX_VIDEO_AVCProfileHigh422	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCProfileHigh422  = 0x20,   \/**< High 4:2:2 profile *\/$/;"	e	enum:OMX_VIDEO_AVCPROFILETYPE
OMX_VIDEO_AVCProfileHigh444	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCProfileHigh444  = 0x40,   \/**< High 4:4:4 profile *\/$/;"	e	enum:OMX_VIDEO_AVCPROFILETYPE
OMX_VIDEO_AVCProfileKhronosExtensions	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCProfileKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_VIDEO_AVCPROFILETYPE
OMX_VIDEO_AVCProfileMain	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCProfileMain     = 0x02,   \/**< Main profile *\/$/;"	e	enum:OMX_VIDEO_AVCPROFILETYPE
OMX_VIDEO_AVCProfileMax	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCProfileMax      = 0x7FFFFFFF  $/;"	e	enum:OMX_VIDEO_AVCPROFILETYPE
OMX_VIDEO_AVCProfileVendorStartUnused	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCProfileVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_AVCPROFILETYPE
OMX_VIDEO_AVCSLICEMODETYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_AVCSLICEMODETYPE {$/;"	g
OMX_VIDEO_AVCSLICEMODETYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_AVCSLICEMODETYPE;$/;"	t	typeref:enum:OMX_VIDEO_AVCSLICEMODETYPE
OMX_VIDEO_CODINGTYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_CODINGTYPE {$/;"	g
OMX_VIDEO_CODINGTYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_CODINGTYPE;$/;"	t	typeref:enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CONFIG_AVCINTRAPERIOD	include/media/stagefright/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_CONFIG_AVCINTRAPERIOD {$/;"	s
OMX_VIDEO_CONFIG_AVCINTRAPERIOD	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_CONFIG_AVCINTRAPERIOD;$/;"	t	typeref:struct:OMX_VIDEO_CONFIG_AVCINTRAPERIOD
OMX_VIDEO_CONFIG_BITRATETYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_CONFIG_BITRATETYPE {$/;"	s
OMX_VIDEO_CONFIG_BITRATETYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_CONFIG_BITRATETYPE;$/;"	t	typeref:struct:OMX_VIDEO_CONFIG_BITRATETYPE
OMX_VIDEO_CONFIG_NALSIZE	include/media/stagefright/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_CONFIG_NALSIZE {$/;"	s
OMX_VIDEO_CONFIG_NALSIZE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_CONFIG_NALSIZE;$/;"	t	typeref:struct:OMX_VIDEO_CONFIG_NALSIZE
OMX_VIDEO_CONTROLRATETYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_CONTROLRATETYPE {$/;"	g
OMX_VIDEO_CONTROLRATETYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_CONTROLRATETYPE;$/;"	t	typeref:enum:OMX_VIDEO_CONTROLRATETYPE
OMX_VIDEO_CodingAVC	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingAVC,        \/**< H.264\/AVC *\/$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingAutoDetect	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingAutoDetect, \/**< Autodetection of coding type *\/$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingH263	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingH263,       \/**< H.263 *\/$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingKhronosExtensions	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingMJPEG	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingMJPEG,      \/**< Motion JPEG *\/$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingMPEG2	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingMPEG2,      \/**< AKA: H.262 *\/$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingMPEG4	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingMPEG4,      \/**< MPEG-4 *\/$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingMax	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingMax = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingRV	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingRV,         \/**< all versions of Real Video *\/$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingUnused	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingUnused,     \/**< Value when coding is N\/A *\/$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingVendorStartUnused	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingWMV	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingWMV,        \/**< all versions of Windows Media Video *\/$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_H263LEVELTYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_H263LEVELTYPE {$/;"	g
OMX_VIDEO_H263LEVELTYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_H263LEVELTYPE;$/;"	t	typeref:enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263Level10	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_H263Level10  = 0x01,  $/;"	e	enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263Level20	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_H263Level20  = 0x02,      $/;"	e	enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263Level30	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_H263Level30  = 0x04,      $/;"	e	enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263Level40	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_H263Level40  = 0x08,      $/;"	e	enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263Level45	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_H263Level45  = 0x10,      $/;"	e	enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263Level50	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_H263Level50  = 0x20,      $/;"	e	enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263Level60	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_H263Level60  = 0x40,      $/;"	e	enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263Level70	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_H263Level70  = 0x80, $/;"	e	enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263LevelKhronosExtensions	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_H263LevelKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263LevelMax	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_H263LevelMax = 0x7FFFFFFF  $/;"	e	enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263LevelVendorStartUnused	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_H263LevelVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263PROFILETYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_H263PROFILETYPE {$/;"	g
OMX_VIDEO_H263PROFILETYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_H263PROFILETYPE;$/;"	t	typeref:enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileBackwardCompatible	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileBackwardCompatible  = 0x04,  $/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileBaseline	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileBaseline            = 0x01,        $/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileH320Coding	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileH320Coding          = 0x02,          $/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileHighCompression	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileHighCompression     = 0x20,     $/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileHighLatency	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileHighLatency         = 0x100,         $/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileISWV2	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileISWV2               = 0x08,               $/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileISWV3	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileISWV3               = 0x10,               $/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileInterlace	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileInterlace           = 0x80,           $/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileInternet	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileInternet            = 0x40,            $/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileKhronosExtensions	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileMax	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileMax                 = 0x7FFFFFFF  $/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileVendorStartUnused	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_INTRAREFRESHTYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_INTRAREFRESHTYPE {$/;"	g
OMX_VIDEO_INTRAREFRESHTYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_INTRAREFRESHTYPE;$/;"	t	typeref:enum:OMX_VIDEO_INTRAREFRESHTYPE
OMX_VIDEO_IntraRefreshAdaptive	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_IntraRefreshAdaptive,$/;"	e	enum:OMX_VIDEO_INTRAREFRESHTYPE
OMX_VIDEO_IntraRefreshBoth	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_IntraRefreshBoth,$/;"	e	enum:OMX_VIDEO_INTRAREFRESHTYPE
OMX_VIDEO_IntraRefreshCyclic	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_IntraRefreshCyclic,$/;"	e	enum:OMX_VIDEO_INTRAREFRESHTYPE
OMX_VIDEO_IntraRefreshKhronosExtensions	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_IntraRefreshKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_VIDEO_INTRAREFRESHTYPE
OMX_VIDEO_IntraRefreshMax	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_IntraRefreshMax = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_INTRAREFRESHTYPE
OMX_VIDEO_IntraRefreshVendorStartUnused	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_IntraRefreshVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_INTRAREFRESHTYPE
OMX_VIDEO_MOTIONVECTORTYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_MOTIONVECTORTYPE {$/;"	g
OMX_VIDEO_MOTIONVECTORTYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_MOTIONVECTORTYPE;$/;"	t	typeref:enum:OMX_VIDEO_MOTIONVECTORTYPE
OMX_VIDEO_MPEG2LEVELTYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_MPEG2LEVELTYPE {$/;"	g
OMX_VIDEO_MPEG2LEVELTYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_MPEG2LEVELTYPE;$/;"	t	typeref:enum:OMX_VIDEO_MPEG2LEVELTYPE
OMX_VIDEO_MPEG2LevelH14	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2LevelH14,     \/**< High 1440 *\/ $/;"	e	enum:OMX_VIDEO_MPEG2LEVELTYPE
OMX_VIDEO_MPEG2LevelHL	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2LevelHL,      \/**< High Level *\/   $/;"	e	enum:OMX_VIDEO_MPEG2LEVELTYPE
OMX_VIDEO_MPEG2LevelKhronosExtensions	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2LevelKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_VIDEO_MPEG2LEVELTYPE
OMX_VIDEO_MPEG2LevelLL	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2LevelLL = 0,  \/**< Low Level *\/ $/;"	e	enum:OMX_VIDEO_MPEG2LEVELTYPE
OMX_VIDEO_MPEG2LevelML	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2LevelML,      \/**< Main Level *\/ $/;"	e	enum:OMX_VIDEO_MPEG2LEVELTYPE
OMX_VIDEO_MPEG2LevelMax	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2LevelMax = 0x7FFFFFFF  $/;"	e	enum:OMX_VIDEO_MPEG2LEVELTYPE
OMX_VIDEO_MPEG2LevelVendorStartUnused	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2LevelVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_MPEG2LEVELTYPE
OMX_VIDEO_MPEG2PROFILETYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_MPEG2PROFILETYPE {$/;"	g
OMX_VIDEO_MPEG2PROFILETYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_MPEG2PROFILETYPE;$/;"	t	typeref:enum:OMX_VIDEO_MPEG2PROFILETYPE
OMX_VIDEO_MPEG2Profile422	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2Profile422,         \/**< 4:2:2 Profile *\/$/;"	e	enum:OMX_VIDEO_MPEG2PROFILETYPE
OMX_VIDEO_MPEG2ProfileHigh	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2ProfileHigh,        \/**< High Profile *\/$/;"	e	enum:OMX_VIDEO_MPEG2PROFILETYPE
OMX_VIDEO_MPEG2ProfileKhronosExtensions	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2ProfileKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_VIDEO_MPEG2PROFILETYPE
OMX_VIDEO_MPEG2ProfileMain	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2ProfileMain,        \/**< Main Profile *\/$/;"	e	enum:OMX_VIDEO_MPEG2PROFILETYPE
OMX_VIDEO_MPEG2ProfileMax	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2ProfileMax = 0x7FFFFFFF  $/;"	e	enum:OMX_VIDEO_MPEG2PROFILETYPE
OMX_VIDEO_MPEG2ProfileSNR	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2ProfileSNR,         \/**< SNR Profile *\/$/;"	e	enum:OMX_VIDEO_MPEG2PROFILETYPE
OMX_VIDEO_MPEG2ProfileSimple	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2ProfileSimple = 0,  \/**< Simple Profile *\/$/;"	e	enum:OMX_VIDEO_MPEG2PROFILETYPE
OMX_VIDEO_MPEG2ProfileSpatial	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2ProfileSpatial,     \/**< Spatial Profile *\/$/;"	e	enum:OMX_VIDEO_MPEG2PROFILETYPE
OMX_VIDEO_MPEG2ProfileVendorStartUnused	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2ProfileVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_MPEG2PROFILETYPE
OMX_VIDEO_MPEG4LEVELTYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_MPEG4LEVELTYPE {$/;"	g
OMX_VIDEO_MPEG4LEVELTYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_MPEG4LEVELTYPE;$/;"	t	typeref:enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4Level0	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4Level0  = 0x01,   \/**< Level 0 *\/   $/;"	e	enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4Level0b	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4Level0b = 0x02,   \/**< Level 0b *\/   $/;"	e	enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4Level1	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4Level1  = 0x04,   \/**< Level 1 *\/ $/;"	e	enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4Level2	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4Level2  = 0x08,   \/**< Level 2 *\/ $/;"	e	enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4Level3	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4Level3  = 0x10,   \/**< Level 3 *\/ $/;"	e	enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4Level4	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4Level4  = 0x20,   \/**< Level 4 *\/  $/;"	e	enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4Level4a	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4Level4a = 0x40,   \/**< Level 4a *\/  $/;"	e	enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4Level5	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4Level5  = 0x80,   \/**< Level 5 *\/  $/;"	e	enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4LevelKhronosExtensions	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4LevelKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4LevelMax	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4LevelMax = 0x7FFFFFFF  $/;"	e	enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4LevelVendorStartUnused	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4LevelVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4PROFILETYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_MPEG4PROFILETYPE {$/;"	g
OMX_VIDEO_MPEG4PROFILETYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_MPEG4PROFILETYPE;$/;"	t	typeref:enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileAdvancedCoding	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileAdvancedCoding   = 0x1000,    $/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileAdvancedCore	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileAdvancedCore     = 0x2000,      $/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileAdvancedRealTime	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileAdvancedRealTime = 0x400,  $/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileAdvancedScalable	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileAdvancedScalable = 0x4000,$/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileAdvancedSimple	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileAdvancedSimple   = 0x8000,$/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileBasicAnimated	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileBasicAnimated    = 0x100,     $/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileCore	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileCore             = 0x04,              $/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileCoreScalable	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileCoreScalable     = 0x800,      $/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileHybrid	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileHybrid           = 0x200,            $/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileKhronosExtensions	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileMain	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileMain             = 0x08,             $/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileMax	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileMax              = 0x7FFFFFFF  $/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileNbit	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileNbit             = 0x10,              $/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileScalableTexture	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileScalableTexture  = 0x20,   $/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileSimple	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileSimple           = 0x01,        $/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileSimpleFBA	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileSimpleFBA        = 0x80,         $/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileSimpleFace	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileSimpleFace       = 0x40,        $/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileSimpleScalable	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileSimpleScalable   = 0x02,    $/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileVendorStartUnused	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_PARAM_AVCSLICEFMO	include/media/stagefright/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_AVCSLICEFMO {$/;"	s
OMX_VIDEO_PARAM_AVCSLICEFMO	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_AVCSLICEFMO;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_AVCSLICEFMO
OMX_VIDEO_PARAM_AVCTYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_AVCTYPE {$/;"	s
OMX_VIDEO_PARAM_AVCTYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_AVCTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_AVCTYPE
OMX_VIDEO_PARAM_BITRATETYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_BITRATETYPE {$/;"	s
OMX_VIDEO_PARAM_BITRATETYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_BITRATETYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_BITRATETYPE
OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE {$/;"	s
OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE
OMX_VIDEO_PARAM_H263TYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_H263TYPE {$/;"	s
OMX_VIDEO_PARAM_H263TYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_H263TYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_H263TYPE
OMX_VIDEO_PARAM_INTRAREFRESHTYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_INTRAREFRESHTYPE {$/;"	s
OMX_VIDEO_PARAM_INTRAREFRESHTYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_INTRAREFRESHTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_INTRAREFRESHTYPE
OMX_VIDEO_PARAM_MOTIONVECTORTYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_MOTIONVECTORTYPE {$/;"	s
OMX_VIDEO_PARAM_MOTIONVECTORTYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_MOTIONVECTORTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE
OMX_VIDEO_PARAM_MPEG2TYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_MPEG2TYPE {$/;"	s
OMX_VIDEO_PARAM_MPEG2TYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_MPEG2TYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_MPEG2TYPE
OMX_VIDEO_PARAM_MPEG4TYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_MPEG4TYPE {$/;"	s
OMX_VIDEO_PARAM_MPEG4TYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_MPEG4TYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_MPEG4TYPE
OMX_VIDEO_PARAM_PORTFORMATTYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_PORTFORMATTYPE {$/;"	s
OMX_VIDEO_PARAM_PORTFORMATTYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_PORTFORMATTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_PORTFORMATTYPE
OMX_VIDEO_PARAM_PROFILELEVELTYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_PROFILELEVELTYPE {$/;"	s
OMX_VIDEO_PARAM_PROFILELEVELTYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_PROFILELEVELTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_PROFILELEVELTYPE
OMX_VIDEO_PARAM_QUANTIZATIONTYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_QUANTIZATIONTYPE {$/;"	s
OMX_VIDEO_PARAM_QUANTIZATIONTYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_QUANTIZATIONTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_QUANTIZATIONTYPE
OMX_VIDEO_PARAM_RVTYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_RVTYPE {$/;"	s
OMX_VIDEO_PARAM_RVTYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_RVTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_RVTYPE
OMX_VIDEO_PARAM_VBSMCTYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_VBSMCTYPE {$/;"	s
OMX_VIDEO_PARAM_VBSMCTYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_VBSMCTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_VBSMCTYPE
OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE {$/;"	s
OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE
OMX_VIDEO_PARAM_WMVTYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_WMVTYPE {$/;"	s
OMX_VIDEO_PARAM_WMVTYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_WMVTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_WMVTYPE
OMX_VIDEO_PICTURETYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_PICTURETYPE {$/;"	g
OMX_VIDEO_PICTURETYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_PICTURETYPE;$/;"	t	typeref:enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_PORTDEFINITIONTYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PORTDEFINITIONTYPE {$/;"	s
OMX_VIDEO_PORTDEFINITIONTYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_PORTDEFINITIONTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PORTDEFINITIONTYPE
OMX_VIDEO_PictureTypeB	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_PictureTypeB   = 0x04,$/;"	e	enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_PictureTypeEI	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_PictureTypeEI  = 0x11,$/;"	e	enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_PictureTypeEP	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_PictureTypeEP  = 0x12,$/;"	e	enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_PictureTypeI	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_PictureTypeI   = 0x01,$/;"	e	enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_PictureTypeKhronosExtensions	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_PictureTypeKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_PictureTypeMax	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_PictureTypeMax = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_PictureTypeP	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_PictureTypeP   = 0x02,$/;"	e	enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_PictureTypeS	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_PictureTypeS   = 0x14,$/;"	e	enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_PictureTypeSI	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_PictureTypeSI  = 0x08,$/;"	e	enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_PictureTypeSP	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_PictureTypeSP  = 0x10,$/;"	e	enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_PictureTypeVendorStartUnused	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_PictureTypeVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_RVFORMATTYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_RVFORMATTYPE {$/;"	g
OMX_VIDEO_RVFORMATTYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_RVFORMATTYPE;$/;"	t	typeref:enum:OMX_VIDEO_RVFORMATTYPE
OMX_VIDEO_RVFormat8	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_RVFormat8,          \/**< Real Video format 8 *\/$/;"	e	enum:OMX_VIDEO_RVFORMATTYPE
OMX_VIDEO_RVFormat9	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_RVFormat9,          \/**< Real Video format 9 *\/$/;"	e	enum:OMX_VIDEO_RVFORMATTYPE
OMX_VIDEO_RVFormatG2	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_RVFormatG2,         \/**< Real Video Format G2 *\/$/;"	e	enum:OMX_VIDEO_RVFORMATTYPE
OMX_VIDEO_RVFormatKhronosExtensions	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_RVFormatKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_VIDEO_RVFORMATTYPE
OMX_VIDEO_RVFormatMax	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_RVFormatMax = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_RVFORMATTYPE
OMX_VIDEO_RVFormatUnused	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_RVFormatUnused = 0, \/**< Format unused or unknown *\/$/;"	e	enum:OMX_VIDEO_RVFORMATTYPE
OMX_VIDEO_RVFormatVendorStartUnused	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_RVFormatVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_RVFORMATTYPE
OMX_VIDEO_SLICEMODE_AVCByteSlice	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_SLICEMODE_AVCByteSlice,$/;"	e	enum:OMX_VIDEO_AVCSLICEMODETYPE
OMX_VIDEO_SLICEMODE_AVCDefault	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_SLICEMODE_AVCDefault = 0,$/;"	e	enum:OMX_VIDEO_AVCSLICEMODETYPE
OMX_VIDEO_SLICEMODE_AVCKhronosExtensions	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_SLICEMODE_AVCKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_VIDEO_AVCSLICEMODETYPE
OMX_VIDEO_SLICEMODE_AVCLevelMax	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_SLICEMODE_AVCLevelMax = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_AVCSLICEMODETYPE
OMX_VIDEO_SLICEMODE_AVCMBSlice	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_SLICEMODE_AVCMBSlice,$/;"	e	enum:OMX_VIDEO_AVCSLICEMODETYPE
OMX_VIDEO_SLICEMODE_AVCVendorStartUnused	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_SLICEMODE_AVCVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_AVCSLICEMODETYPE
OMX_VIDEO_WMFFormatKhronosExtensions	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_WMFFormatKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_VIDEO_WMVFORMATTYPE
OMX_VIDEO_WMFFormatVendorStartUnused	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_WMFFormatVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_WMVFORMATTYPE
OMX_VIDEO_WMVFORMATTYPE	include/media/stagefright/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_WMVFORMATTYPE {$/;"	g
OMX_VIDEO_WMVFORMATTYPE	include/media/stagefright/openmax/OMX_Video.h	/^} OMX_VIDEO_WMVFORMATTYPE;$/;"	t	typeref:enum:OMX_VIDEO_WMVFORMATTYPE
OMX_VIDEO_WMVFormat7	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_WMVFormat7      = 0x02,   \/**< Windows Media Video format 7 *\/$/;"	e	enum:OMX_VIDEO_WMVFORMATTYPE
OMX_VIDEO_WMVFormat8	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_WMVFormat8      = 0x04,   \/**< Windows Media Video format 8 *\/$/;"	e	enum:OMX_VIDEO_WMVFORMATTYPE
OMX_VIDEO_WMVFormat9	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_WMVFormat9      = 0x08,   \/**< Windows Media Video format 9 *\/$/;"	e	enum:OMX_VIDEO_WMVFORMATTYPE
OMX_VIDEO_WMVFormatMax	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_WMVFormatMax    = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_WMVFORMATTYPE
OMX_VIDEO_WMVFormatUnused	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_WMVFormatUnused = 0x01,   \/**< Format unused or unknown *\/$/;"	e	enum:OMX_VIDEO_WMVFORMATTYPE
OMX_Video_ControlRateConstant	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_Video_ControlRateConstant,$/;"	e	enum:OMX_VIDEO_CONTROLRATETYPE
OMX_Video_ControlRateConstantSkipFrames	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_Video_ControlRateConstantSkipFrames,$/;"	e	enum:OMX_VIDEO_CONTROLRATETYPE
OMX_Video_ControlRateDisable	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_Video_ControlRateDisable,$/;"	e	enum:OMX_VIDEO_CONTROLRATETYPE
OMX_Video_ControlRateKhronosExtensions	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_Video_ControlRateKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_VIDEO_CONTROLRATETYPE
OMX_Video_ControlRateMax	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_Video_ControlRateMax = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_CONTROLRATETYPE
OMX_Video_ControlRateVariable	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_Video_ControlRateVariable,$/;"	e	enum:OMX_VIDEO_CONTROLRATETYPE
OMX_Video_ControlRateVariableSkipFrames	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_Video_ControlRateVariableSkipFrames,$/;"	e	enum:OMX_VIDEO_CONTROLRATETYPE
OMX_Video_ControlRateVendorStartUnused	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_Video_ControlRateVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_CONTROLRATETYPE
OMX_Video_MotionVectorEighthPel	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_Video_MotionVectorEighthPel,$/;"	e	enum:OMX_VIDEO_MOTIONVECTORTYPE
OMX_Video_MotionVectorHalfPel	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_Video_MotionVectorHalfPel,$/;"	e	enum:OMX_VIDEO_MOTIONVECTORTYPE
OMX_Video_MotionVectorKhronosExtensions	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_Video_MotionVectorKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_VIDEO_MOTIONVECTORTYPE
OMX_Video_MotionVectorMax	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_Video_MotionVectorMax = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_MOTIONVECTORTYPE
OMX_Video_MotionVectorPixel	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_Video_MotionVectorPixel,$/;"	e	enum:OMX_VIDEO_MOTIONVECTORTYPE
OMX_Video_MotionVectorQuarterPel	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_Video_MotionVectorQuarterPel,$/;"	e	enum:OMX_VIDEO_MOTIONVECTORTYPE
OMX_Video_MotionVectorVendorStartUnused	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_Video_MotionVectorVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_MOTIONVECTORTYPE
OMX_Video_h	include/media/stagefright/openmax/OMX_Video.h	47;"	d
b16x16	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL b16x16; $/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE
b16x8	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL b16x8; $/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE
b4x4	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL b4x4;$/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE
b4x8	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL b4x8;$/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE
b8x16	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL b8x16;$/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE
b8x4	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL b8x4;$/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE
b8x8	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL b8x8;$/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE
bACPred	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL bACPred;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE
bDirect8x8Inference	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL bDirect8x8Inference;  $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
bDirectSpatialTemporal	include/media/stagefright/openmax/OMX_Video.h	/^	OMX_BOOL bDirectSpatialTemporal;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
bEnableASO	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL bEnableASO;  $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
bEnableDataPartitioning	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL bEnableDataPartitioning;$/;"	m	struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE
bEnableFMO	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL bEnableFMO;  $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
bEnableHEC	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL bEnableHEC;$/;"	m	struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE
bEnableLatencyMode	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL bEnableLatencyMode;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE
bEnablePostFilter	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL bEnablePostFilter;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE
bEnableRS	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL bEnableRS;   $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
bEnableRVLC	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL bEnableRVLC;$/;"	m	struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE
bEnableResync	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL bEnableResync;$/;"	m	struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE
bEnableTemporalInterpolation	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL bEnableTemporalInterpolation;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE
bEnableUEP	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL bEnableUEP;  $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
bEnableVFU	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL bEnableVFU;      $/;"	m	struct:OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE
bEnabled	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL bEnabled;$/;"	m	struct:OMX_CONFIG_MBERRORREPORTINGTYPE
bEntropyCodingCABAC	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL bEntropyCodingCABAC;  $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
bFlagErrorConcealment	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL bFlagErrorConcealment;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE
bForceRoundingTypeToZero	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL bForceRoundingTypeToZero;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE
bFourMV	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL bFourMV;$/;"	m	struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE
bFrameMBsOnly	include/media/stagefright/openmax/OMX_Video.h	/^	OMX_BOOL bFrameMBsOnly;        									$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
bGov	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL bGov;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE
bMBAFF	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL bMBAFF;               $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
bPLUSPTYPEAllowed	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL bPLUSPTYPEAllowed;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE
bReversibleVLC	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL bReversibleVLC;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE
bSVH	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL bSVH;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE
bUnrestrictedMVs	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL bUnrestrictedMVs;$/;"	m	struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE
bUseHadamard	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL bUseHadamard;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
bWeightedPPrediction	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL bWeightedPPrediction; $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
bconstIpred	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_BOOL bconstIpred ;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
cMIMEType	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_STRING cMIMEType;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE
eAccuracy	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MOTIONVECTORTYPE eAccuracy;$/;"	m	struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE
eColorFormat	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_COLOR_FORMATTYPE eColorFormat;$/;"	m	struct:OMX_VIDEO_PARAM_PORTFORMATTYPE
eColorFormat	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_COLOR_FORMATTYPE eColorFormat;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE
eCompressionFormat	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_CODINGTYPE eCompressionFormat; $/;"	m	struct:OMX_VIDEO_PARAM_PORTFORMATTYPE
eCompressionFormat	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_CODINGTYPE eCompressionFormat;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE
eControlRate	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_CONTROLRATETYPE eControlRate; $/;"	m	struct:OMX_VIDEO_PARAM_BITRATETYPE
eFormat	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_RVFORMATTYPE eFormat;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE
eFormat	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_WMVFORMATTYPE eFormat;$/;"	m	struct:OMX_VIDEO_PARAM_WMVTYPE
eLevel	include/media/stagefright/openmax/OMX_Video.h	/^	OMX_VIDEO_AVCLEVELTYPE eLevel; $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
eLevel	include/media/stagefright/openmax/OMX_Video.h	/^	OMX_VIDEO_H263LEVELTYPE eLevel;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE
eLevel	include/media/stagefright/openmax/OMX_Video.h	/^	OMX_VIDEO_MPEG2LEVELTYPE eLevel;   $/;"	m	struct:OMX_VIDEO_PARAM_MPEG2TYPE
eLevel	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4LEVELTYPE eLevel;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE
eLevel	include/media/stagefright/openmax/OMX_Video.h	/^   OMX_U32 eLevel;        \/**< type is OMX_VIDEO_AVCLEVELTYPE, OMX_VIDEO_H263LEVELTYPE, $/;"	m	struct:OMX_VIDEO_PARAM_PROFILELEVELTYPE
eLoopFilterMode	include/media/stagefright/openmax/OMX_Video.h	/^	OMX_VIDEO_AVCLOOPFILTERTYPE eLoopFilterMode;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
eProfile	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCPROFILETYPE eProfile;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
eProfile	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_H263PROFILETYPE eProfile;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE
eProfile	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2PROFILETYPE eProfile;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG2TYPE
eProfile	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4PROFILETYPE eProfile;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE
eProfile	include/media/stagefright/openmax/OMX_Video.h	/^   OMX_U32 eProfile;      \/**< type is OMX_VIDEO_AVCPROFILETYPE, OMX_VIDEO_H263PROFILETYPE, $/;"	m	struct:OMX_VIDEO_PARAM_PROFILELEVELTYPE
eRefreshMode	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_INTRAREFRESHTYPE eRefreshMode;$/;"	m	struct:OMX_VIDEO_PARAM_INTRAREFRESHTYPE
eSliceMode	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCSLICEMODETYPE eSliceMode;$/;"	m	struct:OMX_VIDEO_PARAM_AVCSLICEFMO
nAirMBs	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nAirMBs;$/;"	m	struct:OMX_VIDEO_PARAM_INTRAREFRESHTYPE
nAirRef	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nAirRef;$/;"	m	struct:OMX_VIDEO_PARAM_INTRAREFRESHTYPE
nAllowedPictureTypes	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nAllowedPictureTypes;  $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
nAllowedPictureTypes	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nAllowedPictureTypes;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE
nAllowedPictureTypes	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nAllowedPictureTypes;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE
nBFrames	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nBFrames;        $/;"	m	struct:OMX_VIDEO_PARAM_MPEG2TYPE
nBFrames	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nBFrames;     $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
nBFrames	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nBFrames;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE
nBFrames	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nBFrames;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE
nBitrate	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nBitrate;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE
nBitsPerPixel	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U16 nBitsPerPixel;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE
nBitstreamFlags	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nBitstreamFlags;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE
nBitstreamVersion	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nBitstreamVersion;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE
nCabacInitIdc	include/media/stagefright/openmax/OMX_Video.h	/^	OMX_U32 nCabacInitIdc;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
nCirMBs	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nCirMBs;$/;"	m	struct:OMX_VIDEO_PARAM_INTRAREFRESHTYPE
nEncodeBitrate	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nEncodeBitrate;                 $/;"	m	struct:OMX_VIDEO_CONFIG_BITRATETYPE
nErrMapSize	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nErrMapSize;           \/* Size of the Error Map in bytes *\/$/;"	m	struct:OMX_CONFIG_MACROBLOCKERRORMAPTYPE
nFirstGOB	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nFirstGOB;                            $/;"	m	struct:OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE
nFirstMB	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nFirstMB;                            $/;"	m	struct:OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE
nFrameHeight	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nFrameHeight;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE
nFrameRate	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nFrameRate;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE
nFrameWidth	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nFrameWidth;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE
nGOBHeaderInterval	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nGOBHeaderInterval;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE
nHeaderExtension	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nHeaderExtension;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE
nIDCVLCThreshold	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nIDCVLCThreshold;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE
nIDRPeriod	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nIDRPeriod;$/;"	m	struct:OMX_VIDEO_CONFIG_AVCINTRAPERIOD
nIndex	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nIndex;$/;"	m	struct:OMX_VIDEO_PARAM_PORTFORMATTYPE
nMacroblocks	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nMacroblocks;$/;"	m	struct:OMX_PARAM_MACROBLOCKSTYPE
nMaxEncodeFrameSize	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nMaxEncodeFrameSize;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE
nMaxPacketSize	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nMaxPacketSize;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE
nNaluBytes	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nNaluBytes;$/;"	m	struct:OMX_VIDEO_CONFIG_NALSIZE
nNumMBs	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nNumMBs;                                  $/;"	m	struct:OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE
nNumSliceGroups	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U8 nNumSliceGroups;$/;"	m	struct:OMX_VIDEO_PARAM_AVCSLICEFMO
nPFrames	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nPFrames;        $/;"	m	struct:OMX_VIDEO_PARAM_MPEG2TYPE
nPFrames	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nPFrames;     $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
nPFrames	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nPFrames;$/;"	m	struct:OMX_VIDEO_CONFIG_AVCINTRAPERIOD
nPFrames	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nPFrames;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE
nPFrames	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nPFrames;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE
nPaddedHeight	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U16 nPaddedHeight;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE
nPaddedWidth	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U16 nPaddedWidth;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE
nPictureHeaderRepetition	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nPictureHeaderRepetition;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE
nPortIndex	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;                     $/;"	m	struct:OMX_VIDEO_CONFIG_BITRATETYPE
nPortIndex	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;                     $/;"	m	struct:OMX_VIDEO_PARAM_BITRATETYPE
nPortIndex	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;            $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;       $/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;       $/;"	m	struct:OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE
nPortIndex	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;      $/;"	m	struct:OMX_VIDEO_PARAM_MPEG2TYPE
nPortIndex	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_FRAMERATETYPE
nPortIndex	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_INTRAREFRESHVOPTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_MACROBLOCKERRORMAPTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_MBERRORREPORTINGTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_PARAM_MACROBLOCKSTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_CONFIG_AVCINTRAPERIOD
nPortIndex	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_CONFIG_NALSIZE
nPortIndex	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_AVCSLICEFMO
nPortIndex	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE
nPortIndex	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_INTRAREFRESHTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE
nPortIndex	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_PORTFORMATTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_QUANTIZATIONTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_WMVTYPE
nPortIndex	include/media/stagefright/openmax/OMX_Video.h	/^   OMX_U32 nPortIndex;            $/;"	m	struct:OMX_VIDEO_PARAM_PROFILELEVELTYPE
nProfileIndex	include/media/stagefright/openmax/OMX_Video.h	/^   OMX_U32 nProfileIndex; \/**< Used to query for individual profile support information,$/;"	m	struct:OMX_VIDEO_PARAM_PROFILELEVELTYPE
nQpB	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nQpB;$/;"	m	struct:OMX_VIDEO_PARAM_QUANTIZATIONTYPE
nQpI	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nQpI;$/;"	m	struct:OMX_VIDEO_PARAM_QUANTIZATIONTYPE
nQpP	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nQpP;$/;"	m	struct:OMX_VIDEO_PARAM_QUANTIZATIONTYPE
nRefFrames	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nRefFrames;  $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
nRefIdx10ActiveMinus1	include/media/stagefright/openmax/OMX_Video.h	/^	OMX_U32 nRefIdx10ActiveMinus1;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
nRefIdx11ActiveMinus1	include/media/stagefright/openmax/OMX_Video.h	/^	OMX_U32 nRefIdx11ActiveMinus1;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
nResynchMarkerSpacing	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32  nResynchMarkerSpacing;$/;"	m	struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE
nSize	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nSize;                          $/;"	m	struct:OMX_VIDEO_CONFIG_BITRATETYPE
nSize	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nSize;                          $/;"	m	struct:OMX_VIDEO_PARAM_BITRATETYPE
nSize	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nSize;                 $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
nSize	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nSize;            $/;"	m	struct:OMX_VIDEO_PARAM_QUANTIZATIONTYPE
nSize	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nSize;            $/;"	m	struct:OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE
nSize	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nSize;           $/;"	m	struct:OMX_VIDEO_PARAM_MPEG2TYPE
nSize	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nSize; $/;"	m	struct:OMX_VIDEO_CONFIG_AVCINTRAPERIOD
nSize	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nSize; $/;"	m	struct:OMX_VIDEO_CONFIG_NALSIZE
nSize	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nSize; $/;"	m	struct:OMX_VIDEO_PARAM_AVCSLICEFMO
nSize	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nSize; $/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE
nSize	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nSize; $/;"	m	struct:OMX_VIDEO_PARAM_WMVTYPE
nSize	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_FRAMERATETYPE
nSize	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_INTRAREFRESHVOPTYPE
nSize	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_MACROBLOCKERRORMAPTYPE
nSize	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_MBERRORREPORTINGTYPE
nSize	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_PARAM_MACROBLOCKSTYPE
nSize	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE
nSize	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE
nSize	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_INTRAREFRESHTYPE
nSize	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE
nSize	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE
nSize	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_PORTFORMATTYPE
nSize	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE
nSize	include/media/stagefright/openmax/OMX_Video.h	/^   OMX_U32 nSize;                 $/;"	m	struct:OMX_VIDEO_PARAM_PROFILELEVELTYPE
nSliceGroupMapType	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U8 nSliceGroupMapType;$/;"	m	struct:OMX_VIDEO_PARAM_AVCSLICEFMO
nSliceHeaderSpacing	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nSliceHeaderSpacing;  $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
nSliceHeaderSpacing	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nSliceHeaderSpacing;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE
nSliceHeight	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nSliceHeight;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE
nStride	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_S32 nStride;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE
nTargetBitrate	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nTargetBitrate;                 $/;"	m	struct:OMX_VIDEO_PARAM_BITRATETYPE
nTimeIncRes	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nTimeIncRes;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE
nVersion	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;               $/;"	m	struct:OMX_VIDEO_CONFIG_BITRATETYPE
nVersion	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;               $/;"	m	struct:OMX_VIDEO_PARAM_BITRATETYPE
nVersion	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;      $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
nVersion	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion; $/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE
nVersion	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion; $/;"	m	struct:OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE
nVersion	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_FRAMERATETYPE
nVersion	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_INTRAREFRESHVOPTYPE
nVersion	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_MACROBLOCKERRORMAPTYPE
nVersion	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_MBERRORREPORTINGTYPE
nVersion	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_PARAM_MACROBLOCKSTYPE
nVersion	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_CONFIG_AVCINTRAPERIOD
nVersion	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_CONFIG_NALSIZE
nVersion	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_AVCSLICEFMO
nVersion	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE
nVersion	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE
nVersion	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_INTRAREFRESHTYPE
nVersion	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE
nVersion	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG2TYPE
nVersion	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE
nVersion	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_PORTFORMATTYPE
nVersion	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_QUANTIZATIONTYPE
nVersion	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE
nVersion	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_WMVTYPE
nVersion	include/media/stagefright/openmax/OMX_Video.h	/^   OMX_VERSIONTYPE nVersion;      $/;"	m	struct:OMX_VIDEO_PARAM_PROFILELEVELTYPE
nWeightedBipredicitonMode	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 nWeightedBipredicitonMode; $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
pNativeRender	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_NATIVE_DEVICETYPE pNativeRender;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE
pNativeWindow	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_NATIVE_WINDOWTYPE pNativeWindow;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE
sXSearchRange	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_S32 sXSearchRange;$/;"	m	struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE
sYSearchRange	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_S32 sYSearchRange;$/;"	m	struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE
xEncodeFramerate	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 xEncodeFramerate; \/* Q16 format *\/$/;"	m	struct:OMX_CONFIG_FRAMERATETYPE
xFramerate	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 xFramerate;$/;"	m	struct:OMX_VIDEO_PARAM_PORTFORMATTYPE
xFramerate	include/media/stagefright/openmax/OMX_Video.h	/^    OMX_U32 xFramerate;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE
THREAD_INIT_H	include/media/thread_init.h	18;"	d
RSANUMBYTES	include/mincrypt/rsa.h	37;"	d
RSANUMWORDS	include/mincrypt/rsa.h	38;"	d
RSAPublicKey	include/mincrypt/rsa.h	/^typedef struct RSAPublicKey {$/;"	s
RSAPublicKey	include/mincrypt/rsa.h	/^} RSAPublicKey;$/;"	t	typeref:struct:RSAPublicKey
_EMBEDDED_RSA_H_	include/mincrypt/rsa.h	29;"	d
len	include/mincrypt/rsa.h	/^    int len;                  \/* Length of n[] in number of uint32_t *\/$/;"	m	struct:RSAPublicKey
n	include/mincrypt/rsa.h	/^    uint32_t n[RSANUMWORDS];  \/* modulus as little endian array *\/$/;"	m	struct:RSAPublicKey
n0inv	include/mincrypt/rsa.h	/^    uint32_t n0inv;           \/* -1 \/ n[0] mod 2^32 *\/$/;"	m	struct:RSAPublicKey
rr	include/mincrypt/rsa.h	/^    uint32_t rr[RSANUMWORDS]; \/* R^2 as little endian array *\/$/;"	m	struct:RSAPublicKey
SHA_CTX	include/mincrypt/sha.h	/^typedef struct SHA_CTX {$/;"	s
SHA_CTX	include/mincrypt/sha.h	/^} SHA_CTX;$/;"	t	typeref:struct:SHA_CTX
SHA_DIGEST_SIZE	include/mincrypt/sha.h	57;"	d
_EMBEDDED_SHA_H_	include/mincrypt/sha.h	29;"	d
b	include/mincrypt/sha.h	/^        uint8_t b[64];$/;"	m	union:SHA_CTX::__anon81
buf	include/mincrypt/sha.h	/^    uint8_t buf[64];$/;"	m	struct:SHA_CTX
buf	include/mincrypt/sha.h	/^    } buf;$/;"	m	struct:SHA_CTX	typeref:union:SHA_CTX::__anon81
count	include/mincrypt/sha.h	/^    uint64_t count;$/;"	m	struct:SHA_CTX
state	include/mincrypt/sha.h	/^    uint32_t state[5];$/;"	m	struct:SHA_CTX
w	include/mincrypt/sha.h	/^        uint32_t w[16];$/;"	m	union:SHA_CTX::__anon81
DAILY	include/pim/EventRecurrence.h	/^        DAILY = 4,$/;"	e	enum:android::EventRecurrence::freq_t
EventRecurrence	include/pim/EventRecurrence.h	/^struct EventRecurrence$/;"	s	namespace:android
FR	include/pim/EventRecurrence.h	/^        FR = 0x00200000,$/;"	e	enum:android::EventRecurrence::__anon48
HOURLY	include/pim/EventRecurrence.h	/^        HOURLY = 3,$/;"	e	enum:android::EventRecurrence::freq_t
MINUTELY	include/pim/EventRecurrence.h	/^        MINUTELY = 2,$/;"	e	enum:android::EventRecurrence::freq_t
MO	include/pim/EventRecurrence.h	/^        MO = 0x00020000,$/;"	e	enum:android::EventRecurrence::__anon48
MONTHLY	include/pim/EventRecurrence.h	/^        MONTHLY = 6,$/;"	e	enum:android::EventRecurrence::freq_t
SA	include/pim/EventRecurrence.h	/^        SA = 0x00400000$/;"	e	enum:android::EventRecurrence::__anon48
SECONDLY	include/pim/EventRecurrence.h	/^        SECONDLY = 1,$/;"	e	enum:android::EventRecurrence::freq_t
SU	include/pim/EventRecurrence.h	/^        SU = 0x00010000,$/;"	e	enum:android::EventRecurrence::__anon48
TH	include/pim/EventRecurrence.h	/^        TH = 0x00100000,$/;"	e	enum:android::EventRecurrence::__anon48
TU	include/pim/EventRecurrence.h	/^        TU = 0x00040000,$/;"	e	enum:android::EventRecurrence::__anon48
WE	include/pim/EventRecurrence.h	/^        WE = 0x00080000,$/;"	e	enum:android::EventRecurrence::__anon48
WEEKLY	include/pim/EventRecurrence.h	/^        WEEKLY = 5,$/;"	e	enum:android::EventRecurrence::freq_t
YEARLY	include/pim/EventRecurrence.h	/^        YEARLY = 7$/;"	e	enum:android::EventRecurrence::freq_t
_PIM_EVENT_RECURRENCE_H	include/pim/EventRecurrence.h	19;"	d
android	include/pim/EventRecurrence.h	/^namespace android {$/;"	n
byday	include/pim/EventRecurrence.h	/^    int*      byday;$/;"	m	struct:android::EventRecurrence
bydayCount	include/pim/EventRecurrence.h	/^    int       bydayCount;   $/;"	m	struct:android::EventRecurrence
bydayNum	include/pim/EventRecurrence.h	/^    int*      bydayNum;$/;"	m	struct:android::EventRecurrence
byhour	include/pim/EventRecurrence.h	/^    int*      byhour;$/;"	m	struct:android::EventRecurrence
byhourCount	include/pim/EventRecurrence.h	/^    int       byhourCount;$/;"	m	struct:android::EventRecurrence
byminute	include/pim/EventRecurrence.h	/^    int*      byminute;$/;"	m	struct:android::EventRecurrence
byminuteCount	include/pim/EventRecurrence.h	/^    int       byminuteCount;$/;"	m	struct:android::EventRecurrence
bymonth	include/pim/EventRecurrence.h	/^    int*      bymonth;$/;"	m	struct:android::EventRecurrence
bymonthCount	include/pim/EventRecurrence.h	/^    int       bymonthCount;$/;"	m	struct:android::EventRecurrence
bymonthday	include/pim/EventRecurrence.h	/^    int*      bymonthday;$/;"	m	struct:android::EventRecurrence
bymonthdayCount	include/pim/EventRecurrence.h	/^    int       bymonthdayCount;$/;"	m	struct:android::EventRecurrence
bysecond	include/pim/EventRecurrence.h	/^    int*      bysecond;$/;"	m	struct:android::EventRecurrence
bysecondCount	include/pim/EventRecurrence.h	/^    int       bysecondCount;$/;"	m	struct:android::EventRecurrence
bysetpos	include/pim/EventRecurrence.h	/^    int*      bysetpos;$/;"	m	struct:android::EventRecurrence
bysetposCount	include/pim/EventRecurrence.h	/^    int       bysetposCount;$/;"	m	struct:android::EventRecurrence
byweekno	include/pim/EventRecurrence.h	/^    int*      byweekno;$/;"	m	struct:android::EventRecurrence
byweeknoCount	include/pim/EventRecurrence.h	/^    int       byweeknoCount;$/;"	m	struct:android::EventRecurrence
byyearday	include/pim/EventRecurrence.h	/^    int*      byyearday;$/;"	m	struct:android::EventRecurrence
byyeardayCount	include/pim/EventRecurrence.h	/^    int       byyeardayCount;$/;"	m	struct:android::EventRecurrence
count	include/pim/EventRecurrence.h	/^    int       count;$/;"	m	struct:android::EventRecurrence
freq	include/pim/EventRecurrence.h	/^    freq_t    freq;$/;"	m	struct:android::EventRecurrence
freq_t	include/pim/EventRecurrence.h	/^    enum freq_t {$/;"	g	struct:android::EventRecurrence
interval	include/pim/EventRecurrence.h	/^    int       interval;$/;"	m	struct:android::EventRecurrence
until	include/pim/EventRecurrence.h	/^    String16  until;$/;"	m	struct:android::EventRecurrence
wkst	include/pim/EventRecurrence.h	/^    int       wkst;$/;"	m	struct:android::EventRecurrence
ALPHA	include/pixelflinger/format.h	/^        ALPHA   = GGL_INDEX_ALPHA,$/;"	e	enum:__anon85::__anon86
ANDROID_PIXELFLINGER_FORMAT_H	include/pixelflinger/format.h	18;"	d
BLUE	include/pixelflinger/format.h	/^        BLUE    = GGL_INDEX_BLUE,$/;"	e	enum:__anon85::__anon86
CHROMAB	include/pixelflinger/format.h	/^        CHROMAB = GGL_INDEX_CB,$/;"	e	enum:__anon85::__anon86
CHROMAR	include/pixelflinger/format.h	/^        CHROMAR = GGL_INDEX_CR,$/;"	e	enum:__anon85::__anon86
DEPTH	include/pixelflinger/format.h	/^        DEPTH   = GGL_INDEX_DEPTH,$/;"	e	enum:__anon85::__anon86
GGLFormat	include/pixelflinger/format.h	/^} GGLFormat;$/;"	t	typeref:struct:__anon85
GGLFormatComponentIndex	include/pixelflinger/format.h	/^enum GGLFormatComponentIndex {$/;"	g
GGLFormatComponents	include/pixelflinger/format.h	/^enum GGLFormatComponents {$/;"	g
GGLPixelFormat	include/pixelflinger/format.h	/^enum GGLPixelFormat {$/;"	g
GGL_ALPHA	include/pixelflinger/format.h	/^	GGL_ALPHA				= 0x1906,$/;"	e	enum:GGLFormatComponents
GGL_DEPTH_COMPONENT	include/pixelflinger/format.h	/^	GGL_DEPTH_COMPONENT		= 0x1902,$/;"	e	enum:GGLFormatComponents
GGL_INDEX_ALPHA	include/pixelflinger/format.h	/^    GGL_INDEX_ALPHA   = 0,$/;"	e	enum:GGLFormatComponentIndex
GGL_INDEX_BLUE	include/pixelflinger/format.h	/^    GGL_INDEX_BLUE    = 3,$/;"	e	enum:GGLFormatComponentIndex
GGL_INDEX_CB	include/pixelflinger/format.h	/^    GGL_INDEX_CB      = 1,$/;"	e	enum:GGLFormatComponentIndex
GGL_INDEX_CR	include/pixelflinger/format.h	/^    GGL_INDEX_CR      = 2,$/;"	e	enum:GGLFormatComponentIndex
GGL_INDEX_DEPTH	include/pixelflinger/format.h	/^    GGL_INDEX_DEPTH   = 1,$/;"	e	enum:GGLFormatComponentIndex
GGL_INDEX_GREEN	include/pixelflinger/format.h	/^    GGL_INDEX_GREEN   = 2,$/;"	e	enum:GGLFormatComponentIndex
GGL_INDEX_RED	include/pixelflinger/format.h	/^    GGL_INDEX_RED     = 1,$/;"	e	enum:GGLFormatComponentIndex
GGL_INDEX_STENCIL	include/pixelflinger/format.h	/^    GGL_INDEX_STENCIL = 0,$/;"	e	enum:GGLFormatComponentIndex
GGL_INDEX_Y	include/pixelflinger/format.h	/^    GGL_INDEX_Y       = 0,$/;"	e	enum:GGLFormatComponentIndex
GGL_LUMINANCE	include/pixelflinger/format.h	/^	GGL_LUMINANCE			= 0x1909,$/;"	e	enum:GGLFormatComponents
GGL_LUMINANCE_ALPHA	include/pixelflinger/format.h	/^	GGL_LUMINANCE_ALPHA		= 0x190A,$/;"	e	enum:GGLFormatComponents
GGL_PIXEL_FORMAT_A_8	include/pixelflinger/format.h	/^    GGL_PIXEL_FORMAT_A_8         =   8,  \/\/ 8-bit A$/;"	e	enum:GGLPixelFormat
GGL_PIXEL_FORMAT_BGRA_8888	include/pixelflinger/format.h	/^    GGL_PIXEL_FORMAT_BGRA_8888   =   5,  \/\/ 4x8-bit BGRA$/;"	e	enum:GGLPixelFormat
GGL_PIXEL_FORMAT_LA_88	include/pixelflinger/format.h	/^    GGL_PIXEL_FORMAT_LA_88       = 0xA,  \/\/ 16-bit LA$/;"	e	enum:GGLPixelFormat
GGL_PIXEL_FORMAT_L_8	include/pixelflinger/format.h	/^    GGL_PIXEL_FORMAT_L_8         =   9,  \/\/ 8-bit L (R=G=B = L)$/;"	e	enum:GGLPixelFormat
GGL_PIXEL_FORMAT_NONE	include/pixelflinger/format.h	/^    GGL_PIXEL_FORMAT_NONE       =   0,$/;"	e	enum:GGLPixelFormat
GGL_PIXEL_FORMAT_RESERVED_10	include/pixelflinger/format.h	/^    GGL_PIXEL_FORMAT_RESERVED_10 = 0x10,$/;"	e	enum:GGLPixelFormat
GGL_PIXEL_FORMAT_RESERVED_11	include/pixelflinger/format.h	/^    GGL_PIXEL_FORMAT_RESERVED_11 = 0x11,$/;"	e	enum:GGLPixelFormat
GGL_PIXEL_FORMAT_RESERVED_12	include/pixelflinger/format.h	/^    GGL_PIXEL_FORMAT_RESERVED_12 = 0x12,$/;"	e	enum:GGLPixelFormat
GGL_PIXEL_FORMAT_RESERVED_13	include/pixelflinger/format.h	/^    GGL_PIXEL_FORMAT_RESERVED_13 = 0x13,$/;"	e	enum:GGLPixelFormat
GGL_PIXEL_FORMAT_RESERVED_14	include/pixelflinger/format.h	/^    GGL_PIXEL_FORMAT_RESERVED_14 = 0x14,$/;"	e	enum:GGLPixelFormat
GGL_PIXEL_FORMAT_RESERVED_15	include/pixelflinger/format.h	/^    GGL_PIXEL_FORMAT_RESERVED_15 = 0x15,$/;"	e	enum:GGLPixelFormat
GGL_PIXEL_FORMAT_RESERVED_16	include/pixelflinger/format.h	/^    GGL_PIXEL_FORMAT_RESERVED_16 = 0x16,$/;"	e	enum:GGLPixelFormat
GGL_PIXEL_FORMAT_RESERVED_17	include/pixelflinger/format.h	/^    GGL_PIXEL_FORMAT_RESERVED_17 = 0x17,$/;"	e	enum:GGLPixelFormat
GGL_PIXEL_FORMAT_RESERVED_20	include/pixelflinger/format.h	/^    GGL_PIXEL_FORMAT_RESERVED_20 = 0x20,$/;"	e	enum:GGLPixelFormat
GGL_PIXEL_FORMAT_RESERVED_21	include/pixelflinger/format.h	/^    GGL_PIXEL_FORMAT_RESERVED_21 = 0x21,$/;"	e	enum:GGLPixelFormat
GGL_PIXEL_FORMAT_RGBA_4444	include/pixelflinger/format.h	/^    GGL_PIXEL_FORMAT_RGBA_4444   =   7,  \/\/ 16-bit RGBA$/;"	e	enum:GGLPixelFormat
GGL_PIXEL_FORMAT_RGBA_5551	include/pixelflinger/format.h	/^    GGL_PIXEL_FORMAT_RGBA_5551   =   6,  \/\/ 16-bit RGBA$/;"	e	enum:GGLPixelFormat
GGL_PIXEL_FORMAT_RGBA_8888	include/pixelflinger/format.h	/^    GGL_PIXEL_FORMAT_RGBA_8888   =   1,  \/\/ 4x8-bit ARGB$/;"	e	enum:GGLPixelFormat
GGL_PIXEL_FORMAT_RGBX_8888	include/pixelflinger/format.h	/^    GGL_PIXEL_FORMAT_RGBX_8888   =   2,  \/\/ 3x8-bit RGB stored in 32-bit chunks$/;"	e	enum:GGLPixelFormat
GGL_PIXEL_FORMAT_RGB_332	include/pixelflinger/format.h	/^    GGL_PIXEL_FORMAT_RGB_332     = 0xB,  \/\/ 8-bit RGB (non paletted)$/;"	e	enum:GGLPixelFormat
GGL_PIXEL_FORMAT_RGB_565	include/pixelflinger/format.h	/^    GGL_PIXEL_FORMAT_RGB_565     =   4,  \/\/ 16-bit RGB$/;"	e	enum:GGLPixelFormat
GGL_PIXEL_FORMAT_RGB_888	include/pixelflinger/format.h	/^    GGL_PIXEL_FORMAT_RGB_888     =   3,  \/\/ 3x8-bit RGB$/;"	e	enum:GGLPixelFormat
GGL_PIXEL_FORMAT_SZ_24	include/pixelflinger/format.h	/^    GGL_PIXEL_FORMAT_SZ_24      =  0x1A,$/;"	e	enum:GGLPixelFormat
GGL_PIXEL_FORMAT_SZ_8	include/pixelflinger/format.h	/^    GGL_PIXEL_FORMAT_SZ_8       =  0x1B,$/;"	e	enum:GGLPixelFormat
GGL_PIXEL_FORMAT_S_8	include/pixelflinger/format.h	/^    GGL_PIXEL_FORMAT_S_8        =  0x19,$/;"	e	enum:GGLPixelFormat
GGL_PIXEL_FORMAT_UNKNOWN	include/pixelflinger/format.h	/^    GGL_PIXEL_FORMAT_UNKNOWN    =   0,$/;"	e	enum:GGLPixelFormat
GGL_PIXEL_FORMAT_Z_16	include/pixelflinger/format.h	/^    GGL_PIXEL_FORMAT_Z_16       =  0x18,$/;"	e	enum:GGLPixelFormat
GGL_RGB	include/pixelflinger/format.h	/^	GGL_RGB					= 0x1907,$/;"	e	enum:GGLFormatComponents
GGL_RGBA	include/pixelflinger/format.h	/^	GGL_RGBA				= 0x1908,$/;"	e	enum:GGLFormatComponents
GGL_STENCIL_INDEX	include/pixelflinger/format.h	/^	GGL_STENCIL_INDEX		= 0x1901,$/;"	e	enum:GGLFormatComponents
GREEN	include/pixelflinger/format.h	/^        GREEN   = GGL_INDEX_GREEN,$/;"	e	enum:__anon85::__anon86
LUMA	include/pixelflinger/format.h	/^        LUMA    = GGL_INDEX_Y,$/;"	e	enum:__anon85::__anon86
RED	include/pixelflinger/format.h	/^        RED     = GGL_INDEX_RED,$/;"	e	enum:__anon85::__anon86
STENCIL	include/pixelflinger/format.h	/^        STENCIL = GGL_INDEX_STENCIL,$/;"	e	enum:__anon85::__anon86
ah	include/pixelflinger/format.h	/^            uint8_t     ah;		\/\/ alpha high bit position + 1$/;"	m	struct:__anon85::__anon87::__anon88
al	include/pixelflinger/format.h	/^            uint8_t     al;		\/\/ alpha low bit position$/;"	m	struct:__anon85::__anon87::__anon88
bh	include/pixelflinger/format.h	/^            uint8_t     bh;		\/\/ blue high bit position + 1$/;"	m	struct:__anon85::__anon87::__anon88
bits	include/pixelflinger/format.h	/^    inline uint32_t bits(int i) const {$/;"	f	struct:__anon85
bitsPerPixel	include/pixelflinger/format.h	/^    uint8_t     bitsPerPixel;$/;"	m	struct:__anon85
bl	include/pixelflinger/format.h	/^            uint8_t     bl;		\/\/ blue low bit position$/;"	m	struct:__anon85::__anon87::__anon88
c	include/pixelflinger/format.h	/^        } __attribute__((__packed__)) c[4];        $/;"	m	union:__anon85::__anon87	typeref:struct:__anon85::__anon87::__anon89
components	include/pixelflinger/format.h	/^	uint16_t    components;	\/\/ GGLFormatComponents$/;"	m	struct:__anon85
gh	include/pixelflinger/format.h	/^            uint8_t     gh;		\/\/ green high bit position + 1$/;"	m	struct:__anon85::__anon87::__anon88
gl	include/pixelflinger/format.h	/^            uint8_t     gl;		\/\/ green low bit position$/;"	m	struct:__anon85::__anon87::__anon88
h	include/pixelflinger/format.h	/^            uint8_t h;$/;"	m	struct:__anon85::__anon87::__anon89
l	include/pixelflinger/format.h	/^            uint8_t l;$/;"	m	struct:__anon85::__anon87::__anon89
mask	include/pixelflinger/format.h	/^    inline uint32_t mask(int i) const {$/;"	f	struct:__anon85
rh	include/pixelflinger/format.h	/^            uint8_t     rh;		\/\/ red high bit position + 1$/;"	m	struct:__anon85::__anon87::__anon88
rl	include/pixelflinger/format.h	/^            uint8_t     rl;		\/\/ red low bit position$/;"	m	struct:__anon85::__anon87::__anon88
size	include/pixelflinger/format.h	/^	uint8_t     size;	\/\/ bytes per pixel$/;"	m	struct:__anon85
ANDROID_PIXELFLINGER_H	include/pixelflinger/pixelflinger.h	18;"	d
GGLContext	include/pixelflinger/pixelflinger.h	/^} GGLContext;$/;"	t	typeref:struct:__anon84
GGLNames	include/pixelflinger/pixelflinger.h	/^enum GGLNames {$/;"	g
GGLSurface	include/pixelflinger/pixelflinger.h	/^} GGLSurface;$/;"	t	typeref:struct:__anon82
GGL_AA	include/pixelflinger/pixelflinger.h	/^    GGL_AA                          = 0x80000001,$/;"	e	enum:GGLNames
GGL_ADD	include/pixelflinger/pixelflinger.h	/^	GGL_ADD							= 0x0104,$/;"	e	enum:GGLNames
GGL_ALPHA_TEST	include/pixelflinger/pixelflinger.h	/^	GGL_ALPHA_TEST					= 0x0BC0,$/;"	e	enum:GGLNames
GGL_ALWAYS	include/pixelflinger/pixelflinger.h	/^    GGL_ALWAYS                      = 0x0207,$/;"	e	enum:GGLNames
GGL_AND	include/pixelflinger/pixelflinger.h	/^    GGL_AND                         = 0x1501,   \/\/ s & d$/;"	e	enum:GGLNames
GGL_AND_INVERTED	include/pixelflinger/pixelflinger.h	/^    GGL_AND_INVERTED                = 0x1504,   \/\/ ~s & d$/;"	e	enum:GGLNames
GGL_AND_REVERSE	include/pixelflinger/pixelflinger.h	/^    GGL_AND_REVERSE                 = 0x1502,   \/\/ s & ~d$/;"	e	enum:GGLNames
GGL_AUTOMATIC	include/pixelflinger/pixelflinger.h	/^    GGL_AUTOMATIC                   = 0x80000003,$/;"	e	enum:GGLNames
GGL_BLEND	include/pixelflinger/pixelflinger.h	/^	GGL_BLEND						= 0x0BE2,$/;"	e	enum:GGLNames
GGL_CLAMP	include/pixelflinger/pixelflinger.h	/^	GGL_CLAMP						= 0x2900,$/;"	e	enum:GGLNames
GGL_CLAMP_TO_EDGE	include/pixelflinger/pixelflinger.h	/^    GGL_CLAMP_TO_EDGE               = 0x812F,$/;"	e	enum:GGLNames
GGL_CLEAR	include/pixelflinger/pixelflinger.h	/^    GGL_CLEAR                       = 0x1500,   \/\/ 0$/;"	e	enum:GGLNames
GGL_COLOR	include/pixelflinger/pixelflinger.h	/^    GGL_COLOR                       = 0x1800,$/;"	e	enum:GGLNames
GGL_COLOR_BUFFER_BIT	include/pixelflinger/pixelflinger.h	/^    GGL_COLOR_BUFFER_BIT            = 0x00004000,$/;"	e	enum:GGLNames
GGL_COLOR_LOGIC_OP	include/pixelflinger/pixelflinger.h	/^	GGL_COLOR_LOGIC_OP				= 0x0BF2,$/;"	e	enum:GGLNames
GGL_COPY	include/pixelflinger/pixelflinger.h	/^    GGL_COPY                        = 0x1503,   \/\/ s$/;"	e	enum:GGLNames
GGL_COPY_INVERTED	include/pixelflinger/pixelflinger.h	/^    GGL_COPY_INVERTED               = 0x150C,   \/\/ ~s $/;"	e	enum:GGLNames
GGL_DECAL	include/pixelflinger/pixelflinger.h	/^	GGL_DECAL						= 0x2101,$/;"	e	enum:GGLNames
GGL_DEPTH_BUFFER_BIT	include/pixelflinger/pixelflinger.h	/^    GGL_DEPTH_BUFFER_BIT            = 0x00000100,$/;"	e	enum:GGLNames
GGL_DEPTH_TEST	include/pixelflinger/pixelflinger.h	/^	GGL_DEPTH_TEST					= 0x0B71,$/;"	e	enum:GGLNames
GGL_DITHER	include/pixelflinger/pixelflinger.h	/^	GGL_DITHER						= 0x0BD0,$/;"	e	enum:GGLNames
GGL_DST_ALPHA	include/pixelflinger/pixelflinger.h	/^	GGL_DST_ALPHA					= 0x0304,	\/\/ SD$/;"	e	enum:GGLNames
GGL_DST_COLOR	include/pixelflinger/pixelflinger.h	/^	GGL_DST_COLOR					= 0x0306,	\/\/ S$/;"	e	enum:GGLNames
GGL_EQUAL	include/pixelflinger/pixelflinger.h	/^    GGL_EQUAL                       = 0x0202,$/;"	e	enum:GGLNames
GGL_EQUIV	include/pixelflinger/pixelflinger.h	/^    GGL_EQUIV                       = 0x1509,   \/\/ ~(s ^ d)$/;"	e	enum:GGLNames
GGL_FALSE	include/pixelflinger/pixelflinger.h	/^	GGL_FALSE						= 0,$/;"	e	enum:GGLNames
GGL_FLAT	include/pixelflinger/pixelflinger.h	/^	GGL_FLAT						= 0x1D00,$/;"	e	enum:GGLNames
GGL_FOG	include/pixelflinger/pixelflinger.h	/^    GGL_FOG                         = 0x0B60,$/;"	e	enum:GGLNames
GGL_GEQUAL	include/pixelflinger/pixelflinger.h	/^    GGL_GEQUAL                      = 0x0206,$/;"	e	enum:GGLNames
GGL_GREATER	include/pixelflinger/pixelflinger.h	/^    GGL_GREATER                     = 0x0204,$/;"	e	enum:GGLNames
GGL_INVALID_ENUM	include/pixelflinger/pixelflinger.h	/^    GGL_INVALID_ENUM                = 0x0500,$/;"	e	enum:GGLNames
GGL_INVALID_OPERATION	include/pixelflinger/pixelflinger.h	/^    GGL_INVALID_OPERATION           = 0x0502,$/;"	e	enum:GGLNames
GGL_INVALID_VALUE	include/pixelflinger/pixelflinger.h	/^    GGL_INVALID_VALUE               = 0x0501,$/;"	e	enum:GGLNames
GGL_INVERT	include/pixelflinger/pixelflinger.h	/^    GGL_INVERT                      = 0x150A,   \/\/ ~d$/;"	e	enum:GGLNames
GGL_LEQUAL	include/pixelflinger/pixelflinger.h	/^    GGL_LEQUAL                      = 0x0203,$/;"	e	enum:GGLNames
GGL_LESS	include/pixelflinger/pixelflinger.h	/^    GGL_LESS                        = 0x0201,$/;"	e	enum:GGLNames
GGL_LINEAR	include/pixelflinger/pixelflinger.h	/^	GGL_LINEAR						= 0x2601,$/;"	e	enum:GGLNames
GGL_LINEAR_MIPMAP_LINEAR	include/pixelflinger/pixelflinger.h	/^	GGL_LINEAR_MIPMAP_LINEAR		= 0x2703,$/;"	e	enum:GGLNames
GGL_LINEAR_MIPMAP_NEAREST	include/pixelflinger/pixelflinger.h	/^	GGL_LINEAR_MIPMAP_NEAREST		= 0x2701,$/;"	e	enum:GGLNames
GGL_MAX_ALIASED_POINT_SIZE	include/pixelflinger/pixelflinger.h	52;"	d
GGL_MAX_SMOOTH_LINE_WIDTH	include/pixelflinger/pixelflinger.h	54;"	d
GGL_MAX_SMOOTH_POINT_SIZE	include/pixelflinger/pixelflinger.h	53;"	d
GGL_MAX_TEXTURE_SIZE	include/pixelflinger/pixelflinger.h	51;"	d
GGL_MAX_VIEWPORT_DIMS	include/pixelflinger/pixelflinger.h	50;"	d
GGL_MODULATE	include/pixelflinger/pixelflinger.h	/^	GGL_MODULATE					= 0x2100,$/;"	e	enum:GGLNames
GGL_NAND	include/pixelflinger/pixelflinger.h	/^    GGL_NAND                        = 0x150E,   \/\/ ~(s & d)$/;"	e	enum:GGLNames
GGL_NEAREST	include/pixelflinger/pixelflinger.h	/^	GGL_NEAREST						= 0x2600,$/;"	e	enum:GGLNames
GGL_NEAREST_MIPMAP_LINEAR	include/pixelflinger/pixelflinger.h	/^	GGL_NEAREST_MIPMAP_LINEAR		= 0x2702,$/;"	e	enum:GGLNames
GGL_NEAREST_MIPMAP_NEAREST	include/pixelflinger/pixelflinger.h	/^	GGL_NEAREST_MIPMAP_NEAREST		= 0x2700,$/;"	e	enum:GGLNames
GGL_NEVER	include/pixelflinger/pixelflinger.h	/^    GGL_NEVER                       = 0x0200,$/;"	e	enum:GGLNames
GGL_NOOP	include/pixelflinger/pixelflinger.h	/^    GGL_NOOP                        = 0x1505,   \/\/ d$/;"	e	enum:GGLNames
GGL_NOR	include/pixelflinger/pixelflinger.h	/^    GGL_NOR                         = 0x1508,   \/\/ ~(s | d)$/;"	e	enum:GGLNames
GGL_NOTEQUAL	include/pixelflinger/pixelflinger.h	/^    GGL_NOTEQUAL                    = 0x0205,$/;"	e	enum:GGLNames
GGL_NO_ERROR	include/pixelflinger/pixelflinger.h	/^    GGL_NO_ERROR                    = 0,$/;"	e	enum:GGLNames
GGL_ONE	include/pixelflinger/pixelflinger.h	/^	GGL_ONE                         = 1,		\/\/ SD$/;"	e	enum:GGLNames
GGL_ONE_MINUS_DST_ALPHA	include/pixelflinger/pixelflinger.h	/^	GGL_ONE_MINUS_DST_ALPHA			= 0x0305,	\/\/ SD$/;"	e	enum:GGLNames
GGL_ONE_MINUS_DST_COLOR	include/pixelflinger/pixelflinger.h	/^	GGL_ONE_MINUS_DST_COLOR			= 0x0307,	\/\/ S$/;"	e	enum:GGLNames
GGL_ONE_MINUS_SRC_ALPHA	include/pixelflinger/pixelflinger.h	/^	GGL_ONE_MINUS_SRC_ALPHA			= 0x0303,	\/\/ SD$/;"	e	enum:GGLNames
GGL_ONE_MINUS_SRC_COLOR	include/pixelflinger/pixelflinger.h	/^	GGL_ONE_MINUS_SRC_COLOR         = 0x0301,	\/\/	D$/;"	e	enum:GGLNames
GGL_ONE_TO_ONE	include/pixelflinger/pixelflinger.h	/^    GGL_ONE_TO_ONE                  = 0x80000002,$/;"	e	enum:GGLNames
GGL_OR	include/pixelflinger/pixelflinger.h	/^    GGL_OR                          = 0x1507,   \/\/ s | d$/;"	e	enum:GGLNames
GGL_OR_INVERTED	include/pixelflinger/pixelflinger.h	/^    GGL_OR_INVERTED                 = 0x150D,   \/\/ ~s | d$/;"	e	enum:GGLNames
GGL_OR_REVERSE	include/pixelflinger/pixelflinger.h	/^    GGL_OR_REVERSE                  = 0x150B,   \/\/ s | ~d$/;"	e	enum:GGLNames
GGL_OUT_OF_MEMORY	include/pixelflinger/pixelflinger.h	/^    GGL_OUT_OF_MEMORY               = 0x0505$/;"	e	enum:GGLNames
GGL_POINT_SMOOTH_NICE	include/pixelflinger/pixelflinger.h	/^    GGL_POINT_SMOOTH_NICE           = 0x80000005,$/;"	e	enum:GGLNames
GGL_Q	include/pixelflinger/pixelflinger.h	/^    GGL_Q                           = 0x2003,$/;"	e	enum:GGLNames
GGL_R	include/pixelflinger/pixelflinger.h	/^    GGL_R                           = 0x2002,$/;"	e	enum:GGLNames
GGL_REPEAT	include/pixelflinger/pixelflinger.h	/^	GGL_REPEAT						= 0x2901,$/;"	e	enum:GGLNames
GGL_REPLACE	include/pixelflinger/pixelflinger.h	/^	GGL_REPLACE						= 0x1E01,$/;"	e	enum:GGLNames
GGL_S	include/pixelflinger/pixelflinger.h	/^    GGL_S                           = 0x2000,$/;"	e	enum:GGLNames
GGL_SCISSOR_TEST	include/pixelflinger/pixelflinger.h	/^    GGL_SCISSOR_TEST                = 0x0C11,$/;"	e	enum:GGLNames
GGL_SET	include/pixelflinger/pixelflinger.h	/^    GGL_SET                         = 0x150F,   \/\/ 1$/;"	e	enum:GGLNames
GGL_SMOOTH	include/pixelflinger/pixelflinger.h	/^	GGL_SMOOTH						= 0x1D01,$/;"	e	enum:GGLNames
GGL_SRC_ALPHA	include/pixelflinger/pixelflinger.h	/^	GGL_SRC_ALPHA                   = 0x0302,	\/\/ SD$/;"	e	enum:GGLNames
GGL_SRC_ALPHA_SATURATE	include/pixelflinger/pixelflinger.h	/^	GGL_SRC_ALPHA_SATURATE			= 0x0308,	\/\/ S$/;"	e	enum:GGLNames
GGL_SRC_COLOR	include/pixelflinger/pixelflinger.h	/^	GGL_SRC_COLOR                   = 0x0300,	\/\/  D$/;"	e	enum:GGLNames
GGL_STACK_OVERFLOW	include/pixelflinger/pixelflinger.h	/^    GGL_STACK_OVERFLOW              = 0x0503,$/;"	e	enum:GGLNames
GGL_STACK_UNDERFLOW	include/pixelflinger/pixelflinger.h	/^    GGL_STACK_UNDERFLOW             = 0x0504,$/;"	e	enum:GGLNames
GGL_STENCIL_BUFFER_BIT	include/pixelflinger/pixelflinger.h	/^    GGL_STENCIL_BUFFER_BIT          = 0x00000400,$/;"	e	enum:GGLNames
GGL_STENCIL_TEST	include/pixelflinger/pixelflinger.h	/^	GGL_STENCIL_TEST				= 0x0B90,$/;"	e	enum:GGLNames
GGL_T	include/pixelflinger/pixelflinger.h	/^    GGL_T                           = 0x2001,$/;"	e	enum:GGLNames
GGL_TEXTURE_2D	include/pixelflinger/pixelflinger.h	/^	GGL_TEXTURE_2D					= 0x0DE1,$/;"	e	enum:GGLNames
GGL_TEXTURE_ENV	include/pixelflinger/pixelflinger.h	/^	GGL_TEXTURE_ENV					= 0x2300,$/;"	e	enum:GGLNames
GGL_TEXTURE_ENV_COLOR	include/pixelflinger/pixelflinger.h	/^	GGL_TEXTURE_ENV_COLOR			= 0x2201,$/;"	e	enum:GGLNames
GGL_TEXTURE_ENV_MODE	include/pixelflinger/pixelflinger.h	/^	GGL_TEXTURE_ENV_MODE			= 0x2200,$/;"	e	enum:GGLNames
GGL_TEXTURE_GEN_MODE	include/pixelflinger/pixelflinger.h	/^    GGL_TEXTURE_GEN_MODE            = 0x2500,$/;"	e	enum:GGLNames
GGL_TEXTURE_MAG_FILTER	include/pixelflinger/pixelflinger.h	/^	GGL_TEXTURE_MAG_FILTER			= 0x2800,$/;"	e	enum:GGLNames
GGL_TEXTURE_MIN_FILTER	include/pixelflinger/pixelflinger.h	/^	GGL_TEXTURE_MIN_FILTER			= 0x2801,$/;"	e	enum:GGLNames
GGL_TEXTURE_WRAP_R	include/pixelflinger/pixelflinger.h	/^	GGL_TEXTURE_WRAP_R				= 0x2804,$/;"	e	enum:GGLNames
GGL_TEXTURE_WRAP_S	include/pixelflinger/pixelflinger.h	/^	GGL_TEXTURE_WRAP_S				= 0x2802,$/;"	e	enum:GGLNames
GGL_TEXTURE_WRAP_T	include/pixelflinger/pixelflinger.h	/^	GGL_TEXTURE_WRAP_T				= 0x2803,$/;"	e	enum:GGLNames
GGL_TRUE	include/pixelflinger/pixelflinger.h	/^	GGL_TRUE						= 1,$/;"	e	enum:GGLNames
GGL_W_LERP	include/pixelflinger/pixelflinger.h	/^    GGL_W_LERP                      = 0x80000004,$/;"	e	enum:GGLNames
GGL_XOR	include/pixelflinger/pixelflinger.h	/^    GGL_XOR                         = 0x1506,   \/\/ s ^ d$/;"	e	enum:GGLNames
GGL_ZERO	include/pixelflinger/pixelflinger.h	/^	GGL_ZERO                        = 0,		\/\/ SD$/;"	e	enum:GGLNames
GGLbitfield	include/pixelflinger/pixelflinger.h	/^typedef unsigned int	GGLbitfield;	\/\/ ui$/;"	t
GGLboolean	include/pixelflinger/pixelflinger.h	/^typedef uint8_t			GGLboolean;		\/\/ ub$/;"	t
GGLbyte	include/pixelflinger/pixelflinger.h	/^typedef int8_t			GGLbyte;		\/\/ b$/;"	t
GGLclampd	include/pixelflinger/pixelflinger.h	/^typedef double			GGLclampd;		\/\/ d$/;"	t
GGLclampf	include/pixelflinger/pixelflinger.h	/^typedef float			GGLclampf;		\/\/ f$/;"	t
GGLclampx	include/pixelflinger/pixelflinger.h	/^typedef int32_t			GGLclampx;		\/\/ x$/;"	t
GGLcolor	include/pixelflinger/pixelflinger.h	/^typedef	int32_t         GGLcolor;$/;"	t
GGLcoord	include/pixelflinger/pixelflinger.h	/^typedef int32_t         GGLcoord;$/;"	t
GGLdouble	include/pixelflinger/pixelflinger.h	/^typedef double			GGLdouble;		\/\/ d$/;"	t
GGLenum	include/pixelflinger/pixelflinger.h	/^typedef unsigned int	GGLenum;		\/\/ ui$/;"	t
GGLfixed	include/pixelflinger/pixelflinger.h	/^typedef int32_t			GGLfixed;		\/\/ x$/;"	t
GGLfixed32	include/pixelflinger/pixelflinger.h	/^typedef int32_t         GGLfixed32;$/;"	t
GGLfloat	include/pixelflinger/pixelflinger.h	/^typedef float			GGLfloat;		\/\/ f$/;"	t
GGLint	include/pixelflinger/pixelflinger.h	/^typedef int32_t			GGLint;			\/\/ i$/;"	t
GGLshort	include/pixelflinger/pixelflinger.h	/^typedef int16_t			GGLshort;		\/\/ s$/;"	t
GGLsizei	include/pixelflinger/pixelflinger.h	/^typedef ssize_t			GGLsizei;		\/\/ i$/;"	t
GGLubyte	include/pixelflinger/pixelflinger.h	/^typedef uint8_t			GGLubyte;		\/\/ ub$/;"	t
GGLuint	include/pixelflinger/pixelflinger.h	/^typedef uint32_t		GGLuint;		\/\/ ui$/;"	t
GGLushort	include/pixelflinger/pixelflinger.h	/^typedef uint16_t		GGLushort;		\/\/ us$/;"	t
GGLvoid	include/pixelflinger/pixelflinger.h	/^typedef void			GGLvoid;$/;"	t
activeTexture	include/pixelflinger/pixelflinger.h	/^    void (*activeTexture)(void* c, GGLuint tmu);$/;"	m	struct:__anon84
alphaFuncx	include/pixelflinger/pixelflinger.h	/^    void (*alphaFuncx)(void* c, GGLenum func, GGLclampx ref);$/;"	m	struct:__anon84
bindTexture	include/pixelflinger/pixelflinger.h	/^    void (*bindTexture)(void* c, const GGLSurface* surface);$/;"	m	struct:__anon84
bindTextureLod	include/pixelflinger/pixelflinger.h	/^    void (*bindTextureLod)(void* c, GGLuint tmu, const GGLSurface* surface);$/;"	m	struct:__anon84
blendFunc	include/pixelflinger/pixelflinger.h	/^    void (*blendFunc)(void* c, GGLenum src, GGLenum dst);$/;"	m	struct:__anon84
blendFuncSeparate	include/pixelflinger/pixelflinger.h	/^    void (*blendFuncSeparate)(void* c,  GGLenum src, GGLenum dst,$/;"	m	struct:__anon84
clear	include/pixelflinger/pixelflinger.h	/^    void (*clear)(void* c, GGLbitfield mask);$/;"	m	struct:__anon84
clearColorx	include/pixelflinger/pixelflinger.h	/^    void (*clearColorx)(void* c,$/;"	m	struct:__anon84
clearDepthx	include/pixelflinger/pixelflinger.h	/^    void (*clearDepthx)(void* c, GGLclampx depth);$/;"	m	struct:__anon84
clearStencil	include/pixelflinger/pixelflinger.h	/^    void (*clearStencil)(void* c, GGLint s);$/;"	m	struct:__anon84
color4xv	include/pixelflinger/pixelflinger.h	/^    void (*color4xv)(void* c, const GGLclampx* color);$/;"	m	struct:__anon84
colorBuffer	include/pixelflinger/pixelflinger.h	/^    void (*colorBuffer)(void* c, const GGLSurface* surface);$/;"	m	struct:__anon84
colorGrad12xv	include/pixelflinger/pixelflinger.h	/^    void (*colorGrad12xv)(void* c, const GGLcolor* grad);$/;"	m	struct:__anon84
colorMask	include/pixelflinger/pixelflinger.h	/^    void (*colorMask)(void* c,  GGLboolean red,$/;"	m	struct:__anon84
compressedFormat	include/pixelflinger/pixelflinger.h	/^        GGLint  compressedFormat;$/;"	m	union:__anon82::__anon83
copyPixels	include/pixelflinger/pixelflinger.h	/^    void (*copyPixels)(void* c, GGLint x, GGLint y,$/;"	m	struct:__anon84
data	include/pixelflinger/pixelflinger.h	/^    GGLubyte*   data;       \/\/ pointer to the bits$/;"	m	struct:__anon82
depthBuffer	include/pixelflinger/pixelflinger.h	/^    void (*depthBuffer)(void* c, const GGLSurface* surface);$/;"	m	struct:__anon84
depthFunc	include/pixelflinger/pixelflinger.h	/^    void (*depthFunc)(void* c, GGLenum func);$/;"	m	struct:__anon84
depthMask	include/pixelflinger/pixelflinger.h	/^    void (*depthMask)(void* c, GGLboolean flag);$/;"	m	struct:__anon84
disable	include/pixelflinger/pixelflinger.h	/^    void (*disable)(void* c, GGLenum name);$/;"	m	struct:__anon84
enable	include/pixelflinger/pixelflinger.h	/^    void (*enable)(void* c, GGLenum name);$/;"	m	struct:__anon84
enableDisable	include/pixelflinger/pixelflinger.h	/^    void (*enableDisable)(void* c, GGLenum name, GGLboolean en);$/;"	m	struct:__anon84
fogColor3xv	include/pixelflinger/pixelflinger.h	/^    void (*fogColor3xv)(void* c, const GGLclampx* color);$/;"	m	struct:__anon84
fogGrad3xv	include/pixelflinger/pixelflinger.h	/^    void (*fogGrad3xv)(void* c, const GGLfixed* grad);$/;"	m	struct:__anon84
format	include/pixelflinger/pixelflinger.h	/^    GGLubyte    format;     \/\/ pixel format$/;"	m	struct:__anon82
height	include/pixelflinger/pixelflinger.h	/^    GGLuint     height;     \/\/ height in pixels$/;"	m	struct:__anon82
linex	include/pixelflinger/pixelflinger.h	/^    void (*linex)(void *con, $/;"	m	struct:__anon84
logicOp	include/pixelflinger/pixelflinger.h	/^    void (*logicOp)(void* c, GGLenum opcode); $/;"	m	struct:__anon84
pointx	include/pixelflinger/pixelflinger.h	/^    void (*pointx)(void *con, const GGLcoord* v, GGLcoord r);$/;"	m	struct:__anon84
rasterPos2i	include/pixelflinger/pixelflinger.h	/^    void (*rasterPos2i)(void* c, GGLint x, GGLint y);$/;"	m	struct:__anon84
rasterPos2x	include/pixelflinger/pixelflinger.h	/^    void (*rasterPos2x)(void* c, GGLfixed x, GGLfixed y);$/;"	m	struct:__anon84
readBuffer	include/pixelflinger/pixelflinger.h	/^    void (*readBuffer)(void* c, const GGLSurface* surface);$/;"	m	struct:__anon84
recti	include/pixelflinger/pixelflinger.h	/^    void (*recti)(void* c, GGLint l, GGLint t, GGLint r, GGLint b); $/;"	m	struct:__anon84
reserved	include/pixelflinger/pixelflinger.h	/^    void*       reserved;$/;"	m	struct:__anon82
rfu	include/pixelflinger/pixelflinger.h	/^    GGLubyte    rfu[3];     \/\/ must be zero$/;"	m	struct:__anon82
scissor	include/pixelflinger/pixelflinger.h	/^    void (*scissor)(void* c, GGLint x, GGLint y, GGLsizei width, GGLsizei height);$/;"	m	struct:__anon84
shadeModel	include/pixelflinger/pixelflinger.h	/^    void (*shadeModel)(void* c, GGLenum mode);$/;"	m	struct:__anon84
stencilMask	include/pixelflinger/pixelflinger.h	/^    void (*stencilMask)(void* c, GGLuint mask);$/;"	m	struct:__anon84
stride	include/pixelflinger/pixelflinger.h	/^    GGLint      stride;     \/\/ stride in pixels$/;"	m	struct:__anon82
texCoord2i	include/pixelflinger/pixelflinger.h	/^    void (*texCoord2i)(void* c, GGLint s, GGLint t);$/;"	m	struct:__anon84
texCoord2x	include/pixelflinger/pixelflinger.h	/^    void (*texCoord2x)(void* c, GGLfixed s, GGLfixed t);$/;"	m	struct:__anon84
texCoordGradScale8xv	include/pixelflinger/pixelflinger.h	/^    void (*texCoordGradScale8xv)(void* c, GGLint tmu, const int32_t* grad8);$/;"	m	struct:__anon84
texEnvi	include/pixelflinger/pixelflinger.h	/^    void (*texEnvi)(void* c,    GGLenum target,$/;"	m	struct:__anon84
texEnvxv	include/pixelflinger/pixelflinger.h	/^    void (*texEnvxv)(void* c, GGLenum target,$/;"	m	struct:__anon84
texGeni	include/pixelflinger/pixelflinger.h	/^    void (*texGeni)(void* c, GGLenum coord, GGLenum pname, GGLint param);$/;"	m	struct:__anon84
texParameteri	include/pixelflinger/pixelflinger.h	/^    void (*texParameteri)(void* c,  GGLenum target,$/;"	m	struct:__anon84
trianglex	include/pixelflinger/pixelflinger.h	/^    void (*trianglex)(void* c,$/;"	m	struct:__anon84
version	include/pixelflinger/pixelflinger.h	/^    GGLsizei    version;    \/\/ always set to sizeof(GGLSurface)$/;"	m	struct:__anon82
vstride	include/pixelflinger/pixelflinger.h	/^        GGLint  vstride;$/;"	m	union:__anon82::__anon83
wGrad3xv	include/pixelflinger/pixelflinger.h	/^    void (*wGrad3xv)(void* c, const GGLfixed* grad);$/;"	m	struct:__anon84
width	include/pixelflinger/pixelflinger.h	/^    GGLuint     width;      \/\/ width in pixels$/;"	m	struct:__anon82
zGrad3xv	include/pixelflinger/pixelflinger.h	/^    void (*zGrad3xv)(void* c, const GGLfixed32* grad);$/;"	m	struct:__anon84
AID_ADB	include/private/android_filesystem_config.h	47;"	d
AID_APP	include/private/android_filesystem_config.h	76;"	d
AID_AUDIO	include/private/android_filesystem_config.h	41;"	d
AID_BLUETOOTH	include/private/android_filesystem_config.h	38;"	d
AID_CACHE	include/private/android_filesystem_config.h	62;"	d
AID_CAMERA	include/private/android_filesystem_config.h	42;"	d
AID_COMPASS	include/private/android_filesystem_config.h	44;"	d
AID_DHCP	include/private/android_filesystem_config.h	50;"	d
AID_DIAG	include/private/android_filesystem_config.h	63;"	d
AID_GPS	include/private/android_filesystem_config.h	55;"	d
AID_GRAPHICS	include/private/android_filesystem_config.h	39;"	d
AID_INET	include/private/android_filesystem_config.h	69;"	d
AID_INPUT	include/private/android_filesystem_config.h	40;"	d
AID_INSTALL	include/private/android_filesystem_config.h	48;"	d
AID_KEYSTORE	include/private/android_filesystem_config.h	53;"	d
AID_LOG	include/private/android_filesystem_config.h	43;"	d
AID_MEDIA	include/private/android_filesystem_config.h	49;"	d
AID_MISC	include/private/android_filesystem_config.h	73;"	d
AID_MOUNT	include/private/android_filesystem_config.h	45;"	d
AID_NET_ADMIN	include/private/android_filesystem_config.h	71;"	d
AID_NET_BT	include/private/android_filesystem_config.h	68;"	d
AID_NET_BT_ADMIN	include/private/android_filesystem_config.h	67;"	d
AID_NET_RAW	include/private/android_filesystem_config.h	70;"	d
AID_NFC	include/private/android_filesystem_config.h	59;"	d
AID_NOBODY	include/private/android_filesystem_config.h	74;"	d
AID_RADIO	include/private/android_filesystem_config.h	37;"	d
AID_RFU1	include/private/android_filesystem_config.h	57;"	d
AID_RFU2	include/private/android_filesystem_config.h	58;"	d
AID_ROOT	include/private/android_filesystem_config.h	33;"	d
AID_SDCARD_RW	include/private/android_filesystem_config.h	51;"	d
AID_SHELL	include/private/android_filesystem_config.h	61;"	d
AID_SYSTEM	include/private/android_filesystem_config.h	35;"	d
AID_UNUSED1	include/private/android_filesystem_config.h	56;"	d
AID_USB	include/private/android_filesystem_config.h	54;"	d
AID_VPN	include/private/android_filesystem_config.h	52;"	d
AID_WIFI	include/private/android_filesystem_config.h	46;"	d
_ANDROID_FILESYSTEM_CONFIG_H_	include/private/android_filesystem_config.h	23;"	d
aid	include/private/android_filesystem_config.h	/^    unsigned aid;$/;"	m	struct:android_id_info
android_dirs	include/private/android_filesystem_config.h	/^static struct fs_path_config android_dirs[] = {$/;"	v	typeref:struct:fs_path_config
android_files	include/private/android_filesystem_config.h	/^static struct fs_path_config android_files[] = {$/;"	v	typeref:struct:fs_path_config
android_id_count	include/private/android_filesystem_config.h	119;"	d
android_id_info	include/private/android_filesystem_config.h	/^struct android_id_info {$/;"	s
android_ids	include/private/android_filesystem_config.h	/^static const struct android_id_info android_ids[] = {$/;"	v	typeref:struct:android_id_info
fs_config	include/private/android_filesystem_config.h	/^static inline void fs_config(const char *path, int dir,$/;"	f
fs_path_config	include/private/android_filesystem_config.h	/^struct fs_path_config {$/;"	s
gid	include/private/android_filesystem_config.h	/^    unsigned gid;$/;"	m	struct:fs_path_config
mode	include/private/android_filesystem_config.h	/^    unsigned mode;$/;"	m	struct:fs_path_config
name	include/private/android_filesystem_config.h	/^    const char *name;$/;"	m	struct:android_id_info
prefix	include/private/android_filesystem_config.h	/^    const char *prefix;$/;"	m	struct:fs_path_config
uid	include/private/android_filesystem_config.h	/^    unsigned uid;$/;"	m	struct:fs_path_config
android	include/private/binder/Static.h	/^namespace android {$/;"	n
_BINDER_MODULE_H_	include/private/binder/binder_module.h	18;"	d
android	include/private/binder/binder_module.h	/^namespace android {$/;"	n
ANDROID_EFFECTCBASESHARED_H	include/private/media/AudioEffectShared.h	18;"	d
EFFECT_PARAM_BUFFER_SIZE	include/private/media/AudioEffectShared.h	30;"	d
android	include/private/media/AudioEffectShared.h	/^namespace android {$/;"	n
buffer	include/private/media/AudioEffectShared.h	/^                uint8_t*    buffer;         \/\/ start of parameter buffer$/;"	m	struct:android::effect_param_cblk_t
clientIndex	include/private/media/AudioEffectShared.h	/^    volatile    uint32_t    clientIndex;    \/\/ Current read\/write index for application$/;"	m	struct:android::effect_param_cblk_t
effect_param_cblk_t	include/private/media/AudioEffectShared.h	/^                effect_param_cblk_t()$/;"	f	struct:android::effect_param_cblk_t
effect_param_cblk_t	include/private/media/AudioEffectShared.h	/^struct effect_param_cblk_t$/;"	s	namespace:android
lock	include/private/media/AudioEffectShared.h	/^                Mutex       lock;$/;"	m	struct:android::effect_param_cblk_t
serverIndex	include/private/media/AudioEffectShared.h	/^    volatile    uint32_t    serverIndex;    \/\/ Current read\/write index for mediaserver$/;"	m	struct:android::effect_param_cblk_t
ANDROID_AUDIO_TRACK_SHARED_H	include/private/media/AudioTrackShared.h	18;"	d
CBLK_DIRECTION_IN	include/private/media/AudioTrackShared.h	40;"	d
CBLK_DIRECTION_MSK	include/private/media/AudioTrackShared.h	38;"	d
CBLK_DIRECTION_OUT	include/private/media/AudioTrackShared.h	39;"	d
CBLK_DISABLED_MSK	include/private/media/AudioTrackShared.h	47;"	d
CBLK_DISABLED_OFF	include/private/media/AudioTrackShared.h	49;"	d
CBLK_DISABLED_ON	include/private/media/AudioTrackShared.h	48;"	d
CBLK_FORCEREADY_MSK	include/private/media/AudioTrackShared.h	41;"	d
CBLK_FORCEREADY_OFF	include/private/media/AudioTrackShared.h	43;"	d
CBLK_FORCEREADY_ON	include/private/media/AudioTrackShared.h	42;"	d
CBLK_INVALID_MSK	include/private/media/AudioTrackShared.h	44;"	d
CBLK_INVALID_OFF	include/private/media/AudioTrackShared.h	46;"	d
CBLK_INVALID_ON	include/private/media/AudioTrackShared.h	45;"	d
CBLK_UNDERRUN_MSK	include/private/media/AudioTrackShared.h	35;"	d
CBLK_UNDERRUN_OFF	include/private/media/AudioTrackShared.h	37;"	d
CBLK_UNDERRUN_ON	include/private/media/AudioTrackShared.h	36;"	d
MAX_RUN_TIMEOUT_MS	include/private/media/AudioTrackShared.h	32;"	d
MAX_STARTUP_TIMEOUT_MS	include/private/media/AudioTrackShared.h	31;"	d
THREAD_PRIORITY_AUDIO_CLIENT	include/private/media/AudioTrackShared.h	29;"	d
WAIT_PERIOD_MS	include/private/media/AudioTrackShared.h	33;"	d
android	include/private/media/AudioTrackShared.h	/^namespace android {$/;"	n
audio_track_cblk_t	include/private/media/AudioTrackShared.h	/^struct audio_track_cblk_t$/;"	s	namespace:android
bufferTimeoutMs	include/private/media/AudioTrackShared.h	/^                uint16_t    bufferTimeoutMs; \/\/ Maximum cumulated timeout before restarting audioflinger$/;"	m	struct:android::audio_track_cblk_t
buffers	include/private/media/AudioTrackShared.h	/^                void*       buffers;$/;"	m	struct:android::audio_track_cblk_t
channelCount	include/private/media/AudioTrackShared.h	/^                uint8_t     channelCount;$/;"	m	struct:android::audio_track_cblk_t
cv	include/private/media/AudioTrackShared.h	/^                Condition   cv;$/;"	m	struct:android::audio_track_cblk_t
flags	include/private/media/AudioTrackShared.h	/^                uint16_t    flags;$/;"	m	struct:android::audio_track_cblk_t
frameCount	include/private/media/AudioTrackShared.h	/^                uint32_t    frameCount;$/;"	m	struct:android::audio_track_cblk_t
frameSize	include/private/media/AudioTrackShared.h	/^                uint8_t     frameSize;$/;"	m	struct:android::audio_track_cblk_t
lock	include/private/media/AudioTrackShared.h	/^                Mutex       lock;$/;"	m	struct:android::audio_track_cblk_t
loopCount	include/private/media/AudioTrackShared.h	/^                int         loopCount;$/;"	m	struct:android::audio_track_cblk_t
loopEnd	include/private/media/AudioTrackShared.h	/^                uint32_t    loopEnd;$/;"	m	struct:android::audio_track_cblk_t
loopStart	include/private/media/AudioTrackShared.h	/^                uint32_t    loopStart;$/;"	m	struct:android::audio_track_cblk_t
reserved	include/private/media/AudioTrackShared.h	/^                uint16_t    reserved;$/;"	m	struct:android::audio_track_cblk_t
sampleRate	include/private/media/AudioTrackShared.h	/^                uint32_t    sampleRate;$/;"	m	struct:android::audio_track_cblk_t
sendLevel	include/private/media/AudioTrackShared.h	/^                uint16_t    sendLevel;$/;"	m	struct:android::audio_track_cblk_t
server	include/private/media/AudioTrackShared.h	/^    volatile    uint32_t    server;$/;"	m	struct:android::audio_track_cblk_t
serverBase	include/private/media/AudioTrackShared.h	/^                uint32_t    serverBase;$/;"	m	struct:android::audio_track_cblk_t
user	include/private/media/AudioTrackShared.h	/^    volatile    uint32_t    user;$/;"	m	struct:android::audio_track_cblk_t
userBase	include/private/media/AudioTrackShared.h	/^                uint32_t    userBase;$/;"	m	struct:android::audio_track_cblk_t
volume	include/private/media/AudioTrackShared.h	/^                    uint16_t    volume[2];$/;"	m	union:android::audio_track_cblk_t::__anon80
volumeLR	include/private/media/AudioTrackShared.h	/^                    uint32_t    volumeLR;$/;"	m	union:android::audio_track_cblk_t::__anon80
waitTimeMs	include/private/media/AudioTrackShared.h	/^                uint16_t    waitTimeMs;      \/\/ Cumulated wait time$/;"	m	struct:android::audio_track_cblk_t
ANDROID_VIDEO_FRAME_H	include/private/media/VideoFrame.h	19;"	d
MediaAlbumArt	include/private/media/VideoFrame.h	/^    MediaAlbumArt(): mSize(0), mData(0) {}$/;"	f	class:android::MediaAlbumArt
MediaAlbumArt	include/private/media/VideoFrame.h	/^    MediaAlbumArt(const MediaAlbumArt& copy) { $/;"	f	class:android::MediaAlbumArt
MediaAlbumArt	include/private/media/VideoFrame.h	/^    explicit MediaAlbumArt(const char* url) {$/;"	f	class:android::MediaAlbumArt
MediaAlbumArt	include/private/media/VideoFrame.h	/^class MediaAlbumArt $/;"	c	namespace:android
VideoFrame	include/private/media/VideoFrame.h	/^    VideoFrame(): mWidth(0), mHeight(0), mDisplayWidth(0), mDisplayHeight(0), mSize(0), mData(0) {}$/;"	f	class:android::VideoFrame
VideoFrame	include/private/media/VideoFrame.h	/^    VideoFrame(const VideoFrame& copy) {$/;"	f	class:android::VideoFrame
VideoFrame	include/private/media/VideoFrame.h	/^class VideoFrame$/;"	c	namespace:android
android	include/private/media/VideoFrame.h	/^namespace android {$/;"	n
mData	include/private/media/VideoFrame.h	/^    uint8_t* mData;            \/\/ Actual binary data$/;"	m	class:android::MediaAlbumArt
mData	include/private/media/VideoFrame.h	/^    uint8_t* mData;            \/\/ Actual binary data$/;"	m	class:android::VideoFrame
mDisplayHeight	include/private/media/VideoFrame.h	/^    uint32_t mDisplayHeight;$/;"	m	class:android::VideoFrame
mDisplayWidth	include/private/media/VideoFrame.h	/^    uint32_t mDisplayWidth;$/;"	m	class:android::VideoFrame
mHeight	include/private/media/VideoFrame.h	/^    uint32_t mHeight;$/;"	m	class:android::VideoFrame
mRotationAngle	include/private/media/VideoFrame.h	/^    int32_t  mRotationAngle;   \/\/ rotation angle, clockwise$/;"	m	class:android::VideoFrame
mSize	include/private/media/VideoFrame.h	/^    uint32_t mSize;            \/\/ Number of bytes in mData$/;"	m	class:android::MediaAlbumArt
mSize	include/private/media/VideoFrame.h	/^    uint32_t mSize;            \/\/ Number of bytes in mData$/;"	m	class:android::VideoFrame
mWidth	include/private/media/VideoFrame.h	/^    uint32_t mWidth;$/;"	m	class:android::VideoFrame
~MediaAlbumArt	include/private/media/VideoFrame.h	/^    ~MediaAlbumArt() {$/;"	f	class:android::MediaAlbumArt
~VideoFrame	include/private/media/VideoFrame.h	/^    ~VideoFrame() {$/;"	f	class:android::VideoFrame
ANDROID_OPENGLES_CONTEXT_H	include/private/opengles/gl_context.h	18;"	d
CLIP_ALL	include/private/opengles/gl_context.h	/^        CLIP_ALL        = 0x3F3F,$/;"	e	enum:android::gl::vertex_t::__anon69
CLIP_B	include/private/opengles/gl_context.h	/^        CLIP_B          = 0x0004,$/;"	e	enum:android::gl::vertex_t::__anon69
CLIP_F	include/private/opengles/gl_context.h	/^        CLIP_F          = 0x0020,$/;"	e	enum:android::gl::vertex_t::__anon69
CLIP_L	include/private/opengles/gl_context.h	/^        CLIP_L          = 0x0001,   \/\/ clipping flags$/;"	e	enum:android::gl::vertex_t::__anon69
CLIP_N	include/private/opengles/gl_context.h	/^        CLIP_N          = 0x0010,$/;"	e	enum:android::gl::vertex_t::__anon69
CLIP_R	include/private/opengles/gl_context.h	/^        CLIP_R          = 0x0002,$/;"	e	enum:android::gl::vertex_t::__anon69
CLIP_T	include/private/opengles/gl_context.h	/^        CLIP_T          = 0x0008,$/;"	e	enum:android::gl::vertex_t::__anon69
DO_FLOAT_TO_FIXED	include/private/opengles/gl_context.h	/^        DO_FLOAT_TO_FIXED   = 0x2$/;"	e	enum:android::gl::matrix_stack_t::__anon76
DO_PICKER	include/private/opengles/gl_context.h	/^        DO_PICKER           = 0x1,$/;"	e	enum:android::gl::matrix_stack_t::__anon76
EYE	include/private/opengles/gl_context.h	/^        EYE             = 0x0040,$/;"	e	enum:android::gl::vertex_t::__anon69
FLAGS_2D_PROJECTION	include/private/opengles/gl_context.h	/^        FLAGS_2D_PROJECTION = 0x1$/;"	e	enum:android::gl::transform_t::__anon73
FRUSTUM_CLIP_ALL	include/private/opengles/gl_context.h	/^        FRUSTUM_CLIP_ALL= 0x003F,$/;"	e	enum:android::gl::vertex_t::__anon69
GL	include/private/opengles/gl_context.h	/^    typedef ogles_context_t* GL;$/;"	t	struct:android::gl::prims_t
INDEX_BITS	include/private/opengles/gl_context.h	/^        INDEX_BITS      = 16,$/;"	e	enum:android::gl::vertex_cache_t::__anon71
INDEX_MASK	include/private/opengles/gl_context.h	/^        INDEX_MASK      = ((1LU<<INDEX_BITS)-1),$/;"	e	enum:android::gl::vertex_cache_t::__anon71
INDEX_SEQ	include/private/opengles/gl_context.h	/^        INDEX_SEQ       = 1LU<<INDEX_BITS,$/;"	e	enum:android::gl::vertex_cache_t::__anon71
LIT	include/private/opengles/gl_context.h	/^        LIT             = 0x4000,   \/\/ lighting has been applied$/;"	e	enum:android::gl::vertex_t::__anon69
MODELVIEW	include/private/opengles/gl_context.h	/^        MODELVIEW           = 0x01,$/;"	e	enum:android::gl::transform_state_t::__anon77
MVIT	include/private/opengles/gl_context.h	/^        MVIT                = 0x20,$/;"	e	enum:android::gl::transform_state_t::__anon77
MVP	include/private/opengles/gl_context.h	/^        MVP                 = 0x40,$/;"	e	enum:android::gl::transform_state_t::__anon77
MVUI	include/private/opengles/gl_context.h	/^        MVUI                = 0x10,$/;"	e	enum:android::gl::transform_state_t::__anon77
OGLES_MAX_CLIP_PLANES	include/private/opengles/gl_context.h	/^const unsigned int OGLES_MAX_CLIP_PLANES = 6;$/;"	m	namespace:android::gl
OGLES_MAX_LIGHTS	include/private/opengles/gl_context.h	/^const unsigned int OGLES_MAX_LIGHTS = 8;$/;"	m	namespace:android::gl
OGLES_NUM_COMPRESSED_TEXTURE_FORMATS	include/private/opengles/gl_context.h	/^const unsigned int OGLES_NUM_COMPRESSED_TEXTURE_FORMATS = 10$/;"	m	namespace:android
OP_ALL	include/private/opengles/gl_context.h	/^    OP_ALL              = 0x1F$/;"	e	enum:android::gl::__anon72
OP_IDENTITY	include/private/opengles/gl_context.h	/^    OP_IDENTITY         = 0x00,$/;"	e	enum:android::gl::__anon72
OP_ROTATE	include/private/opengles/gl_context.h	/^    OP_ROTATE           = 0x08,$/;"	e	enum:android::gl::__anon72
OP_SCALE	include/private/opengles/gl_context.h	/^    OP_SCALE            = 0x05,$/;"	e	enum:android::gl::__anon72
OP_SKEW	include/private/opengles/gl_context.h	/^    OP_SKEW             = 0x10,$/;"	e	enum:android::gl::__anon72
OP_TRANSLATE	include/private/opengles/gl_context.h	/^    OP_TRANSLATE        = 0x01,$/;"	e	enum:android::gl::__anon72
OP_UNIFORM_SCALE	include/private/opengles/gl_context.h	/^    OP_UNIFORM_SCALE    = 0x02,$/;"	e	enum:android::gl::__anon72
PROJECTION	include/private/opengles/gl_context.h	/^        PROJECTION          = 0x02,$/;"	e	enum:android::gl::transform_state_t::__anon77
Q	include/private/opengles/gl_context.h	/^        struct { GLfixed S, T, R, Q; };$/;"	m	struct:android::gl::vec4_t::__anon65::__anon68
R	include/private/opengles/gl_context.h	/^        struct { GLfixed S, T, R, Q; };$/;"	m	struct:android::gl::vec4_t::__anon65::__anon68
R	include/private/opengles/gl_context.h	/^        struct { GLfixed S, T, R; };$/;"	m	struct:android::gl::vec3_t::__anon61::__anon64
RESERVED	include/private/opengles/gl_context.h	/^        RESERVED        = 0x0080,$/;"	e	enum:android::gl::vertex_t::__anon69
S	include/private/opengles/gl_context.h	/^        struct { GLfixed S, T, R, Q; };$/;"	m	struct:android::gl::vec4_t::__anon65::__anon68
S	include/private/opengles/gl_context.h	/^        struct { GLfixed S, T, R; };$/;"	m	struct:android::gl::vec3_t::__anon61::__anon64
T	include/private/opengles/gl_context.h	/^        struct { GLfixed S, T, R, Q; };$/;"	m	struct:android::gl::vec4_t::__anon65::__anon68
T	include/private/opengles/gl_context.h	/^        struct { GLfixed S, T, R; };$/;"	m	struct:android::gl::vec3_t::__anon61::__anon64
TEXTURE	include/private/opengles/gl_context.h	/^        TEXTURE             = 0x08,$/;"	e	enum:android::gl::transform_state_t::__anon77
TT	include/private/opengles/gl_context.h	/^        TT              = 0x8000,   \/\/ texture coords transformed$/;"	e	enum:android::gl::vertex_t::__anon69
USER_CLIP_0	include/private/opengles/gl_context.h	/^        USER_CLIP_0     = 0x0100,   \/\/ user clipping flags$/;"	e	enum:android::gl::vertex_t::__anon69
USER_CLIP_1	include/private/opengles/gl_context.h	/^        USER_CLIP_1     = 0x0200,$/;"	e	enum:android::gl::vertex_t::__anon69
USER_CLIP_2	include/private/opengles/gl_context.h	/^        USER_CLIP_2     = 0x0400,$/;"	e	enum:android::gl::vertex_t::__anon69
USER_CLIP_3	include/private/opengles/gl_context.h	/^        USER_CLIP_3     = 0x0800,$/;"	e	enum:android::gl::vertex_t::__anon69
USER_CLIP_4	include/private/opengles/gl_context.h	/^        USER_CLIP_4     = 0x1000,$/;"	e	enum:android::gl::vertex_t::__anon69
USER_CLIP_5	include/private/opengles/gl_context.h	/^        USER_CLIP_5     = 0x2000,$/;"	e	enum:android::gl::vertex_t::__anon69
USER_CLIP_ALL	include/private/opengles/gl_context.h	/^        USER_CLIP_ALL   = 0x3F00,$/;"	e	enum:android::gl::vertex_t::__anon69
VERTEX_BUFFER_SIZE	include/private/opengles/gl_context.h	/^        VERTEX_BUFFER_SIZE  = 8,$/;"	e	enum:android::gl::vertex_cache_t::__anon71
VERTEX_CACHE_SIZE	include/private/opengles/gl_context.h	/^        VERTEX_CACHE_SIZE   = 64,   \/\/ 8 KB$/;"	e	enum:android::gl::vertex_cache_t::__anon71
VIEWPORT	include/private/opengles/gl_context.h	/^        VIEWPORT            = 0x04,$/;"	e	enum:android::gl::transform_state_t::__anon77
a	include/private/opengles/gl_context.h	/^        struct { GLfixed r, g, b, a; };$/;"	m	struct:android::gl::vec4_t::__anon65::__anon67
active	include/private/opengles/gl_context.h	/^    int                 active;     \/\/ active tmu$/;"	m	struct:android::gl::texture_state_t
activeTexture	include/private/opengles/gl_context.h	/^    uint8_t         activeTexture;$/;"	m	struct:android::gl::array_machine_t
ambient	include/private/opengles/gl_context.h	/^    vec4_t      ambient;$/;"	m	struct:android::gl::light_model_t
ambient	include/private/opengles/gl_context.h	/^    vec4_t      ambient;$/;"	m	struct:android::gl::light_t
ambient	include/private/opengles/gl_context.h	/^    vec4_t      ambient;$/;"	m	struct:android::gl::material_t
android	include/private/opengles/gl_context.h	/^namespace android {$/;"	n
area	include/private/opengles/gl_context.h	/^    GGLcoord area() const { return m_area; }$/;"	f	struct:android::gl::compute_iterators_t
array_buffer	include/private/opengles/gl_context.h	/^    buffer_t const* array_buffer;$/;"	m	struct:android::gl::array_machine_t
array_machine_t	include/private/opengles/gl_context.h	/^struct array_machine_t {$/;"	s	namespace:android::gl
array_t	include/private/opengles/gl_context.h	/^struct array_t {$/;"	s	namespace:android::gl
arrays	include/private/opengles/gl_context.h	/^    array_machine_t         arrays         __attribute__((aligned(32)));$/;"	m	struct:android::gl::ogles_context_t
attenuation	include/private/opengles/gl_context.h	/^    GLfixed     attenuation[3];$/;"	m	struct:android::gl::light_t
b	include/private/opengles/gl_context.h	/^        struct { GLfixed r, g, b, a; };$/;"	m	struct:android::gl::vec4_t::__anon65::__anon67
b	include/private/opengles/gl_context.h	/^        struct { GLfixed r, g, b; };$/;"	m	struct:android::gl::vec3_t::__anon61::__anon63
base	include/private/opengles/gl_context.h	/^    void*           base;$/;"	m	struct:android::gl::vertex_cache_t
blitEngine	include/private/opengles/gl_context.h	/^    copybit_device_t*       blitEngine;$/;"	m	struct:android::gl::copybits_context_t
bo	include/private/opengles/gl_context.h	/^    buffer_t const* bo;$/;"	m	struct:android::gl::array_t
bounds	include/private/opengles/gl_context.h	/^    GLsizei         bounds;$/;"	m	struct:android::gl::array_t
bufferObjectManager	include/private/opengles/gl_context.h	/^    EGLBufferObjectManager* bufferObjectManager;$/;"	m	struct:android::gl::ogles_context_t
clear	include/private/opengles/gl_context.h	/^    inline void clear() {$/;"	f	struct:android::gl::vertex_t
clip	include/private/opengles/gl_context.h	/^    vec4_t          clip;$/;"	m	struct:android::gl::vertex_t
clipEye	include/private/opengles/gl_context.h	/^    void (*clipEye)(ogles_context_t* c, vertex_t* nv,$/;"	m	struct:android::gl::array_machine_t
clipPlanes	include/private/opengles/gl_context.h	/^    user_clip_planes_t      clipPlanes;$/;"	m	struct:android::gl::ogles_context_t
clipVertex	include/private/opengles/gl_context.h	/^    void (*clipVertex)(ogles_context_t* c, vertex_t* nv,$/;"	m	struct:android::gl::array_machine_t
clip_plane_t	include/private/opengles/gl_context.h	/^struct clip_plane_t {$/;"	s	namespace:android::gl
color	include/private/opengles/gl_context.h	/^    array_t         color;$/;"	m	struct:android::gl::array_machine_t
color	include/private/opengles/gl_context.h	/^    vec4_t          color;$/;"	m	struct:android::gl::vertex_t
colorMaterial	include/private/opengles/gl_context.h	/^    color_material_t    colorMaterial;$/;"	m	struct:android::gl::lighting_t
color_material_t	include/private/opengles/gl_context.h	/^struct color_material_t {$/;"	s	namespace:android::gl
compileElement	include/private/opengles/gl_context.h	/^    void (*compileElement)(ogles_context_t*, vertex_t*, GLint);$/;"	m	struct:android::gl::array_machine_t
compileElements	include/private/opengles/gl_context.h	/^    void (*compileElements)(ogles_context_t*, vertex_t*, GLint, GLsizei);$/;"	m	struct:android::gl::array_machine_t
compute_iterators_t	include/private/opengles/gl_context.h	/^struct compute_iterators_t$/;"	s	namespace:android::gl
copybits	include/private/opengles/gl_context.h	/^    copybits_context_t      copybits;$/;"	m	struct:android::gl::ogles_context_t
copybits_context_t	include/private/opengles/gl_context.h	/^struct copybits_context_t {$/;"	s	namespace:android::gl
cull	include/private/opengles/gl_context.h	/^    culling_t               cull;$/;"	m	struct:android::gl::ogles_context_t
cull	include/private/opengles/gl_context.h	/^    uint16_t        cull;$/;"	m	struct:android::gl::array_machine_t
cullFace	include/private/opengles/gl_context.h	/^    GLenum      cullFace;$/;"	m	struct:android::gl::culling_t
culling_t	include/private/opengles/gl_context.h	/^struct culling_t {$/;"	s	namespace:android::gl
current	include/private/opengles/gl_context.h	/^    matrix_stack_t      *current;$/;"	m	struct:android::gl::transform_state_t
current	include/private/opengles/gl_context.h	/^    vertex_t                current;$/;"	m	struct:android::gl::ogles_context_t
currentColorClamped	include/private/opengles/gl_context.h	/^    vec4_t                  currentColorClamped;$/;"	m	struct:android::gl::ogles_context_t
currentNormal	include/private/opengles/gl_context.h	/^    vec3_t                  currentNormal;$/;"	m	struct:android::gl::ogles_context_t
defaultTexture	include/private/opengles/gl_context.h	/^    EGLTextureObject*   defaultTexture;$/;"	m	struct:android::gl::texture_state_t
density	include/private/opengles/gl_context.h	/^    GLfixed     density;$/;"	m	struct:android::gl::fog_t
depth	include/private/opengles/gl_context.h	/^    uint8_t         depth;$/;"	m	struct:android::gl::matrix_stack_t
diffuse	include/private/opengles/gl_context.h	/^    vec4_t      diffuse;$/;"	m	struct:android::gl::light_t
diffuse	include/private/opengles/gl_context.h	/^    vec4_t      diffuse;$/;"	m	struct:android::gl::material_t
dirty	include/private/opengles/gl_context.h	/^    uint32_t            dirty;$/;"	m	struct:android::gl::transform_state_t
dirty	include/private/opengles/gl_context.h	/^    uint8_t             dirty;$/;"	m	struct:android::gl::texture_unit_t
dirty	include/private/opengles/gl_context.h	/^    uint8_t         dirty;$/;"	m	struct:android::gl::matrix_stack_t
drawSurfaceBuffer	include/private/opengles/gl_context.h	/^    android_native_buffer_t* drawSurfaceBuffer;$/;"	m	struct:android::gl::copybits_context_t
editElements	include/private/opengles/gl_context.h	/^    inline GLfloat* editElements() { return m; }$/;"	f	struct:android::gl::matrixf_t
element	include/private/opengles/gl_context.h	/^    inline const GLubyte* element(GLint i) const {$/;"	f	struct:android::gl::array_t
element_array_buffer	include/private/opengles/gl_context.h	/^    buffer_t const* element_array_buffer;$/;"	m	struct:android::gl::array_machine_t
elements	include/private/opengles/gl_context.h	/^    inline GLfloat const* elements() const { return m; }$/;"	f	struct:android::gl::matrixf_t
emission	include/private/opengles/gl_context.h	/^    vec4_t      emission;$/;"	m	struct:android::gl::material_t
enable	include/private/opengles/gl_context.h	/^    GLboolean           enable;$/;"	m	struct:android::gl::lighting_t
enable	include/private/opengles/gl_context.h	/^    GLboolean       enable;$/;"	m	struct:android::gl::array_t
enable	include/private/opengles/gl_context.h	/^    GLboolean   enable;$/;"	m	struct:android::gl::color_material_t
enable	include/private/opengles/gl_context.h	/^    GLboolean   enable;$/;"	m	struct:android::gl::culling_t
enable	include/private/opengles/gl_context.h	/^    GLboolean   enable;$/;"	m	struct:android::gl::light_t
enable	include/private/opengles/gl_context.h	/^    GLboolean   enable;$/;"	m	struct:android::gl::polygon_offset_t
enable	include/private/opengles/gl_context.h	/^    uint32_t        enable;$/;"	m	struct:android::gl::user_clip_planes_t
enabledLights	include/private/opengles/gl_context.h	/^    uint32_t            enabledLights;$/;"	m	struct:android::gl::lighting_t
end	include/private/opengles/gl_context.h	/^    GLfixed     end;$/;"	m	struct:android::gl::fog_t
equation	include/private/opengles/gl_context.h	/^    vec4_t      equation;$/;"	m	struct:android::gl::clip_plane_t
error	include/private/opengles/gl_context.h	/^    GLenum                  error;$/;"	m	struct:android::gl::ogles_context_t
eye	include/private/opengles/gl_context.h	/^    vec4_t          eye;$/;"	m	union:android::gl::vertex_t::__anon70
face	include/private/opengles/gl_context.h	/^    GLenum      face;$/;"	m	struct:android::gl::color_material_t
factor	include/private/opengles/gl_context.h	/^    GLfixed     factor;$/;"	m	struct:android::gl::polygon_offset_t
fetch	include/private/opengles/gl_context.h	/^    fetcher_t       fetch;$/;"	m	struct:android::gl::array_t
fetcher_t	include/private/opengles/gl_context.h	/^    typedef void (*fetcher_t)(ogles_context_t*, GLfixed*, const GLvoid*);$/;"	t	struct:android::gl::array_t
flags	include/private/opengles/gl_context.h	/^    uint32_t        flags;$/;"	m	struct:android::gl::array_machine_t
flags	include/private/opengles/gl_context.h	/^    uint32_t        flags;$/;"	m	struct:android::gl::transform_t
flags	include/private/opengles/gl_context.h	/^    uint32_t        flags;$/;"	m	struct:android::gl::vertex_t
fog	include/private/opengles/gl_context.h	/^    GLfixed         fog;$/;"	m	struct:android::gl::vertex_t
fog	include/private/opengles/gl_context.h	/^    GLfixed     (*fog)(ogles_context_t* c, GLfixed z);$/;"	m	struct:android::gl::fog_t
fog	include/private/opengles/gl_context.h	/^    fog_t                   fog;$/;"	m	struct:android::gl::ogles_context_t
fog_t	include/private/opengles/gl_context.h	/^struct fog_t {$/;"	s	namespace:android::gl
front	include/private/opengles/gl_context.h	/^    material_t          front;$/;"	m	struct:android::gl::lighting_t
frontFace	include/private/opengles/gl_context.h	/^    GLenum      frontFace;$/;"	m	struct:android::gl::culling_t
g	include/private/opengles/gl_context.h	/^        struct { GLfixed r, g, b, a; };$/;"	m	struct:android::gl::vec4_t::__anon65::__anon67
g	include/private/opengles/gl_context.h	/^        struct { GLfixed r, g, b; };$/;"	m	struct:android::gl::vec3_t::__anon61::__anon63
get	include/private/opengles/gl_context.h	/^    static inline ogles_context_t* get() {$/;"	f	struct:android::gl::ogles_context_t
getGlThreadSpecific	include/private/opengles/gl_context.h	/^    inline ogles_context_t* getGlThreadSpecific() {$/;"	f	namespace:android::gl
ggl	include/private/opengles/gl_context.h	/^    GGLContext*         ggl;$/;"	m	struct:android::gl::texture_state_t
gl	include/private/opengles/gl_context.h	/^namespace gl {$/;"	n	namespace:android
h	include/private/opengles/gl_context.h	/^        GLsizei     h;$/;"	m	struct:android::gl::viewport_t::__anon79
h	include/private/opengles/gl_context.h	/^    GLsizei     h;$/;"	m	struct:android::gl::viewport_t
implicitAmbient	include/private/opengles/gl_context.h	/^    vec4_t      implicitAmbient;$/;"	m	struct:android::gl::light_t
implicitDiffuse	include/private/opengles/gl_context.h	/^    vec4_t      implicitDiffuse;$/;"	m	struct:android::gl::light_t
implicitSceneEmissionAndAmbient	include/private/opengles/gl_context.h	/^    vec4_t              implicitSceneEmissionAndAmbient;$/;"	m	struct:android::gl::lighting_t
implicitSpecular	include/private/opengles/gl_context.h	/^    vec4_t      implicitSpecular;$/;"	m	struct:android::gl::light_t
index	include/private/opengles/gl_context.h	/^    size_t          index;  \/\/ cache tag, and vertex index$/;"	m	struct:android::gl::vertex_t
indicesType	include/private/opengles/gl_context.h	/^    GLenum          indicesType;$/;"	m	struct:android::gl::array_machine_t
invEndMinusStart	include/private/opengles/gl_context.h	/^    GLfixed     invEndMinusStart;$/;"	m	struct:android::gl::fog_t
isRigidBody	include/private/opengles/gl_context.h	/^    inline bool isRigidBody() const {$/;"	f	struct:android::gl::matrix_stack_t
lerp	include/private/opengles/gl_context.h	/^    compute_iterators_t     lerp;           __attribute__((aligned(32)));$/;"	m	struct:android::gl::ogles_context_t
lightModel	include/private/opengles/gl_context.h	/^    light_model_t       lightModel;$/;"	m	struct:android::gl::lighting_t
lightTriangle	include/private/opengles/gl_context.h	/^    void (*lightTriangle)(ogles_context_t* c,$/;"	m	struct:android::gl::lighting_t
lightVertex	include/private/opengles/gl_context.h	/^    void (*lightVertex)(ogles_context_t* c, vertex_t* v);$/;"	m	struct:android::gl::lighting_t
light_fct_t	include/private/opengles/gl_context.h	/^    typedef void (*light_fct_t)(ogles_context_t*, vertex_t*);$/;"	t	struct:android::gl::lighting_t
light_model_t	include/private/opengles/gl_context.h	/^struct light_model_t {$/;"	s	namespace:android::gl
light_t	include/private/opengles/gl_context.h	/^struct light_t {$/;"	s	namespace:android::gl
lighting	include/private/opengles/gl_context.h	/^    lighting_t              lighting;$/;"	m	struct:android::gl::ogles_context_t
lighting_t	include/private/opengles/gl_context.h	/^struct lighting_t {$/;"	s	namespace:android::gl
lights	include/private/opengles/gl_context.h	/^    light_t             lights[OGLES_MAX_LIGHTS];$/;"	m	struct:android::gl::lighting_t
line	include/private/opengles/gl_context.h	/^    line_width_t            line;$/;"	m	struct:android::gl::ogles_context_t
line_width_t	include/private/opengles/gl_context.h	/^struct line_width_t {$/;"	s	namespace:android::gl
locked	include/private/opengles/gl_context.h	/^    uint8_t         locked;$/;"	m	struct:android::gl::vertex_t
m	include/private/opengles/gl_context.h	/^    GLfixed m[16];$/;"	m	struct:android::gl::matrixx_t
m	include/private/opengles/gl_context.h	/^    GLfloat     m[16];$/;"	m	struct:android::gl::matrixf_t
m_area	include/private/opengles/gl_context.h	/^    GGLcoord m_area;$/;"	m	struct:android::gl::compute_iterators_t
m_area_scale	include/private/opengles/gl_context.h	/^    uint8_t m_area_scale;$/;"	m	struct:android::gl::compute_iterators_t
m_dx01	include/private/opengles/gl_context.h	/^    GGLcoord m_dx01, m_dy10, m_dx20, m_dy02;$/;"	m	struct:android::gl::compute_iterators_t
m_dx20	include/private/opengles/gl_context.h	/^    GGLcoord m_dx01, m_dy10, m_dx20, m_dy02;$/;"	m	struct:android::gl::compute_iterators_t
m_dy02	include/private/opengles/gl_context.h	/^    GGLcoord m_dx01, m_dy10, m_dx20, m_dy02;$/;"	m	struct:android::gl::compute_iterators_t
m_dy10	include/private/opengles/gl_context.h	/^    GGLcoord m_dx01, m_dy10, m_dx20, m_dy02;$/;"	m	struct:android::gl::compute_iterators_t
m_reserved	include/private/opengles/gl_context.h	/^    uint8_t m_reserved[2];$/;"	m	struct:android::gl::compute_iterators_t
m_scale	include/private/opengles/gl_context.h	/^    uint8_t m_scale;$/;"	m	struct:android::gl::compute_iterators_t
m_x0	include/private/opengles/gl_context.h	/^    GGLcoord m_x0, m_y0;$/;"	m	struct:android::gl::compute_iterators_t
m_y0	include/private/opengles/gl_context.h	/^    GGLcoord m_x0, m_y0;$/;"	m	struct:android::gl::compute_iterators_t
material_t	include/private/opengles/gl_context.h	/^struct material_t {$/;"	s	namespace:android::gl
matrix	include/private/opengles/gl_context.h	/^    matrixf_t       matrix;$/;"	m	struct:android::gl::vp_transform_t
matrix	include/private/opengles/gl_context.h	/^    matrixx_t       matrix;$/;"	m	struct:android::gl::transform_t
matrixMode	include/private/opengles/gl_context.h	/^    GLenum              matrixMode;$/;"	m	struct:android::gl::transform_state_t
matrix_stack_t	include/private/opengles/gl_context.h	/^struct matrix_stack_t {$/;"	s	namespace:android::gl
matrixf_t	include/private/opengles/gl_context.h	/^struct matrixf_t {$/;"	s	namespace:android::gl
matrixx_t	include/private/opengles/gl_context.h	/^struct matrixx_t {$/;"	s	namespace:android::gl
max	include/private/opengles/gl_context.h	/^inline T max(T a, T b) {$/;"	f	namespace:android::gl
max	include/private/opengles/gl_context.h	/^inline T max(T a, T b, T c) {$/;"	f	namespace:android::gl
maxDepth	include/private/opengles/gl_context.h	/^    uint8_t         maxDepth;$/;"	m	struct:android::gl::matrix_stack_t
maxScale	include/private/opengles/gl_context.h	/^    int32_t                 maxScale;$/;"	m	struct:android::gl::copybits_context_t
min	include/private/opengles/gl_context.h	/^inline T min(T a, T b) {$/;"	f	namespace:android::gl
min	include/private/opengles/gl_context.h	/^inline T min(T a, T b, T c) {$/;"	f	namespace:android::gl
min	include/private/opengles/gl_context.h	/^inline T min(T a, T b, T c, T d) {$/;"	f	namespace:android::gl
minScale	include/private/opengles/gl_context.h	/^    int32_t                 minScale;$/;"	m	struct:android::gl::copybits_context_t
misses	include/private/opengles/gl_context.h	/^    uint32_t        misses;$/;"	m	struct:android::gl::vertex_cache_t
mode	include/private/opengles/gl_context.h	/^    GLenum      mode;$/;"	m	struct:android::gl::color_material_t
mode	include/private/opengles/gl_context.h	/^    GLenum      mode;$/;"	m	struct:android::gl::fog_t
modelview	include/private/opengles/gl_context.h	/^    matrix_stack_t      modelview;$/;"	m	struct:android::gl::transform_state_t
mru	include/private/opengles/gl_context.h	/^    uint8_t         mru;$/;"	m	struct:android::gl::vertex_t
mv_transform	include/private/opengles/gl_context.h	/^    void (*mv_transform)(transform_t const*, vec4_t*, vec4_t const*);$/;"	m	struct:android::gl::array_machine_t
mvit4	include/private/opengles/gl_context.h	/^    transform_t         mvit4;$/;"	m	struct:android::gl::transform_state_t
mvp	include/private/opengles/gl_context.h	/^    transform_t         mvp     __attribute__((aligned(32)));$/;"	m	struct:android::gl::transform_state_t
mvp4	include/private/opengles/gl_context.h	/^    transform_t         mvp4;$/;"	m	struct:android::gl::transform_state_t
mvp_transform	include/private/opengles/gl_context.h	/^    void (*mvp_transform)(transform_t const*, vec4_t*, vec4_t const*);$/;"	m	struct:android::gl::array_machine_t
mvui	include/private/opengles/gl_context.h	/^    mvui_transform_t    mvui;$/;"	m	struct:android::gl::transform_state_t
mvui_transform_t	include/private/opengles/gl_context.h	/^struct mvui_transform_t : public transform_t$/;"	s	namespace:android::gl
name	include/private/opengles/gl_context.h	/^    GLuint              name;$/;"	m	struct:android::gl::texture_unit_t
normal	include/private/opengles/gl_context.h	/^    array_t         normal;$/;"	m	struct:android::gl::array_machine_t
normalizedObjPosition	include/private/opengles/gl_context.h	/^    vec4_t      normalizedObjPosition;$/;"	m	struct:android::gl::light_t
normalizedSpotDir	include/private/opengles/gl_context.h	/^    vec4_t      normalizedSpotDir;$/;"	m	struct:android::gl::light_t
obj	include/private/opengles/gl_context.h	/^    vec4_t          obj;$/;"	m	union:android::gl::vertex_t::__anon70
objPosition	include/private/opengles/gl_context.h	/^    vec4_t      objPosition;$/;"	m	struct:android::gl::light_t
objViewer	include/private/opengles/gl_context.h	/^    vec4_t              objViewer;$/;"	m	struct:android::gl::lighting_t
ogles_context_t	include/private/opengles/gl_context.h	/^struct ogles_context_t {$/;"	s	namespace:android::gl
ops	include/private/opengles/gl_context.h	/^    uint32_t        ops;$/;"	m	struct:android::gl::transform_t
ops	include/private/opengles/gl_context.h	/^    uint8_t         *ops;$/;"	m	struct:android::gl::matrix_stack_t
packAlignment	include/private/opengles/gl_context.h	/^    uint8_t             packAlignment;$/;"	m	struct:android::gl::texture_state_t
pad	include/private/opengles/gl_context.h	/^    GLboolean       pad;$/;"	m	struct:android::gl::array_t
perspective	include/private/opengles/gl_context.h	/^    uint32_t                perspective : 1;$/;"	m	struct:android::gl::ogles_context_t
perspective	include/private/opengles/gl_context.h	/^    void (*perspective)(ogles_context_t*c, vertex_t* v);$/;"	m	struct:android::gl::array_machine_t
physical_pointer	include/private/opengles/gl_context.h	/^    GLvoid const*   physical_pointer;$/;"	m	struct:android::gl::array_t
plane	include/private/opengles/gl_context.h	/^    clip_plane_t    plane[OGLES_MAX_CLIP_PLANES];$/;"	m	struct:android::gl::user_clip_planes_t
point	include/private/opengles/gl_context.h	/^    point_size_t            point;$/;"	m	struct:android::gl::ogles_context_t
point2	include/private/opengles/gl_context.h	/^            void (*point2)(transform_t const* t, vec4_t*, vec4_t const*);$/;"	m	struct:android::gl::transform_t::__anon74::__anon75
point3	include/private/opengles/gl_context.h	/^            void (*point3)(transform_t const* t, vec4_t*, vec4_t const*);$/;"	m	struct:android::gl::transform_t::__anon74::__anon75
point4	include/private/opengles/gl_context.h	/^            void (*point4)(transform_t const* t, vec4_t*, vec4_t const*);$/;"	m	struct:android::gl::transform_t::__anon74::__anon75
point_size_t	include/private/opengles/gl_context.h	/^struct point_size_t {$/;"	s	namespace:android::gl
pointer	include/private/opengles/gl_context.h	/^    GLvoid const*   pointer;$/;"	m	struct:android::gl::array_t
pointv	include/private/opengles/gl_context.h	/^        void (*pointv[3])(transform_t const* t, vec4_t*, vec4_t const*);$/;"	m	union:android::gl::transform_t::__anon74
polygonOffset	include/private/opengles/gl_context.h	/^    polygon_offset_t        polygonOffset;$/;"	m	struct:android::gl::ogles_context_t
polygon_offset_t	include/private/opengles/gl_context.h	/^struct polygon_offset_t {$/;"	s	namespace:android::gl
position	include/private/opengles/gl_context.h	/^    vec4_t      position;       \/\/ position in eye space$/;"	m	struct:android::gl::light_t
prims	include/private/opengles/gl_context.h	/^    prims_t                 prims;$/;"	m	struct:android::gl::ogles_context_t
prims_t	include/private/opengles/gl_context.h	/^struct prims_t {$/;"	s	namespace:android::gl
projection	include/private/opengles/gl_context.h	/^    matrix_stack_t      projection;$/;"	m	struct:android::gl::transform_state_t
r	include/private/opengles/gl_context.h	/^        struct { GLfixed r, g, b, a; };$/;"	m	struct:android::gl::vec4_t::__anon65::__anon67
r	include/private/opengles/gl_context.h	/^        struct { GLfixed r, g, b; };$/;"	m	struct:android::gl::vec3_t::__anon61::__anon63
rConstAttenuation	include/private/opengles/gl_context.h	/^    GLfixed     rConstAttenuation;$/;"	m	struct:android::gl::light_t
rasterizer	include/private/opengles/gl_context.h	/^    context_t               rasterizer;$/;"	m	struct:android::gl::ogles_context_t
renderLine	include/private/opengles/gl_context.h	/^    void (*renderLine)(GL, vertex_t*, vertex_t*);$/;"	m	struct:android::gl::prims_t
renderPoint	include/private/opengles/gl_context.h	/^    void (*renderPoint)(GL, vertex_t*);$/;"	m	struct:android::gl::prims_t
renderTriangle	include/private/opengles/gl_context.h	/^    void (*renderTriangle)(GL, vertex_t*, vertex_t*, vertex_t*);$/;"	m	struct:android::gl::prims_t
rescaleNormals	include/private/opengles/gl_context.h	/^    GLenum              rescaleNormals;$/;"	m	struct:android::gl::transform_state_t
reserved	include/private/opengles/gl_context.h	/^    uint8_t         reserved;$/;"	m	struct:android::gl::matrix_stack_t
reserved	include/private/opengles/gl_context.h	/^    uint8_t         reserved[2];$/;"	m	struct:android::gl::vertex_t
reserved1	include/private/opengles/gl_context.h	/^    uint32_t        reserved1[4];$/;"	m	struct:android::gl::vertex_t
scissor	include/private/opengles/gl_context.h	/^    } scissor;$/;"	m	struct:android::gl::viewport_t	typeref:struct:android::gl::viewport_t::__anon79
sequence	include/private/opengles/gl_context.h	/^    uint32_t        sequence;$/;"	m	struct:android::gl::vertex_cache_t
setGlThreadSpecific	include/private/opengles/gl_context.h	/^    inline void setGlThreadSpecific(ogles_context_t *value) {$/;"	f	namespace:android::gl
shadeModel	include/private/opengles/gl_context.h	/^    GLenum              shadeModel;$/;"	m	struct:android::gl::lighting_t
shininess	include/private/opengles/gl_context.h	/^    GLfixed     shininess;$/;"	m	struct:android::gl::material_t
size	include/private/opengles/gl_context.h	/^    GGLcoord    size;$/;"	m	struct:android::gl::point_size_t
size	include/private/opengles/gl_context.h	/^    GLint           size;$/;"	m	struct:android::gl::array_t
smooth	include/private/opengles/gl_context.h	/^    GLboolean   smooth;$/;"	m	struct:android::gl::line_width_t
smooth	include/private/opengles/gl_context.h	/^    GLboolean   smooth;$/;"	m	struct:android::gl::point_size_t
specular	include/private/opengles/gl_context.h	/^    vec4_t      specular;$/;"	m	struct:android::gl::light_t
specular	include/private/opengles/gl_context.h	/^    vec4_t      specular;$/;"	m	struct:android::gl::material_t
spotCutoff	include/private/opengles/gl_context.h	/^    GLfixed     spotCutoff;$/;"	m	struct:android::gl::light_t
spotCutoffCosine	include/private/opengles/gl_context.h	/^    GLfixed     spotCutoffCosine;$/;"	m	struct:android::gl::light_t
spotDir	include/private/opengles/gl_context.h	/^    vec4_t      spotDir;$/;"	m	struct:android::gl::light_t
spotExp	include/private/opengles/gl_context.h	/^    GLfixed     spotExp;$/;"	m	struct:android::gl::light_t
stack	include/private/opengles/gl_context.h	/^    matrixf_t       *stack;$/;"	m	struct:android::gl::matrix_stack_t
start	include/private/opengles/gl_context.h	/^    GLfixed     start;$/;"	m	struct:android::gl::fog_t
startTime	include/private/opengles/gl_context.h	/^    int64_t         startTime;$/;"	m	struct:android::gl::vertex_cache_t
stride	include/private/opengles/gl_context.h	/^    GLsizei         stride;$/;"	m	struct:android::gl::array_t
surfaceManager	include/private/opengles/gl_context.h	/^    EGLSurfaceManager*      surfaceManager;$/;"	m	struct:android::gl::ogles_context_t
surfaceport	include/private/opengles/gl_context.h	/^    } surfaceport;$/;"	m	struct:android::gl::viewport_t	typeref:struct:android::gl::viewport_t::__anon78
swap	include/private/opengles/gl_context.h	/^static inline void swap(T& a, T& b) {$/;"	f	namespace:android::gl
tex_transform	include/private/opengles/gl_context.h	/^    void (*tex_transform[2])(transform_t const*, vec4_t*, vec4_t const*);$/;"	m	struct:android::gl::array_machine_t
texture	include/private/opengles/gl_context.h	/^    EGLTextureObject*   texture;$/;"	m	struct:android::gl::texture_unit_t
texture	include/private/opengles/gl_context.h	/^    array_t         texture[GGL_TEXTURE_UNIT_COUNT];$/;"	m	struct:android::gl::array_machine_t
texture	include/private/opengles/gl_context.h	/^    matrix_stack_t      texture[GGL_TEXTURE_UNIT_COUNT];$/;"	m	struct:android::gl::transform_state_t
texture	include/private/opengles/gl_context.h	/^    vec4_t          texture[GGL_TEXTURE_UNIT_COUNT];$/;"	m	struct:android::gl::vertex_t
texture_state_t	include/private/opengles/gl_context.h	/^struct texture_state_t$/;"	s	namespace:android::gl
texture_unit_t	include/private/opengles/gl_context.h	/^struct texture_unit_t {$/;"	s	namespace:android::gl
textures	include/private/opengles/gl_context.h	/^    texture_state_t         textures;$/;"	m	struct:android::gl::ogles_context_t
tmu	include/private/opengles/gl_context.h	/^    texture_unit_t      tmu[GGL_TEXTURE_UNIT_COUNT];$/;"	m	struct:android::gl::texture_state_t
tmu	include/private/opengles/gl_context.h	/^    uint8_t         tmu;$/;"	m	struct:android::gl::array_machine_t
top	include/private/opengles/gl_context.h	/^    const matrixf_t& top() const { return stack[depth]; }$/;"	f	struct:android::gl::matrix_stack_t
top	include/private/opengles/gl_context.h	/^    matrixf_t& top() { return stack[depth]; }$/;"	f	struct:android::gl::matrix_stack_t
top_ops	include/private/opengles/gl_context.h	/^    uint32_t top_ops() const { return ops[depth]; }$/;"	f	struct:android::gl::matrix_stack_t
total	include/private/opengles/gl_context.h	/^    uint32_t        total;$/;"	m	struct:android::gl::vertex_cache_t
transform	include/private/opengles/gl_context.h	/^    transform_t     transform;$/;"	m	struct:android::gl::matrix_stack_t
transform	include/private/opengles/gl_context.h	/^    transform_t     transform;$/;"	m	struct:android::gl::vp_transform_t
transformTextures	include/private/opengles/gl_context.h	/^    uint32_t                transformTextures : 1;$/;"	m	struct:android::gl::ogles_context_t
transform_state_t	include/private/opengles/gl_context.h	/^struct transform_state_t {$/;"	s	namespace:android::gl
transform_t	include/private/opengles/gl_context.h	/^struct transform_t {$/;"	s	namespace:android::gl
transforms	include/private/opengles/gl_context.h	/^    transform_state_t       transforms;$/;"	m	struct:android::gl::ogles_context_t
twoSide	include/private/opengles/gl_context.h	/^    GLboolean   twoSide;$/;"	m	struct:android::gl::light_model_t
type	include/private/opengles/gl_context.h	/^    uint16_t        type;$/;"	m	struct:android::gl::array_t
units	include/private/opengles/gl_context.h	/^    GLfixed     units;$/;"	m	struct:android::gl::polygon_offset_t
unpackAlignment	include/private/opengles/gl_context.h	/^    uint8_t             unpackAlignment;$/;"	m	struct:android::gl::texture_state_t
user_clip_planes_t	include/private/opengles/gl_context.h	/^struct user_clip_planes_t {$/;"	s	namespace:android::gl
v	include/private/opengles/gl_context.h	/^        GLfixed v[3];$/;"	m	union:android::gl::vec3_t::__anon61
v	include/private/opengles/gl_context.h	/^        GLfixed v[4];$/;"	m	union:android::gl::vec4_t::__anon65
vBuffer	include/private/opengles/gl_context.h	/^    vertex_t*       vBuffer;$/;"	m	struct:android::gl::vertex_cache_t
vCache	include/private/opengles/gl_context.h	/^    vertex_t*       vCache;$/;"	m	struct:android::gl::vertex_cache_t
vc	include/private/opengles/gl_context.h	/^    vertex_cache_t          vc;$/;"	m	struct:android::gl::ogles_context_t
vec3_t	include/private/opengles/gl_context.h	/^struct vec3_t {$/;"	s	namespace:android::gl
vec4_t	include/private/opengles/gl_context.h	/^struct vec4_t {$/;"	s	namespace:android::gl
vertex	include/private/opengles/gl_context.h	/^    array_t         vertex;$/;"	m	struct:android::gl::array_machine_t
vertex_cache_t	include/private/opengles/gl_context.h	/^struct vertex_cache_t {$/;"	s	namespace:android::gl
vertex_t	include/private/opengles/gl_context.h	/^struct vertex_t {$/;"	s	namespace:android::gl
viewport	include/private/opengles/gl_context.h	/^    viewport_t              viewport;$/;"	m	struct:android::gl::ogles_context_t
viewport_t	include/private/opengles/gl_context.h	/^struct viewport_t {$/;"	s	namespace:android::gl
vp_transform_t	include/private/opengles/gl_context.h	/^struct vp_transform_t {$/;"	s	namespace:android::gl
vpt	include/private/opengles/gl_context.h	/^    vp_transform_t      vpt     __attribute__((aligned(32)));$/;"	m	struct:android::gl::transform_state_t
w	include/private/opengles/gl_context.h	/^        GLsizei     w;$/;"	m	struct:android::gl::viewport_t::__anon79
w	include/private/opengles/gl_context.h	/^        struct { GLfixed x, y, z, w; };$/;"	m	struct:android::gl::vec4_t::__anon65::__anon66
w	include/private/opengles/gl_context.h	/^    GLsizei     w;$/;"	m	struct:android::gl::viewport_t
width	include/private/opengles/gl_context.h	/^    GGLcoord    width;$/;"	m	struct:android::gl::line_width_t
window	include/private/opengles/gl_context.h	/^    vec4_t          window;$/;"	m	struct:android::gl::vertex_t
x	include/private/opengles/gl_context.h	/^        GLint       x;$/;"	m	struct:android::gl::viewport_t::__anon78
x	include/private/opengles/gl_context.h	/^        GLint       x;$/;"	m	struct:android::gl::viewport_t::__anon79
x	include/private/opengles/gl_context.h	/^        struct { GLfixed x, y, z, w; };$/;"	m	struct:android::gl::vec4_t::__anon65::__anon66
x	include/private/opengles/gl_context.h	/^        struct { GLfixed x, y, z; };$/;"	m	struct:android::gl::vec3_t::__anon61::__anon62
x	include/private/opengles/gl_context.h	/^    GLint       x;$/;"	m	struct:android::gl::viewport_t
y	include/private/opengles/gl_context.h	/^        GLint       y;$/;"	m	struct:android::gl::viewport_t::__anon78
y	include/private/opengles/gl_context.h	/^        GLint       y;$/;"	m	struct:android::gl::viewport_t::__anon79
y	include/private/opengles/gl_context.h	/^        struct { GLfixed x, y, z, w; };$/;"	m	struct:android::gl::vec4_t::__anon65::__anon66
y	include/private/opengles/gl_context.h	/^        struct { GLfixed x, y, z; };$/;"	m	struct:android::gl::vec3_t::__anon61::__anon62
y	include/private/opengles/gl_context.h	/^    GLint       y;$/;"	m	struct:android::gl::viewport_t
z	include/private/opengles/gl_context.h	/^        struct { GLfixed x, y, z, w; };$/;"	m	struct:android::gl::vec4_t::__anon65::__anon66
z	include/private/opengles/gl_context.h	/^        struct { GLfixed x, y, z; };$/;"	m	struct:android::gl::vec3_t::__anon61::__anon62
zFar	include/private/opengles/gl_context.h	/^    GLfloat         zFar;$/;"	m	struct:android::gl::vp_transform_t
zNear	include/private/opengles/gl_context.h	/^    GLfloat         zNear;$/;"	m	struct:android::gl::vp_transform_t
ANDROID_GGL_CONTEXT_H	include/private/pixelflinger/ggl_context.h	18;"	d
CTA	include/private/pixelflinger/ggl_context.h	/^template<> struct CTA<true> { };$/;"	s	namespace:android
GGL_BETWEEN	include/private/pixelflinger/ggl_context.h	106;"	d
GGL_BUILD_NEEDS	include/private/pixelflinger/ggl_context.h	122;"	d
GGL_CB_STATE	include/private/pixelflinger/ggl_context.h	/^const int GGL_CB_STATE              = 0x00000002;$/;"	m	namespace:android
GGL_COLOR_BITS	include/private/pixelflinger/ggl_context.h	/^const int GGL_COLOR_BITS = 24;$/;"	m	namespace:android
GGL_CONTEXT	include/private/pixelflinger/ggl_context.h	103;"	d
GGL_DITHER_BITS	include/private/pixelflinger/ggl_context.h	/^const int GGL_DITHER_BITS = 6;  \/\/ dither weights stored on 6 bits$/;"	m	namespace:android
GGL_DITHER_MASK	include/private/pixelflinger/ggl_context.h	/^const int GGL_DITHER_MASK       = GGL_DITHER_ORDER-1;$/;"	m	namespace:android
GGL_DITHER_ORDER	include/private/pixelflinger/ggl_context.h	/^const int GGL_DITHER_ORDER      = (1<<GGL_DITHER_ORDER_SHIFT);$/;"	m	namespace:android
GGL_DITHER_ORDER_SHIFT	include/private/pixelflinger/ggl_context.h	/^const int GGL_DITHER_ORDER_SHIFT= 3;$/;"	m	namespace:android
GGL_DITHER_SIZE	include/private/pixelflinger/ggl_context.h	/^const int GGL_DITHER_SIZE       = GGL_DITHER_ORDER * GGL_DITHER_ORDER;$/;"	m	namespace:android
GGL_ENABLE_AA	include/private/pixelflinger/ggl_context.h	/^    GGL_ENABLE_AA           = 0x00000004,$/;"	e	enum:android::__anon51
GGL_ENABLE_ALPHA_TEST	include/private/pixelflinger/ggl_context.h	/^    GGL_ENABLE_ALPHA_TEST   = 0x00000010,$/;"	e	enum:android::__anon51
GGL_ENABLE_BLENDING	include/private/pixelflinger/ggl_context.h	/^    GGL_ENABLE_BLENDING     = 0x00000001,$/;"	e	enum:android::__anon51
GGL_ENABLE_DEPTH_TEST	include/private/pixelflinger/ggl_context.h	/^    GGL_ENABLE_DEPTH_TEST   = 0x00000080,$/;"	e	enum:android::__anon51
GGL_ENABLE_DITHER	include/private/pixelflinger/ggl_context.h	/^    GGL_ENABLE_DITHER       = 0x00000400,$/;"	e	enum:android::__anon51
GGL_ENABLE_FOG	include/private/pixelflinger/ggl_context.h	/^    GGL_ENABLE_FOG          = 0x00000800,$/;"	e	enum:android::__anon51
GGL_ENABLE_LOGIC_OP	include/private/pixelflinger/ggl_context.h	/^    GGL_ENABLE_LOGIC_OP     = 0x00000008,$/;"	e	enum:android::__anon51
GGL_ENABLE_POINT_AA_NICE	include/private/pixelflinger/ggl_context.h	/^    GGL_ENABLE_POINT_AA_NICE= 0x00001000$/;"	e	enum:android::__anon51
GGL_ENABLE_SCISSOR_TEST	include/private/pixelflinger/ggl_context.h	/^    GGL_ENABLE_SCISSOR_TEST = 0x00000020,$/;"	e	enum:android::__anon51
GGL_ENABLE_SMOOTH	include/private/pixelflinger/ggl_context.h	/^    GGL_ENABLE_SMOOTH       = 0x00000002,$/;"	e	enum:android::__anon51
GGL_ENABLE_STENCIL_TEST	include/private/pixelflinger/ggl_context.h	/^    GGL_ENABLE_STENCIL_TEST = 0x00000100,$/;"	e	enum:android::__anon51
GGL_ENABLE_TMUS	include/private/pixelflinger/ggl_context.h	/^    GGL_ENABLE_TMUS         = 0x00000040,$/;"	e	enum:android::__anon51
GGL_ENABLE_W	include/private/pixelflinger/ggl_context.h	/^    GGL_ENABLE_W            = 0x00000200,$/;"	e	enum:android::__anon51
GGL_HOST_TO_RGBA	include/private/pixelflinger/ggl_context.h	/^inline uint32_t GGL_HOST_TO_RGBA(uint32_t v) {$/;"	f	namespace:android
GGL_INIT_PROC	include/private/pixelflinger/ggl_context.h	105;"	d
GGL_NEED	include/private/pixelflinger/ggl_context.h	129;"	d
GGL_NEEDS_WRAP_11	include/private/pixelflinger/ggl_context.h	/^const int GGL_NEEDS_WRAP_11             = 2;$/;"	m	namespace:android
GGL_NEEDS_WRAP_CLAMP_TO_EDGE	include/private/pixelflinger/ggl_context.h	/^const int GGL_NEEDS_WRAP_CLAMP_TO_EDGE  = 0;$/;"	m	namespace:android
GGL_NEEDS_WRAP_REPEAT	include/private/pixelflinger/ggl_context.h	/^const int GGL_NEEDS_WRAP_REPEAT         = 1;$/;"	m	namespace:android
GGL_NEED_MASK	include/private/pixelflinger/ggl_context.h	128;"	d
GGL_OFFSETOF	include/private/pixelflinger/ggl_context.h	104;"	d
GGL_PIXEL_PIPELINE_STATE	include/private/pixelflinger/ggl_context.h	/^const int GGL_PIXEL_PIPELINE_STATE  = 0x00000004;$/;"	m	namespace:android
GGL_READ_NEEDS	include/private/pixelflinger/ggl_context.h	125;"	d
GGL_RESERVE_NEEDS	include/private/pixelflinger/ggl_context.h	118;"	d
GGL_RGBA_TO_HOST	include/private/pixelflinger/ggl_context.h	/^inline uint32_t GGL_RGBA_TO_HOST(uint32_t v) {$/;"	f	namespace:android
GGL_SUBPIXEL_BITS	include/private/pixelflinger/ggl_context.h	/^const int GGL_SUBPIXEL_BITS = 4;$/;"	m	namespace:android
GGL_TEXTURE_UNIT_COUNT	include/private/pixelflinger/ggl_context.h	/^const int GGL_TEXTURE_UNIT_COUNT    = 2;$/;"	m	namespace:android
GGL_TMU_STATE	include/private/pixelflinger/ggl_context.h	/^const int GGL_TMU_STATE             = 0x00000001;$/;"	m	namespace:android
TRI_CEIL	include/private/pixelflinger/ggl_context.h	77;"	d
TRI_FLOOR	include/private/pixelflinger/ggl_context.h	76;"	d
TRI_FRAC	include/private/pixelflinger/ggl_context.h	75;"	d
TRI_FRACTION_BITS	include/private/pixelflinger/ggl_context.h	71;"	d
TRI_FROM_FIXED	include/private/pixelflinger/ggl_context.h	81;"	d
TRI_FROM_INT	include/private/pixelflinger/ggl_context.h	74;"	d
TRI_HALF	include/private/pixelflinger/ggl_context.h	73;"	d
TRI_ONE	include/private/pixelflinger/ggl_context.h	72;"	d
TRI_ROUDNING	include/private/pixelflinger/ggl_context.h	80;"	d
TRI_ROUND	include/private/pixelflinger/ggl_context.h	78;"	d
TRI_SNAP_NEXT_HALF	include/private/pixelflinger/ggl_context.h	83;"	d
TRI_SNAP_PREV_HALF	include/private/pixelflinger/ggl_context.h	84;"	d
a	include/private/pixelflinger/ggl_context.h	/^    GGLclampx           a;$/;"	m	struct:android::clear_state_t
a0	include/private/pixelflinger/ggl_context.h	/^	GGLcolor			a0;$/;"	m	struct:android::shade_t
activeTMU	include/private/pixelflinger/ggl_context.h	/^    texture_t*          activeTMU;$/;"	m	struct:android::context_t
activeTMUIndex	include/private/pixelflinger/ggl_context.h	/^    uint32_t            activeTMUIndex;$/;"	m	struct:android::context_t
alpha_separate	include/private/pixelflinger/ggl_context.h	/^	uint8_t				alpha_separate;$/;"	m	struct:android::blend_state_t
alpha_test	include/private/pixelflinger/ggl_context.h	/^    alpha_test_state_t  alpha_test;$/;"	m	struct:android::state_t
alpha_test_state_t	include/private/pixelflinger/ggl_context.h	/^struct alpha_test_state_t {$/;"	s	namespace:android
android	include/private/pixelflinger/ggl_context.h	/^namespace android {$/;"	n
aref	include/private/pixelflinger/ggl_context.h	/^    int32_t     aref;$/;"	m	struct:android::generated_vars_t
argb	include/private/pixelflinger/ggl_context.h	/^    } argb[4];$/;"	m	struct:android::generated_vars_t	typeref:struct:android::generated_vars_t::__anon60
b	include/private/pixelflinger/ggl_context.h	/^    GGLclampx           b;$/;"	m	struct:android::clear_state_t
b0	include/private/pixelflinger/ggl_context.h	/^	GGLcolor			b0;$/;"	m	struct:android::shade_t
base	include/private/pixelflinger/ggl_context.h	/^    void*               base;$/;"	m	struct:android::context_t
blend	include/private/pixelflinger/ggl_context.h	/^	blend_state_t		blend;$/;"	m	struct:android::state_t
blend_state_t	include/private/pixelflinger/ggl_context.h	/^struct blend_state_t {$/;"	s	namespace:android
bottom	include/private/pixelflinger/ggl_context.h	/^    uint32_t            bottom;$/;"	m	struct:android::scissor_t
buffers	include/private/pixelflinger/ggl_context.h	/^	framebuffer_t		buffers;$/;"	m	struct:android::state_t
c	include/private/pixelflinger/ggl_context.h	/^        int32_t c;$/;"	m	struct:android::generated_vars_t::__anon60
c	include/private/pixelflinger/ggl_context.h	/^    uint32_t    c[4];$/;"	m	struct:android::pixel_t
clear	include/private/pixelflinger/ggl_context.h	/^    clear_state_t       clear;$/;"	m	struct:android::state_t
clearValue	include/private/pixelflinger/ggl_context.h	/^    GGLclampx           clearValue;$/;"	m	struct:android::depth_test_state_t
clear_state_t	include/private/pixelflinger/ggl_context.h	/^struct clear_state_t {$/;"	s	namespace:android
color	include/private/pixelflinger/ggl_context.h	/^    surface_t           color;$/;"	m	struct:android::framebuffer_t
color	include/private/pixelflinger/ggl_context.h	/^    uint8_t             color;$/;"	m	struct:android::mask_state_t
color	include/private/pixelflinger/ggl_context.h	/^    uint8_t     color[4];$/;"	m	struct:android::fog_state_t
colorPacked	include/private/pixelflinger/ggl_context.h	/^    uint32_t            colorPacked;$/;"	m	struct:android::clear_state_t
compare_type	include/private/pixelflinger/ggl_context.h	/^inline int compare_type(const needs_t& lhs, const needs_t& rhs) {$/;"	f	namespace:android
context_t	include/private/pixelflinger/ggl_context.h	/^struct context_t {$/;"	s	namespace:android
coverage	include/private/pixelflinger/ggl_context.h	/^    int16_t             *coverage;$/;"	m	struct:android::framebuffer_t
coverageBufferSize	include/private/pixelflinger/ggl_context.h	/^    size_t              coverageBufferSize;$/;"	m	struct:android::framebuffer_t
dadx	include/private/pixelflinger/ggl_context.h	/^    GGLcolor            dadx;$/;"	m	struct:android::shade_t
dady	include/private/pixelflinger/ggl_context.h	/^    GGLcolor            dady;$/;"	m	struct:android::shade_t
data	include/private/pixelflinger/ggl_context.h	/^        uint8_t*			data;	$/;"	m	struct:android::surface_t::__anon52::__anon53
data	include/private/pixelflinger/ggl_context.h	/^    int32_t     data;$/;"	m	struct:android::generated_tex_vars_t
dbdx	include/private/pixelflinger/ggl_context.h	/^    GGLcolor            dbdx;$/;"	m	struct:android::shade_t
dbdy	include/private/pixelflinger/ggl_context.h	/^    GGLcolor            dbdy;$/;"	m	struct:android::shade_t
depth	include/private/pixelflinger/ggl_context.h	/^	surface_t			depth;$/;"	m	struct:android::framebuffer_t
depth	include/private/pixelflinger/ggl_context.h	/^    GGLclampx           depth;$/;"	m	struct:android::clear_state_t
depth	include/private/pixelflinger/ggl_context.h	/^    uint8_t             depth;$/;"	m	struct:android::mask_state_t
depthPacked	include/private/pixelflinger/ggl_context.h	/^    uint32_t            depthPacked;$/;"	m	struct:android::clear_state_t
depth_test	include/private/pixelflinger/ggl_context.h	/^    depth_test_state_t  depth_test;$/;"	m	struct:android::state_t
depth_test_state_t	include/private/pixelflinger/ggl_context.h	/^struct depth_test_state_t {$/;"	s	namespace:android
dfdx	include/private/pixelflinger/ggl_context.h	/^    GGLfixed            dfdx;$/;"	m	struct:android::shade_t
dfdx	include/private/pixelflinger/ggl_context.h	/^    int32_t     dfdx;$/;"	m	struct:android::generated_vars_t
dfdy	include/private/pixelflinger/ggl_context.h	/^    GGLfixed            dfdy;$/;"	m	struct:android::shade_t
dgdx	include/private/pixelflinger/ggl_context.h	/^    GGLcolor            dgdx;$/;"	m	struct:android::shade_t
dgdy	include/private/pixelflinger/ggl_context.h	/^    GGLcolor            dgdy;$/;"	m	struct:android::shade_t
dirty	include/private/pixelflinger/ggl_context.h	/^	uint8_t				dirty;$/;"	m	struct:android::texture_t
dirty	include/private/pixelflinger/ggl_context.h	/^        uint8_t				dirty;$/;"	m	struct:android::surface_t::__anon52::__anon53
dirty	include/private/pixelflinger/ggl_context.h	/^    uint32_t            dirty;$/;"	m	struct:android::clear_state_t
dirty	include/private/pixelflinger/ggl_context.h	/^    uint32_t            dirty;$/;"	m	struct:android::context_t
ditherMatrix	include/private/pixelflinger/ggl_context.h	/^    uint8_t             ditherMatrix[GGL_DITHER_SIZE] __attribute__((aligned(32)));$/;"	m	struct:android::context_t
drdx	include/private/pixelflinger/ggl_context.h	/^    GGLcolor            drdx;$/;"	m	struct:android::shade_t
drdy	include/private/pixelflinger/ggl_context.h	/^    GGLcolor            drdy;$/;"	m	struct:android::shade_t
dsdx	include/private/pixelflinger/ggl_context.h	/^            GGLfixed            dsdx;$/;"	m	struct:android::texture_iterators_t::__anon57::__anon58
dsdx	include/private/pixelflinger/ggl_context.h	/^    int32_t     dsdx;$/;"	m	struct:android::generated_tex_vars_t
dsdy	include/private/pixelflinger/ggl_context.h	/^            GGLfixed            dsdy;$/;"	m	struct:android::texture_iterators_t::__anon57::__anon58
dst	include/private/pixelflinger/ggl_context.h	/^	uint32_t			dst;$/;"	m	struct:android::blend_state_t
dst_alpha	include/private/pixelflinger/ggl_context.h	/^	uint32_t			dst_alpha;$/;"	m	struct:android::blend_state_t
dtdx	include/private/pixelflinger/ggl_context.h	/^            GGLfixed            dtdx;$/;"	m	struct:android::texture_iterators_t::__anon57::__anon58
dtdx	include/private/pixelflinger/ggl_context.h	/^    int32_t     dtdx;$/;"	m	struct:android::generated_tex_vars_t
dtdy	include/private/pixelflinger/ggl_context.h	/^            GGLfixed            dtdy;$/;"	m	struct:android::texture_iterators_t::__anon57::__anon58
dvdx	include/private/pixelflinger/ggl_context.h	/^            GGLfixed            dvdx;$/;"	m	struct:android::texture_iterators_t::__anon57::__anon59
dvdy	include/private/pixelflinger/ggl_context.h	/^            GGLfixed            dvdy;$/;"	m	struct:android::texture_iterators_t::__anon57::__anon59
dwdx	include/private/pixelflinger/ggl_context.h	/^    GGLfixed            dwdx;$/;"	m	struct:android::shade_t
dwdy	include/private/pixelflinger/ggl_context.h	/^    GGLfixed            dwdy;$/;"	m	struct:android::shade_t
dx	include/private/pixelflinger/ggl_context.h	/^            int32_t             dx;$/;"	m	struct:android::texture_shade_t::__anon54::__anon56
dx	include/private/pixelflinger/ggl_context.h	/^        int32_t dx;$/;"	m	struct:android::generated_vars_t::__anon60
dy	include/private/pixelflinger/ggl_context.h	/^            int32_t             dy;$/;"	m	struct:android::texture_shade_t::__anon54::__anon56
dzdx	include/private/pixelflinger/ggl_context.h	/^    GGLfixed32          dzdx;$/;"	m	struct:android::shade_t
dzdx	include/private/pixelflinger/ggl_context.h	/^    int32_t     dzdx;$/;"	m	struct:android::generated_vars_t
dzdy	include/private/pixelflinger/ggl_context.h	/^    GGLfixed32          dzdy;$/;"	m	struct:android::shade_t
enable	include/private/pixelflinger/ggl_context.h	/^	uint8_t				enable;$/;"	m	struct:android::texture_t
enabled_tmu	include/private/pixelflinger/ggl_context.h	/^    uint32_t            enabled_tmu;$/;"	m	struct:android::state_t
enables	include/private/pixelflinger/ggl_context.h	/^    uint32_t            enables;$/;"	m	struct:android::state_t
env	include/private/pixelflinger/ggl_context.h	/^    uint16_t            env;$/;"	m	struct:android::texture_t
env_color	include/private/pixelflinger/ggl_context.h	/^    uint8_t             env_color[4];$/;"	m	struct:android::texture_t
equation	include/private/pixelflinger/ggl_context.h	/^	uint8_t				equation;$/;"	m	struct:android::blend_state_t
error	include/private/pixelflinger/ggl_context.h	/^    GGLenum             error;$/;"	m	struct:android::context_t
f	include/private/pixelflinger/ggl_context.h	/^    int32_t     f;$/;"	m	struct:android::generated_vars_t
f0	include/private/pixelflinger/ggl_context.h	/^	uint32_t			f0;$/;"	m	struct:android::shade_t
fog	include/private/pixelflinger/ggl_context.h	/^    fog_state_t         fog;$/;"	m	struct:android::state_t
fog_state_t	include/private/pixelflinger/ggl_context.h	/^struct fog_state_t {$/;"	s	namespace:android
format	include/private/pixelflinger/ggl_context.h	/^        uint8_t				format;$/;"	m	struct:android::surface_t::__anon52::__anon53
formats	include/private/pixelflinger/ggl_context.h	/^    const GGLFormat*    formats;$/;"	m	struct:android::context_t
framebuffer_t	include/private/pixelflinger/ggl_context.h	/^struct framebuffer_t {$/;"	s	namespace:android
func	include/private/pixelflinger/ggl_context.h	/^    uint16_t            func;$/;"	m	struct:android::alpha_test_state_t
func	include/private/pixelflinger/ggl_context.h	/^    uint16_t            func;$/;"	m	struct:android::depth_test_state_t
g	include/private/pixelflinger/ggl_context.h	/^    GGLclampx           g;$/;"	m	struct:android::clear_state_t
g0	include/private/pixelflinger/ggl_context.h	/^	GGLcolor			g0;$/;"	m	struct:android::shade_t
generated_tex_vars_t	include/private/pixelflinger/ggl_context.h	/^struct generated_tex_vars_t {$/;"	s	namespace:android
generated_vars	include/private/pixelflinger/ggl_context.h	/^    generated_vars_t    generated_vars                __attribute__((aligned(32)));$/;"	m	struct:android::context_t
generated_vars_t	include/private/pixelflinger/ggl_context.h	/^struct generated_vars_t {$/;"	s	namespace:android
gglFixedToIteratedColor	include/private/pixelflinger/ggl_context.h	/^inline GGLcolor gglFixedToIteratedColor(GGLfixed c) {$/;"	f	namespace:android
ggl_blendfactor_to_needs	include/private/pixelflinger/ggl_context.h	/^inline uint32_t ggl_blendfactor_to_needs(uint32_t b) {$/;"	f	namespace:android
ggl_env_to_needs	include/private/pixelflinger/ggl_context.h	/^inline uint32_t ggl_env_to_needs(uint32_t e) {$/;"	f	namespace:android
ggl_likely	include/private/pixelflinger/ggl_context.h	108;"	d
ggl_needs_to_blendfactor	include/private/pixelflinger/ggl_context.h	/^inline uint32_t ggl_needs_to_blendfactor(uint32_t n) {$/;"	f	namespace:android
ggl_needs_to_env	include/private/pixelflinger/ggl_context.h	/^inline uint32_t ggl_needs_to_env(uint32_t n) {$/;"	f	namespace:android
ggl_unlikely	include/private/pixelflinger/ggl_context.h	109;"	d
ggl_wrap_to_needs	include/private/pixelflinger/ggl_context.h	/^inline uint32_t ggl_wrap_to_needs(uint32_t e) {$/;"	f	namespace:android
height	include/private/pixelflinger/ggl_context.h	/^        uint32_t			height;$/;"	m	struct:android::surface_t::__anon52::__anon53
height	include/private/pixelflinger/ggl_context.h	/^    uint32_t    height;$/;"	m	struct:android::generated_tex_vars_t
idsdx	include/private/pixelflinger/ggl_context.h	/^            int32_t             idsdx;$/;"	m	struct:android::texture_shade_t::__anon54::__anon55
idsdy	include/private/pixelflinger/ggl_context.h	/^            int32_t             idsdy;$/;"	m	struct:android::texture_shade_t::__anon54::__anon55
idtdx	include/private/pixelflinger/ggl_context.h	/^            int32_t             idtdx;$/;"	m	struct:android::texture_shade_t::__anon54::__anon55
idtdy	include/private/pixelflinger/ggl_context.h	/^            int32_t             idtdy;$/;"	m	struct:android::texture_shade_t::__anon54::__anon55
init_y	include/private/pixelflinger/ggl_context.h	/^    void                (*init_y)(context_t* c, int32_t y);$/;"	m	struct:android::context_t
is0	include/private/pixelflinger/ggl_context.h	/^            int32_t             is0;$/;"	m	struct:android::texture_shade_t::__anon54::__anon55
it0	include/private/pixelflinger/ggl_context.h	/^            int32_t             it0;$/;"	m	struct:android::texture_shade_t::__anon54::__anon55
iterators	include/private/pixelflinger/ggl_context.h	/^	iterators_t         iterators;$/;"	m	struct:android::context_t
iterators	include/private/pixelflinger/ggl_context.h	/^	texture_iterators_t	iterators;$/;"	m	struct:android::texture_t
iterators_t	include/private/pixelflinger/ggl_context.h	/^struct iterators_t {$/;"	s	namespace:android
lb	include/private/pixelflinger/ggl_context.h	/^    int32_t     lb;$/;"	m	struct:android::generated_vars_t
left	include/private/pixelflinger/ggl_context.h	/^    uint32_t            left;$/;"	m	struct:android::scissor_t
logic_op	include/private/pixelflinger/ggl_context.h	/^    logic_op_state_t    logic_op;$/;"	m	struct:android::state_t
logic_op_state_t	include/private/pixelflinger/ggl_context.h	/^struct logic_op_state_t {$/;"	s	namespace:android
mag_filter	include/private/pixelflinger/ggl_context.h	/^	uint16_t            mag_filter;$/;"	m	struct:android::texture_t
mask	include/private/pixelflinger/ggl_context.h	/^    mask_state_t        mask;$/;"	m	struct:android::state_t
mask	include/private/pixelflinger/ggl_context.h	/^    needs_t     mask;$/;"	m	struct:android::needs_filter_t
mask_state_t	include/private/pixelflinger/ggl_context.h	/^struct mask_state_t {$/;"	s	namespace:android
match	include/private/pixelflinger/ggl_context.h	/^int needs_t::match(const needs_filter_t& filter) {$/;"	f	class:android::needs_t
min_filter	include/private/pixelflinger/ggl_context.h	/^	uint16_t            min_filter;$/;"	m	struct:android::texture_t
n	include/private/pixelflinger/ggl_context.h	/^    uint32_t    n;$/;"	m	struct:android::needs_t
needs	include/private/pixelflinger/ggl_context.h	/^    needs_t             needs;$/;"	m	struct:android::state_t
needs_filter_t	include/private/pixelflinger/ggl_context.h	/^struct needs_filter_t {$/;"	s	namespace:android
needs_t	include/private/pixelflinger/ggl_context.h	/^struct needs_t {$/;"	s	namespace:android
opcode	include/private/pixelflinger/ggl_context.h	/^    uint16_t            opcode;$/;"	m	struct:android::logic_op_state_t
operation	include/private/pixelflinger/ggl_context.h	/^	uint8_t				operation;$/;"	m	struct:android::blend_state_t
operator !=	include/private/pixelflinger/ggl_context.h	/^    inline bool operator != (const needs_t& rhs) const {$/;"	f	struct:android::needs_t
operator ==	include/private/pixelflinger/ggl_context.h	/^    inline bool operator == (const needs_t& rhs) const {$/;"	f	struct:android::needs_t
p	include/private/pixelflinger/ggl_context.h	/^    uint32_t    p;$/;"	m	struct:android::needs_t
packed	include/private/pixelflinger/ggl_context.h	/^    uint32_t            packed;$/;"	m	struct:android::context_t
packed8888	include/private/pixelflinger/ggl_context.h	/^    uint32_t            packed8888;$/;"	m	struct:android::context_t
pad	include/private/pixelflinger/ggl_context.h	/^        uint8_t				pad[2];$/;"	m	struct:android::surface_t::__anon52::__anon53
pixel_t	include/private/pixelflinger/ggl_context.h	/^struct pixel_t {$/;"	s	namespace:android
procs	include/private/pixelflinger/ggl_context.h	/^	GGLContext          procs;$/;"	m	struct:android::context_t
r	include/private/pixelflinger/ggl_context.h	/^    GGLclampx           r;$/;"	m	struct:android::clear_state_t
r0	include/private/pixelflinger/ggl_context.h	/^	GGLcolor			r0;$/;"	m	struct:android::shade_t
raster	include/private/pixelflinger/ggl_context.h	/^    raster_t            raster;$/;"	m	struct:android::state_t
raster_t	include/private/pixelflinger/ggl_context.h	/^struct raster_t {$/;"	s	namespace:android
read	include/private/pixelflinger/ggl_context.h	/^    surface_t           read;$/;"	m	struct:android::framebuffer_t
read	include/private/pixelflinger/ggl_context.h	/^    void                (*read) (const surface_t* s, context_t* c,$/;"	m	struct:android::surface_t
rect	include/private/pixelflinger/ggl_context.h	/^    void                (*rect)(context_t* c, size_t yc);$/;"	m	struct:android::context_t
ref	include/private/pixelflinger/ggl_context.h	/^    GGLcolor            ref;$/;"	m	struct:android::alpha_test_state_t
reserved	include/private/pixelflinger/ggl_context.h	/^	uint8_t				reserved;$/;"	m	struct:android::blend_state_t
reserved	include/private/pixelflinger/ggl_context.h	/^        uint32_t            reserved;$/;"	m	struct:android::surface_t::__anon52::__anon53
right	include/private/pixelflinger/ggl_context.h	/^    uint32_t            right;$/;"	m	struct:android::scissor_t
rt	include/private/pixelflinger/ggl_context.h	/^    int32_t     rt;$/;"	m	struct:android::generated_vars_t
s	include/private/pixelflinger/ggl_context.h	/^        GGLSurface      s;$/;"	m	union:android::surface_t::__anon52
s	include/private/pixelflinger/ggl_context.h	/^    uint8_t     s[4];$/;"	m	struct:android::pixel_t
s_coord	include/private/pixelflinger/ggl_context.h	/^	uint32_t			s_coord;$/;"	m	struct:android::texture_t
s_wrap	include/private/pixelflinger/ggl_context.h	/^	uint16_t			s_wrap;$/;"	m	struct:android::texture_t
scale	include/private/pixelflinger/ggl_context.h	/^            int                 scale;$/;"	m	struct:android::texture_iterators_t::__anon57::__anon59
scale	include/private/pixelflinger/ggl_context.h	/^            int                 scale;$/;"	m	struct:android::texture_shade_t::__anon54::__anon56
scanline	include/private/pixelflinger/ggl_context.h	/^	void                (*scanline)(context_t* c);$/;"	m	struct:android::context_t
scanline_as	include/private/pixelflinger/ggl_context.h	/^    Assembly*           scanline_as;$/;"	m	struct:android::context_t
scissor	include/private/pixelflinger/ggl_context.h	/^    scissor_t           scissor;$/;"	m	struct:android::state_t
scissor_t	include/private/pixelflinger/ggl_context.h	/^struct scissor_t {$/;"	s	namespace:android
shade	include/private/pixelflinger/ggl_context.h	/^    shade_t             shade;$/;"	m	struct:android::context_t
shade	include/private/pixelflinger/ggl_context.h	/^    texture_shade_t     shade;$/;"	m	struct:android::texture_t
shade_t	include/private/pixelflinger/ggl_context.h	/^struct shade_t {$/;"	s	namespace:android
span	include/private/pixelflinger/ggl_context.h	/^    void                (*span)(context_t* c);$/;"	m	struct:android::context_t
spill	include/private/pixelflinger/ggl_context.h	/^    int32_t     spill[2];$/;"	m	struct:android::generated_tex_vars_t
spill	include/private/pixelflinger/ggl_context.h	/^    int32_t     spill[3];$/;"	m	struct:android::generated_vars_t
src	include/private/pixelflinger/ggl_context.h	/^	uint32_t			src;$/;"	m	struct:android::blend_state_t
src_alpha	include/private/pixelflinger/ggl_context.h	/^	uint32_t			src_alpha;$/;"	m	struct:android::blend_state_t
sscale	include/private/pixelflinger/ggl_context.h	/^            int                 sscale;$/;"	m	struct:android::texture_iterators_t::__anon57::__anon58
sscale	include/private/pixelflinger/ggl_context.h	/^            int                 sscale;$/;"	m	struct:android::texture_shade_t::__anon54::__anon55
st	include/private/pixelflinger/ggl_context.h	/^        } st[2];$/;"	m	union:android::texture_iterators_t::__anon57	typeref:struct:android::texture_iterators_t::__anon57::__anon59
st	include/private/pixelflinger/ggl_context.h	/^        } st[2];$/;"	m	union:android::texture_shade_t::__anon54	typeref:struct:android::texture_shade_t::__anon54::__anon56
state	include/private/pixelflinger/ggl_context.h	/^	state_t             state;$/;"	m	struct:android::context_t
state_t	include/private/pixelflinger/ggl_context.h	/^struct state_t {$/;"	s	namespace:android
stencil	include/private/pixelflinger/ggl_context.h	/^	surface_t			stencil;$/;"	m	struct:android::framebuffer_t
stencil	include/private/pixelflinger/ggl_context.h	/^    GGLint              stencil;$/;"	m	struct:android::clear_state_t
stencil	include/private/pixelflinger/ggl_context.h	/^    uint32_t            stencil;$/;"	m	struct:android::mask_state_t
stencilPacked	include/private/pixelflinger/ggl_context.h	/^    uint32_t            stencilPacked;$/;"	m	struct:android::clear_state_t
step_y	include/private/pixelflinger/ggl_context.h	/^	void                (*step_y)(context_t* c);$/;"	m	struct:android::context_t
stride	include/private/pixelflinger/ggl_context.h	/^        int32_t             stride;$/;"	m	struct:android::surface_t::__anon52::__anon53
stride	include/private/pixelflinger/ggl_context.h	/^    uint32_t    stride;$/;"	m	struct:android::generated_tex_vars_t
surface	include/private/pixelflinger/ggl_context.h	/^	surface_t			surface;$/;"	m	struct:android::texture_t
surface_t	include/private/pixelflinger/ggl_context.h	/^struct surface_t {$/;"	s	namespace:android
t	include/private/pixelflinger/ggl_context.h	/^    uint32_t    t[GGL_TEXTURE_UNIT_COUNT];$/;"	m	struct:android::needs_t
t_coord	include/private/pixelflinger/ggl_context.h	/^	uint32_t            t_coord;$/;"	m	struct:android::texture_t
t_wrap	include/private/pixelflinger/ggl_context.h	/^	uint16_t            t_wrap;$/;"	m	struct:android::texture_t
texture	include/private/pixelflinger/ggl_context.h	/^	texture_t			texture[GGL_TEXTURE_UNIT_COUNT];$/;"	m	struct:android::state_t
texture	include/private/pixelflinger/ggl_context.h	/^    generated_tex_vars_t    texture[GGL_TEXTURE_UNIT_COUNT];$/;"	m	struct:android::generated_vars_t
texture_iterators_t	include/private/pixelflinger/ggl_context.h	/^struct texture_iterators_t {$/;"	s	namespace:android
texture_shade_t	include/private/pixelflinger/ggl_context.h	/^struct texture_shade_t {$/;"	s	namespace:android
texture_t	include/private/pixelflinger/ggl_context.h	/^struct texture_t {$/;"	s	namespace:android
top	include/private/pixelflinger/ggl_context.h	/^    uint32_t            top;$/;"	m	struct:android::scissor_t
tscale	include/private/pixelflinger/ggl_context.h	/^            int                 tscale;$/;"	m	struct:android::texture_iterators_t::__anon57::__anon58
tscale	include/private/pixelflinger/ggl_context.h	/^            int                 tscale;$/;"	m	struct:android::texture_shade_t::__anon54::__anon55
user_bottom	include/private/pixelflinger/ggl_context.h	/^    uint32_t            user_bottom;$/;"	m	struct:android::scissor_t
user_left	include/private/pixelflinger/ggl_context.h	/^    uint32_t            user_left;$/;"	m	struct:android::scissor_t
user_right	include/private/pixelflinger/ggl_context.h	/^    uint32_t            user_right;$/;"	m	struct:android::scissor_t
user_top	include/private/pixelflinger/ggl_context.h	/^    uint32_t            user_top;$/;"	m	struct:android::scissor_t
v	include/private/pixelflinger/ggl_context.h	/^            int32_t             v;$/;"	m	struct:android::texture_shade_t::__anon54::__anon56
value	include/private/pixelflinger/ggl_context.h	/^    needs_t     value;$/;"	m	struct:android::needs_filter_t
w0	include/private/pixelflinger/ggl_context.h	/^	GGLfixed            w0;$/;"	m	struct:android::shade_t
width	include/private/pixelflinger/ggl_context.h	/^        uint32_t			width;$/;"	m	struct:android::surface_t::__anon52::__anon53
width	include/private/pixelflinger/ggl_context.h	/^    uint32_t    width;$/;"	m	struct:android::generated_tex_vars_t
write	include/private/pixelflinger/ggl_context.h	/^    void                (*write)(const surface_t* s, context_t* c,$/;"	m	struct:android::surface_t
x	include/private/pixelflinger/ggl_context.h	/^    GGLfixed            x;$/;"	m	struct:android::raster_t
xl	include/private/pixelflinger/ggl_context.h	/^	int32_t             xl;$/;"	m	struct:android::iterators_t
xr	include/private/pixelflinger/ggl_context.h	/^	int32_t             xr;$/;"	m	struct:android::iterators_t
y	include/private/pixelflinger/ggl_context.h	/^    GGLfixed            y;$/;"	m	struct:android::raster_t
y	include/private/pixelflinger/ggl_context.h	/^    int32_t             y;$/;"	m	struct:android::iterators_t
ydady	include/private/pixelflinger/ggl_context.h	/^	GGLcolor			ydady;$/;"	m	struct:android::iterators_t
ydbdy	include/private/pixelflinger/ggl_context.h	/^	GGLcolor			ydbdy;$/;"	m	struct:android::iterators_t
ydfdy	include/private/pixelflinger/ggl_context.h	/^	GGLfixed			ydfdy;$/;"	m	struct:android::iterators_t
ydgdy	include/private/pixelflinger/ggl_context.h	/^	GGLcolor			ydgdy;$/;"	m	struct:android::iterators_t
ydrdy	include/private/pixelflinger/ggl_context.h	/^	GGLcolor			ydrdy;$/;"	m	struct:android::iterators_t
ydsdy	include/private/pixelflinger/ggl_context.h	/^            GGLfixed			ydsdy;$/;"	m	struct:android::texture_iterators_t::__anon57::__anon58
ydtdy	include/private/pixelflinger/ggl_context.h	/^            GGLfixed			ydtdy;$/;"	m	struct:android::texture_iterators_t::__anon57::__anon58
ydvdy	include/private/pixelflinger/ggl_context.h	/^            GGLfixed			ydvdy;$/;"	m	struct:android::texture_iterators_t::__anon57::__anon59
ydwdy	include/private/pixelflinger/ggl_context.h	/^	GGLfixed			ydwdy;$/;"	m	struct:android::iterators_t
ydzdy	include/private/pixelflinger/ggl_context.h	/^	GGLfixed			ydzdy;$/;"	m	struct:android::iterators_t
z0	include/private/pixelflinger/ggl_context.h	/^	uint32_t            z0;$/;"	m	struct:android::shade_t
zbase	include/private/pixelflinger/ggl_context.h	/^    int32_t     zbase;$/;"	m	struct:android::generated_vars_t
ALWAYS_INLINE	include/private/pixelflinger/ggl_fixed.h	26;"	d
ANDROID_GGL_FIXED_H	include/private/pixelflinger/ggl_fixed.h	18;"	d
CONST	include/private/pixelflinger/ggl_fixed.h	25;"	d
FIXED_BITS	include/private/pixelflinger/ggl_fixed.h	/^const GGLfixed FIXED_BITS = 16;$/;"	v
FIXED_EPSILON	include/private/pixelflinger/ggl_fixed.h	/^const GGLfixed FIXED_EPSILON  = 1;$/;"	v
FIXED_HALF	include/private/pixelflinger/ggl_fixed.h	/^const GGLfixed FIXED_HALF = 1L<<(FIXED_BITS-1);$/;"	v
FIXED_MAX	include/private/pixelflinger/ggl_fixed.h	/^const GGLfixed FIXED_MAX  = 0x7FFFFFFFL;$/;"	v
FIXED_MIN	include/private/pixelflinger/ggl_fixed.h	/^const GGLfixed FIXED_MIN  = 0x80000000L;$/;"	v
FIXED_ONE	include/private/pixelflinger/ggl_fixed.h	/^const GGLfixed FIXED_ONE  = 1L<<FIXED_BITS;$/;"	v
GGL_B_TO_X	include/private/pixelflinger/ggl_fixed.h	75;"	d
GGL_I_TO_X	include/private/pixelflinger/ggl_fixed.h	77;"	d
GGL_S_TO_X	include/private/pixelflinger/ggl_fixed.h	76;"	d
GGL_UB_TO_X	include/private/pixelflinger/ggl_fixed.h	78;"	d
GGL_UI_TO_X	include/private/pixelflinger/ggl_fixed.h	82;"	d
GGL_US_TO_X	include/private/pixelflinger/ggl_fixed.h	81;"	d
gglCeilx	include/private/pixelflinger/ggl_fixed.h	/^GGLfixed gglCeilx(GGLfixed v) {$/;"	f
gglCenterx	include/private/pixelflinger/ggl_fixed.h	/^GGLfixed gglCenterx(GGLfixed v) {$/;"	f
gglClampx	include/private/pixelflinger/ggl_fixed.h	/^inline GGLfixed gglClampx(GGLfixed c)$/;"	f
gglClz	include/private/pixelflinger/ggl_fixed.h	/^inline int32_t gglClz(int32_t x)$/;"	f
gglDivQ16	include/private/pixelflinger/ggl_fixed.h	/^inline int32_t gglDivQ16(GGLfixed n, GGLfixed d) {$/;"	f
gglDivx	include/private/pixelflinger/ggl_fixed.h	/^inline int32_t gglDivx(GGLfixed n, GGLfixed d) {$/;"	f
gglFixedToIntCeil	include/private/pixelflinger/ggl_fixed.h	/^GGLfixed gglFixedToIntCeil(GGLfixed f) {$/;"	f
gglFixedToIntFloor	include/private/pixelflinger/ggl_fixed.h	/^GGLfixed gglFixedToIntFloor(GGLfixed f) {$/;"	f
gglFixedToIntRound	include/private/pixelflinger/ggl_fixed.h	/^GGLfixed gglFixedToIntRound(GGLfixed f) {$/;"	f
gglFloorx	include/private/pixelflinger/ggl_fixed.h	/^GGLfixed gglFloorx(GGLfixed v) {$/;"	f
gglFracx	include/private/pixelflinger/ggl_fixed.h	/^GGLfixed gglFracx(GGLfixed v) {$/;"	f
gglIntToFixed	include/private/pixelflinger/ggl_fixed.h	/^GGLfixed gglIntToFixed(GGLfixed i) {$/;"	f
gglMulAddx	include/private/pixelflinger/ggl_fixed.h	/^inline GGLfixed gglMulAddx(GGLfixed a, GGLfixed b, GGLfixed c) {$/;"	f
gglMulAddx	include/private/pixelflinger/ggl_fixed.h	/^inline GGLfixed gglMulAddx(GGLfixed a, GGLfixed b, GGLfixed c, int shift) {$/;"	f
gglMulAddx	include/private/pixelflinger/ggl_fixed.h	/^inline GGLfixed gglMulAddx(GGLfixed x, GGLfixed y, GGLfixed a, int shift) {$/;"	f
gglMulSubx	include/private/pixelflinger/ggl_fixed.h	/^inline GGLfixed gglMulSubx(GGLfixed a, GGLfixed b, GGLfixed c) {$/;"	f
gglMulSubx	include/private/pixelflinger/ggl_fixed.h	/^inline GGLfixed gglMulSubx(GGLfixed a, GGLfixed b, GGLfixed c, int shift) {$/;"	f
gglMulSubx	include/private/pixelflinger/ggl_fixed.h	/^inline GGLfixed gglMulSubx(GGLfixed x, GGLfixed y, GGLfixed a, int shift) {$/;"	f
gglMulii	include/private/pixelflinger/ggl_fixed.h	/^inline int64_t gglMulii(int32_t a, int32_t b) {$/;"	f
gglMulii	include/private/pixelflinger/ggl_fixed.h	/^inline int64_t gglMulii(int32_t x, int32_t y)$/;"	f
gglMulx	include/private/pixelflinger/ggl_fixed.h	/^inline GGLfixed gglMulx(GGLfixed a, GGLfixed b) {$/;"	f
gglMulx	include/private/pixelflinger/ggl_fixed.h	/^inline GGLfixed gglMulx(GGLfixed a, GGLfixed b, int shift) {$/;"	f
gglMulx	include/private/pixelflinger/ggl_fixed.h	/^inline GGLfixed gglMulx(GGLfixed x, GGLfixed y, int shift) {$/;"	f
gglRecip	include/private/pixelflinger/ggl_fixed.h	/^inline GGLfixed gglRecip(GGLfixed x) {$/;"	f
gglRecip28	include/private/pixelflinger/ggl_fixed.h	/^int32_t gglRecip28(GGLfixed x) {$/;"	f
gglRecipFast	include/private/pixelflinger/ggl_fixed.h	/^inline GGLfixed gglRecipFast(GGLfixed x)$/;"	f
gglRoundx	include/private/pixelflinger/ggl_fixed.h	/^GGLfixed gglRoundx(GGLfixed v) {$/;"	f
ANDROID_SF_LAYER_STATE_H	include/private/surfaceflinger/LayerState.h	18;"	d
alpha	include/private/surfaceflinger/LayerState.h	/^            float           alpha;$/;"	m	struct:android::layer_state_t
android	include/private/surfaceflinger/LayerState.h	/^namespace android {$/;"	n
dsdx	include/private/surfaceflinger/LayerState.h	/^                float   dsdx;$/;"	m	struct:android::layer_state_t::matrix22_t
dsdy	include/private/surfaceflinger/LayerState.h	/^                float   dsdy;$/;"	m	struct:android::layer_state_t::matrix22_t
dtdx	include/private/surfaceflinger/LayerState.h	/^                float   dtdx;$/;"	m	struct:android::layer_state_t::matrix22_t
dtdy	include/private/surfaceflinger/LayerState.h	/^                float   dtdy;$/;"	m	struct:android::layer_state_t::matrix22_t
flags	include/private/surfaceflinger/LayerState.h	/^            uint8_t         flags;$/;"	m	struct:android::layer_state_t
h	include/private/surfaceflinger/LayerState.h	/^            uint32_t        h;$/;"	m	struct:android::layer_state_t
layer_state_t	include/private/surfaceflinger/LayerState.h	/^    layer_state_t()$/;"	f	struct:android::layer_state_t
layer_state_t	include/private/surfaceflinger/LayerState.h	/^struct layer_state_t {$/;"	s	namespace:android
mask	include/private/surfaceflinger/LayerState.h	/^            uint8_t         mask;$/;"	m	struct:android::layer_state_t
matrix	include/private/surfaceflinger/LayerState.h	/^            matrix22_t      matrix;$/;"	m	struct:android::layer_state_t
matrix22_t	include/private/surfaceflinger/LayerState.h	/^            struct matrix22_t {$/;"	s	struct:android::layer_state_t
reserved	include/private/surfaceflinger/LayerState.h	/^            uint8_t         reserved;$/;"	m	struct:android::layer_state_t
surface	include/private/surfaceflinger/LayerState.h	/^            SurfaceID       surface;$/;"	m	struct:android::layer_state_t
tint	include/private/surfaceflinger/LayerState.h	/^            uint32_t        tint;$/;"	m	struct:android::layer_state_t
transparentRegion	include/private/surfaceflinger/LayerState.h	/^            Region          transparentRegion;$/;"	m	struct:android::layer_state_t
w	include/private/surfaceflinger/LayerState.h	/^            uint32_t        w;$/;"	m	struct:android::layer_state_t
what	include/private/surfaceflinger/LayerState.h	/^            uint32_t        what;$/;"	m	struct:android::layer_state_t
x	include/private/surfaceflinger/LayerState.h	/^            int32_t         x;$/;"	m	struct:android::layer_state_t
y	include/private/surfaceflinger/LayerState.h	/^            int32_t         y;$/;"	m	struct:android::layer_state_t
z	include/private/surfaceflinger/LayerState.h	/^            uint32_t        z;$/;"	m	struct:android::layer_state_t
ANDROID_SF_SHARED_BUFFER_STACK_H	include/private/surfaceflinger/SharedBufferStack.h	18;"	d
BufferData	include/private/surfaceflinger/SharedBufferStack.h	/^    struct BufferData {$/;"	s	class:android::SharedBufferStack
BufferList	include/private/surfaceflinger/SharedBufferStack.h	/^        BufferList(size_t c = SharedBufferStack::NUM_BUFFER_MAX)$/;"	f	class:android::SharedBufferServer::BufferList
BufferList	include/private/surfaceflinger/SharedBufferStack.h	/^    class BufferList {$/;"	c	class:android::SharedBufferServer
CancelUpdate	include/private/surfaceflinger/SharedBufferStack.h	/^    struct CancelUpdate : public UpdateBase {$/;"	s	class:android::SharedBufferClient
ConditionBase	include/private/surfaceflinger/SharedBufferStack.h	/^        inline ConditionBase(SharedBufferBase* sbc) $/;"	f	struct:android::SharedBufferBase::ConditionBase
ConditionBase	include/private/surfaceflinger/SharedBufferStack.h	/^    struct ConditionBase {$/;"	s	class:android::SharedBufferBase
DequeueCondition	include/private/surfaceflinger/SharedBufferStack.h	/^    struct DequeueCondition : public ConditionBase {$/;"	s	class:android::SharedBufferClient
DequeueUpdate	include/private/surfaceflinger/SharedBufferStack.h	/^    struct DequeueUpdate : public UpdateBase {$/;"	s	class:android::SharedBufferClient
FlatRegion	include/private/surfaceflinger/SharedBufferStack.h	/^    struct FlatRegion { \/\/ 52 bytes = 4 * (1 + 2*N)$/;"	s	class:android::SharedBufferStack
LockCondition	include/private/surfaceflinger/SharedBufferStack.h	/^    struct LockCondition : public ConditionBase {$/;"	s	class:android::SharedBufferClient
NUM_BUFFER_MAX	include/private/surfaceflinger/SharedBufferStack.h	/^    static const unsigned int NUM_BUFFER_MAX  = 16;$/;"	m	class:android::SharedBufferStack
NUM_BUFFER_MIN	include/private/surfaceflinger/SharedBufferStack.h	/^    static const unsigned int NUM_BUFFER_MIN  = 2;$/;"	m	class:android::SharedBufferStack
NUM_DISPLAY_MAX	include/private/surfaceflinger/SharedBufferStack.h	/^    static const unsigned int NUM_DISPLAY_MAX = 4;$/;"	m	class:android::SharedBufferStack
NUM_LAYERS_MAX	include/private/surfaceflinger/SharedBufferStack.h	/^    static const unsigned int NUM_LAYERS_MAX  = 31;$/;"	m	class:android::SharedBufferStack
NUM_RECT_MAX	include/private/surfaceflinger/SharedBufferStack.h	/^        static const unsigned int NUM_RECT_MAX = 5;$/;"	m	struct:android::SharedBufferStack::FlatRegion
QueueUpdate	include/private/surfaceflinger/SharedBufferStack.h	/^    struct QueueUpdate : public UpdateBase {$/;"	s	class:android::SharedBufferClient
RetireUpdate	include/private/surfaceflinger/SharedBufferStack.h	/^    struct RetireUpdate : public UpdateBase {$/;"	s	class:android::SharedBufferServer
SetBufferCountCallback	include/private/surfaceflinger/SharedBufferStack.h	/^    class SetBufferCountCallback {$/;"	c	class:android::SharedBufferClient
SharedBufferBase	include/private/surfaceflinger/SharedBufferStack.h	/^class SharedBufferBase$/;"	c	namespace:android
SharedBufferClient	include/private/surfaceflinger/SharedBufferStack.h	/^class SharedBufferClient : public SharedBufferBase$/;"	c	namespace:android
SharedBufferServer	include/private/surfaceflinger/SharedBufferStack.h	/^class SharedBufferServer$/;"	c	namespace:android
SharedBufferStack	include/private/surfaceflinger/SharedBufferStack.h	/^class SharedBufferStack$/;"	c	namespace:android
SharedClient	include/private/surfaceflinger/SharedBufferStack.h	/^class SharedClient$/;"	c	namespace:android
SmallRect	include/private/surfaceflinger/SharedBufferStack.h	/^    struct SmallRect {$/;"	s	class:android::SharedBufferStack
Statistics	include/private/surfaceflinger/SharedBufferStack.h	/^    struct Statistics { \/\/ 4 longs$/;"	s	class:android::SharedBufferStack
StatusUpdate	include/private/surfaceflinger/SharedBufferStack.h	/^    struct StatusUpdate : public UpdateBase {$/;"	s	class:android::SharedBufferServer
UpdateBase	include/private/surfaceflinger/SharedBufferStack.h	/^        inline UpdateBase(SharedBufferBase* sbb) $/;"	f	struct:android::SharedBufferBase::UpdateBase
UpdateBase	include/private/surfaceflinger/SharedBufferStack.h	/^    struct UpdateBase {$/;"	s	class:android::SharedBufferBase
android	include/private/surfaceflinger/SharedBufferStack.h	/^namespace android {$/;"	n
available	include/private/surfaceflinger/SharedBufferStack.h	/^    volatile int32_t available; \/\/ number of dequeue-able buffers$/;"	m	class:android::SharedBufferStack
b	include/private/surfaceflinger/SharedBufferStack.h	/^        uint16_t l, t, r, b;$/;"	m	struct:android::SharedBufferStack::SmallRect
begin	include/private/surfaceflinger/SharedBufferStack.h	/^        inline const_iterator begin() const {$/;"	f	class:android::SharedBufferServer::BufferList
buf	include/private/surfaceflinger/SharedBufferStack.h	/^        int buf;$/;"	m	struct:android::SharedBufferClient::LockCondition
buf	include/private/surfaceflinger/SharedBufferStack.h	/^        int tail, buf;$/;"	m	struct:android::SharedBufferClient::CancelUpdate
buffers	include/private/surfaceflinger/SharedBufferStack.h	/^    BufferData  buffers[NUM_BUFFER_MAX];     \/\/ 1024 bytes$/;"	m	class:android::SharedBufferStack
connected	include/private/surfaceflinger/SharedBufferStack.h	/^    uint8_t         connected;$/;"	m	struct:android::surface_flinger_cblk_t
const_iterator	include/private/surfaceflinger/SharedBufferStack.h	/^            const_iterator(uint32_t mask) :$/;"	f	class:android::SharedBufferServer::BufferList::const_iterator
const_iterator	include/private/surfaceflinger/SharedBufferStack.h	/^        class const_iterator {$/;"	c	class:android::SharedBufferServer::BufferList
count	include/private/surfaceflinger/SharedBufferStack.h	/^        uint32_t    count;$/;"	m	struct:android::SharedBufferStack::FlatRegion
crop	include/private/surfaceflinger/SharedBufferStack.h	/^        SmallRect  crop;$/;"	m	struct:android::SharedBufferStack::BufferData
curr	include/private/surfaceflinger/SharedBufferStack.h	/^            uint32_t mask, curr;$/;"	m	class:android::SharedBufferServer::BufferList::const_iterator
cv	include/private/surfaceflinger/SharedBufferStack.h	/^    Condition cv;$/;"	m	class:android::SharedClient
density	include/private/surfaceflinger/SharedBufferStack.h	/^    float       density;$/;"	m	struct:android::display_cblk_t
dirtyRegion	include/private/surfaceflinger/SharedBufferStack.h	/^        FlatRegion dirtyRegion;$/;"	m	struct:android::SharedBufferStack::BufferData
display_cblk_t	include/private/surfaceflinger/SharedBufferStack.h	/^struct display_cblk_t$/;"	s	namespace:android
displays	include/private/surfaceflinger/SharedBufferStack.h	/^    display_cblk_t  displays[SharedBufferStack::NUM_DISPLAY_MAX];$/;"	m	struct:android::surface_flinger_cblk_t
end	include/private/surfaceflinger/SharedBufferStack.h	/^        inline const_iterator end() const   {$/;"	f	class:android::SharedBufferServer::BufferList
format	include/private/surfaceflinger/SharedBufferStack.h	/^    uint8_t     format;$/;"	m	struct:android::display_cblk_t
fps	include/private/surfaceflinger/SharedBufferStack.h	/^    float       fps;$/;"	m	struct:android::display_cblk_t
free_begin	include/private/surfaceflinger/SharedBufferStack.h	/^        inline const_iterator free_begin() const {$/;"	f	class:android::SharedBufferServer::BufferList
getMask	include/private/surfaceflinger/SharedBufferStack.h	/^        uint32_t getMask() const { return mList; }$/;"	f	class:android::SharedBufferServer::BufferList
h	include/private/surfaceflinger/SharedBufferStack.h	/^    uint16_t    h;$/;"	m	struct:android::display_cblk_t
head	include/private/surfaceflinger/SharedBufferStack.h	/^    volatile int32_t head;      \/\/ server's current front buffer$/;"	m	class:android::SharedBufferStack
headBuf	include/private/surfaceflinger/SharedBufferStack.h	/^    int8_t      headBuf;        \/\/ last retired buffer$/;"	m	class:android::SharedBufferStack
identity	include/private/surfaceflinger/SharedBufferStack.h	/^    int32_t     identity;       \/\/ surface's identity (const)$/;"	m	class:android::SharedBufferStack
index	include/private/surfaceflinger/SharedBufferStack.h	/^    volatile int8_t index[NUM_BUFFER_MAX];$/;"	m	class:android::SharedBufferStack
l	include/private/surfaceflinger/SharedBufferStack.h	/^        uint16_t l, t, r, b;$/;"	m	struct:android::SharedBufferStack::SmallRect
lock	include/private/surfaceflinger/SharedBufferStack.h	/^    Mutex lock;$/;"	m	class:android::SharedClient
mBufferList	include/private/surfaceflinger/SharedBufferStack.h	/^    BufferList mBufferList;$/;"	m	class:android::SharedBufferServer
mCapacity	include/private/surfaceflinger/SharedBufferStack.h	/^        size_t mCapacity;$/;"	m	class:android::SharedBufferServer::BufferList
mDequeueTime	include/private/surfaceflinger/SharedBufferStack.h	/^    nsecs_t mDequeueTime[SharedBufferStack::NUM_BUFFER_MAX];$/;"	m	class:android::SharedBufferClient
mIdentity	include/private/surfaceflinger/SharedBufferStack.h	/^    const int mIdentity;$/;"	m	class:android::SharedBufferBase
mList	include/private/surfaceflinger/SharedBufferStack.h	/^        uint32_t mList;$/;"	m	class:android::SharedBufferServer::BufferList
mLock	include/private/surfaceflinger/SharedBufferStack.h	/^    mutable RWLock mLock;$/;"	m	class:android::SharedBufferClient
mLock	include/private/surfaceflinger/SharedBufferStack.h	/^    mutable RWLock mLock;$/;"	m	class:android::SharedBufferServer
mNumBuffers	include/private/surfaceflinger/SharedBufferStack.h	/^    int mNumBuffers;$/;"	m	class:android::SharedBufferClient
mNumBuffers	include/private/surfaceflinger/SharedBufferStack.h	/^    int mNumBuffers;$/;"	m	class:android::SharedBufferServer
mSharedClient	include/private/surfaceflinger/SharedBufferStack.h	/^    SharedClient* const mSharedClient;$/;"	m	class:android::SharedBufferBase
mSharedStack	include/private/surfaceflinger/SharedBufferStack.h	/^    SharedBufferStack* const mSharedStack;$/;"	m	class:android::SharedBufferBase
mask	include/private/surfaceflinger/SharedBufferStack.h	/^            uint32_t mask, curr;$/;"	m	class:android::SharedBufferServer::BufferList::const_iterator
name	include/private/surfaceflinger/SharedBufferStack.h	/^        inline const char* name() const { return "DequeueCondition"; }$/;"	f	struct:android::SharedBufferClient::DequeueCondition
name	include/private/surfaceflinger/SharedBufferStack.h	/^        inline const char* name() const { return "LockCondition"; }$/;"	f	struct:android::SharedBufferClient::LockCondition
numBuffers	include/private/surfaceflinger/SharedBufferStack.h	/^        const int numBuffers;$/;"	m	struct:android::SharedBufferServer::RetireUpdate
operator !=	include/private/surfaceflinger/SharedBufferStack.h	/^            inline bool operator != (const const_iterator& rhs) const {$/;"	f	class:android::SharedBufferServer::BufferList::const_iterator
operator *	include/private/surfaceflinger/SharedBufferStack.h	/^            inline int operator *() const { return curr; }$/;"	f	class:android::SharedBufferServer::BufferList::const_iterator
operator ++	include/private/surfaceflinger/SharedBufferStack.h	/^            inline const const_iterator& operator ++() {$/;"	f	class:android::SharedBufferServer::BufferList::const_iterator
operator ==	include/private/surfaceflinger/SharedBufferStack.h	/^            inline bool operator == (const const_iterator& rhs) const {$/;"	f	class:android::SharedBufferServer::BufferList::const_iterator
orientation	include/private/surfaceflinger/SharedBufferStack.h	/^    uint8_t     orientation;$/;"	m	struct:android::display_cblk_t
pad	include/private/surfaceflinger/SharedBufferStack.h	/^    uint32_t        pad[7];$/;"	m	struct:android::surface_flinger_cblk_t
pad	include/private/surfaceflinger/SharedBufferStack.h	/^    uint32_t    pad[2];$/;"	m	struct:android::display_cblk_t
queued	include/private/surfaceflinger/SharedBufferStack.h	/^    volatile int32_t queued;    \/\/ number of buffers waiting for post$/;"	m	class:android::SharedBufferStack
queued_head	include/private/surfaceflinger/SharedBufferStack.h	/^    int32_t queued_head;$/;"	m	class:android::SharedBufferClient
r	include/private/surfaceflinger/SharedBufferStack.h	/^        uint16_t l, t, r, b;$/;"	m	struct:android::SharedBufferStack::SmallRect
reallocMask	include/private/surfaceflinger/SharedBufferStack.h	/^    volatile int32_t reallocMask;$/;"	m	class:android::SharedBufferStack
rects	include/private/surfaceflinger/SharedBufferStack.h	/^        SmallRect   rects[NUM_RECT_MAX];$/;"	m	struct:android::SharedBufferStack::FlatRegion
reserved	include/private/surfaceflinger/SharedBufferStack.h	/^        uint8_t reserved[3];$/;"	m	struct:android::SharedBufferStack::BufferData
reserved	include/private/surfaceflinger/SharedBufferStack.h	/^        usecs_t  reserved[3];$/;"	m	struct:android::SharedBufferStack::Statistics
reserved	include/private/surfaceflinger/SharedBufferStack.h	/^    int32_t     reserved;$/;"	m	class:android::SharedBufferStack
reserved	include/private/surfaceflinger/SharedBufferStack.h	/^    uint8_t         reserved[3];$/;"	m	struct:android::surface_flinger_cblk_t
reserved	include/private/surfaceflinger/SharedBufferStack.h	/^    uint8_t     reserved[2];$/;"	m	struct:android::display_cblk_t
reserved1	include/private/surfaceflinger/SharedBufferStack.h	/^    volatile int32_t reserved1;$/;"	m	class:android::SharedBufferStack
reservedBytes	include/private/surfaceflinger/SharedBufferStack.h	/^    uint8_t     reservedBytes[3];$/;"	m	class:android::SharedBufferStack
stack	include/private/surfaceflinger/SharedBufferStack.h	/^        SharedBufferStack& stack;$/;"	m	struct:android::SharedBufferBase::ConditionBase
stack	include/private/surfaceflinger/SharedBufferStack.h	/^        SharedBufferStack& stack;$/;"	m	struct:android::SharedBufferBase::UpdateBase
stats	include/private/surfaceflinger/SharedBufferStack.h	/^    Statistics  stats;$/;"	m	class:android::SharedBufferStack
status	include/private/surfaceflinger/SharedBufferStack.h	/^        const status_t status;$/;"	m	struct:android::SharedBufferServer::StatusUpdate
status	include/private/surfaceflinger/SharedBufferStack.h	/^    volatile status_t status;   \/\/ surface's status code$/;"	m	class:android::SharedBufferStack
surface_flinger_cblk_t	include/private/surfaceflinger/SharedBufferStack.h	/^struct surface_flinger_cblk_t   \/\/ 4KB max$/;"	s	namespace:android
surfaces	include/private/surfaceflinger/SharedBufferStack.h	/^    SharedBufferStack surfaces[ SharedBufferStack::NUM_LAYERS_MAX ];$/;"	m	class:android::SharedClient
t	include/private/surfaceflinger/SharedBufferStack.h	/^        uint16_t l, t, r, b;$/;"	m	struct:android::SharedBufferStack::SmallRect
tail	include/private/surfaceflinger/SharedBufferStack.h	/^        int tail, buf;$/;"	m	struct:android::SharedBufferClient::CancelUpdate
tail	include/private/surfaceflinger/SharedBufferStack.h	/^    int32_t tail;$/;"	m	class:android::SharedBufferClient
token	include/private/surfaceflinger/SharedBufferStack.h	/^    int32_t     token;          \/\/ surface's token (for debugging)$/;"	m	class:android::SharedBufferStack
totalTime	include/private/surfaceflinger/SharedBufferStack.h	/^        usecs_t  totalTime;$/;"	m	struct:android::SharedBufferStack::Statistics
transform	include/private/surfaceflinger/SharedBufferStack.h	/^        uint8_t transform;$/;"	m	struct:android::SharedBufferStack::BufferData
updateCondition	include/private/surfaceflinger/SharedBufferStack.h	/^status_t SharedBufferBase::updateCondition(T update) {$/;"	f	class:android::SharedBufferBase
usecs_t	include/private/surfaceflinger/SharedBufferStack.h	/^        typedef int32_t usecs_t;$/;"	t	struct:android::SharedBufferStack::Statistics
w	include/private/surfaceflinger/SharedBufferStack.h	/^    uint16_t    w;$/;"	m	struct:android::display_cblk_t
xdpi	include/private/surfaceflinger/SharedBufferStack.h	/^    float       xdpi;$/;"	m	struct:android::display_cblk_t
ydpi	include/private/surfaceflinger/SharedBufferStack.h	/^    float       ydpi;$/;"	m	struct:android::display_cblk_t
~ConditionBase	include/private/surfaceflinger/SharedBufferStack.h	/^        virtual ~ConditionBase() { };$/;"	f	struct:android::SharedBufferBase::ConditionBase
~SetBufferCountCallback	include/private/surfaceflinger/SharedBufferStack.h	/^        virtual ~SetBufferCountCallback() { }$/;"	f	class:android::SharedBufferClient::SetBufferCountCallback
ANDROID_UI_PRIVATE_REGION_HELPER_H	include/private/ui/RegionHelper.h	18;"	d
LHS	include/private/ui/RegionHelper.h	/^    static const uint32_t LHS = 0x5;  \/\/ 0b101$/;"	m	class:android::region_operator
RHS	include/private/ui/RegionHelper.h	/^    static const uint32_t RHS = 0x6;  \/\/ 0b110$/;"	m	class:android::region_operator
Spanner	include/private/ui/RegionHelper.h	/^        inline Spanner(const region& lhs, const region& rhs)$/;"	f	class:android::region_operator::Spanner
Spanner	include/private/ui/RegionHelper.h	/^    class Spanner : protected SpannerBase $/;"	c	class:android::region_operator
SpannerBase	include/private/ui/RegionHelper.h	/^    class SpannerBase$/;"	c	class:android::region_operator
SpannerInner	include/private/ui/RegionHelper.h	/^        inline SpannerInner(const region& lhs, const region& rhs)$/;"	f	class:android::region_operator::SpannerInner
SpannerInner	include/private/ui/RegionHelper.h	/^    class SpannerInner : protected SpannerBase $/;"	c	class:android::region_operator
TYPE	include/private/ui/RegionHelper.h	/^    typedef typename RECT::value_type TYPE;    $/;"	t	class:android::region_operator
advance	include/private/ui/RegionHelper.h	/^        void advance(region& reg, TYPE& aTop, TYPE& aBottom) {$/;"	f	class:android::region_operator::Spanner
advance	include/private/ui/RegionHelper.h	/^        void advance(region& reg, TYPE& left, TYPE& right) {$/;"	f	class:android::region_operator::SpannerInner
android	include/private/ui/RegionHelper.h	/^namespace android {$/;"	n
count	include/private/ui/RegionHelper.h	/^        size_t count;$/;"	m	struct:android::region_operator::region
dx	include/private/ui/RegionHelper.h	/^        TYPE dx;$/;"	m	struct:android::region_operator::region
dy	include/private/ui/RegionHelper.h	/^        TYPE dy;$/;"	m	struct:android::region_operator::region
isDone	include/private/ui/RegionHelper.h	/^        inline bool isDone() const {$/;"	f	class:android::region_operator::Spanner
isDone	include/private/ui/RegionHelper.h	/^        inline bool isDone() const {$/;"	f	class:android::region_operator::SpannerInner
lhs	include/private/ui/RegionHelper.h	/^        region lhs;$/;"	m	class:android::region_operator::Spanner
lhs	include/private/ui/RegionHelper.h	/^        region lhs;$/;"	m	class:android::region_operator::SpannerInner
lhs_after_rhs	include/private/ui/RegionHelper.h	/^            lhs_after_rhs    = 1,$/;"	e	enum:android::region_operator::SpannerBase::__anon50
lhs_before_rhs	include/private/ui/RegionHelper.h	/^            lhs_before_rhs   = 0,$/;"	e	enum:android::region_operator::SpannerBase::__anon50
lhs_coincide_rhs	include/private/ui/RegionHelper.h	/^            lhs_coincide_rhs = 2$/;"	e	enum:android::region_operator::SpannerBase::__anon50
lhs_head	include/private/ui/RegionHelper.h	/^        TYPE lhs_head;$/;"	m	class:android::region_operator::SpannerBase
lhs_tail	include/private/ui/RegionHelper.h	/^        TYPE lhs_tail;$/;"	m	class:android::region_operator::SpannerBase
max_value	include/private/ui/RegionHelper.h	/^    static const TYPE max_value = 0x7FFFFFF;$/;"	m	class:android::region_operator
next	include/private/ui/RegionHelper.h	/^        inline int next(TYPE& head, TYPE& tail,$/;"	f	class:android::region_operator::SpannerBase
next	include/private/ui/RegionHelper.h	/^        inline int next(TYPE& left, TYPE& right) $/;"	f	class:android::region_operator::SpannerInner
next	include/private/ui/RegionHelper.h	/^        inline int next(TYPE& top, TYPE& bottom) $/;"	f	class:android::region_operator::Spanner
op_and	include/private/ui/RegionHelper.h	/^        op_and  = LHS &  RHS,$/;"	e	enum:android::region_operator::__anon49
op_mask	include/private/ui/RegionHelper.h	/^    uint32_t op_mask;$/;"	m	class:android::region_operator
op_nand	include/private/ui/RegionHelper.h	/^        op_nand = LHS & ~RHS,$/;"	e	enum:android::region_operator::__anon49
op_or	include/private/ui/RegionHelper.h	/^        op_or   = LHS |  RHS,$/;"	e	enum:android::region_operator::__anon49
op_xor	include/private/ui/RegionHelper.h	/^        op_xor  = LHS ^  RHS$/;"	e	enum:android::region_operator::__anon49
operator ()	include/private/ui/RegionHelper.h	/^    void operator()(region_rasterizer& rasterizer) {$/;"	f	class:android::region_operator
prepare	include/private/ui/RegionHelper.h	/^        inline void prepare(int inside) {$/;"	f	class:android::region_operator::SpannerInner
rects	include/private/ui/RegionHelper.h	/^        RECT const* rects;$/;"	m	struct:android::region_operator::region
region	include/private/ui/RegionHelper.h	/^        inline region(RECT const* r, size_t c) $/;"	f	struct:android::region_operator::region
region	include/private/ui/RegionHelper.h	/^        inline region(RECT const* r, size_t c, TYPE dx, TYPE dy) $/;"	f	struct:android::region_operator::region
region	include/private/ui/RegionHelper.h	/^        inline region(const region& rhs) $/;"	f	struct:android::region_operator::region
region	include/private/ui/RegionHelper.h	/^    struct region {$/;"	s	class:android::region_operator
region_operator	include/private/ui/RegionHelper.h	/^    inline region_operator(int op, const region& lhs, const region& rhs) $/;"	f	class:android::region_operator
region_operator	include/private/ui/RegionHelper.h	/^class region_operator$/;"	c	namespace:android
region_rasterizer	include/private/ui/RegionHelper.h	/^    class region_rasterizer {$/;"	c	class:android::region_operator
rhs	include/private/ui/RegionHelper.h	/^        region rhs;$/;"	m	class:android::region_operator::Spanner
rhs	include/private/ui/RegionHelper.h	/^        region rhs;$/;"	m	class:android::region_operator::SpannerInner
rhs_head	include/private/ui/RegionHelper.h	/^        TYPE rhs_head;$/;"	m	class:android::region_operator::SpannerBase
rhs_tail	include/private/ui/RegionHelper.h	/^        TYPE rhs_tail;$/;"	m	class:android::region_operator::SpannerBase
spanner	include/private/ui/RegionHelper.h	/^    Spanner spanner;$/;"	m	class:android::region_operator
~region_rasterizer	include/private/ui/RegionHelper.h	/^        virtual ~region_rasterizer() { };$/;"	f	class:android::region_operator::region_rasterizer
ANDROID_UI_PRIVATE_SW_GRALLOC_HANDLE_H	include/private/ui/sw_gralloc_handle.h	18;"	d
android	include/private/ui/sw_gralloc_handle.h	/^namespace android {$/;"	n
base	include/private/ui/sw_gralloc_handle.h	/^    int     base;$/;"	m	struct:android::sw_gralloc_handle_t
fd	include/private/ui/sw_gralloc_handle.h	/^    int     fd;$/;"	m	struct:android::sw_gralloc_handle_t
magic	include/private/ui/sw_gralloc_handle.h	/^    int     magic;$/;"	m	struct:android::sw_gralloc_handle_t
pid	include/private/ui/sw_gralloc_handle.h	/^    int     pid;$/;"	m	struct:android::sw_gralloc_handle_t
prot	include/private/ui/sw_gralloc_handle.h	/^    int     prot;$/;"	m	struct:android::sw_gralloc_handle_t
sMagic	include/private/ui/sw_gralloc_handle.h	/^    static const int sMagic = '_sgh';$/;"	m	struct:android::sw_gralloc_handle_t
sNumFds	include/private/ui/sw_gralloc_handle.h	/^    static const int sNumFds = 1;$/;"	m	struct:android::sw_gralloc_handle_t
sNumInts	include/private/ui/sw_gralloc_handle.h	/^    static const int sNumInts = 5;$/;"	m	struct:android::sw_gralloc_handle_t
size	include/private/ui/sw_gralloc_handle.h	/^    int     size;$/;"	m	struct:android::sw_gralloc_handle_t
sw_gralloc_handle_t	include/private/ui/sw_gralloc_handle.h	/^    sw_gralloc_handle_t() :$/;"	f	struct:android::sw_gralloc_handle_t
sw_gralloc_handle_t	include/private/ui/sw_gralloc_handle.h	/^struct sw_gralloc_handle_t : public native_handle $/;"	s	namespace:android
validate	include/private/ui/sw_gralloc_handle.h	/^    static int validate(const native_handle* h) {$/;"	f	struct:android::sw_gralloc_handle_t
~sw_gralloc_handle_t	include/private/ui/sw_gralloc_handle.h	/^    ~sw_gralloc_handle_t() {$/;"	f	struct:android::sw_gralloc_handle_t
android	include/private/utils/Static.h	/^namespace android {$/;"	n
prof_h_seen	include/prof.h	2;"	d
ANDROID_IMOUNTSERVICE_H	include/storage/IMountService.h	18;"	d
BnMountService	include/storage/IMountService.h	/^class BnMountService: public BnInterface<IMountService> {$/;"	c	namespace:android
IMountService	include/storage/IMountService.h	/^class IMountService: public IInterface {$/;"	c	namespace:android
android	include/storage/IMountService.h	/^namespace android {$/;"	n
ANDROID_IMOUNTSERVICELISTENER_H	include/storage/IMountServiceListener.h	18;"	d
BnMountServiceListener	include/storage/IMountServiceListener.h	/^class BnMountServiceListener: public BnInterface<IMountServiceListener> {$/;"	c	namespace:android
IMountServiceListener	include/storage/IMountServiceListener.h	/^class IMountServiceListener: public IInterface {$/;"	c	namespace:android
android	include/storage/IMountServiceListener.h	/^namespace android {$/;"	n
ANDROID_IMOUNTSHUTDOWNOBSERVER_H	include/storage/IMountShutdownObserver.h	18;"	d
BnMountShutdownObserver	include/storage/IMountShutdownObserver.h	/^class BnMountShutdownObserver: public BnInterface<IMountShutdownObserver>$/;"	c	namespace:android
IMountShutdownObserver	include/storage/IMountShutdownObserver.h	/^class IMountShutdownObserver: public IInterface$/;"	c	namespace:android
android	include/storage/IMountShutdownObserver.h	/^namespace android {$/;"	n
ANDROID_IOBBACTIONLISTENER_H	include/storage/IObbActionListener.h	18;"	d
BnObbActionListener	include/storage/IObbActionListener.h	/^class BnObbActionListener: public BnInterface<IObbActionListener>$/;"	c	namespace:android
IObbActionListener	include/storage/IObbActionListener.h	/^class IObbActionListener: public IInterface$/;"	c	namespace:android
android	include/storage/IObbActionListener.h	/^namespace android {$/;"	n
ANDROID_SF_ISURFACE_H	include/surfaceflinger/ISurface.h	18;"	d
BnSurface	include/surfaceflinger/ISurface.h	/^class BnSurface : public BnInterface<ISurface>$/;"	c	namespace:android
BufferHeap	include/surfaceflinger/ISurface.h	/^    class BufferHeap {$/;"	c	class:android::ISurface
CREATE_OVERLAY	include/surfaceflinger/ISurface.h	/^        CREATE_OVERLAY,$/;"	e	enum:android::ISurface::__anon178
ISurface	include/surfaceflinger/ISurface.h	/^class ISurface : public IInterface$/;"	c	namespace:android
POST_BUFFER	include/surfaceflinger/ISurface.h	/^        POST_BUFFER, \/\/ one-way transaction$/;"	e	enum:android::ISurface::__anon178
REGISTER_BUFFERS	include/surfaceflinger/ISurface.h	/^        REGISTER_BUFFERS = IBinder::FIRST_CALL_TRANSACTION,$/;"	e	enum:android::ISurface::__anon178
REQUEST_BUFFER	include/surfaceflinger/ISurface.h	/^        REQUEST_BUFFER,$/;"	e	enum:android::ISurface::__anon178
ROT_0	include/surfaceflinger/ISurface.h	/^            ROT_0     = 0,$/;"	e	enum:android::ISurface::BufferHeap::__anon179
ROT_180	include/surfaceflinger/ISurface.h	/^            ROT_180   = HAL_TRANSFORM_ROT_180,$/;"	e	enum:android::ISurface::BufferHeap::__anon179
ROT_270	include/surfaceflinger/ISurface.h	/^            ROT_270   = HAL_TRANSFORM_ROT_270,$/;"	e	enum:android::ISurface::BufferHeap::__anon179
ROT_90	include/surfaceflinger/ISurface.h	/^            ROT_90    = HAL_TRANSFORM_ROT_90,$/;"	e	enum:android::ISurface::BufferHeap::__anon179
SET_BUFFER_COUNT	include/surfaceflinger/ISurface.h	/^        SET_BUFFER_COUNT,$/;"	e	enum:android::ISurface::__anon178
SurfaceID	include/surfaceflinger/ISurface.h	/^typedef int32_t    SurfaceID;$/;"	t	namespace:android
UNREGISTER_BUFFERS	include/surfaceflinger/ISurface.h	/^        UNREGISTER_BUFFERS,$/;"	e	enum:android::ISurface::__anon178
android	include/surfaceflinger/ISurface.h	/^namespace android {$/;"	n
flags	include/surfaceflinger/ISurface.h	/^        uint32_t flags;$/;"	m	class:android::ISurface::BufferHeap
format	include/surfaceflinger/ISurface.h	/^        PixelFormat format;$/;"	m	class:android::ISurface::BufferHeap
h	include/surfaceflinger/ISurface.h	/^        uint32_t h;$/;"	m	class:android::ISurface::BufferHeap
heap	include/surfaceflinger/ISurface.h	/^        sp<IMemoryHeap> heap;$/;"	m	class:android::ISurface::BufferHeap
hor_stride	include/surfaceflinger/ISurface.h	/^        int32_t hor_stride;$/;"	m	class:android::ISurface::BufferHeap
transform	include/surfaceflinger/ISurface.h	/^        uint32_t transform;$/;"	m	class:android::ISurface::BufferHeap
ver_stride	include/surfaceflinger/ISurface.h	/^        int32_t ver_stride;$/;"	m	class:android::ISurface::BufferHeap
w	include/surfaceflinger/ISurface.h	/^        uint32_t w;$/;"	m	class:android::ISurface::BufferHeap
ANDROID_SF_ISURFACE_COMPOSER_H	include/surfaceflinger/ISurfaceComposer.h	18;"	d
BOOT_FINISHED	include/surfaceflinger/ISurfaceComposer.h	/^        BOOT_FINISHED = IBinder::FIRST_CALL_TRANSACTION,$/;"	e	enum:android::BnSurfaceComposer::__anon177
BnSurfaceComposer	include/surfaceflinger/ISurfaceComposer.h	/^class BnSurfaceComposer : public BnInterface<ISurfaceComposer>$/;"	c	namespace:android
CAPTURE_SCREEN	include/surfaceflinger/ISurfaceComposer.h	/^        CAPTURE_SCREEN,$/;"	e	enum:android::BnSurfaceComposer::__anon177
CLOSE_GLOBAL_TRANSACTION	include/surfaceflinger/ISurfaceComposer.h	/^        CLOSE_GLOBAL_TRANSACTION,$/;"	e	enum:android::BnSurfaceComposer::__anon177
CREATE_CLIENT_CONNECTION	include/surfaceflinger/ISurfaceComposer.h	/^        CREATE_CLIENT_CONNECTION,$/;"	e	enum:android::BnSurfaceComposer::__anon177
CREATE_CONNECTION	include/surfaceflinger/ISurfaceComposer.h	/^        CREATE_CONNECTION,$/;"	e	enum:android::BnSurfaceComposer::__anon177
FREEZE_DISPLAY	include/surfaceflinger/ISurfaceComposer.h	/^        FREEZE_DISPLAY,$/;"	e	enum:android::BnSurfaceComposer::__anon177
GET_CBLK	include/surfaceflinger/ISurfaceComposer.h	/^        GET_CBLK,$/;"	e	enum:android::BnSurfaceComposer::__anon177
ISurfaceComposer	include/surfaceflinger/ISurfaceComposer.h	/^class ISurfaceComposer : public IInterface$/;"	c	namespace:android
OPEN_GLOBAL_TRANSACTION	include/surfaceflinger/ISurfaceComposer.h	/^        OPEN_GLOBAL_TRANSACTION,$/;"	e	enum:android::BnSurfaceComposer::__anon177
SET_ORIENTATION	include/surfaceflinger/ISurfaceComposer.h	/^        SET_ORIENTATION,$/;"	e	enum:android::BnSurfaceComposer::__anon177
SIGNAL	include/surfaceflinger/ISurfaceComposer.h	/^        SIGNAL,$/;"	e	enum:android::BnSurfaceComposer::__anon177
TURN_ELECTRON_BEAM_OFF	include/surfaceflinger/ISurfaceComposer.h	/^        TURN_ELECTRON_BEAM_OFF,$/;"	e	enum:android::BnSurfaceComposer::__anon177
TURN_ELECTRON_BEAM_ON	include/surfaceflinger/ISurfaceComposer.h	/^        TURN_ELECTRON_BEAM_ON$/;"	e	enum:android::BnSurfaceComposer::__anon177
UNFREEZE_DISPLAY	include/surfaceflinger/ISurfaceComposer.h	/^        UNFREEZE_DISPLAY,$/;"	e	enum:android::BnSurfaceComposer::__anon177
android	include/surfaceflinger/ISurfaceComposer.h	/^namespace android {$/;"	n
eAlphaChanged	include/surfaceflinger/ISurfaceComposer.h	/^        eAlphaChanged               = 0x00000008,$/;"	e	enum:android::ISurfaceComposer::__anon172
eDestroyBackbuffer	include/surfaceflinger/ISurfaceComposer.h	/^        eDestroyBackbuffer  = 0x00000020,$/;"	e	enum:android::ISurfaceComposer::__anon171
eElectronBeamAnimationOff	include/surfaceflinger/ISurfaceComposer.h	/^        eElectronBeamAnimationOff = 0x10$/;"	e	enum:android::ISurfaceComposer::__anon175
eElectronBeamAnimationOn	include/surfaceflinger/ISurfaceComposer.h	/^        eElectronBeamAnimationOn  = 0x01,$/;"	e	enum:android::ISurfaceComposer::__anon175
eFXSurfaceBlur	include/surfaceflinger/ISurfaceComposer.h	/^        eFXSurfaceBlur      = 0x00010000,$/;"	e	enum:android::ISurfaceComposer::__anon171
eFXSurfaceDim	include/surfaceflinger/ISurfaceComposer.h	/^        eFXSurfaceDim       = 0x00020000,$/;"	e	enum:android::ISurfaceComposer::__anon171
eFXSurfaceMask	include/surfaceflinger/ISurfaceComposer.h	/^        eFXSurfaceMask      = 0x000F0000,$/;"	e	enum:android::ISurfaceComposer::__anon171
eFXSurfaceNormal	include/surfaceflinger/ISurfaceComposer.h	/^        eFXSurfaceNormal    = 0x00000000,$/;"	e	enum:android::ISurfaceComposer::__anon171
eFreezeTintChanged	include/surfaceflinger/ISurfaceComposer.h	/^        eFreezeTintChanged          = 0x00000080,$/;"	e	enum:android::ISurfaceComposer::__anon172
eHidden	include/surfaceflinger/ISurfaceComposer.h	/^        eHidden             = 0x00000004,$/;"	e	enum:android::ISurfaceComposer::__anon171
eLayerBlurFreeze	include/surfaceflinger/ISurfaceComposer.h	/^        eLayerBlurFreeze    = 0x10$/;"	e	enum:android::ISurfaceComposer::__anon173
eLayerChanged	include/surfaceflinger/ISurfaceComposer.h	/^        eLayerChanged               = 0x00000002,$/;"	e	enum:android::ISurfaceComposer::__anon172
eLayerDither	include/surfaceflinger/ISurfaceComposer.h	/^        eLayerDither        = 0x04,$/;"	e	enum:android::ISurfaceComposer::__anon173
eLayerFilter	include/surfaceflinger/ISurfaceComposer.h	/^        eLayerFilter        = 0x08,$/;"	e	enum:android::ISurfaceComposer::__anon173
eLayerFrozen	include/surfaceflinger/ISurfaceComposer.h	/^        eLayerFrozen        = 0x02,$/;"	e	enum:android::ISurfaceComposer::__anon173
eLayerHidden	include/surfaceflinger/ISurfaceComposer.h	/^        eLayerHidden        = 0x01,$/;"	e	enum:android::ISurfaceComposer::__anon173
eMatrixChanged	include/surfaceflinger/ISurfaceComposer.h	/^        eMatrixChanged              = 0x00000010,$/;"	e	enum:android::ISurfaceComposer::__anon172
eNonPremultiplied	include/surfaceflinger/ISurfaceComposer.h	/^        eNonPremultiplied   = 0x00000100,$/;"	e	enum:android::ISurfaceComposer::__anon171
eOrientation180	include/surfaceflinger/ISurfaceComposer.h	/^        eOrientation180         = 2,$/;"	e	enum:android::ISurfaceComposer::__anon174
eOrientation270	include/surfaceflinger/ISurfaceComposer.h	/^        eOrientation270         = 3,$/;"	e	enum:android::ISurfaceComposer::__anon174
eOrientation90	include/surfaceflinger/ISurfaceComposer.h	/^        eOrientation90          = 1,$/;"	e	enum:android::ISurfaceComposer::__anon174
eOrientationAnimationDisable	include/surfaceflinger/ISurfaceComposer.h	/^        eOrientationAnimationDisable = 0x00000001$/;"	e	enum:android::ISurfaceComposer::__anon176
eOrientationDefault	include/surfaceflinger/ISurfaceComposer.h	/^        eOrientationDefault     = 0,$/;"	e	enum:android::ISurfaceComposer::__anon174
eOrientationSwapMask	include/surfaceflinger/ISurfaceComposer.h	/^        eOrientationSwapMask    = 0x01$/;"	e	enum:android::ISurfaceComposer::__anon174
ePositionChanged	include/surfaceflinger/ISurfaceComposer.h	/^        ePositionChanged            = 0x00000001,$/;"	e	enum:android::ISurfaceComposer::__anon172
ePushBuffers	include/surfaceflinger/ISurfaceComposer.h	/^        ePushBuffers        = 0x00000200,$/;"	e	enum:android::ISurfaceComposer::__anon171
eSecure	include/surfaceflinger/ISurfaceComposer.h	/^        eSecure             = 0x00000080,$/;"	e	enum:android::ISurfaceComposer::__anon171
eSizeChanged	include/surfaceflinger/ISurfaceComposer.h	/^        eSizeChanged                = 0x00000004,$/;"	e	enum:android::ISurfaceComposer::__anon172
eTransparentRegionChanged	include/surfaceflinger/ISurfaceComposer.h	/^        eTransparentRegionChanged   = 0x00000020,$/;"	e	enum:android::ISurfaceComposer::__anon172
eVisibilityChanged	include/surfaceflinger/ISurfaceComposer.h	/^        eVisibilityChanged          = 0x00000040,$/;"	e	enum:android::ISurfaceComposer::__anon172
ANDROID_SF_ISURFACE_COMPOSER_CLIENT_H	include/surfaceflinger/ISurfaceComposerClient.h	18;"	d
BnSurfaceComposerClient	include/surfaceflinger/ISurfaceComposerClient.h	/^class BnSurfaceComposerClient : public BnInterface<ISurfaceComposerClient>$/;"	c	namespace:android
ClientID	include/surfaceflinger/ISurfaceComposerClient.h	/^typedef int32_t    ClientID;$/;"	t	namespace:android
DisplayID	include/surfaceflinger/ISurfaceComposerClient.h	/^typedef int32_t    DisplayID;$/;"	t	namespace:android
ISurfaceComposerClient	include/surfaceflinger/ISurfaceComposerClient.h	/^class ISurfaceComposerClient : public IInterface$/;"	c	namespace:android
android	include/surfaceflinger/ISurfaceComposerClient.h	/^namespace android {$/;"	n
format	include/surfaceflinger/ISurfaceComposerClient.h	/^        uint32_t            format;$/;"	m	struct:android::ISurfaceComposerClient::surface_data_t
height	include/surfaceflinger/ISurfaceComposerClient.h	/^        uint32_t            height;$/;"	m	struct:android::ISurfaceComposerClient::surface_data_t
identity	include/surfaceflinger/ISurfaceComposerClient.h	/^        int32_t             identity;$/;"	m	struct:android::ISurfaceComposerClient::surface_data_t
surface_data_t	include/surfaceflinger/ISurfaceComposerClient.h	/^    struct surface_data_t {$/;"	s	class:android::ISurfaceComposerClient
token	include/surfaceflinger/ISurfaceComposerClient.h	/^        int32_t             token;$/;"	m	struct:android::ISurfaceComposerClient::surface_data_t
width	include/surfaceflinger/ISurfaceComposerClient.h	/^        uint32_t            width;$/;"	m	struct:android::ISurfaceComposerClient::surface_data_t
ANDROID_SF_SURFACE_H	include/surfaceflinger/Surface.h	18;"	d
ANDROID_VIEW_SURFACE_JNI_ID	include/surfaceflinger/Surface.h	34;"	d
BufferInfo	include/surfaceflinger/Surface.h	/^    class BufferInfo {$/;"	c	class:android::Surface
GEOMETRY	include/surfaceflinger/Surface.h	/^            GEOMETRY = 0x01$/;"	e	enum:android::Surface::BufferInfo::__anon170
Surface	include/surfaceflinger/Surface.h	/^class Surface $/;"	c	namespace:android
SurfaceControl	include/surfaceflinger/Surface.h	/^class SurfaceControl : public RefBase$/;"	c	namespace:android
SurfaceInfo	include/surfaceflinger/Surface.h	/^    struct SurfaceInfo {$/;"	s	class:android::Surface
android	include/surfaceflinger/Surface.h	/^namespace android {$/;"	n
bits	include/surfaceflinger/Surface.h	/^        void*       bits;$/;"	m	struct:android::Surface::SurfaceInfo
format	include/surfaceflinger/Surface.h	/^        PixelFormat format;$/;"	m	struct:android::Surface::SurfaceInfo
getBufferMapper	include/surfaceflinger/Surface.h	/^    inline GraphicBufferMapper& getBufferMapper() { return mBufferMapper; }$/;"	f	class:android::Surface
getBufferMapper	include/surfaceflinger/Surface.h	/^    inline const GraphicBufferMapper& getBufferMapper() const { return mBufferMapper; }$/;"	f	class:android::Surface
getFlags	include/surfaceflinger/Surface.h	/^    uint32_t    getFlags() const    { return mFlags; }$/;"	f	class:android::Surface
getFlags	include/surfaceflinger/Surface.h	/^    uint32_t    getFlags() const { return mFlags; }$/;"	f	class:android::SurfaceControl
getISurface	include/surfaceflinger/Surface.h	/^    const sp<ISurface>& getISurface() const { return mSurface; }$/;"	f	class:android::SurfaceControl
getIdentity	include/surfaceflinger/Surface.h	/^    uint32_t    getIdentity() const { return mIdentity; }$/;"	f	class:android::Surface
getIdentity	include/surfaceflinger/Surface.h	/^    uint32_t    getIdentity() const { return mIdentity; }$/;"	f	class:android::SurfaceControl
h	include/surfaceflinger/Surface.h	/^        uint32_t    h;$/;"	m	struct:android::Surface::SurfaceInfo
isValid	include/surfaceflinger/Surface.h	/^    bool isValid() {$/;"	f	class:android::SurfaceControl
isValid	include/surfaceflinger/Surface.h	/^    static bool isValid(const sp<Surface>& surface) {$/;"	f	class:android::Surface
isValid	include/surfaceflinger/Surface.h	/^    static bool isValid(const sp<SurfaceControl>& surface) {$/;"	f	class:android::SurfaceControl
mApiLock	include/surfaceflinger/Surface.h	/^    mutable Mutex               mApiLock;$/;"	m	class:android::Surface
mBufferInfo	include/surfaceflinger/Surface.h	/^    BufferInfo                  mBufferInfo;$/;"	m	class:android::Surface
mBufferMapper	include/surfaceflinger/Surface.h	/^    GraphicBufferMapper&        mBufferMapper;$/;"	m	class:android::Surface
mBuffers	include/surfaceflinger/Surface.h	/^    Vector< sp<GraphicBuffer> > mBuffers;$/;"	m	class:android::Surface
mClient	include/surfaceflinger/Surface.h	/^    SurfaceClient&              mClient;$/;"	m	class:android::Surface
mClient	include/surfaceflinger/Surface.h	/^    sp<SurfaceComposerClient>   mClient;$/;"	m	class:android::SurfaceControl
mConnected	include/surfaceflinger/Surface.h	/^    int                         mConnected;$/;"	m	class:android::Surface
mDirty	include/surfaceflinger/Surface.h	/^        mutable uint32_t mDirty;$/;"	m	class:android::Surface::BufferInfo
mDirtyRegion	include/surfaceflinger/Surface.h	/^    mutable Region              mDirtyRegion;$/;"	m	class:android::Surface
mFlags	include/surfaceflinger/Surface.h	/^    uint32_t                    mFlags;$/;"	m	class:android::Surface
mFlags	include/surfaceflinger/Surface.h	/^    uint32_t                    mFlags;$/;"	m	class:android::SurfaceControl
mFormat	include/surfaceflinger/Surface.h	/^        uint32_t mFormat;$/;"	m	class:android::Surface::BufferInfo
mFormat	include/surfaceflinger/Surface.h	/^    PixelFormat                 mFormat;$/;"	m	class:android::Surface
mFormat	include/surfaceflinger/Surface.h	/^    PixelFormat                 mFormat;$/;"	m	class:android::SurfaceControl
mHeight	include/surfaceflinger/Surface.h	/^        uint32_t mHeight;$/;"	m	class:android::Surface::BufferInfo
mHeight	include/surfaceflinger/Surface.h	/^    uint32_t                    mHeight;$/;"	m	class:android::Surface
mHeight	include/surfaceflinger/Surface.h	/^    uint32_t                    mHeight;$/;"	m	class:android::SurfaceControl
mIdentity	include/surfaceflinger/Surface.h	/^    uint32_t                    mIdentity;$/;"	m	class:android::Surface
mIdentity	include/surfaceflinger/Surface.h	/^    uint32_t                    mIdentity;$/;"	m	class:android::SurfaceControl
mInitCheck	include/surfaceflinger/Surface.h	/^    status_t                    mInitCheck;$/;"	m	class:android::Surface
mLock	include/surfaceflinger/Surface.h	/^    mutable Mutex               mLock;$/;"	m	class:android::SurfaceControl
mLockedBuffer	include/surfaceflinger/Surface.h	/^    sp<GraphicBuffer>           mLockedBuffer;$/;"	m	class:android::Surface
mNextBufferCrop	include/surfaceflinger/Surface.h	/^    Rect                        mNextBufferCrop;$/;"	m	class:android::Surface
mNextBufferTransform	include/surfaceflinger/Surface.h	/^    uint32_t                    mNextBufferTransform;$/;"	m	class:android::Surface
mOldDirtyRegion	include/surfaceflinger/Surface.h	/^    mutable Region              mOldDirtyRegion;$/;"	m	class:android::Surface
mPostedBuffer	include/surfaceflinger/Surface.h	/^    sp<GraphicBuffer>           mPostedBuffer;$/;"	m	class:android::Surface
mReserved	include/surfaceflinger/Surface.h	/^    bool                        mReserved;$/;"	m	class:android::Surface
mSharedBufferClient	include/surfaceflinger/Surface.h	/^    SharedBufferClient*         mSharedBufferClient;$/;"	m	class:android::Surface
mSurface	include/surfaceflinger/Surface.h	/^    sp<ISurface>                mSurface;$/;"	m	class:android::Surface
mSurface	include/surfaceflinger/Surface.h	/^    sp<ISurface>                mSurface;$/;"	m	class:android::SurfaceControl
mSurfaceData	include/surfaceflinger/Surface.h	/^    mutable sp<Surface>         mSurfaceData;$/;"	m	class:android::SurfaceControl
mSurfaceLock	include/surfaceflinger/Surface.h	/^    mutable Mutex               mSurfaceLock;$/;"	m	class:android::Surface
mSwapRectangle	include/surfaceflinger/Surface.h	/^    Rect                        mSwapRectangle;$/;"	m	class:android::Surface
mToken	include/surfaceflinger/Surface.h	/^    SurfaceID                   mToken;$/;"	m	class:android::SurfaceControl
mUsage	include/surfaceflinger/Surface.h	/^        uint32_t mUsage;$/;"	m	class:android::Surface::BufferInfo
mWidth	include/surfaceflinger/Surface.h	/^        uint32_t mWidth;$/;"	m	class:android::Surface::BufferInfo
mWidth	include/surfaceflinger/Surface.h	/^    uint32_t                    mWidth;$/;"	m	class:android::Surface
mWidth	include/surfaceflinger/Surface.h	/^    uint32_t                    mWidth;$/;"	m	class:android::SurfaceControl
reserved	include/surfaceflinger/Surface.h	/^        uint32_t    reserved[2];$/;"	m	struct:android::Surface::SurfaceInfo
s	include/surfaceflinger/Surface.h	/^        uint32_t    s;$/;"	m	struct:android::Surface::SurfaceInfo
sCachedSurfaces	include/surfaceflinger/Surface.h	/^    static DefaultKeyedVector<wp<IBinder>, wp<Surface> > sCachedSurfaces;$/;"	m	class:android::Surface
sCachedSurfacesLock	include/surfaceflinger/Surface.h	/^    static Mutex sCachedSurfacesLock;$/;"	m	class:android::Surface
usage	include/surfaceflinger/Surface.h	/^        uint32_t    usage;$/;"	m	struct:android::Surface::SurfaceInfo
w	include/surfaceflinger/Surface.h	/^        uint32_t    w;$/;"	m	struct:android::Surface::SurfaceInfo
ANDROID_SF_SURFACE_COMPOSER_CLIENT_H	include/surfaceflinger/SurfaceComposerClient.h	18;"	d
ComposerService	include/surfaceflinger/SurfaceComposerClient.h	/^class ComposerService : public Singleton<ComposerService>$/;"	c	namespace:android
ScreenshotClient	include/surfaceflinger/SurfaceComposerClient.h	/^class ScreenshotClient$/;"	c	namespace:android
SurfaceComposerClient	include/surfaceflinger/SurfaceComposerClient.h	/^class SurfaceComposerClient : public RefBase$/;"	c	namespace:android
android	include/surfaceflinger/SurfaceComposerClient.h	/^namespace android {$/;"	n
mClient	include/surfaceflinger/SurfaceComposerClient.h	/^                sp<ISurfaceComposerClient>  mClient;$/;"	m	class:android::SurfaceComposerClient
mComposerService	include/surfaceflinger/SurfaceComposerClient.h	/^    sp<ISurfaceComposer> mComposerService;$/;"	m	class:android::ComposerService
mFormat	include/surfaceflinger/SurfaceComposerClient.h	/^    PixelFormat mFormat;$/;"	m	class:android::ScreenshotClient
mHeap	include/surfaceflinger/SurfaceComposerClient.h	/^    sp<IMemoryHeap> mHeap;$/;"	m	class:android::ScreenshotClient
mHeight	include/surfaceflinger/SurfaceComposerClient.h	/^    uint32_t mHeight;$/;"	m	class:android::ScreenshotClient
mLock	include/surfaceflinger/SurfaceComposerClient.h	/^    mutable     Mutex                               mLock;$/;"	m	class:android::SurfaceComposerClient
mPrebuiltLayerState	include/surfaceflinger/SurfaceComposerClient.h	/^                layer_state_t*                      mPrebuiltLayerState;$/;"	m	class:android::SurfaceComposerClient
mServerCblk	include/surfaceflinger/SurfaceComposerClient.h	/^    surface_flinger_cblk_t volatile* mServerCblk;$/;"	m	class:android::ComposerService
mServerCblkMemory	include/surfaceflinger/SurfaceComposerClient.h	/^    sp<IMemoryHeap> mServerCblkMemory;$/;"	m	class:android::ComposerService
mStates	include/surfaceflinger/SurfaceComposerClient.h	/^                SortedVector<layer_state_t>         mStates;$/;"	m	class:android::SurfaceComposerClient
mStatus	include/surfaceflinger/SurfaceComposerClient.h	/^                status_t                    mStatus;$/;"	m	class:android::SurfaceComposerClient
mTransactionOpen	include/surfaceflinger/SurfaceComposerClient.h	/^                int32_t                             mTransactionOpen;$/;"	m	class:android::SurfaceComposerClient
mWidth	include/surfaceflinger/SurfaceComposerClient.h	/^    uint32_t mWidth;$/;"	m	class:android::ScreenshotClient
FrameworkClient	include/sysutils/FrameworkClient.h	/^class FrameworkClient {$/;"	c
FrameworkClientCollection	include/sysutils/FrameworkClient.h	/^typedef android::List<FrameworkClient *> FrameworkClientCollection;$/;"	t
_FRAMEWORK_CLIENT_H	include/sysutils/FrameworkClient.h	2;"	d
mSocket	include/sysutils/FrameworkClient.h	/^    int             mSocket;$/;"	m	class:FrameworkClient
mWriteMutex	include/sysutils/FrameworkClient.h	/^    pthread_mutex_t mWriteMutex;$/;"	m	class:FrameworkClient
~FrameworkClient	include/sysutils/FrameworkClient.h	/^    virtual ~FrameworkClient() {}$/;"	f	class:FrameworkClient
FrameworkCommand	include/sysutils/FrameworkCommand.h	/^class FrameworkCommand { $/;"	c
FrameworkCommandCollection	include/sysutils/FrameworkCommand.h	/^typedef android::List<FrameworkCommand *> FrameworkCommandCollection;$/;"	t
__FRAMEWORK_CMD_HANDLER_H	include/sysutils/FrameworkCommand.h	17;"	d
getCommand	include/sysutils/FrameworkCommand.h	/^    const char *getCommand() { return mCommand; }$/;"	f	class:FrameworkCommand
mCommand	include/sysutils/FrameworkCommand.h	/^    const char *mCommand;$/;"	m	class:FrameworkCommand
~FrameworkCommand	include/sysutils/FrameworkCommand.h	/^    virtual ~FrameworkCommand() { }$/;"	f	class:FrameworkCommand
CMD_ARGS_MAX	include/sysutils/FrameworkListener.h	/^    static const int CMD_ARGS_MAX = 16;$/;"	m	class:FrameworkListener
FrameworkListener	include/sysutils/FrameworkListener.h	/^class FrameworkListener : public SocketListener {$/;"	c
_FRAMEWORKSOCKETLISTENER_H	include/sysutils/FrameworkListener.h	17;"	d
mCommands	include/sysutils/FrameworkListener.h	/^    FrameworkCommandCollection *mCommands;$/;"	m	class:FrameworkListener
~FrameworkListener	include/sysutils/FrameworkListener.h	/^    virtual ~FrameworkListener() {}$/;"	f	class:FrameworkListener
NL_PARAMS_MAX	include/sysutils/NetlinkEvent.h	19;"	d
NetlinkEvent	include/sysutils/NetlinkEvent.h	/^class NetlinkEvent {$/;"	c
NlActionAdd	include/sysutils/NetlinkEvent.h	/^    const static int NlActionAdd;$/;"	m	class:NetlinkEvent
NlActionChange	include/sysutils/NetlinkEvent.h	/^    const static int NlActionChange;$/;"	m	class:NetlinkEvent
NlActionRemove	include/sysutils/NetlinkEvent.h	/^    const static int NlActionRemove;$/;"	m	class:NetlinkEvent
NlActionUnknown	include/sysutils/NetlinkEvent.h	/^    const static int NlActionUnknown;$/;"	m	class:NetlinkEvent
_NETLINKEVENT_H	include/sysutils/NetlinkEvent.h	17;"	d
getAction	include/sysutils/NetlinkEvent.h	/^    int getAction() { return mAction; }$/;"	f	class:NetlinkEvent
getSubsystem	include/sysutils/NetlinkEvent.h	/^    const char *getSubsystem() { return mSubsystem; }$/;"	f	class:NetlinkEvent
mAction	include/sysutils/NetlinkEvent.h	/^    int  mAction;$/;"	m	class:NetlinkEvent
mParams	include/sysutils/NetlinkEvent.h	/^    char *mParams[NL_PARAMS_MAX];$/;"	m	class:NetlinkEvent
mPath	include/sysutils/NetlinkEvent.h	/^    char *mPath;$/;"	m	class:NetlinkEvent
mSeq	include/sysutils/NetlinkEvent.h	/^    int  mSeq;$/;"	m	class:NetlinkEvent
mSubsystem	include/sysutils/NetlinkEvent.h	/^    char *mSubsystem;$/;"	m	class:NetlinkEvent
NetlinkListener	include/sysutils/NetlinkListener.h	/^class NetlinkListener : public SocketListener {$/;"	c
_NETLINKLISTENER_H	include/sysutils/NetlinkListener.h	17;"	d
mBuffer	include/sysutils/NetlinkListener.h	/^    char mBuffer[64 * 1024];$/;"	m	class:NetlinkListener
~NetlinkListener	include/sysutils/NetlinkListener.h	/^    virtual ~NetlinkListener() {}$/;"	f	class:NetlinkListener
ServiceManager	include/sysutils/ServiceManager.h	/^class ServiceManager {$/;"	c
_SERVICE_MANAGER_H	include/sysutils/ServiceManager.h	18;"	d
~ServiceManager	include/sysutils/ServiceManager.h	/^    virtual ~ServiceManager() {}$/;"	f	class:ServiceManager
SocketClient	include/sysutils/SocketClient.h	/^class SocketClient {$/;"	c
SocketClientCollection	include/sysutils/SocketClient.h	/^typedef android::List<SocketClient *> SocketClientCollection;$/;"	t
_SOCKET_CLIENT_H	include/sysutils/SocketClient.h	2;"	d
getGid	include/sysutils/SocketClient.h	/^    gid_t getGid() const { return mGid; }$/;"	f	class:SocketClient
getPid	include/sysutils/SocketClient.h	/^    pid_t getPid() const { return mPid; }$/;"	f	class:SocketClient
getSocket	include/sysutils/SocketClient.h	/^    int getSocket() { return mSocket; }$/;"	f	class:SocketClient
getUid	include/sysutils/SocketClient.h	/^    uid_t getUid() const { return mUid; }$/;"	f	class:SocketClient
mGid	include/sysutils/SocketClient.h	/^    gid_t mGid;$/;"	m	class:SocketClient
mPid	include/sysutils/SocketClient.h	/^    pid_t mPid;$/;"	m	class:SocketClient
mSocket	include/sysutils/SocketClient.h	/^    int             mSocket;$/;"	m	class:SocketClient
mUid	include/sysutils/SocketClient.h	/^    uid_t mUid;$/;"	m	class:SocketClient
mWriteMutex	include/sysutils/SocketClient.h	/^    pthread_mutex_t mWriteMutex;$/;"	m	class:SocketClient
~SocketClient	include/sysutils/SocketClient.h	/^    virtual ~SocketClient() {}$/;"	f	class:SocketClient
SocketListener	include/sysutils/SocketListener.h	/^class SocketListener {$/;"	c
_SOCKETLISTENER_H	include/sysutils/SocketListener.h	17;"	d
mClients	include/sysutils/SocketListener.h	/^    SocketClientCollection  *mClients;$/;"	m	class:SocketListener
mClientsLock	include/sysutils/SocketListener.h	/^    pthread_mutex_t         mClientsLock;$/;"	m	class:SocketListener
mCtrlPipe	include/sysutils/SocketListener.h	/^    int                     mCtrlPipe[2];$/;"	m	class:SocketListener
mListen	include/sysutils/SocketListener.h	/^    bool                    mListen;$/;"	m	class:SocketListener
mSock	include/sysutils/SocketListener.h	/^    int                     mSock;$/;"	m	class:SocketListener
mSocketName	include/sysutils/SocketListener.h	/^    const char              *mSocketName;$/;"	m	class:SocketListener
mThread	include/sysutils/SocketListener.h	/^    pthread_t               mThread;$/;"	m	class:SocketListener
ANDROID_TTS_ENGINE_PROPERTY_CONFIG	include/tts/TtsEngine.h	29;"	d
ANDROID_TTS_ENGINE_PROPERTY_PITCH	include/tts/TtsEngine.h	30;"	d
ANDROID_TTS_ENGINE_PROPERTY_RATE	include/tts/TtsEngine.h	31;"	d
ANDROID_TTS_ENGINE_PROPERTY_VOLUME	include/tts/TtsEngine.h	32;"	d
TTS_CALLBACK_CONTINUE	include/tts/TtsEngine.h	/^    TTS_CALLBACK_CONTINUE       = 1$/;"	e	enum:android::tts_callback_status
TTS_CALLBACK_HALT	include/tts/TtsEngine.h	/^    TTS_CALLBACK_HALT           = 0,$/;"	e	enum:android::tts_callback_status
TTS_FAILURE	include/tts/TtsEngine.h	/^    TTS_FAILURE                 = -1,$/;"	e	enum:android::tts_result
TTS_FEATURE_UNSUPPORTED	include/tts/TtsEngine.h	/^    TTS_FEATURE_UNSUPPORTED     = -2,$/;"	e	enum:android::tts_result
TTS_LANG_AVAILABLE	include/tts/TtsEngine.h	/^    TTS_LANG_AVAILABLE = 0,$/;"	e	enum:android::tts_support_result
TTS_LANG_COUNTRY_AVAILABLE	include/tts/TtsEngine.h	/^    TTS_LANG_COUNTRY_AVAILABLE = 1,$/;"	e	enum:android::tts_support_result
TTS_LANG_COUNTRY_VAR_AVAILABLE	include/tts/TtsEngine.h	/^    TTS_LANG_COUNTRY_VAR_AVAILABLE = 2,$/;"	e	enum:android::tts_support_result
TTS_LANG_MISSING_DATA	include/tts/TtsEngine.h	/^    TTS_LANG_MISSING_DATA = -1,$/;"	e	enum:android::tts_support_result
TTS_LANG_NOT_SUPPORTED	include/tts/TtsEngine.h	/^    TTS_LANG_NOT_SUPPORTED = -2$/;"	e	enum:android::tts_support_result
TTS_MISSING_RESOURCES	include/tts/TtsEngine.h	/^    TTS_MISSING_RESOURCES       = -6$/;"	e	enum:android::tts_result
TTS_PROPERTY_SIZE_TOO_SMALL	include/tts/TtsEngine.h	/^    TTS_PROPERTY_SIZE_TOO_SMALL = -5,$/;"	e	enum:android::tts_result
TTS_PROPERTY_UNSUPPORTED	include/tts/TtsEngine.h	/^    TTS_PROPERTY_UNSUPPORTED    = -4,$/;"	e	enum:android::tts_result
TTS_SUCCESS	include/tts/TtsEngine.h	/^    TTS_SUCCESS                 = 0,$/;"	e	enum:android::tts_result
TTS_SYNTH_DONE	include/tts/TtsEngine.h	/^    TTS_SYNTH_DONE              = 0,$/;"	e	enum:android::tts_synth_status
TTS_SYNTH_PENDING	include/tts/TtsEngine.h	/^    TTS_SYNTH_PENDING           = 1$/;"	e	enum:android::tts_synth_status
TTS_VALUE_INVALID	include/tts/TtsEngine.h	/^    TTS_VALUE_INVALID           = -3,$/;"	e	enum:android::tts_result
TtsEngine	include/tts/TtsEngine.h	/^class TtsEngine$/;"	c	namespace:android
android	include/tts/TtsEngine.h	/^namespace android {$/;"	n
synthDoneCB_t	include/tts/TtsEngine.h	/^typedef tts_callback_status (synthDoneCB_t)(void *&, uint32_t,$/;"	t	namespace:android
tts_callback_status	include/tts/TtsEngine.h	/^enum tts_callback_status {$/;"	g	namespace:android
tts_result	include/tts/TtsEngine.h	/^enum tts_result {$/;"	g	namespace:android
tts_support_result	include/tts/TtsEngine.h	/^enum tts_support_result {$/;"	g	namespace:android
tts_synth_status	include/tts/TtsEngine.h	/^enum tts_synth_status {$/;"	g	namespace:android
~TtsEngine	include/tts/TtsEngine.h	/^    virtual ~TtsEngine() {}$/;"	f	class:android::TtsEngine
ANDROID_UI_DISPLAY_INFO_H	include/ui/DisplayInfo.h	19;"	d
DisplayInfo	include/ui/DisplayInfo.h	/^struct DisplayInfo {$/;"	s	namespace:android
android	include/ui/DisplayInfo.h	/^namespace android {$/;"	n
density	include/ui/DisplayInfo.h	/^    float               density;$/;"	m	struct:android::DisplayInfo
fps	include/ui/DisplayInfo.h	/^    float               fps;$/;"	m	struct:android::DisplayInfo
h	include/ui/DisplayInfo.h	/^    uint32_t            h;$/;"	m	struct:android::DisplayInfo
orientation	include/ui/DisplayInfo.h	/^    uint8_t             orientation;$/;"	m	struct:android::DisplayInfo
pixelFormatInfo	include/ui/DisplayInfo.h	/^    PixelFormatInfo     pixelFormatInfo;$/;"	m	struct:android::DisplayInfo
reserved	include/ui/DisplayInfo.h	/^    uint8_t             reserved[3];$/;"	m	struct:android::DisplayInfo
w	include/ui/DisplayInfo.h	/^    uint32_t            w;$/;"	m	struct:android::DisplayInfo
xdpi	include/ui/DisplayInfo.h	/^    float               xdpi;$/;"	m	struct:android::DisplayInfo
ydpi	include/ui/DisplayInfo.h	/^    float               ydpi;$/;"	m	struct:android::DisplayInfo
ANDROID_EGL_NATIVE_SURFACE_H	include/ui/EGLNativeSurface.h	18;"	d
EGLNativeSurface	include/ui/EGLNativeSurface.h	/^    EGLNativeSurface() { $/;"	f	class:android::EGLNativeSurface
EGLNativeSurface	include/ui/EGLNativeSurface.h	/^class EGLNativeSurface : public egl_native_window_t, public LightRefBase<TYPE>$/;"	c	namespace:android
android	include/ui/EGLNativeSurface.h	/^namespace android {$/;"	n
~EGLNativeSurface	include/ui/EGLNativeSurface.h	/^    inline ~EGLNativeSurface() { };$/;"	f	class:android::EGLNativeSurface
ANDROID_UI_EGLUTILS_H	include/ui/EGLUtils.h	19;"	d
EGLUtils	include/ui/EGLUtils.h	/^class EGLUtils$/;"	c	namespace:android
android	include/ui/EGLUtils.h	/^namespace android {$/;"	n
ABS_MT_BLOB_ID	include/ui/EventHub.h	42;"	d
ABS_MT_ORIENTATION	include/ui/EventHub.h	38;"	d
ABS_MT_POSITION_X	include/ui/EventHub.h	39;"	d
ABS_MT_POSITION_Y	include/ui/EventHub.h	40;"	d
ABS_MT_PRESSURE	include/ui/EventHub.h	44;"	d
ABS_MT_TOOL_TYPE	include/ui/EventHub.h	41;"	d
ABS_MT_TOUCH_MAJOR	include/ui/EventHub.h	34;"	d
ABS_MT_TOUCH_MINOR	include/ui/EventHub.h	35;"	d
ABS_MT_TRACKING_ID	include/ui/EventHub.h	43;"	d
ABS_MT_WIDTH_MAJOR	include/ui/EventHub.h	36;"	d
ABS_MT_WIDTH_MINOR	include/ui/EventHub.h	37;"	d
BTN_FIRST	include/ui/EventHub.h	53;"	d
BTN_LAST	include/ui/EventHub.h	54;"	d
DEVICE_ADDED	include/ui/EventHub.h	/^        DEVICE_ADDED = 0x10000000,$/;"	e	enum:android::EventHubInterface::__anon31
DEVICE_REMOVED	include/ui/EventHub.h	/^        DEVICE_REMOVED = 0x20000000,$/;"	e	enum:android::EventHubInterface::__anon31
EventHub	include/ui/EventHub.h	/^class EventHub : public EventHubInterface$/;"	c	namespace:android
EventHubInterface	include/ui/EventHub.h	/^    EventHubInterface() { }$/;"	f	class:android::EventHubInterface
EventHubInterface	include/ui/EventHub.h	/^class EventHubInterface : public virtual RefBase {$/;"	c	namespace:android
FINISHED_DEVICE_SCAN	include/ui/EventHub.h	/^        FINISHED_DEVICE_SCAN = 0x30000000,$/;"	e	enum:android::EventHubInterface::__anon31
INPUT_BUFFER_SIZE	include/ui/EventHub.h	/^    static const int INPUT_BUFFER_SIZE = 64;$/;"	m	class:android::EventHub
INPUT_DEVICE_CLASS_ALPHAKEY	include/ui/EventHub.h	/^    INPUT_DEVICE_CLASS_ALPHAKEY      = 0x00000002,$/;"	e	enum:android::__anon30
INPUT_DEVICE_CLASS_DPAD	include/ui/EventHub.h	/^    INPUT_DEVICE_CLASS_DPAD          = 0x00000020,$/;"	e	enum:android::__anon30
INPUT_DEVICE_CLASS_GAMEPAD	include/ui/EventHub.h	/^    INPUT_DEVICE_CLASS_GAMEPAD       = 0x00000040,$/;"	e	enum:android::__anon30
INPUT_DEVICE_CLASS_KEYBOARD	include/ui/EventHub.h	/^    INPUT_DEVICE_CLASS_KEYBOARD      = 0x00000001,$/;"	e	enum:android::__anon30
INPUT_DEVICE_CLASS_SWITCH	include/ui/EventHub.h	/^    INPUT_DEVICE_CLASS_SWITCH        = 0x00000080,$/;"	e	enum:android::__anon30
INPUT_DEVICE_CLASS_TOUCHSCREEN	include/ui/EventHub.h	/^    INPUT_DEVICE_CLASS_TOUCHSCREEN   = 0x00000004,$/;"	e	enum:android::__anon30
INPUT_DEVICE_CLASS_TOUCHSCREEN_MT	include/ui/EventHub.h	/^    INPUT_DEVICE_CLASS_TOUCHSCREEN_MT= 0x00000010,$/;"	e	enum:android::__anon30
INPUT_DEVICE_CLASS_TRACKBALL	include/ui/EventHub.h	/^    INPUT_DEVICE_CLASS_TRACKBALL     = 0x00000008,$/;"	e	enum:android::__anon30
MT_TOOL_FINGER	include/ui/EventHub.h	46;"	d
MT_TOOL_PEN	include/ui/EventHub.h	47;"	d
RawAbsoluteAxisInfo	include/ui/EventHub.h	/^struct RawAbsoluteAxisInfo {$/;"	s	namespace:android
RawEvent	include/ui/EventHub.h	/^struct RawEvent {$/;"	s	namespace:android
SYN_MT_REPORT	include/ui/EventHub.h	49;"	d
_RUNTIME_EVENT_HUB_H	include/ui/EventHub.h	19;"	d
android	include/ui/EventHub.h	/^namespace android {$/;"	n
classes	include/ui/EventHub.h	/^        uint32_t        classes;$/;"	m	struct:android::EventHub::device_t
clear	include/ui/EventHub.h	/^    inline void clear() {$/;"	f	struct:android::RawAbsoluteAxisInfo
device	include/ui/EventHub.h	/^        device_t* device;$/;"	m	struct:android::EventHub::device_ent
deviceId	include/ui/EventHub.h	/^    int32_t deviceId;$/;"	m	struct:android::RawEvent
device_ent	include/ui/EventHub.h	/^    struct device_ent {$/;"	s	class:android::EventHub
device_t	include/ui/EventHub.h	/^    struct device_t {$/;"	s	class:android::EventHub
fd	include/ui/EventHub.h	/^        int             fd;$/;"	m	struct:android::EventHub::device_t
flags	include/ui/EventHub.h	/^    uint32_t flags;$/;"	m	struct:android::RawEvent
flat	include/ui/EventHub.h	/^    int32_t flat;      \/\/ center flat position, eg. flat == 8 means center is between -8 and 8$/;"	m	struct:android::RawAbsoluteAxisInfo
fuzz	include/ui/EventHub.h	/^    int32_t fuzz;      \/\/ error tolerance, eg. fuzz == 4 means value is +\/- 4 due to noise$/;"	m	struct:android::RawAbsoluteAxisInfo
getRange	include/ui/EventHub.h	/^    inline int32_t getRange() { return maxValue - minValue; }$/;"	f	struct:android::RawAbsoluteAxisInfo
id	include/ui/EventHub.h	/^        const int32_t   id;$/;"	m	struct:android::EventHub::device_t
keyBitmask	include/ui/EventHub.h	/^        uint8_t*        keyBitmask;$/;"	m	struct:android::EventHub::device_t
keyCode	include/ui/EventHub.h	/^    int32_t keyCode;$/;"	m	struct:android::RawEvent
keylayoutFilename	include/ui/EventHub.h	/^        String8         keylayoutFilename;$/;"	m	struct:android::EventHub::device_t
layoutMap	include/ui/EventHub.h	/^        KeyLayoutMap*   layoutMap;$/;"	m	struct:android::EventHub::device_t
mClosingDevices	include/ui/EventHub.h	/^    device_t        *mClosingDevices;$/;"	m	class:android::EventHub
mDevices	include/ui/EventHub.h	/^    device_t        **mDevices;$/;"	m	class:android::EventHub
mDevicesById	include/ui/EventHub.h	/^    device_ent      *mDevicesById;$/;"	m	class:android::EventHub
mError	include/ui/EventHub.h	/^    status_t mError;$/;"	m	class:android::EventHub
mExcludedDevices	include/ui/EventHub.h	/^    List<String8>   mExcludedDevices;$/;"	m	class:android::EventHub
mFDCount	include/ui/EventHub.h	/^    int             mFDCount;$/;"	m	class:android::EventHub
mFDs	include/ui/EventHub.h	/^    struct pollfd   *mFDs;$/;"	m	class:android::EventHub	typeref:struct:android::EventHub::pollfd
mFirstKeyboardId	include/ui/EventHub.h	/^    int32_t         mFirstKeyboardId; \/\/ the API is that the built-in keyboard is id 0, so map it$/;"	m	class:android::EventHub
mHaveFirstKeyboard	include/ui/EventHub.h	/^    bool            mHaveFirstKeyboard;$/;"	m	class:android::EventHub
mInputBufferCount	include/ui/EventHub.h	/^    int32_t mInputBufferCount;$/;"	m	class:android::EventHub
mInputBufferData	include/ui/EventHub.h	/^    struct input_event mInputBufferData[INPUT_BUFFER_SIZE];$/;"	m	class:android::EventHub	typeref:struct:android::EventHub::input_event
mInputBufferIndex	include/ui/EventHub.h	/^    int32_t mInputBufferIndex;$/;"	m	class:android::EventHub
mInputDeviceIndex	include/ui/EventHub.h	/^    int32_t mInputDeviceIndex;$/;"	m	class:android::EventHub
mLock	include/ui/EventHub.h	/^    mutable Mutex   mLock;$/;"	m	class:android::EventHub
mNeedToSendFinishedDeviceScan	include/ui/EventHub.h	/^    bool            mNeedToSendFinishedDeviceScan;$/;"	m	class:android::EventHub
mNumDevicesById	include/ui/EventHub.h	/^    int             mNumDevicesById;$/;"	m	class:android::EventHub
mOpened	include/ui/EventHub.h	/^    bool            mOpened;$/;"	m	class:android::EventHub
mOpeningDevices	include/ui/EventHub.h	/^    device_t        *mOpeningDevices;$/;"	m	class:android::EventHub
mSwitches	include/ui/EventHub.h	/^    int32_t         mSwitches[SW_MAX + 1];$/;"	m	class:android::EventHub
maxValue	include/ui/EventHub.h	/^    int32_t maxValue;  \/\/ maximum value$/;"	m	struct:android::RawAbsoluteAxisInfo
minValue	include/ui/EventHub.h	/^    int32_t minValue;  \/\/ minimum value$/;"	m	struct:android::RawAbsoluteAxisInfo
name	include/ui/EventHub.h	/^        String8         name;$/;"	m	struct:android::EventHub::device_t
next	include/ui/EventHub.h	/^        device_t*       next;$/;"	m	struct:android::EventHub::device_t
path	include/ui/EventHub.h	/^        const String8   path;$/;"	m	struct:android::EventHub::device_t
scanCode	include/ui/EventHub.h	/^    int32_t scanCode;$/;"	m	struct:android::RawEvent
seq	include/ui/EventHub.h	/^        uint32_t seq;$/;"	m	struct:android::EventHub::device_ent
type	include/ui/EventHub.h	/^    int32_t type;$/;"	m	struct:android::RawEvent
valid	include/ui/EventHub.h	/^    bool valid; \/\/ true if the information is valid, false otherwise$/;"	m	struct:android::RawAbsoluteAxisInfo
value	include/ui/EventHub.h	/^    int32_t value;$/;"	m	struct:android::RawEvent
when	include/ui/EventHub.h	/^    nsecs_t when;$/;"	m	struct:android::RawEvent
~EventHubInterface	include/ui/EventHub.h	/^    virtual ~EventHubInterface() { }$/;"	f	class:android::EventHubInterface
ANDROID_FRAMEBUFFER_NATIVE_WINDOW_H	include/ui/FramebufferNativeWindow.h	18;"	d
FramebufferNativeWindow	include/ui/FramebufferNativeWindow.h	/^class FramebufferNativeWindow $/;"	c	namespace:android
android	include/ui/FramebufferNativeWindow.h	/^namespace android {$/;"	n
buffers	include/ui/FramebufferNativeWindow.h	/^    sp<NativeBuffer> buffers[2];$/;"	m	class:android::FramebufferNativeWindow
fbDev	include/ui/FramebufferNativeWindow.h	/^    framebuffer_device_t* fbDev;$/;"	m	class:android::FramebufferNativeWindow
front	include/ui/FramebufferNativeWindow.h	/^    sp<NativeBuffer> front;$/;"	m	class:android::FramebufferNativeWindow
getDevice	include/ui/FramebufferNativeWindow.h	/^    framebuffer_device_t const * getDevice() const { return fbDev; } $/;"	f	class:android::FramebufferNativeWindow
grDev	include/ui/FramebufferNativeWindow.h	/^    alloc_device_t* grDev;$/;"	m	class:android::FramebufferNativeWindow
isUpdateOnDemand	include/ui/FramebufferNativeWindow.h	/^    bool isUpdateOnDemand() const { return mUpdateOnDemand; }$/;"	f	class:android::FramebufferNativeWindow
mBufferHead	include/ui/FramebufferNativeWindow.h	/^    int32_t mBufferHead;$/;"	m	class:android::FramebufferNativeWindow
mCondition	include/ui/FramebufferNativeWindow.h	/^    Condition mCondition;$/;"	m	class:android::FramebufferNativeWindow
mCurrentBufferIndex	include/ui/FramebufferNativeWindow.h	/^    int32_t mCurrentBufferIndex;$/;"	m	class:android::FramebufferNativeWindow
mNumBuffers	include/ui/FramebufferNativeWindow.h	/^    int32_t mNumBuffers;$/;"	m	class:android::FramebufferNativeWindow
mNumFreeBuffers	include/ui/FramebufferNativeWindow.h	/^    int32_t mNumFreeBuffers;$/;"	m	class:android::FramebufferNativeWindow
mUpdateOnDemand	include/ui/FramebufferNativeWindow.h	/^    bool mUpdateOnDemand;$/;"	m	class:android::FramebufferNativeWindow
mutex	include/ui/FramebufferNativeWindow.h	/^    mutable Mutex mutex;$/;"	m	class:android::FramebufferNativeWindow
ANDROID_GRAPHIC_BUFFER_H	include/ui/GraphicBuffer.h	18;"	d
GraphicBuffer	include/ui/GraphicBuffer.h	/^class GraphicBuffer$/;"	c	namespace:android
TRANSFORM_IDENTITY	include/ui/GraphicBuffer.h	/^        TRANSFORM_IDENTITY      = 0,$/;"	e	enum:android::GraphicBuffer::__anon34
TRANSFORM_ROT_180	include/ui/GraphicBuffer.h	/^        TRANSFORM_ROT_180       = HAL_TRANSFORM_ROT_180,$/;"	e	enum:android::GraphicBuffer::__anon34
TRANSFORM_ROT_270	include/ui/GraphicBuffer.h	/^        TRANSFORM_ROT_270       = HAL_TRANSFORM_ROT_270$/;"	e	enum:android::GraphicBuffer::__anon34
TRANSFORM_ROT_90	include/ui/GraphicBuffer.h	/^        TRANSFORM_ROT_90        = HAL_TRANSFORM_ROT_90,$/;"	e	enum:android::GraphicBuffer::__anon34
USAGE_HW_2D	include/ui/GraphicBuffer.h	/^        USAGE_HW_2D             = GRALLOC_USAGE_HW_2D,$/;"	e	enum:android::GraphicBuffer::__anon33
USAGE_HW_MASK	include/ui/GraphicBuffer.h	/^        USAGE_HW_MASK           = GRALLOC_USAGE_HW_MASK$/;"	e	enum:android::GraphicBuffer::__anon33
USAGE_HW_RENDER	include/ui/GraphicBuffer.h	/^        USAGE_HW_RENDER         = GRALLOC_USAGE_HW_RENDER,$/;"	e	enum:android::GraphicBuffer::__anon33
USAGE_HW_TEXTURE	include/ui/GraphicBuffer.h	/^        USAGE_HW_TEXTURE        = GRALLOC_USAGE_HW_TEXTURE,$/;"	e	enum:android::GraphicBuffer::__anon33
USAGE_SOFTWARE_MASK	include/ui/GraphicBuffer.h	/^        USAGE_SOFTWARE_MASK     = USAGE_SW_READ_MASK|USAGE_SW_WRITE_MASK,$/;"	e	enum:android::GraphicBuffer::__anon33
USAGE_SW_READ_MASK	include/ui/GraphicBuffer.h	/^        USAGE_SW_READ_MASK      = GRALLOC_USAGE_SW_READ_MASK,$/;"	e	enum:android::GraphicBuffer::__anon33
USAGE_SW_READ_NEVER	include/ui/GraphicBuffer.h	/^        USAGE_SW_READ_NEVER     = GRALLOC_USAGE_SW_READ_NEVER,$/;"	e	enum:android::GraphicBuffer::__anon33
USAGE_SW_READ_OFTEN	include/ui/GraphicBuffer.h	/^        USAGE_SW_READ_OFTEN     = GRALLOC_USAGE_SW_READ_OFTEN,$/;"	e	enum:android::GraphicBuffer::__anon33
USAGE_SW_READ_RARELY	include/ui/GraphicBuffer.h	/^        USAGE_SW_READ_RARELY    = GRALLOC_USAGE_SW_READ_RARELY,$/;"	e	enum:android::GraphicBuffer::__anon33
USAGE_SW_WRITE_MASK	include/ui/GraphicBuffer.h	/^        USAGE_SW_WRITE_MASK     = GRALLOC_USAGE_SW_WRITE_MASK,$/;"	e	enum:android::GraphicBuffer::__anon33
USAGE_SW_WRITE_NEVER	include/ui/GraphicBuffer.h	/^        USAGE_SW_WRITE_NEVER    = GRALLOC_USAGE_SW_WRITE_NEVER,$/;"	e	enum:android::GraphicBuffer::__anon33
USAGE_SW_WRITE_OFTEN	include/ui/GraphicBuffer.h	/^        USAGE_SW_WRITE_OFTEN    = GRALLOC_USAGE_SW_WRITE_OFTEN,$/;"	e	enum:android::GraphicBuffer::__anon33
USAGE_SW_WRITE_RARELY	include/ui/GraphicBuffer.h	/^        USAGE_SW_WRITE_RARELY   = GRALLOC_USAGE_SW_WRITE_RARELY,$/;"	e	enum:android::GraphicBuffer::__anon33
android	include/ui/GraphicBuffer.h	/^namespace android {$/;"	n
getBounds	include/ui/GraphicBuffer.h	/^    Rect getBounds() const              { return Rect(width, height); }$/;"	f	class:android::GraphicBuffer
getBufferMapper	include/ui/GraphicBuffer.h	/^    inline GraphicBufferMapper& getBufferMapper() {$/;"	f	class:android::GraphicBuffer
getBufferMapper	include/ui/GraphicBuffer.h	/^    inline const GraphicBufferMapper& getBufferMapper() const {$/;"	f	class:android::GraphicBuffer
getHeight	include/ui/GraphicBuffer.h	/^    uint32_t getHeight() const          { return height; }$/;"	f	class:android::GraphicBuffer
getPixelFormat	include/ui/GraphicBuffer.h	/^    PixelFormat getPixelFormat() const  { return format; }$/;"	f	class:android::GraphicBuffer
getStride	include/ui/GraphicBuffer.h	/^    uint32_t getStride() const          { return stride; }$/;"	f	class:android::GraphicBuffer
getTransform	include/ui/GraphicBuffer.h	/^    uint32_t getTransform() const       { return transform; }$/;"	f	class:android::GraphicBuffer
getUsage	include/ui/GraphicBuffer.h	/^    uint32_t getUsage() const           { return usage; }$/;"	f	class:android::GraphicBuffer
getWidth	include/ui/GraphicBuffer.h	/^    uint32_t getWidth() const           { return width; }$/;"	f	class:android::GraphicBuffer
mBufferMapper	include/ui/GraphicBuffer.h	/^    GraphicBufferMapper& mBufferMapper;$/;"	m	class:android::GraphicBuffer
mIndex	include/ui/GraphicBuffer.h	/^    int mIndex;$/;"	m	class:android::GraphicBuffer
mInitCheck	include/ui/GraphicBuffer.h	/^    ssize_t mInitCheck;$/;"	m	class:android::GraphicBuffer
mOwner	include/ui/GraphicBuffer.h	/^    uint8_t mOwner;$/;"	m	class:android::GraphicBuffer
ownData	include/ui/GraphicBuffer.h	/^        ownData   = 2,$/;"	e	enum:android::GraphicBuffer::__anon35
ownHandle	include/ui/GraphicBuffer.h	/^        ownHandle = 1,$/;"	e	enum:android::GraphicBuffer::__anon35
ownNone	include/ui/GraphicBuffer.h	/^        ownNone   = 0,$/;"	e	enum:android::GraphicBuffer::__anon35
ANDROID_BUFFER_ALLOCATOR_H	include/ui/GraphicBufferAllocator.h	19;"	d
GraphicBufferAllocator	include/ui/GraphicBufferAllocator.h	/^class GraphicBufferAllocator : public Singleton<GraphicBufferAllocator>$/;"	c	namespace:android
USAGE_HW_2D	include/ui/GraphicBufferAllocator.h	/^        USAGE_HW_2D             = GRALLOC_USAGE_HW_2D,$/;"	e	enum:android::GraphicBufferAllocator::__anon36
USAGE_HW_MASK	include/ui/GraphicBufferAllocator.h	/^        USAGE_HW_MASK           = GRALLOC_USAGE_HW_MASK$/;"	e	enum:android::GraphicBufferAllocator::__anon36
USAGE_HW_RENDER	include/ui/GraphicBufferAllocator.h	/^        USAGE_HW_RENDER         = GRALLOC_USAGE_HW_RENDER,$/;"	e	enum:android::GraphicBufferAllocator::__anon36
USAGE_HW_TEXTURE	include/ui/GraphicBufferAllocator.h	/^        USAGE_HW_TEXTURE        = GRALLOC_USAGE_HW_TEXTURE,$/;"	e	enum:android::GraphicBufferAllocator::__anon36
USAGE_SOFTWARE_MASK	include/ui/GraphicBufferAllocator.h	/^        USAGE_SOFTWARE_MASK     = USAGE_SW_READ_MASK|USAGE_SW_WRITE_MASK,$/;"	e	enum:android::GraphicBufferAllocator::__anon36
USAGE_SW_READ_MASK	include/ui/GraphicBufferAllocator.h	/^        USAGE_SW_READ_MASK      = GRALLOC_USAGE_SW_READ_MASK,$/;"	e	enum:android::GraphicBufferAllocator::__anon36
USAGE_SW_READ_NEVER	include/ui/GraphicBufferAllocator.h	/^        USAGE_SW_READ_NEVER     = GRALLOC_USAGE_SW_READ_NEVER,$/;"	e	enum:android::GraphicBufferAllocator::__anon36
USAGE_SW_READ_OFTEN	include/ui/GraphicBufferAllocator.h	/^        USAGE_SW_READ_OFTEN     = GRALLOC_USAGE_SW_READ_OFTEN,$/;"	e	enum:android::GraphicBufferAllocator::__anon36
USAGE_SW_READ_RARELY	include/ui/GraphicBufferAllocator.h	/^        USAGE_SW_READ_RARELY    = GRALLOC_USAGE_SW_READ_RARELY,$/;"	e	enum:android::GraphicBufferAllocator::__anon36
USAGE_SW_WRITE_MASK	include/ui/GraphicBufferAllocator.h	/^        USAGE_SW_WRITE_MASK     = GRALLOC_USAGE_SW_WRITE_MASK,$/;"	e	enum:android::GraphicBufferAllocator::__anon36
USAGE_SW_WRITE_NEVER	include/ui/GraphicBufferAllocator.h	/^        USAGE_SW_WRITE_NEVER    = GRALLOC_USAGE_SW_WRITE_NEVER,$/;"	e	enum:android::GraphicBufferAllocator::__anon36
USAGE_SW_WRITE_OFTEN	include/ui/GraphicBufferAllocator.h	/^        USAGE_SW_WRITE_OFTEN    = GRALLOC_USAGE_SW_WRITE_OFTEN,$/;"	e	enum:android::GraphicBufferAllocator::__anon36
USAGE_SW_WRITE_RARELY	include/ui/GraphicBufferAllocator.h	/^        USAGE_SW_WRITE_RARELY   = GRALLOC_USAGE_SW_WRITE_RARELY,$/;"	e	enum:android::GraphicBufferAllocator::__anon36
alloc_rec_t	include/ui/GraphicBufferAllocator.h	/^    struct alloc_rec_t {$/;"	s	class:android::GraphicBufferAllocator
android	include/ui/GraphicBufferAllocator.h	/^namespace android {$/;"	n
format	include/ui/GraphicBufferAllocator.h	/^        PixelFormat format;$/;"	m	struct:android::GraphicBufferAllocator::alloc_rec_t
get	include/ui/GraphicBufferAllocator.h	/^    static inline GraphicBufferAllocator& get() { return getInstance(); }$/;"	f	class:android::GraphicBufferAllocator
h	include/ui/GraphicBufferAllocator.h	/^        uint32_t h;$/;"	m	struct:android::GraphicBufferAllocator::alloc_rec_t
mAllocDev	include/ui/GraphicBufferAllocator.h	/^    alloc_device_t  *mAllocDev;$/;"	m	class:android::GraphicBufferAllocator
s	include/ui/GraphicBufferAllocator.h	/^        uint32_t s;$/;"	m	struct:android::GraphicBufferAllocator::alloc_rec_t
sAllocList	include/ui/GraphicBufferAllocator.h	/^    static KeyedVector<buffer_handle_t, alloc_rec_t> sAllocList;$/;"	m	class:android::GraphicBufferAllocator
sLock	include/ui/GraphicBufferAllocator.h	/^    static Mutex sLock;$/;"	m	class:android::GraphicBufferAllocator
size	include/ui/GraphicBufferAllocator.h	/^        size_t size;$/;"	m	struct:android::GraphicBufferAllocator::alloc_rec_t
usage	include/ui/GraphicBufferAllocator.h	/^        uint32_t usage;$/;"	m	struct:android::GraphicBufferAllocator::alloc_rec_t
w	include/ui/GraphicBufferAllocator.h	/^        uint32_t w;$/;"	m	struct:android::GraphicBufferAllocator::alloc_rec_t
ANDROID_UI_BUFFER_MAPPER_H	include/ui/GraphicBufferMapper.h	18;"	d
GraphicBufferMapper	include/ui/GraphicBufferMapper.h	/^class GraphicBufferMapper : public Singleton<GraphicBufferMapper>$/;"	c	namespace:android
android	include/ui/GraphicBufferMapper.h	/^namespace android {$/;"	n
get	include/ui/GraphicBufferMapper.h	/^    static inline GraphicBufferMapper& get() { return getInstance(); }$/;"	f	class:android::GraphicBufferMapper
mAllocMod	include/ui/GraphicBufferMapper.h	/^    gralloc_module_t const *mAllocMod;$/;"	m	class:android::GraphicBufferMapper
GraphicLog	include/ui/GraphicLog.h	/^class GraphicLog : public Singleton<GraphicLog>$/;"	c	namespace:android
SF_APP_DEQUEUE_AFTER	include/ui/GraphicLog.h	/^        SF_APP_DEQUEUE_AFTER    = 60101,$/;"	e	enum:android::GraphicLog::__anon23
SF_APP_DEQUEUE_BEFORE	include/ui/GraphicLog.h	/^        SF_APP_DEQUEUE_BEFORE   = 60100,$/;"	e	enum:android::GraphicLog::__anon23
SF_APP_LOCK_AFTER	include/ui/GraphicLog.h	/^        SF_APP_LOCK_AFTER       = 60103,$/;"	e	enum:android::GraphicLog::__anon23
SF_APP_LOCK_BEFORE	include/ui/GraphicLog.h	/^        SF_APP_LOCK_BEFORE      = 60102,$/;"	e	enum:android::GraphicLog::__anon23
SF_APP_QUEUE	include/ui/GraphicLog.h	/^        SF_APP_QUEUE            = 60104,$/;"	e	enum:android::GraphicLog::__anon23
SF_COMPOSITION_COMPLETE	include/ui/GraphicLog.h	/^        SF_COMPOSITION_COMPLETE = 60106,$/;"	e	enum:android::GraphicLog::__anon23
SF_FB_DEQUEUE_AFTER	include/ui/GraphicLog.h	/^        SF_FB_DEQUEUE_AFTER     = 60113,$/;"	e	enum:android::GraphicLog::__anon23
SF_FB_DEQUEUE_BEFORE	include/ui/GraphicLog.h	/^        SF_FB_DEQUEUE_BEFORE    = 60112,$/;"	e	enum:android::GraphicLog::__anon23
SF_FB_LOCK_AFTER	include/ui/GraphicLog.h	/^        SF_FB_LOCK_AFTER        = 60115,$/;"	e	enum:android::GraphicLog::__anon23
SF_FB_LOCK_BEFORE	include/ui/GraphicLog.h	/^        SF_FB_LOCK_BEFORE       = 60114,$/;"	e	enum:android::GraphicLog::__anon23
SF_FB_POST_AFTER	include/ui/GraphicLog.h	/^        SF_FB_POST_AFTER        = 60111,$/;"	e	enum:android::GraphicLog::__anon23
SF_FB_POST_BEFORE	include/ui/GraphicLog.h	/^        SF_FB_POST_BEFORE       = 60110,$/;"	e	enum:android::GraphicLog::__anon23
SF_REPAINT	include/ui/GraphicLog.h	/^        SF_REPAINT              = 60105,$/;"	e	enum:android::GraphicLog::__anon23
SF_REPAINT_DONE	include/ui/GraphicLog.h	/^        SF_REPAINT_DONE         = 60109,$/;"	e	enum:android::GraphicLog::__anon23
SF_SWAP_BUFFERS	include/ui/GraphicLog.h	/^        SF_SWAP_BUFFERS         = 60108,$/;"	e	enum:android::GraphicLog::__anon23
SF_UNLOCK_CLIENTS	include/ui/GraphicLog.h	/^        SF_UNLOCK_CLIENTS       = 60107,$/;"	e	enum:android::GraphicLog::__anon23
_UI_GRAPHIC_LOG_H	include/ui/GraphicLog.h	18;"	d
android	include/ui/GraphicLog.h	/^namespace android {$/;"	n
log	include/ui/GraphicLog.h	/^    inline void log(int32_t tag, int32_t buffer) {$/;"	f	class:android::GraphicLog
log	include/ui/GraphicLog.h	/^    inline void log(int32_t tag, int32_t identity, int32_t buffer) {$/;"	f	class:android::GraphicLog
mEnabled	include/ui/GraphicLog.h	/^    int32_t mEnabled;$/;"	m	class:android::GraphicLog
ANDROID_IOVERLAY_H	include/ui/IOverlay.h	18;"	d
BnOverlay	include/ui/IOverlay.h	/^class BnOverlay : public BnInterface<IOverlay>$/;"	c	namespace:android
IOverlay	include/ui/IOverlay.h	/^class IOverlay : public IInterface$/;"	c	namespace:android
android	include/ui/IOverlay.h	/^namespace android {$/;"	n
AInputDevice	include/ui/Input.h	/^struct AInputDevice {$/;"	s
AInputEvent	include/ui/Input.h	/^struct AInputEvent {$/;"	s
AKEY_EVENT_FLAG_START_TRACKING	include/ui/Input.h	/^    AKEY_EVENT_FLAG_START_TRACKING = 0x40000000$/;"	e	enum:__anon43
InputConfiguration	include/ui/Input.h	/^struct InputConfiguration {$/;"	s	namespace:android
InputDeviceInfo	include/ui/Input.h	/^class InputDeviceInfo {$/;"	c	namespace:android
InputEvent	include/ui/Input.h	/^class InputEvent : public AInputEvent {$/;"	c	namespace:android
InputEventFactoryInterface	include/ui/Input.h	/^    InputEventFactoryInterface() { }$/;"	f	class:android::InputEventFactoryInterface
InputEventFactoryInterface	include/ui/Input.h	/^class InputEventFactoryInterface {$/;"	c	namespace:android
KEYBOARD_12KEY	include/ui/Input.h	/^        KEYBOARD_12KEY = 3$/;"	e	enum:android::InputConfiguration::__anon46
KEYBOARD_NOKEYS	include/ui/Input.h	/^        KEYBOARD_NOKEYS = 1,$/;"	e	enum:android::InputConfiguration::__anon46
KEYBOARD_QWERTY	include/ui/Input.h	/^        KEYBOARD_QWERTY = 2,$/;"	e	enum:android::InputConfiguration::__anon46
KEYBOARD_UNDEFINED	include/ui/Input.h	/^        KEYBOARD_UNDEFINED = 0,$/;"	e	enum:android::InputConfiguration::__anon46
KeyEvent	include/ui/Input.h	/^class KeyEvent : public InputEvent {$/;"	c	namespace:android
MAX_POINTERS	include/ui/Input.h	45;"	d
MAX_POINTER_ID	include/ui/Input.h	52;"	d
MotionEvent	include/ui/Input.h	/^class MotionEvent : public InputEvent {$/;"	c	namespace:android
MotionRange	include/ui/Input.h	/^    struct MotionRange {$/;"	s	class:android::InputDeviceInfo
NAVIGATION_DPAD	include/ui/Input.h	/^        NAVIGATION_DPAD = 2,$/;"	e	enum:android::InputConfiguration::__anon47
NAVIGATION_NONAV	include/ui/Input.h	/^        NAVIGATION_NONAV = 1,$/;"	e	enum:android::InputConfiguration::__anon47
NAVIGATION_TRACKBALL	include/ui/Input.h	/^        NAVIGATION_TRACKBALL = 3,$/;"	e	enum:android::InputConfiguration::__anon47
NAVIGATION_UNDEFINED	include/ui/Input.h	/^        NAVIGATION_UNDEFINED = 0,$/;"	e	enum:android::InputConfiguration::__anon47
NAVIGATION_WHEEL	include/ui/Input.h	/^        NAVIGATION_WHEEL = 4$/;"	e	enum:android::InputConfiguration::__anon47
POLICY_FLAG_ALT	include/ui/Input.h	/^    POLICY_FLAG_ALT = 0x00000010,$/;"	e	enum:android::__anon44
POLICY_FLAG_ALT_GR	include/ui/Input.h	/^    POLICY_FLAG_ALT_GR = 0x00000020,$/;"	e	enum:android::__anon44
POLICY_FLAG_BRIGHT_HERE	include/ui/Input.h	/^    POLICY_FLAG_BRIGHT_HERE = 0x20000000,$/;"	e	enum:android::__anon44
POLICY_FLAG_CAPS_LOCK	include/ui/Input.h	/^    POLICY_FLAG_CAPS_LOCK = 0x00000008,$/;"	e	enum:android::__anon44
POLICY_FLAG_INJECTED	include/ui/Input.h	/^    POLICY_FLAG_INJECTED = 0x01000000,$/;"	e	enum:android::__anon44
POLICY_FLAG_LAUNCHER	include/ui/Input.h	/^    POLICY_FLAG_LAUNCHER = 0x00000080,$/;"	e	enum:android::__anon44
POLICY_FLAG_MENU	include/ui/Input.h	/^    POLICY_FLAG_MENU = 0x00000040,$/;"	e	enum:android::__anon44
POLICY_FLAG_PASS_TO_USER	include/ui/Input.h	/^    POLICY_FLAG_PASS_TO_USER = 0x40000000,$/;"	e	enum:android::__anon44
POLICY_FLAG_RAW_MASK	include/ui/Input.h	/^    POLICY_FLAG_RAW_MASK = 0x0000ffff,$/;"	e	enum:android::__anon44
POLICY_FLAG_SHIFT	include/ui/Input.h	/^    POLICY_FLAG_SHIFT = 0x00000004,$/;"	e	enum:android::__anon44
POLICY_FLAG_TRUSTED	include/ui/Input.h	/^    POLICY_FLAG_TRUSTED = 0x02000000,$/;"	e	enum:android::__anon44
POLICY_FLAG_VIRTUAL	include/ui/Input.h	/^    POLICY_FLAG_VIRTUAL = 0x00000100,$/;"	e	enum:android::__anon44
POLICY_FLAG_WAKE	include/ui/Input.h	/^    POLICY_FLAG_WAKE = 0x00000001,$/;"	e	enum:android::__anon44
POLICY_FLAG_WAKE_DROPPED	include/ui/Input.h	/^    POLICY_FLAG_WAKE_DROPPED = 0x00000002,$/;"	e	enum:android::__anon44
POLICY_FLAG_WOKE_HERE	include/ui/Input.h	/^    POLICY_FLAG_WOKE_HERE = 0x10000000,$/;"	e	enum:android::__anon44
PointerCoords	include/ui/Input.h	/^struct PointerCoords {$/;"	s	namespace:android
PreallocatedInputEventFactory	include/ui/Input.h	/^    PreallocatedInputEventFactory() { }$/;"	f	class:android::PreallocatedInputEventFactory
PreallocatedInputEventFactory	include/ui/Input.h	/^class PreallocatedInputEventFactory : public InputEventFactoryInterface {$/;"	c	namespace:android
TOUCHSCREEN_FINGER	include/ui/Input.h	/^        TOUCHSCREEN_FINGER = 3$/;"	e	enum:android::InputConfiguration::__anon45
TOUCHSCREEN_NOTOUCH	include/ui/Input.h	/^        TOUCHSCREEN_NOTOUCH = 1,$/;"	e	enum:android::InputConfiguration::__anon45
TOUCHSCREEN_STYLUS	include/ui/Input.h	/^        TOUCHSCREEN_STYLUS = 2,$/;"	e	enum:android::InputConfiguration::__anon45
TOUCHSCREEN_UNDEFINED	include/ui/Input.h	/^        TOUCHSCREEN_UNDEFINED = 0,$/;"	e	enum:android::InputConfiguration::__anon45
_UI_INPUT_H	include/ui/Input.h	18;"	d
android	include/ui/Input.h	/^namespace android {$/;"	n
createKeyEvent	include/ui/Input.h	/^    virtual KeyEvent* createKeyEvent() { return & mKeyEvent; }$/;"	f	class:android::PreallocatedInputEventFactory
createMotionEvent	include/ui/Input.h	/^    virtual MotionEvent* createMotionEvent() { return & mMotionEvent; }$/;"	f	class:android::PreallocatedInputEventFactory
flat	include/ui/Input.h	/^        float flat;$/;"	m	struct:android::InputDeviceInfo::MotionRange
fuzz	include/ui/Input.h	/^        float fuzz;$/;"	m	struct:android::InputDeviceInfo::MotionRange
getAction	include/ui/Input.h	/^    inline int32_t getAction() const { return mAction; }$/;"	f	class:android::KeyEvent
getAction	include/ui/Input.h	/^    inline int32_t getAction() const { return mAction; }$/;"	f	class:android::MotionEvent
getCurrentPointerCoords	include/ui/Input.h	/^    inline const PointerCoords& getCurrentPointerCoords(size_t pointerIndex) const {$/;"	f	class:android::MotionEvent
getDeviceId	include/ui/Input.h	/^    inline int32_t getDeviceId() const { return mDeviceId; }$/;"	f	class:android::InputEvent
getDownTime	include/ui/Input.h	/^    inline nsecs_t getDownTime() const { return mDownTime; }$/;"	f	class:android::KeyEvent
getDownTime	include/ui/Input.h	/^    inline nsecs_t getDownTime() const { return mDownTime; }$/;"	f	class:android::MotionEvent
getEdgeFlags	include/ui/Input.h	/^    inline int32_t getEdgeFlags() const { return mEdgeFlags; }$/;"	f	class:android::MotionEvent
getEventTime	include/ui/Input.h	/^    inline nsecs_t getEventTime() const { return mEventTime; }$/;"	f	class:android::KeyEvent
getEventTime	include/ui/Input.h	/^    inline nsecs_t getEventTime() const { return mSampleEventTimes[getHistorySize()]; }$/;"	f	class:android::MotionEvent
getFlags	include/ui/Input.h	/^    inline int32_t getFlags() const { return mFlags; }$/;"	f	class:android::KeyEvent
getFlags	include/ui/Input.h	/^    inline int32_t getFlags() const { return mFlags; }$/;"	f	class:android::MotionEvent
getHistoricalEventTime	include/ui/Input.h	/^    inline nsecs_t getHistoricalEventTime(size_t historicalIndex) const {$/;"	f	class:android::MotionEvent
getHistoricalOrientation	include/ui/Input.h	/^    inline float getHistoricalOrientation(size_t pointerIndex, size_t historicalIndex) const {$/;"	f	class:android::MotionEvent
getHistoricalPointerCoords	include/ui/Input.h	/^    inline const PointerCoords& getHistoricalPointerCoords($/;"	f	class:android::MotionEvent
getHistoricalPressure	include/ui/Input.h	/^    inline float getHistoricalPressure(size_t pointerIndex, size_t historicalIndex) const {$/;"	f	class:android::MotionEvent
getHistoricalRawX	include/ui/Input.h	/^    inline float getHistoricalRawX(size_t pointerIndex, size_t historicalIndex) const {$/;"	f	class:android::MotionEvent
getHistoricalRawY	include/ui/Input.h	/^    inline float getHistoricalRawY(size_t pointerIndex, size_t historicalIndex) const {$/;"	f	class:android::MotionEvent
getHistoricalSize	include/ui/Input.h	/^    inline float getHistoricalSize(size_t pointerIndex, size_t historicalIndex) const {$/;"	f	class:android::MotionEvent
getHistoricalToolMajor	include/ui/Input.h	/^    inline float getHistoricalToolMajor(size_t pointerIndex, size_t historicalIndex) const {$/;"	f	class:android::MotionEvent
getHistoricalToolMinor	include/ui/Input.h	/^    inline float getHistoricalToolMinor(size_t pointerIndex, size_t historicalIndex) const {$/;"	f	class:android::MotionEvent
getHistoricalTouchMajor	include/ui/Input.h	/^    inline float getHistoricalTouchMajor(size_t pointerIndex, size_t historicalIndex) const {$/;"	f	class:android::MotionEvent
getHistoricalTouchMinor	include/ui/Input.h	/^    inline float getHistoricalTouchMinor(size_t pointerIndex, size_t historicalIndex) const {$/;"	f	class:android::MotionEvent
getHistoricalX	include/ui/Input.h	/^    inline float getHistoricalX(size_t pointerIndex, size_t historicalIndex) const {$/;"	f	class:android::MotionEvent
getHistoricalY	include/ui/Input.h	/^    inline float getHistoricalY(size_t pointerIndex, size_t historicalIndex) const {$/;"	f	class:android::MotionEvent
getHistorySize	include/ui/Input.h	/^    inline size_t getHistorySize() const { return mSampleEventTimes.size() - 1; }$/;"	f	class:android::MotionEvent
getId	include/ui/Input.h	/^    inline int32_t getId() const { return mId; }$/;"	f	class:android::InputDeviceInfo
getKeyCode	include/ui/Input.h	/^    inline int32_t getKeyCode() const { return mKeyCode; }$/;"	f	class:android::KeyEvent
getKeyboardType	include/ui/Input.h	/^    inline int32_t getKeyboardType() const { return mKeyboardType; }$/;"	f	class:android::InputDeviceInfo
getMetaState	include/ui/Input.h	/^    inline int32_t getMetaState() const { return mMetaState; }$/;"	f	class:android::KeyEvent
getMetaState	include/ui/Input.h	/^    inline int32_t getMetaState() const { return mMetaState; }$/;"	f	class:android::MotionEvent
getMotionRanges	include/ui/Input.h	/^    inline const KeyedVector<int32_t, MotionRange> getMotionRanges() const {$/;"	f	class:android::InputDeviceInfo
getName	include/ui/Input.h	/^    inline const String8 getName() const { return mName; }$/;"	f	class:android::InputDeviceInfo
getOrientation	include/ui/Input.h	/^    inline float getOrientation(size_t pointerIndex) const {$/;"	f	class:android::MotionEvent
getPointerCount	include/ui/Input.h	/^    inline size_t getPointerCount() const { return mPointerIds.size(); }$/;"	f	class:android::MotionEvent
getPointerId	include/ui/Input.h	/^    inline int32_t getPointerId(size_t pointerIndex) const { return mPointerIds[pointerIndex]; }$/;"	f	class:android::MotionEvent
getPointerIds	include/ui/Input.h	/^    inline const int32_t* getPointerIds() const { return mPointerIds.array(); }$/;"	f	class:android::MotionEvent
getPressure	include/ui/Input.h	/^    inline float getPressure(size_t pointerIndex) const {$/;"	f	class:android::MotionEvent
getRawX	include/ui/Input.h	/^    inline float getRawX(size_t pointerIndex) const {$/;"	f	class:android::MotionEvent
getRawY	include/ui/Input.h	/^    inline float getRawY(size_t pointerIndex) const {$/;"	f	class:android::MotionEvent
getRepeatCount	include/ui/Input.h	/^    inline int32_t getRepeatCount() const { return mRepeatCount; }$/;"	f	class:android::KeyEvent
getSampleEventTimes	include/ui/Input.h	/^    inline const nsecs_t* getSampleEventTimes() const { return mSampleEventTimes.array(); }$/;"	f	class:android::MotionEvent
getSamplePointerCoords	include/ui/Input.h	/^    inline const PointerCoords* getSamplePointerCoords() const {$/;"	f	class:android::MotionEvent
getScanCode	include/ui/Input.h	/^    inline int32_t getScanCode() const { return mScanCode; }$/;"	f	class:android::KeyEvent
getSize	include/ui/Input.h	/^    inline float getSize(size_t pointerIndex) const {$/;"	f	class:android::MotionEvent
getSource	include/ui/Input.h	/^    inline int32_t getSource() const { return mSource; }$/;"	f	class:android::InputEvent
getSources	include/ui/Input.h	/^    inline uint32_t getSources() const { return mSources; }$/;"	f	class:android::InputDeviceInfo
getToolMajor	include/ui/Input.h	/^    inline float getToolMajor(size_t pointerIndex) const {$/;"	f	class:android::MotionEvent
getToolMinor	include/ui/Input.h	/^    inline float getToolMinor(size_t pointerIndex) const {$/;"	f	class:android::MotionEvent
getTouchMajor	include/ui/Input.h	/^    inline float getTouchMajor(size_t pointerIndex) const {$/;"	f	class:android::MotionEvent
getTouchMinor	include/ui/Input.h	/^    inline float getTouchMinor(size_t pointerIndex) const {$/;"	f	class:android::MotionEvent
getType	include/ui/Input.h	/^    virtual int32_t getType() const { return AINPUT_EVENT_TYPE_KEY; }$/;"	f	class:android::KeyEvent
getType	include/ui/Input.h	/^    virtual int32_t getType() const { return AINPUT_EVENT_TYPE_MOTION; }$/;"	f	class:android::MotionEvent
getX	include/ui/Input.h	/^    inline float getX(size_t pointerIndex) const {$/;"	f	class:android::MotionEvent
getXOffset	include/ui/Input.h	/^    inline float getXOffset() const { return mXOffset; }$/;"	f	class:android::MotionEvent
getXPrecision	include/ui/Input.h	/^    inline float getXPrecision() const { return mXPrecision; }$/;"	f	class:android::MotionEvent
getY	include/ui/Input.h	/^    inline float getY(size_t pointerIndex) const {$/;"	f	class:android::MotionEvent
getYOffset	include/ui/Input.h	/^    inline float getYOffset() const { return mYOffset; }$/;"	f	class:android::MotionEvent
getYPrecision	include/ui/Input.h	/^    inline float getYPrecision() const { return mYPrecision; }$/;"	f	class:android::MotionEvent
keyboard	include/ui/Input.h	/^    int32_t keyboard;$/;"	m	struct:android::InputConfiguration
mAction	include/ui/Input.h	/^    int32_t mAction;$/;"	m	class:android::KeyEvent
mAction	include/ui/Input.h	/^    int32_t mAction;$/;"	m	class:android::MotionEvent
mDeviceId	include/ui/Input.h	/^    int32_t mDeviceId;$/;"	m	class:android::InputEvent
mDownTime	include/ui/Input.h	/^    nsecs_t mDownTime;$/;"	m	class:android::KeyEvent
mDownTime	include/ui/Input.h	/^    nsecs_t mDownTime;$/;"	m	class:android::MotionEvent
mEdgeFlags	include/ui/Input.h	/^    int32_t mEdgeFlags;$/;"	m	class:android::MotionEvent
mEventTime	include/ui/Input.h	/^    nsecs_t mEventTime;$/;"	m	class:android::KeyEvent
mFlags	include/ui/Input.h	/^    int32_t mFlags;$/;"	m	class:android::KeyEvent
mFlags	include/ui/Input.h	/^    int32_t mFlags;$/;"	m	class:android::MotionEvent
mId	include/ui/Input.h	/^    int32_t mId;$/;"	m	class:android::InputDeviceInfo
mKeyCode	include/ui/Input.h	/^    int32_t mKeyCode;$/;"	m	class:android::KeyEvent
mKeyEvent	include/ui/Input.h	/^    KeyEvent mKeyEvent;$/;"	m	class:android::PreallocatedInputEventFactory
mKeyboardType	include/ui/Input.h	/^    int32_t mKeyboardType;$/;"	m	class:android::InputDeviceInfo
mMetaState	include/ui/Input.h	/^    int32_t mMetaState;$/;"	m	class:android::KeyEvent
mMetaState	include/ui/Input.h	/^    int32_t mMetaState;$/;"	m	class:android::MotionEvent
mMotionEvent	include/ui/Input.h	/^    MotionEvent mMotionEvent;$/;"	m	class:android::PreallocatedInputEventFactory
mMotionRanges	include/ui/Input.h	/^    KeyedVector<int32_t, MotionRange> mMotionRanges;$/;"	m	class:android::InputDeviceInfo
mName	include/ui/Input.h	/^    String8 mName;$/;"	m	class:android::InputDeviceInfo
mPointerIds	include/ui/Input.h	/^    Vector<int32_t> mPointerIds;$/;"	m	class:android::MotionEvent
mRepeatCount	include/ui/Input.h	/^    int32_t mRepeatCount;$/;"	m	class:android::KeyEvent
mSampleEventTimes	include/ui/Input.h	/^    Vector<nsecs_t> mSampleEventTimes;$/;"	m	class:android::MotionEvent
mSamplePointerCoords	include/ui/Input.h	/^    Vector<PointerCoords> mSamplePointerCoords;$/;"	m	class:android::MotionEvent
mScanCode	include/ui/Input.h	/^    int32_t mScanCode;$/;"	m	class:android::KeyEvent
mSource	include/ui/Input.h	/^    int32_t mSource;$/;"	m	class:android::InputEvent
mSources	include/ui/Input.h	/^    uint32_t mSources;$/;"	m	class:android::InputDeviceInfo
mXOffset	include/ui/Input.h	/^    float mXOffset;$/;"	m	class:android::MotionEvent
mXPrecision	include/ui/Input.h	/^    float mXPrecision;$/;"	m	class:android::MotionEvent
mYOffset	include/ui/Input.h	/^    float mYOffset;$/;"	m	class:android::MotionEvent
mYPrecision	include/ui/Input.h	/^    float mYPrecision;$/;"	m	class:android::MotionEvent
max	include/ui/Input.h	/^        float max;$/;"	m	struct:android::InputDeviceInfo::MotionRange
min	include/ui/Input.h	/^        float min;$/;"	m	struct:android::InputDeviceInfo::MotionRange
navigation	include/ui/Input.h	/^    int32_t navigation;$/;"	m	struct:android::InputConfiguration
orientation	include/ui/Input.h	/^    float orientation;$/;"	m	struct:android::PointerCoords
pressure	include/ui/Input.h	/^    float pressure;$/;"	m	struct:android::PointerCoords
setKeyboardType	include/ui/Input.h	/^    inline void setKeyboardType(int32_t keyboardType) { mKeyboardType = keyboardType; }$/;"	f	class:android::InputDeviceInfo
size	include/ui/Input.h	/^    float size;$/;"	m	struct:android::PointerCoords
toolMajor	include/ui/Input.h	/^    float toolMajor;$/;"	m	struct:android::PointerCoords
toolMinor	include/ui/Input.h	/^    float toolMinor;$/;"	m	struct:android::PointerCoords
touchMajor	include/ui/Input.h	/^    float touchMajor;$/;"	m	struct:android::PointerCoords
touchMinor	include/ui/Input.h	/^    float touchMinor;$/;"	m	struct:android::PointerCoords
touchScreen	include/ui/Input.h	/^    int32_t touchScreen;$/;"	m	struct:android::InputConfiguration
x	include/ui/Input.h	/^    float x;$/;"	m	struct:android::PointerCoords
y	include/ui/Input.h	/^    float y;$/;"	m	struct:android::PointerCoords
~AInputDevice	include/ui/Input.h	/^    virtual ~AInputDevice() { }$/;"	f	struct:AInputDevice
~AInputEvent	include/ui/Input.h	/^    virtual ~AInputEvent() { }$/;"	f	struct:AInputEvent
~InputEvent	include/ui/Input.h	/^    virtual ~InputEvent() { }$/;"	f	class:android::InputEvent
~InputEventFactoryInterface	include/ui/Input.h	/^    virtual ~InputEventFactoryInterface() { }$/;"	f	class:android::InputEventFactoryInterface
~KeyEvent	include/ui/Input.h	/^    virtual ~KeyEvent() { }$/;"	f	class:android::KeyEvent
~MotionEvent	include/ui/Input.h	/^    virtual ~MotionEvent() { }$/;"	f	class:android::MotionEvent
~PreallocatedInputEventFactory	include/ui/Input.h	/^    virtual ~PreallocatedInputEventFactory() { }$/;"	f	class:android::PreallocatedInputEventFactory
Allocator	include/ui/InputDispatcher.h	/^    class Allocator {$/;"	c	class:android::InputDispatcher
BROKEN	include/ui/InputDispatcher.h	/^            BROKEN$/;"	e	enum:android::InputDispatcher::InputState::Consistency
CANCEL_ALL_EVENTS	include/ui/InputDispatcher.h	/^            CANCEL_ALL_EVENTS = 0,$/;"	e	enum:android::InputDispatcher::InputState::CancelationOptions
CANCEL_NON_POINTER_EVENTS	include/ui/InputDispatcher.h	/^            CANCEL_NON_POINTER_EVENTS = 2,$/;"	e	enum:android::InputDispatcher::InputState::CancelationOptions
CANCEL_POINTER_EVENTS	include/ui/InputDispatcher.h	/^            CANCEL_POINTER_EVENTS = 1,$/;"	e	enum:android::InputDispatcher::InputState::CancelationOptions
CONSISTENT	include/ui/InputDispatcher.h	/^            CONSISTENT,$/;"	e	enum:android::InputDispatcher::InputState::Consistency
CancelationOptions	include/ui/InputDispatcher.h	/^        enum CancelationOptions {$/;"	g	class:android::InputDispatcher::InputState
Command	include/ui/InputDispatcher.h	/^    typedef void (InputDispatcher::*Command)(CommandEntry* commandEntry);$/;"	t	class:android::InputDispatcher
CommandEntry	include/ui/InputDispatcher.h	/^    struct CommandEntry : Link<CommandEntry> {$/;"	s	class:android::InputDispatcher
ConfigurationChangedEntry	include/ui/InputDispatcher.h	/^    struct ConfigurationChangedEntry : EventEntry {$/;"	s	class:android::InputDispatcher
Connection	include/ui/InputDispatcher.h	/^    class Connection : public RefBase {$/;"	c	class:android::InputDispatcher
Consistency	include/ui/InputDispatcher.h	/^        enum Consistency {$/;"	g	class:android::InputDispatcher::InputState
DROP_REASON_APP_SWITCH	include/ui/InputDispatcher.h	/^        DROP_REASON_APP_SWITCH = 2,$/;"	e	enum:android::InputDispatcher::DropReason
DROP_REASON_DISABLED	include/ui/InputDispatcher.h	/^        DROP_REASON_DISABLED = 3,$/;"	e	enum:android::InputDispatcher::DropReason
DROP_REASON_NOT_DROPPED	include/ui/InputDispatcher.h	/^        DROP_REASON_NOT_DROPPED = 0,$/;"	e	enum:android::InputDispatcher::DropReason
DROP_REASON_POLICY	include/ui/InputDispatcher.h	/^        DROP_REASON_POLICY = 1,$/;"	e	enum:android::InputDispatcher::DropReason
DispatchEntry	include/ui/InputDispatcher.h	/^    struct DispatchEntry : Link<DispatchEntry> {$/;"	s	class:android::InputDispatcher
DropReason	include/ui/InputDispatcher.h	/^    enum DropReason {$/;"	g	class:android::InputDispatcher
EventEntry	include/ui/InputDispatcher.h	/^    struct EventEntry : Link<EventEntry> {$/;"	s	class:android::InputDispatcher
FIRST_APPLICATION_WINDOW	include/ui/InputDispatcher.h	/^        FIRST_APPLICATION_WINDOW = 1,$/;"	e	enum:android::InputWindow::__anon21
FIRST_SUB_WINDOW	include/ui/InputDispatcher.h	/^        FIRST_SUB_WINDOW        = 1000,$/;"	e	enum:android::InputWindow::__anon21
FIRST_SYSTEM_WINDOW	include/ui/InputDispatcher.h	/^        FIRST_SYSTEM_WINDOW     = 2000,$/;"	e	enum:android::InputWindow::__anon21
FLAG_ALLOW_LOCK_WHILE_SCREEN_ON	include/ui/InputDispatcher.h	/^        FLAG_ALLOW_LOCK_WHILE_SCREEN_ON     = 0x00000001,$/;"	e	enum:android::InputWindow::__anon20
FLAG_ALT_FOCUSABLE_IM	include/ui/InputDispatcher.h	/^        FLAG_ALT_FOCUSABLE_IM = 0x00020000,$/;"	e	enum:android::InputWindow::__anon20
FLAG_BLUR_BEHIND	include/ui/InputDispatcher.h	/^        FLAG_BLUR_BEHIND        = 0x00000004,$/;"	e	enum:android::InputWindow::__anon20
FLAG_COMPATIBLE_WINDOW	include/ui/InputDispatcher.h	/^        FLAG_COMPATIBLE_WINDOW = 0x20000000,$/;"	e	enum:android::InputWindow::__anon20
FLAG_DIM_BEHIND	include/ui/InputDispatcher.h	/^        FLAG_DIM_BEHIND        = 0x00000002,$/;"	e	enum:android::InputWindow::__anon20
FLAG_DISMISS_KEYGUARD	include/ui/InputDispatcher.h	/^        FLAG_DISMISS_KEYGUARD = 0x00400000,$/;"	e	enum:android::InputWindow::__anon20
FLAG_DITHER	include/ui/InputDispatcher.h	/^        FLAG_DITHER             = 0x00001000,$/;"	e	enum:android::InputWindow::__anon20
FLAG_FORCE_NOT_FULLSCREEN	include/ui/InputDispatcher.h	/^        FLAG_FORCE_NOT_FULLSCREEN   = 0x00000800,$/;"	e	enum:android::InputWindow::__anon20
FLAG_FOREGROUND	include/ui/InputDispatcher.h	/^        FLAG_FOREGROUND = 0x01,$/;"	e	enum:android::InputTarget::__anon19
FLAG_FULLSCREEN	include/ui/InputDispatcher.h	/^        FLAG_FULLSCREEN      = 0x00000400,$/;"	e	enum:android::InputWindow::__anon20
FLAG_IGNORE_CHEEK_PRESSES	include/ui/InputDispatcher.h	/^        FLAG_IGNORE_CHEEK_PRESSES    = 0x00008000,$/;"	e	enum:android::InputWindow::__anon20
FLAG_KEEP_SCREEN_ON	include/ui/InputDispatcher.h	/^        FLAG_KEEP_SCREEN_ON     = 0x00000080,$/;"	e	enum:android::InputWindow::__anon20
FLAG_KEEP_SURFACE_WHILE_ANIMATING	include/ui/InputDispatcher.h	/^        FLAG_KEEP_SURFACE_WHILE_ANIMATING = 0x10000000,$/;"	e	enum:android::InputWindow::__anon20
FLAG_LAYOUT_INSET_DECOR	include/ui/InputDispatcher.h	/^        FLAG_LAYOUT_INSET_DECOR = 0x00010000,$/;"	e	enum:android::InputWindow::__anon20
FLAG_LAYOUT_IN_SCREEN	include/ui/InputDispatcher.h	/^        FLAG_LAYOUT_IN_SCREEN   = 0x00000100,$/;"	e	enum:android::InputWindow::__anon20
FLAG_LAYOUT_NO_LIMITS	include/ui/InputDispatcher.h	/^        FLAG_LAYOUT_NO_LIMITS   = 0x00000200,$/;"	e	enum:android::InputWindow::__anon20
FLAG_NOT_FOCUSABLE	include/ui/InputDispatcher.h	/^        FLAG_NOT_FOCUSABLE      = 0x00000008,$/;"	e	enum:android::InputWindow::__anon20
FLAG_NOT_TOUCHABLE	include/ui/InputDispatcher.h	/^        FLAG_NOT_TOUCHABLE      = 0x00000010,$/;"	e	enum:android::InputWindow::__anon20
FLAG_NOT_TOUCH_MODAL	include/ui/InputDispatcher.h	/^        FLAG_NOT_TOUCH_MODAL    = 0x00000020,$/;"	e	enum:android::InputWindow::__anon20
FLAG_OUTSIDE	include/ui/InputDispatcher.h	/^        FLAG_OUTSIDE = 0x02,$/;"	e	enum:android::InputTarget::__anon19
FLAG_SCALED	include/ui/InputDispatcher.h	/^        FLAG_SCALED             = 0x00004000,$/;"	e	enum:android::InputWindow::__anon20
FLAG_SECURE	include/ui/InputDispatcher.h	/^        FLAG_SECURE             = 0x00002000,$/;"	e	enum:android::InputWindow::__anon20
FLAG_SHOW_WALLPAPER	include/ui/InputDispatcher.h	/^        FLAG_SHOW_WALLPAPER = 0x00100000,$/;"	e	enum:android::InputWindow::__anon20
FLAG_SHOW_WHEN_LOCKED	include/ui/InputDispatcher.h	/^        FLAG_SHOW_WHEN_LOCKED = 0x00080000,$/;"	e	enum:android::InputWindow::__anon20
FLAG_SPLIT	include/ui/InputDispatcher.h	/^        FLAG_SPLIT = 0x08,$/;"	e	enum:android::InputTarget::__anon19
FLAG_SPLIT_TOUCH	include/ui/InputDispatcher.h	/^        FLAG_SPLIT_TOUCH = 0x00800000,$/;"	e	enum:android::InputWindow::__anon20
FLAG_SYSTEM_ERROR	include/ui/InputDispatcher.h	/^        FLAG_SYSTEM_ERROR = 0x40000000,$/;"	e	enum:android::InputWindow::__anon20
FLAG_TOUCHABLE_WHEN_WAKING	include/ui/InputDispatcher.h	/^        FLAG_TOUCHABLE_WHEN_WAKING = 0x00000040,$/;"	e	enum:android::InputWindow::__anon20
FLAG_TURN_SCREEN_ON	include/ui/InputDispatcher.h	/^        FLAG_TURN_SCREEN_ON = 0x00200000,$/;"	e	enum:android::InputWindow::__anon20
FLAG_WATCH_OUTSIDE_TOUCH	include/ui/InputDispatcher.h	/^        FLAG_WATCH_OUTSIDE_TOUCH = 0x00040000,$/;"	e	enum:android::InputWindow::__anon20
FLAG_WINDOW_IS_OBSCURED	include/ui/InputDispatcher.h	/^        FLAG_WINDOW_IS_OBSCURED = 0x04,$/;"	e	enum:android::InputTarget::__anon19
INPUT_EVENT_INJECTION_FAILED	include/ui/InputDispatcher.h	/^    INPUT_EVENT_INJECTION_FAILED = 2,$/;"	e	enum:android::__anon17
INPUT_EVENT_INJECTION_PENDING	include/ui/InputDispatcher.h	/^    INPUT_EVENT_INJECTION_PENDING = -1,$/;"	e	enum:android::__anon17
INPUT_EVENT_INJECTION_PERMISSION_DENIED	include/ui/InputDispatcher.h	/^    INPUT_EVENT_INJECTION_PERMISSION_DENIED = 1,$/;"	e	enum:android::__anon17
INPUT_EVENT_INJECTION_SUCCEEDED	include/ui/InputDispatcher.h	/^    INPUT_EVENT_INJECTION_SUCCEEDED = 0,$/;"	e	enum:android::__anon17
INPUT_EVENT_INJECTION_SYNC_NONE	include/ui/InputDispatcher.h	/^    INPUT_EVENT_INJECTION_SYNC_NONE = 0,$/;"	e	enum:android::__anon18
INPUT_EVENT_INJECTION_SYNC_WAIT_FOR_FINISHED	include/ui/InputDispatcher.h	/^    INPUT_EVENT_INJECTION_SYNC_WAIT_FOR_FINISHED = 2,$/;"	e	enum:android::__anon18
INPUT_EVENT_INJECTION_SYNC_WAIT_FOR_RESULT	include/ui/InputDispatcher.h	/^    INPUT_EVENT_INJECTION_SYNC_WAIT_FOR_RESULT = 1,$/;"	e	enum:android::__anon18
INPUT_EVENT_INJECTION_TIMED_OUT	include/ui/InputDispatcher.h	/^    INPUT_EVENT_INJECTION_TIMED_OUT = 3$/;"	e	enum:android::__anon17
INPUT_TARGET_WAIT_CAUSE_APPLICATION_NOT_READY	include/ui/InputDispatcher.h	/^        INPUT_TARGET_WAIT_CAUSE_APPLICATION_NOT_READY,$/;"	e	enum:android::InputDispatcher::InputTargetWaitCause
INPUT_TARGET_WAIT_CAUSE_NONE	include/ui/InputDispatcher.h	/^        INPUT_TARGET_WAIT_CAUSE_NONE,$/;"	e	enum:android::InputDispatcher::InputTargetWaitCause
INPUT_TARGET_WAIT_CAUSE_SYSTEM_NOT_READY	include/ui/InputDispatcher.h	/^        INPUT_TARGET_WAIT_CAUSE_SYSTEM_NOT_READY,$/;"	e	enum:android::InputDispatcher::InputTargetWaitCause
INTERCEPT_KEY_RESULT_CONTINUE	include/ui/InputDispatcher.h	/^            INTERCEPT_KEY_RESULT_CONTINUE,$/;"	e	enum:android::InputDispatcher::KeyEntry::InterceptKeyResult
INTERCEPT_KEY_RESULT_SKIP	include/ui/InputDispatcher.h	/^            INTERCEPT_KEY_RESULT_SKIP,$/;"	e	enum:android::InputDispatcher::KeyEntry::InterceptKeyResult
INTERCEPT_KEY_RESULT_UNKNOWN	include/ui/InputDispatcher.h	/^            INTERCEPT_KEY_RESULT_UNKNOWN,$/;"	e	enum:android::InputDispatcher::KeyEntry::InterceptKeyResult
InjectionState	include/ui/InputDispatcher.h	/^    struct InjectionState {$/;"	s	class:android::InputDispatcher
InputApplication	include/ui/InputDispatcher.h	/^struct InputApplication {$/;"	s	namespace:android
InputApplicationHandle	include/ui/InputDispatcher.h	/^    InputApplicationHandle() { }$/;"	f	class:android::InputApplicationHandle
InputApplicationHandle	include/ui/InputDispatcher.h	/^class InputApplicationHandle : public RefBase {$/;"	c	namespace:android
InputDispatcher	include/ui/InputDispatcher.h	/^class InputDispatcher : public InputDispatcherInterface {$/;"	c	namespace:android
InputDispatcherInterface	include/ui/InputDispatcher.h	/^    InputDispatcherInterface() { }$/;"	f	class:android::InputDispatcherInterface
InputDispatcherInterface	include/ui/InputDispatcher.h	/^class InputDispatcherInterface : public virtual RefBase {$/;"	c	namespace:android
InputDispatcherPolicyInterface	include/ui/InputDispatcher.h	/^    InputDispatcherPolicyInterface() { }$/;"	f	class:android::InputDispatcherPolicyInterface
InputDispatcherPolicyInterface	include/ui/InputDispatcher.h	/^class InputDispatcherPolicyInterface : public virtual RefBase {$/;"	c	namespace:android
InputDispatcherThread	include/ui/InputDispatcher.h	/^class InputDispatcherThread : public Thread {$/;"	c	namespace:android
InputState	include/ui/InputDispatcher.h	/^    class InputState {$/;"	c	class:android::InputDispatcher
InputTarget	include/ui/InputDispatcher.h	/^struct InputTarget {$/;"	s	namespace:android
InputTargetWaitCause	include/ui/InputDispatcher.h	/^    enum InputTargetWaitCause {$/;"	g	class:android::InputDispatcher
InputWindow	include/ui/InputDispatcher.h	/^struct InputWindow {$/;"	s	namespace:android
InterceptKeyResult	include/ui/InputDispatcher.h	/^        enum InterceptKeyResult {$/;"	g	struct:android::InputDispatcher::KeyEntry
KeyEntry	include/ui/InputDispatcher.h	/^    struct KeyEntry : EventEntry {$/;"	s	class:android::InputDispatcher
KeyMemento	include/ui/InputDispatcher.h	/^        struct KeyMemento {$/;"	s	class:android::InputDispatcher::InputState
KeyRepeatState	include/ui/InputDispatcher.h	/^    struct KeyRepeatState {$/;"	s	class:android::InputDispatcher
LAST_APPLICATION_WINDOW	include/ui/InputDispatcher.h	/^        LAST_APPLICATION_WINDOW = 99,$/;"	e	enum:android::InputWindow::__anon21
LAST_SUB_WINDOW	include/ui/InputDispatcher.h	/^        LAST_SUB_WINDOW         = 1999,$/;"	e	enum:android::InputWindow::__anon21
LAST_SYSTEM_WINDOW	include/ui/InputDispatcher.h	/^        LAST_SYSTEM_WINDOW      = 2999,$/;"	e	enum:android::InputWindow::__anon21
Link	include/ui/InputDispatcher.h	/^    struct Link {$/;"	s	class:android::InputDispatcher
MotionEntry	include/ui/InputDispatcher.h	/^    struct MotionEntry : EventEntry {$/;"	s	class:android::InputDispatcher
MotionMemento	include/ui/InputDispatcher.h	/^        struct MotionMemento {$/;"	s	class:android::InputDispatcher::InputState
MotionSample	include/ui/InputDispatcher.h	/^    struct MotionSample {$/;"	s	class:android::InputDispatcher
Queue	include/ui/InputDispatcher.h	/^        inline Queue() {$/;"	f	struct:android::InputDispatcher::Queue
Queue	include/ui/InputDispatcher.h	/^    struct Queue {$/;"	s	class:android::InputDispatcher
STATUS_BROKEN	include/ui/InputDispatcher.h	/^            STATUS_BROKEN,$/;"	e	enum:android::InputDispatcher::Connection::Status
STATUS_NORMAL	include/ui/InputDispatcher.h	/^            STATUS_NORMAL,$/;"	e	enum:android::InputDispatcher::Connection::Status
STATUS_ZOMBIE	include/ui/InputDispatcher.h	/^            STATUS_ZOMBIE$/;"	e	enum:android::InputDispatcher::Connection::Status
Status	include/ui/InputDispatcher.h	/^        enum Status {$/;"	g	class:android::InputDispatcher::Connection
TOLERABLE	include/ui/InputDispatcher.h	/^            TOLERABLE,$/;"	e	enum:android::InputDispatcher::InputState::Consistency
TYPE_APPLICATION	include/ui/InputDispatcher.h	/^        TYPE_APPLICATION        = 2,$/;"	e	enum:android::InputWindow::__anon21
TYPE_APPLICATION_ATTACHED_DIALOG	include/ui/InputDispatcher.h	/^        TYPE_APPLICATION_ATTACHED_DIALOG = FIRST_SUB_WINDOW+3,$/;"	e	enum:android::InputWindow::__anon21
TYPE_APPLICATION_MEDIA	include/ui/InputDispatcher.h	/^        TYPE_APPLICATION_MEDIA  = FIRST_SUB_WINDOW+1,$/;"	e	enum:android::InputWindow::__anon21
TYPE_APPLICATION_MEDIA_OVERLAY	include/ui/InputDispatcher.h	/^        TYPE_APPLICATION_MEDIA_OVERLAY  = FIRST_SUB_WINDOW+4,$/;"	e	enum:android::InputWindow::__anon21
TYPE_APPLICATION_PANEL	include/ui/InputDispatcher.h	/^        TYPE_APPLICATION_PANEL  = FIRST_SUB_WINDOW,$/;"	e	enum:android::InputWindow::__anon21
TYPE_APPLICATION_STARTING	include/ui/InputDispatcher.h	/^        TYPE_APPLICATION_STARTING = 3,$/;"	e	enum:android::InputWindow::__anon21
TYPE_APPLICATION_SUB_PANEL	include/ui/InputDispatcher.h	/^        TYPE_APPLICATION_SUB_PANEL = FIRST_SUB_WINDOW+2,$/;"	e	enum:android::InputWindow::__anon21
TYPE_BASE_APPLICATION	include/ui/InputDispatcher.h	/^        TYPE_BASE_APPLICATION   = 1,$/;"	e	enum:android::InputWindow::__anon21
TYPE_CONFIGURATION_CHANGED	include/ui/InputDispatcher.h	/^            TYPE_CONFIGURATION_CHANGED,$/;"	e	enum:android::InputDispatcher::EventEntry::__anon22
TYPE_INPUT_METHOD	include/ui/InputDispatcher.h	/^        TYPE_INPUT_METHOD       = FIRST_SYSTEM_WINDOW+11,$/;"	e	enum:android::InputWindow::__anon21
TYPE_INPUT_METHOD_DIALOG	include/ui/InputDispatcher.h	/^        TYPE_INPUT_METHOD_DIALOG= FIRST_SYSTEM_WINDOW+12,$/;"	e	enum:android::InputWindow::__anon21
TYPE_KEY	include/ui/InputDispatcher.h	/^            TYPE_KEY,$/;"	e	enum:android::InputDispatcher::EventEntry::__anon22
TYPE_KEYGUARD	include/ui/InputDispatcher.h	/^        TYPE_KEYGUARD           = FIRST_SYSTEM_WINDOW+4,$/;"	e	enum:android::InputWindow::__anon21
TYPE_KEYGUARD_DIALOG	include/ui/InputDispatcher.h	/^        TYPE_KEYGUARD_DIALOG    = FIRST_SYSTEM_WINDOW+9,$/;"	e	enum:android::InputWindow::__anon21
TYPE_MOTION	include/ui/InputDispatcher.h	/^            TYPE_MOTION$/;"	e	enum:android::InputDispatcher::EventEntry::__anon22
TYPE_PHONE	include/ui/InputDispatcher.h	/^        TYPE_PHONE              = FIRST_SYSTEM_WINDOW+2,$/;"	e	enum:android::InputWindow::__anon21
TYPE_PRIORITY_PHONE	include/ui/InputDispatcher.h	/^        TYPE_PRIORITY_PHONE     = FIRST_SYSTEM_WINDOW+7,$/;"	e	enum:android::InputWindow::__anon21
TYPE_SEARCH_BAR	include/ui/InputDispatcher.h	/^        TYPE_SEARCH_BAR         = FIRST_SYSTEM_WINDOW+1,$/;"	e	enum:android::InputWindow::__anon21
TYPE_SECURE_SYSTEM_OVERLAY	include/ui/InputDispatcher.h	/^        TYPE_SECURE_SYSTEM_OVERLAY = FIRST_SYSTEM_WINDOW+15,$/;"	e	enum:android::InputWindow::__anon21
TYPE_SENTINEL	include/ui/InputDispatcher.h	/^            TYPE_SENTINEL,$/;"	e	enum:android::InputDispatcher::EventEntry::__anon22
TYPE_STATUS_BAR	include/ui/InputDispatcher.h	/^        TYPE_STATUS_BAR         = FIRST_SYSTEM_WINDOW,$/;"	e	enum:android::InputWindow::__anon21
TYPE_STATUS_BAR_PANEL	include/ui/InputDispatcher.h	/^        TYPE_STATUS_BAR_PANEL   = FIRST_SYSTEM_WINDOW+14,$/;"	e	enum:android::InputWindow::__anon21
TYPE_SYSTEM_ALERT	include/ui/InputDispatcher.h	/^        TYPE_SYSTEM_ALERT       = FIRST_SYSTEM_WINDOW+3,$/;"	e	enum:android::InputWindow::__anon21
TYPE_SYSTEM_DIALOG	include/ui/InputDispatcher.h	/^        TYPE_SYSTEM_DIALOG      = FIRST_SYSTEM_WINDOW+8,$/;"	e	enum:android::InputWindow::__anon21
TYPE_SYSTEM_ERROR	include/ui/InputDispatcher.h	/^        TYPE_SYSTEM_ERROR       = FIRST_SYSTEM_WINDOW+10,$/;"	e	enum:android::InputWindow::__anon21
TYPE_SYSTEM_OVERLAY	include/ui/InputDispatcher.h	/^        TYPE_SYSTEM_OVERLAY     = FIRST_SYSTEM_WINDOW+6,$/;"	e	enum:android::InputWindow::__anon21
TYPE_TOAST	include/ui/InputDispatcher.h	/^        TYPE_TOAST              = FIRST_SYSTEM_WINDOW+5,$/;"	e	enum:android::InputWindow::__anon21
TYPE_WALLPAPER	include/ui/InputDispatcher.h	/^        TYPE_WALLPAPER          = FIRST_SYSTEM_WINDOW+13,$/;"	e	enum:android::InputWindow::__anon21
ThrottleState	include/ui/InputDispatcher.h	/^    struct ThrottleState {$/;"	s	class:android::InputDispatcher
TouchState	include/ui/InputDispatcher.h	/^    struct TouchState {$/;"	s	class:android::InputDispatcher
TouchedWindow	include/ui/InputDispatcher.h	/^    struct TouchedWindow {$/;"	s	class:android::InputDispatcher
_UI_INPUT_DISPATCHER_H	include/ui/InputDispatcher.h	18;"	d
action	include/ui/InputDispatcher.h	/^        int32_t action;$/;"	m	struct:android::InputDispatcher::KeyEntry
action	include/ui/InputDispatcher.h	/^        int32_t action;$/;"	m	struct:android::InputDispatcher::MotionEntry
android	include/ui/InputDispatcher.h	/^namespace android {$/;"	n
canReceiveKeys	include/ui/InputDispatcher.h	/^    bool canReceiveKeys;$/;"	m	struct:android::InputWindow
channel	include/ui/InputDispatcher.h	/^        sp<InputChannel> channel;$/;"	m	struct:android::InputDispatcher::TouchedWindow
command	include/ui/InputDispatcher.h	/^        Command command;$/;"	m	struct:android::InputDispatcher::CommandEntry
connection	include/ui/InputDispatcher.h	/^        sp<Connection> connection;$/;"	m	struct:android::InputDispatcher::CommandEntry
dequeue	include/ui/InputDispatcher.h	/^        inline void dequeue(T* entry) {$/;"	f	struct:android::InputDispatcher::Queue
dequeueAtHead	include/ui/InputDispatcher.h	/^        inline T* dequeueAtHead() {$/;"	f	struct:android::InputDispatcher::Queue
deviceId	include/ui/InputDispatcher.h	/^            int32_t deviceId;$/;"	m	struct:android::InputDispatcher::InputState::KeyMemento
deviceId	include/ui/InputDispatcher.h	/^            int32_t deviceId;$/;"	m	struct:android::InputDispatcher::InputState::MotionMemento
deviceId	include/ui/InputDispatcher.h	/^        int32_t deviceId;$/;"	m	struct:android::InputDispatcher::KeyEntry
deviceId	include/ui/InputDispatcher.h	/^        int32_t deviceId;$/;"	m	struct:android::InputDispatcher::MotionEntry
dispatchInProgress	include/ui/InputDispatcher.h	/^        bool dispatchInProgress; \/\/ initially false, set to true while dispatching$/;"	m	struct:android::InputDispatcher::EventEntry
dispatchingTimeout	include/ui/InputDispatcher.h	/^    nsecs_t dispatchingTimeout;$/;"	m	struct:android::InputApplication
dispatchingTimeout	include/ui/InputDispatcher.h	/^    nsecs_t dispatchingTimeout;$/;"	m	struct:android::InputWindow
down	include/ui/InputDispatcher.h	/^        bool down;$/;"	m	struct:android::InputDispatcher::TouchState
downTime	include/ui/InputDispatcher.h	/^            nsecs_t downTime;$/;"	m	struct:android::InputDispatcher::InputState::KeyMemento
downTime	include/ui/InputDispatcher.h	/^            nsecs_t downTime;$/;"	m	struct:android::InputDispatcher::InputState::MotionMemento
downTime	include/ui/InputDispatcher.h	/^        nsecs_t downTime;$/;"	m	struct:android::InputDispatcher::KeyEntry
downTime	include/ui/InputDispatcher.h	/^        nsecs_t downTime;$/;"	m	struct:android::InputDispatcher::MotionEntry
edgeFlags	include/ui/InputDispatcher.h	/^        int32_t edgeFlags;$/;"	m	struct:android::InputDispatcher::MotionEntry
enqueueAtHead	include/ui/InputDispatcher.h	/^        inline void enqueueAtHead(T* entry) {$/;"	f	struct:android::InputDispatcher::Queue
enqueueAtTail	include/ui/InputDispatcher.h	/^        inline void enqueueAtTail(T* entry) {$/;"	f	struct:android::InputDispatcher::Queue
eventEntry	include/ui/InputDispatcher.h	/^        EventEntry* eventEntry; \/\/ the event to dispatch$/;"	m	struct:android::InputDispatcher::DispatchEntry
eventTime	include/ui/InputDispatcher.h	/^        nsecs_t eventTime;$/;"	m	struct:android::InputDispatcher::CommandEntry
eventTime	include/ui/InputDispatcher.h	/^        nsecs_t eventTime;$/;"	m	struct:android::InputDispatcher::EventEntry
eventTime	include/ui/InputDispatcher.h	/^        nsecs_t eventTime;$/;"	m	struct:android::InputDispatcher::MotionSample
firstSample	include/ui/InputDispatcher.h	/^        MotionSample firstSample;$/;"	m	struct:android::InputDispatcher::MotionEntry
flags	include/ui/InputDispatcher.h	/^        int32_t flags;$/;"	m	struct:android::InputDispatcher::KeyEntry
flags	include/ui/InputDispatcher.h	/^        int32_t flags;$/;"	m	struct:android::InputDispatcher::MotionEntry
flags	include/ui/InputDispatcher.h	/^    int32_t flags;$/;"	m	struct:android::InputTarget
frameBottom	include/ui/InputDispatcher.h	/^    int32_t frameBottom;$/;"	m	struct:android::InputWindow
frameLeft	include/ui/InputDispatcher.h	/^    int32_t frameLeft;$/;"	m	struct:android::InputWindow
frameRight	include/ui/InputDispatcher.h	/^    int32_t frameRight;$/;"	m	struct:android::InputWindow
frameTop	include/ui/InputDispatcher.h	/^    int32_t frameTop;$/;"	m	struct:android::InputWindow
getDispatchLatencyMillis	include/ui/InputDispatcher.h	/^        inline double getDispatchLatencyMillis(nsecs_t currentTime) const {$/;"	f	class:android::InputDispatcher::Connection
getEventLatencyMillis	include/ui/InputDispatcher.h	/^        inline double getEventLatencyMillis(nsecs_t currentTime) const {$/;"	f	class:android::InputDispatcher::Connection
getInputChannelName	include/ui/InputDispatcher.h	/^        inline const char* getInputChannelName() const { return inputChannel->getName().string(); }$/;"	f	class:android::InputDispatcher::Connection
handle	include/ui/InputDispatcher.h	/^    sp<InputApplicationHandle> handle;$/;"	m	struct:android::InputApplication
hasFocus	include/ui/InputDispatcher.h	/^    bool hasFocus;$/;"	m	struct:android::InputWindow
hasForegroundTarget	include/ui/InputDispatcher.h	/^        inline bool hasForegroundTarget() const {$/;"	f	struct:android::InputDispatcher::DispatchEntry
hasWallpaper	include/ui/InputDispatcher.h	/^    bool hasWallpaper;$/;"	m	struct:android::InputWindow
headMotionSample	include/ui/InputDispatcher.h	/^        MotionSample* headMotionSample;$/;"	m	struct:android::InputDispatcher::DispatchEntry
headSentinel	include/ui/InputDispatcher.h	/^        T headSentinel;$/;"	m	struct:android::InputDispatcher::Queue
inProgress	include/ui/InputDispatcher.h	/^        bool inProgress;$/;"	m	struct:android::InputDispatcher::DispatchEntry
injectionIsAsync	include/ui/InputDispatcher.h	/^        bool injectionIsAsync; \/\/ set to true if injection is not waiting for the result$/;"	m	struct:android::InputDispatcher::InjectionState
injectionResult	include/ui/InputDispatcher.h	/^        int32_t injectionResult;  \/\/ initially INPUT_EVENT_INJECTION_PENDING$/;"	m	struct:android::InputDispatcher::InjectionState
injectionState	include/ui/InputDispatcher.h	/^        InjectionState* injectionState;$/;"	m	struct:android::InputDispatcher::EventEntry
injectorPid	include/ui/InputDispatcher.h	/^        int32_t injectorPid;$/;"	m	struct:android::InputDispatcher::InjectionState
injectorUid	include/ui/InputDispatcher.h	/^        int32_t injectorUid;$/;"	m	struct:android::InputDispatcher::InjectionState
inputApplicationHandle	include/ui/InputDispatcher.h	/^        sp<InputApplicationHandle> inputApplicationHandle;$/;"	m	struct:android::InputDispatcher::CommandEntry
inputChannel	include/ui/InputDispatcher.h	/^        sp<InputChannel> inputChannel;$/;"	m	class:android::InputDispatcher::Connection
inputChannel	include/ui/InputDispatcher.h	/^        sp<InputChannel> inputChannel;$/;"	m	struct:android::InputDispatcher::CommandEntry
inputChannel	include/ui/InputDispatcher.h	/^    sp<InputChannel> inputChannel;$/;"	m	struct:android::InputTarget
inputChannel	include/ui/InputDispatcher.h	/^    sp<InputChannel> inputChannel;$/;"	m	struct:android::InputWindow
inputPublisher	include/ui/InputDispatcher.h	/^        InputPublisher inputPublisher;$/;"	m	class:android::InputDispatcher::Connection
inputState	include/ui/InputDispatcher.h	/^        InputState inputState;$/;"	m	class:android::InputDispatcher::Connection
interceptKeyResult	include/ui/InputDispatcher.h	/^        InterceptKeyResult interceptKeyResult; \/\/ set based on the interception result$/;"	m	struct:android::InputDispatcher::KeyEntry
isEmpty	include/ui/InputDispatcher.h	/^        inline bool isEmpty() const {$/;"	f	struct:android::InputDispatcher::Queue
isInjected	include/ui/InputDispatcher.h	/^        inline bool isInjected() { return injectionState != NULL; }$/;"	f	struct:android::InputDispatcher::EventEntry
isSplit	include/ui/InputDispatcher.h	/^        inline bool isSplit() const {$/;"	f	struct:android::InputDispatcher::DispatchEntry
keyCode	include/ui/InputDispatcher.h	/^            int32_t keyCode;$/;"	m	struct:android::InputDispatcher::InputState::KeyMemento
keyCode	include/ui/InputDispatcher.h	/^        int32_t keyCode;$/;"	m	struct:android::InputDispatcher::KeyEntry
keyEntry	include/ui/InputDispatcher.h	/^        KeyEntry* keyEntry;$/;"	m	struct:android::InputDispatcher::CommandEntry
lastDeviceId	include/ui/InputDispatcher.h	/^        int32_t lastDeviceId;$/;"	m	struct:android::InputDispatcher::ThrottleState
lastDispatchTime	include/ui/InputDispatcher.h	/^        nsecs_t lastDispatchTime; \/\/ the time when the last event was dispatched$/;"	m	class:android::InputDispatcher::Connection
lastEventTime	include/ui/InputDispatcher.h	/^        nsecs_t lastEventTime; \/\/ the time when the event was originally captured$/;"	m	class:android::InputDispatcher::Connection
lastEventTime	include/ui/InputDispatcher.h	/^        nsecs_t lastEventTime;$/;"	m	struct:android::InputDispatcher::ThrottleState
lastKeyEntry	include/ui/InputDispatcher.h	/^        KeyEntry* lastKeyEntry; \/\/ or null if no repeat$/;"	m	struct:android::InputDispatcher::KeyRepeatState
lastSample	include/ui/InputDispatcher.h	/^        MotionSample* lastSample;$/;"	m	struct:android::InputDispatcher::MotionEntry
lastSource	include/ui/InputDispatcher.h	/^        uint32_t lastSource;$/;"	m	struct:android::InputDispatcher::ThrottleState
layer	include/ui/InputDispatcher.h	/^    int32_t layer;$/;"	m	struct:android::InputWindow
layoutParamsFlags	include/ui/InputDispatcher.h	/^    int32_t layoutParamsFlags;$/;"	m	struct:android::InputWindow
layoutParamsType	include/ui/InputDispatcher.h	/^    int32_t layoutParamsType;$/;"	m	struct:android::InputWindow
mActiveConnections	include/ui/InputDispatcher.h	/^    Vector<Connection*> mActiveConnections;$/;"	m	class:android::InputDispatcher
mAllocator	include/ui/InputDispatcher.h	/^    Allocator mAllocator;$/;"	m	class:android::InputDispatcher
mAppSwitchDueTime	include/ui/InputDispatcher.h	/^    nsecs_t mAppSwitchDueTime;$/;"	m	class:android::InputDispatcher
mAppSwitchSawKeyDown	include/ui/InputDispatcher.h	/^    bool mAppSwitchSawKeyDown;$/;"	m	class:android::InputDispatcher
mCommandEntryPool	include/ui/InputDispatcher.h	/^        Pool<CommandEntry> mCommandEntryPool;$/;"	m	class:android::InputDispatcher::Allocator
mCommandQueue	include/ui/InputDispatcher.h	/^    Queue<CommandEntry> mCommandQueue;$/;"	m	class:android::InputDispatcher
mConfigurationChangeEntryPool	include/ui/InputDispatcher.h	/^        Pool<ConfigurationChangedEntry> mConfigurationChangeEntryPool;$/;"	m	class:android::InputDispatcher::Allocator
mConnectionsByReceiveFd	include/ui/InputDispatcher.h	/^    KeyedVector<int, sp<Connection> > mConnectionsByReceiveFd;$/;"	m	class:android::InputDispatcher
mCurrentInputTargets	include/ui/InputDispatcher.h	/^    Vector<InputTarget> mCurrentInputTargets;$/;"	m	class:android::InputDispatcher
mCurrentInputTargetsValid	include/ui/InputDispatcher.h	/^    bool mCurrentInputTargetsValid; \/\/ false while targets are being recomputed$/;"	m	class:android::InputDispatcher
mDispatchEnabled	include/ui/InputDispatcher.h	/^    bool mDispatchEnabled;$/;"	m	class:android::InputDispatcher
mDispatchEntryPool	include/ui/InputDispatcher.h	/^        Pool<DispatchEntry> mDispatchEntryPool;$/;"	m	class:android::InputDispatcher::Allocator
mDispatchFrozen	include/ui/InputDispatcher.h	/^    bool mDispatchFrozen;$/;"	m	class:android::InputDispatcher
mDispatcher	include/ui/InputDispatcher.h	/^    sp<InputDispatcherInterface> mDispatcher;$/;"	m	class:android::InputDispatcherThread
mFocusedApplication	include/ui/InputDispatcher.h	/^    InputApplication* mFocusedApplication;$/;"	m	class:android::InputDispatcher
mFocusedApplicationStorage	include/ui/InputDispatcher.h	/^    InputApplication mFocusedApplicationStorage; \/\/ preallocated storage for mFocusedApplication$/;"	m	class:android::InputDispatcher
mFocusedWindow	include/ui/InputDispatcher.h	/^    const InputWindow* mFocusedWindow;$/;"	m	class:android::InputDispatcher
mInboundQueue	include/ui/InputDispatcher.h	/^    Queue<EventEntry> mInboundQueue;$/;"	m	class:android::InputDispatcher
mInjectionResultAvailableCondition	include/ui/InputDispatcher.h	/^    Condition mInjectionResultAvailableCondition;$/;"	m	class:android::InputDispatcher
mInjectionStatePool	include/ui/InputDispatcher.h	/^        Pool<InjectionState> mInjectionStatePool;$/;"	m	class:android::InputDispatcher::Allocator
mInjectionSyncFinishedCondition	include/ui/InputDispatcher.h	/^    Condition mInjectionSyncFinishedCondition;$/;"	m	class:android::InputDispatcher
mInputTargetWaitCause	include/ui/InputDispatcher.h	/^    InputTargetWaitCause mInputTargetWaitCause;$/;"	m	class:android::InputDispatcher
mInputTargetWaitStartTime	include/ui/InputDispatcher.h	/^    nsecs_t mInputTargetWaitStartTime;$/;"	m	class:android::InputDispatcher
mInputTargetWaitTimeoutExpired	include/ui/InputDispatcher.h	/^    bool mInputTargetWaitTimeoutExpired;$/;"	m	class:android::InputDispatcher
mInputTargetWaitTimeoutTime	include/ui/InputDispatcher.h	/^    nsecs_t mInputTargetWaitTimeoutTime;$/;"	m	class:android::InputDispatcher
mKeyEntryPool	include/ui/InputDispatcher.h	/^        Pool<KeyEntry> mKeyEntryPool;$/;"	m	class:android::InputDispatcher::Allocator
mKeyMementos	include/ui/InputDispatcher.h	/^        Vector<KeyMemento> mKeyMementos;$/;"	m	class:android::InputDispatcher::InputState
mKeyRepeatState	include/ui/InputDispatcher.h	/^    } mKeyRepeatState;$/;"	m	class:android::InputDispatcher	typeref:struct:android::InputDispatcher::KeyRepeatState
mLock	include/ui/InputDispatcher.h	/^    Mutex mLock;$/;"	m	class:android::InputDispatcher
mLooper	include/ui/InputDispatcher.h	/^    sp<Looper> mLooper;$/;"	m	class:android::InputDispatcher
mMonitoringChannels	include/ui/InputDispatcher.h	/^    Vector<sp<InputChannel> > mMonitoringChannels;$/;"	m	class:android::InputDispatcher
mMotionEntryPool	include/ui/InputDispatcher.h	/^        Pool<MotionEntry> mMotionEntryPool;$/;"	m	class:android::InputDispatcher::Allocator
mMotionMementos	include/ui/InputDispatcher.h	/^        Vector<MotionMemento> mMotionMementos;$/;"	m	class:android::InputDispatcher::InputState
mMotionSamplePool	include/ui/InputDispatcher.h	/^        Pool<MotionSample> mMotionSamplePool;$/;"	m	class:android::InputDispatcher::Allocator
mPendingEvent	include/ui/InputDispatcher.h	/^    EventEntry* mPendingEvent;$/;"	m	class:android::InputDispatcher
mPolicy	include/ui/InputDispatcher.h	/^    sp<InputDispatcherPolicyInterface> mPolicy;$/;"	m	class:android::InputDispatcher
mReusableKeyEvent	include/ui/InputDispatcher.h	/^    KeyEvent mReusableKeyEvent;$/;"	m	class:android::InputDispatcher
mTempCancelationEvents	include/ui/InputDispatcher.h	/^    Vector<EventEntry*> mTempCancelationEvents;$/;"	m	class:android::InputDispatcher
mTempTouchState	include/ui/InputDispatcher.h	/^    TouchState mTempTouchState;$/;"	m	class:android::InputDispatcher
mThrottleState	include/ui/InputDispatcher.h	/^    } mThrottleState;$/;"	m	class:android::InputDispatcher	typeref:struct:android::InputDispatcher::ThrottleState
mTouchState	include/ui/InputDispatcher.h	/^    TouchState mTouchState;$/;"	m	class:android::InputDispatcher
mWindows	include/ui/InputDispatcher.h	/^    Vector<InputWindow> mWindows;$/;"	m	class:android::InputDispatcher
metaState	include/ui/InputDispatcher.h	/^        int32_t metaState;$/;"	m	struct:android::InputDispatcher::KeyEntry
metaState	include/ui/InputDispatcher.h	/^        int32_t metaState;$/;"	m	struct:android::InputDispatcher::MotionEntry
minTimeBetweenEvents	include/ui/InputDispatcher.h	/^        nsecs_t minTimeBetweenEvents;$/;"	m	struct:android::InputDispatcher::ThrottleState
name	include/ui/InputDispatcher.h	/^    String8 name;$/;"	m	struct:android::InputApplication
name	include/ui/InputDispatcher.h	/^    String8 name;$/;"	m	struct:android::InputWindow
next	include/ui/InputDispatcher.h	/^        MotionSample* next;$/;"	m	struct:android::InputDispatcher::MotionSample
next	include/ui/InputDispatcher.h	/^        T* next;$/;"	m	struct:android::InputDispatcher::Link
nextRepeatTime	include/ui/InputDispatcher.h	/^        nsecs_t nextRepeatTime;$/;"	m	struct:android::InputDispatcher::KeyRepeatState
originalSampleCount	include/ui/InputDispatcher.h	/^        uint32_t originalSampleCount; \/\/ only collected during debugging$/;"	m	struct:android::InputDispatcher::ThrottleState
outboundQueue	include/ui/InputDispatcher.h	/^        Queue<DispatchEntry> outboundQueue;$/;"	m	class:android::InputDispatcher::Connection
ownerPid	include/ui/InputDispatcher.h	/^    int32_t ownerPid;$/;"	m	struct:android::InputWindow
ownerUid	include/ui/InputDispatcher.h	/^    int32_t ownerUid;$/;"	m	struct:android::InputWindow
paused	include/ui/InputDispatcher.h	/^    bool paused;$/;"	m	struct:android::InputWindow
pendingForegroundDispatches	include/ui/InputDispatcher.h	/^        int32_t pendingForegroundDispatches; \/\/ the number of foreground dispatches in progress$/;"	m	struct:android::InputDispatcher::InjectionState
pointerCoords	include/ui/InputDispatcher.h	/^            PointerCoords pointerCoords[MAX_POINTERS];$/;"	m	struct:android::InputDispatcher::InputState::MotionMemento
pointerCoords	include/ui/InputDispatcher.h	/^        PointerCoords pointerCoords[MAX_POINTERS];$/;"	m	struct:android::InputDispatcher::MotionSample
pointerCount	include/ui/InputDispatcher.h	/^            uint32_t pointerCount;$/;"	m	struct:android::InputDispatcher::InputState::MotionMemento
pointerCount	include/ui/InputDispatcher.h	/^        uint32_t pointerCount;$/;"	m	struct:android::InputDispatcher::MotionEntry
pointerIds	include/ui/InputDispatcher.h	/^            int32_t pointerIds[MAX_POINTERS];$/;"	m	struct:android::InputDispatcher::InputState::MotionMemento
pointerIds	include/ui/InputDispatcher.h	/^        BitSet32 pointerIds;$/;"	m	struct:android::InputDispatcher::TouchedWindow
pointerIds	include/ui/InputDispatcher.h	/^        int32_t pointerIds[MAX_POINTERS];$/;"	m	struct:android::InputDispatcher::MotionEntry
pointerIds	include/ui/InputDispatcher.h	/^    BitSet32 pointerIds;$/;"	m	struct:android::InputTarget
policyFlags	include/ui/InputDispatcher.h	/^        uint32_t policyFlags;$/;"	m	struct:android::InputDispatcher::EventEntry
prev	include/ui/InputDispatcher.h	/^        T* prev;$/;"	m	struct:android::InputDispatcher::Link
refCount	include/ui/InputDispatcher.h	/^        mutable int32_t refCount;$/;"	m	struct:android::InputDispatcher::EventEntry
refCount	include/ui/InputDispatcher.h	/^        mutable int32_t refCount;$/;"	m	struct:android::InputDispatcher::InjectionState
repeatCount	include/ui/InputDispatcher.h	/^        int32_t repeatCount;$/;"	m	struct:android::InputDispatcher::KeyEntry
scanCode	include/ui/InputDispatcher.h	/^            int32_t scanCode;$/;"	m	struct:android::InputDispatcher::InputState::KeyMemento
scanCode	include/ui/InputDispatcher.h	/^        int32_t scanCode;$/;"	m	struct:android::InputDispatcher::KeyEntry
source	include/ui/InputDispatcher.h	/^            int32_t source;$/;"	m	struct:android::InputDispatcher::InputState::KeyMemento
source	include/ui/InputDispatcher.h	/^            int32_t source;$/;"	m	struct:android::InputDispatcher::InputState::MotionMemento
source	include/ui/InputDispatcher.h	/^        int32_t source;$/;"	m	struct:android::InputDispatcher::KeyEntry
source	include/ui/InputDispatcher.h	/^        int32_t source;$/;"	m	struct:android::InputDispatcher::MotionEntry
split	include/ui/InputDispatcher.h	/^        bool split;$/;"	m	struct:android::InputDispatcher::TouchState
status	include/ui/InputDispatcher.h	/^        Status status;$/;"	m	class:android::InputDispatcher::Connection
syntheticRepeat	include/ui/InputDispatcher.h	/^        bool syntheticRepeat; \/\/ set to true for synthetic key repeats$/;"	m	struct:android::InputDispatcher::KeyEntry
tailMotionSample	include/ui/InputDispatcher.h	/^        MotionSample* tailMotionSample;$/;"	m	struct:android::InputDispatcher::DispatchEntry
tailSentinel	include/ui/InputDispatcher.h	/^        T tailSentinel;$/;"	m	struct:android::InputDispatcher::Queue
targetFlags	include/ui/InputDispatcher.h	/^        int32_t targetFlags;$/;"	m	struct:android::InputDispatcher::DispatchEntry
targetFlags	include/ui/InputDispatcher.h	/^        int32_t targetFlags;$/;"	m	struct:android::InputDispatcher::TouchedWindow
touchableAreaBottom	include/ui/InputDispatcher.h	/^    int32_t touchableAreaBottom;$/;"	m	struct:android::InputWindow
touchableAreaLeft	include/ui/InputDispatcher.h	/^    int32_t touchableAreaLeft;$/;"	m	struct:android::InputWindow
touchableAreaRight	include/ui/InputDispatcher.h	/^    int32_t touchableAreaRight;$/;"	m	struct:android::InputWindow
touchableAreaTop	include/ui/InputDispatcher.h	/^    int32_t touchableAreaTop;$/;"	m	struct:android::InputWindow
type	include/ui/InputDispatcher.h	/^        int32_t type;$/;"	m	struct:android::InputDispatcher::EventEntry
userActivityEventType	include/ui/InputDispatcher.h	/^        int32_t userActivityEventType;$/;"	m	struct:android::InputDispatcher::CommandEntry
visible	include/ui/InputDispatcher.h	/^    bool visible;$/;"	m	struct:android::InputWindow
visibleFrameBottom	include/ui/InputDispatcher.h	/^    int32_t visibleFrameBottom;$/;"	m	struct:android::InputWindow
visibleFrameLeft	include/ui/InputDispatcher.h	/^    int32_t visibleFrameLeft;$/;"	m	struct:android::InputWindow
visibleFrameRight	include/ui/InputDispatcher.h	/^    int32_t visibleFrameRight;$/;"	m	struct:android::InputWindow
visibleFrameTop	include/ui/InputDispatcher.h	/^    int32_t visibleFrameTop;$/;"	m	struct:android::InputWindow
window	include/ui/InputDispatcher.h	/^        const InputWindow* window;$/;"	m	struct:android::InputDispatcher::TouchedWindow
windows	include/ui/InputDispatcher.h	/^        Vector<TouchedWindow> windows;$/;"	m	struct:android::InputDispatcher::TouchState
xOffset	include/ui/InputDispatcher.h	/^        float xOffset;$/;"	m	struct:android::InputDispatcher::DispatchEntry
xOffset	include/ui/InputDispatcher.h	/^    float xOffset, yOffset;$/;"	m	struct:android::InputTarget
xPrecision	include/ui/InputDispatcher.h	/^            float xPrecision;$/;"	m	struct:android::InputDispatcher::InputState::MotionMemento
xPrecision	include/ui/InputDispatcher.h	/^        float xPrecision;$/;"	m	struct:android::InputDispatcher::MotionEntry
yOffset	include/ui/InputDispatcher.h	/^        float yOffset;$/;"	m	struct:android::InputDispatcher::DispatchEntry
yOffset	include/ui/InputDispatcher.h	/^    float xOffset, yOffset;$/;"	m	struct:android::InputTarget
yPrecision	include/ui/InputDispatcher.h	/^            float yPrecision;$/;"	m	struct:android::InputDispatcher::InputState::MotionMemento
yPrecision	include/ui/InputDispatcher.h	/^        float yPrecision;$/;"	m	struct:android::InputDispatcher::MotionEntry
~InputApplicationHandle	include/ui/InputDispatcher.h	/^    virtual ~InputApplicationHandle() { }$/;"	f	class:android::InputApplicationHandle
~InputDispatcherInterface	include/ui/InputDispatcher.h	/^    virtual ~InputDispatcherInterface() { }$/;"	f	class:android::InputDispatcherInterface
~InputDispatcherPolicyInterface	include/ui/InputDispatcher.h	/^    virtual ~InputDispatcherPolicyInterface() { }$/;"	f	class:android::InputDispatcherPolicyInterface
InputManager	include/ui/InputManager.h	/^class InputManager : public InputManagerInterface {$/;"	c	namespace:android
InputManagerInterface	include/ui/InputManager.h	/^    InputManagerInterface() { }$/;"	f	class:android::InputManagerInterface
InputManagerInterface	include/ui/InputManager.h	/^class InputManagerInterface : public virtual RefBase {$/;"	c	namespace:android
_UI_INPUT_MANAGER_H	include/ui/InputManager.h	18;"	d
android	include/ui/InputManager.h	/^namespace android {$/;"	n
mDispatcher	include/ui/InputManager.h	/^    sp<InputDispatcherInterface> mDispatcher;$/;"	m	class:android::InputManager
mDispatcherThread	include/ui/InputManager.h	/^    sp<InputDispatcherThread> mDispatcherThread;$/;"	m	class:android::InputManager
mReader	include/ui/InputManager.h	/^    sp<InputReaderInterface> mReader;$/;"	m	class:android::InputManager
mReaderThread	include/ui/InputManager.h	/^    sp<InputReaderThread> mReaderThread;$/;"	m	class:android::InputManager
~InputManagerInterface	include/ui/InputManager.h	/^    virtual ~InputManagerInterface() { }$/;"	f	class:android::InputManagerInterface
AVERAGING_DISTANCE_LIMIT	include/ui/InputReader.h	/^    static const uint64_t AVERAGING_DISTANCE_LIMIT = 75 * 75;$/;"	m	class:android::TouchInputMapper
AVERAGING_HISTORY_SIZE	include/ui/InputReader.h	/^    static const uint32_t AVERAGING_HISTORY_SIZE = 5;$/;"	m	class:android::TouchInputMapper
Accumulator	include/ui/InputReader.h	/^    struct Accumulator {$/;"	s	class:android::MultiTouchInputMapper
Accumulator	include/ui/InputReader.h	/^    struct Accumulator {$/;"	s	class:android::SingleTouchInputMapper
Accumulator	include/ui/InputReader.h	/^    struct Accumulator {$/;"	s	class:android::TrackballInputMapper
AveragingTouchFilterState	include/ui/InputReader.h	/^    struct AveragingTouchFilterState {$/;"	s	class:android::TouchInputMapper
Calibration	include/ui/InputReader.h	/^    struct Calibration {$/;"	s	class:android::TouchInputMapper
CurrentVirtualKeyState	include/ui/InputReader.h	/^        struct CurrentVirtualKeyState {$/;"	s	struct:android::TouchInputMapper::LockedState
DISPATCH_TOUCH	include/ui/InputReader.h	/^        DISPATCH_TOUCH,$/;"	e	enum:android::TouchInputMapper::TouchResult
DROP_STROKE	include/ui/InputReader.h	/^        DROP_STROKE$/;"	e	enum:android::TouchInputMapper::TouchResult
FIELD_ABS_MT_ORIENTATION	include/ui/InputReader.h	/^            FIELD_ABS_MT_ORIENTATION = 64,$/;"	e	enum:android::MultiTouchInputMapper::Accumulator::__anon42
FIELD_ABS_MT_POSITION_X	include/ui/InputReader.h	/^            FIELD_ABS_MT_POSITION_X = 1,$/;"	e	enum:android::MultiTouchInputMapper::Accumulator::__anon42
FIELD_ABS_MT_POSITION_Y	include/ui/InputReader.h	/^            FIELD_ABS_MT_POSITION_Y = 2,$/;"	e	enum:android::MultiTouchInputMapper::Accumulator::__anon42
FIELD_ABS_MT_PRESSURE	include/ui/InputReader.h	/^            FIELD_ABS_MT_PRESSURE = 256,$/;"	e	enum:android::MultiTouchInputMapper::Accumulator::__anon42
FIELD_ABS_MT_TOUCH_MAJOR	include/ui/InputReader.h	/^            FIELD_ABS_MT_TOUCH_MAJOR = 4,$/;"	e	enum:android::MultiTouchInputMapper::Accumulator::__anon42
FIELD_ABS_MT_TOUCH_MINOR	include/ui/InputReader.h	/^            FIELD_ABS_MT_TOUCH_MINOR = 8,$/;"	e	enum:android::MultiTouchInputMapper::Accumulator::__anon42
FIELD_ABS_MT_TRACKING_ID	include/ui/InputReader.h	/^            FIELD_ABS_MT_TRACKING_ID = 128,$/;"	e	enum:android::MultiTouchInputMapper::Accumulator::__anon42
FIELD_ABS_MT_WIDTH_MAJOR	include/ui/InputReader.h	/^            FIELD_ABS_MT_WIDTH_MAJOR = 16,$/;"	e	enum:android::MultiTouchInputMapper::Accumulator::__anon42
FIELD_ABS_MT_WIDTH_MINOR	include/ui/InputReader.h	/^            FIELD_ABS_MT_WIDTH_MINOR = 32,$/;"	e	enum:android::MultiTouchInputMapper::Accumulator::__anon42
FIELD_ABS_PRESSURE	include/ui/InputReader.h	/^            FIELD_ABS_PRESSURE = 8,$/;"	e	enum:android::SingleTouchInputMapper::Accumulator::__anon41
FIELD_ABS_TOOL_WIDTH	include/ui/InputReader.h	/^            FIELD_ABS_TOOL_WIDTH = 16$/;"	e	enum:android::SingleTouchInputMapper::Accumulator::__anon41
FIELD_ABS_X	include/ui/InputReader.h	/^            FIELD_ABS_X = 2,$/;"	e	enum:android::SingleTouchInputMapper::Accumulator::__anon41
FIELD_ABS_Y	include/ui/InputReader.h	/^            FIELD_ABS_Y = 4,$/;"	e	enum:android::SingleTouchInputMapper::Accumulator::__anon41
FIELD_BTN_MOUSE	include/ui/InputReader.h	/^            FIELD_BTN_MOUSE = 1,$/;"	e	enum:android::TrackballInputMapper::Accumulator::__anon38
FIELD_BTN_TOUCH	include/ui/InputReader.h	/^            FIELD_BTN_TOUCH = 1,$/;"	e	enum:android::SingleTouchInputMapper::Accumulator::__anon41
FIELD_REL_X	include/ui/InputReader.h	/^            FIELD_REL_X = 2,$/;"	e	enum:android::TrackballInputMapper::Accumulator::__anon38
FIELD_REL_Y	include/ui/InputReader.h	/^            FIELD_REL_Y = 4$/;"	e	enum:android::TrackballInputMapper::Accumulator::__anon38
GetStateFunc	include/ui/InputReader.h	/^    typedef int32_t (InputDevice::*GetStateFunc)(uint32_t sourceMask, int32_t code);$/;"	t	class:android::InputReader
GetStateFunc	include/ui/InputReader.h	/^    typedef int32_t (InputMapper::*GetStateFunc)(uint32_t sourceMask, int32_t code);$/;"	t	class:android::InputDevice
InputDevice	include/ui/InputReader.h	/^class InputDevice {$/;"	c	namespace:android
InputDeviceCalibration	include/ui/InputReader.h	/^class InputDeviceCalibration {$/;"	c	namespace:android
InputMapper	include/ui/InputReader.h	/^class InputMapper {$/;"	c	namespace:android
InputReader	include/ui/InputReader.h	/^class InputReader : public InputReaderInterface, protected InputReaderContext {$/;"	c	namespace:android
InputReaderContext	include/ui/InputReader.h	/^    InputReaderContext() { }$/;"	f	class:android::InputReaderContext
InputReaderContext	include/ui/InputReader.h	/^class InputReaderContext {$/;"	c	namespace:android
InputReaderInterface	include/ui/InputReader.h	/^    InputReaderInterface() { }$/;"	f	class:android::InputReaderInterface
InputReaderInterface	include/ui/InputReader.h	/^class InputReaderInterface : public virtual RefBase {$/;"	c	namespace:android
InputReaderPolicyInterface	include/ui/InputReader.h	/^    InputReaderPolicyInterface() { }$/;"	f	class:android::InputReaderPolicyInterface
InputReaderPolicyInterface	include/ui/InputReader.h	/^class InputReaderPolicyInterface : public virtual RefBase {$/;"	c	namespace:android
InputReaderThread	include/ui/InputReader.h	/^class InputReaderThread : public Thread {$/;"	c	namespace:android
JUMPY_DROP_LIMIT	include/ui/InputReader.h	/^    static const uint32_t JUMPY_DROP_LIMIT = 3;$/;"	m	class:android::TouchInputMapper
JUMPY_EPSILON_DIVISOR	include/ui/InputReader.h	/^    static const uint32_t JUMPY_EPSILON_DIVISOR = 212;$/;"	m	class:android::TouchInputMapper
JUMPY_TRANSITION_DROPS	include/ui/InputReader.h	/^    static const uint32_t JUMPY_TRANSITION_DROPS = 3;$/;"	m	class:android::TouchInputMapper
JumpyTouchFilterState	include/ui/InputReader.h	/^    struct JumpyTouchFilterState {$/;"	s	class:android::TouchInputMapper
KeyDown	include/ui/InputReader.h	/^    struct KeyDown {$/;"	s	class:android::KeyboardInputMapper
KeyboardInputMapper	include/ui/InputReader.h	/^class KeyboardInputMapper : public InputMapper {$/;"	c	namespace:android
LockedState	include/ui/InputReader.h	/^    struct LockedState {$/;"	s	class:android::KeyboardInputMapper
LockedState	include/ui/InputReader.h	/^    struct LockedState {$/;"	s	class:android::TouchInputMapper
LockedState	include/ui/InputReader.h	/^    struct LockedState {$/;"	s	class:android::TrackballInputMapper
MultiTouchInputMapper	include/ui/InputReader.h	/^class MultiTouchInputMapper : public TouchInputMapper {$/;"	c	namespace:android
ORIENTATION_CALIBRATION_DEFAULT	include/ui/InputReader.h	/^            ORIENTATION_CALIBRATION_DEFAULT,$/;"	e	enum:android::TouchInputMapper::Calibration::OrientationCalibration
ORIENTATION_CALIBRATION_INTERPOLATED	include/ui/InputReader.h	/^            ORIENTATION_CALIBRATION_INTERPOLATED,$/;"	e	enum:android::TouchInputMapper::Calibration::OrientationCalibration
ORIENTATION_CALIBRATION_NONE	include/ui/InputReader.h	/^            ORIENTATION_CALIBRATION_NONE,$/;"	e	enum:android::TouchInputMapper::Calibration::OrientationCalibration
OrientationCalibration	include/ui/InputReader.h	/^        enum OrientationCalibration {$/;"	g	struct:android::TouchInputMapper::Calibration
OrientedRanges	include/ui/InputReader.h	/^        struct OrientedRanges {$/;"	s	struct:android::TouchInputMapper::LockedState
PRESSURE_CALIBRATION_AMPLITUDE	include/ui/InputReader.h	/^            PRESSURE_CALIBRATION_AMPLITUDE,$/;"	e	enum:android::TouchInputMapper::Calibration::PressureCalibration
PRESSURE_CALIBRATION_DEFAULT	include/ui/InputReader.h	/^            PRESSURE_CALIBRATION_DEFAULT,$/;"	e	enum:android::TouchInputMapper::Calibration::PressureCalibration
PRESSURE_CALIBRATION_NONE	include/ui/InputReader.h	/^            PRESSURE_CALIBRATION_NONE,$/;"	e	enum:android::TouchInputMapper::Calibration::PressureCalibration
PRESSURE_CALIBRATION_PHYSICAL	include/ui/InputReader.h	/^            PRESSURE_CALIBRATION_PHYSICAL,$/;"	e	enum:android::TouchInputMapper::Calibration::PressureCalibration
PRESSURE_SOURCE_DEFAULT	include/ui/InputReader.h	/^            PRESSURE_SOURCE_DEFAULT,$/;"	e	enum:android::TouchInputMapper::Calibration::PressureSource
PRESSURE_SOURCE_PRESSURE	include/ui/InputReader.h	/^            PRESSURE_SOURCE_PRESSURE,$/;"	e	enum:android::TouchInputMapper::Calibration::PressureSource
PRESSURE_SOURCE_TOUCH	include/ui/InputReader.h	/^            PRESSURE_SOURCE_TOUCH,$/;"	e	enum:android::TouchInputMapper::Calibration::PressureSource
Parameters	include/ui/InputReader.h	/^    struct Parameters {$/;"	s	class:android::TouchInputMapper
Pointer	include/ui/InputReader.h	/^        struct Pointer {$/;"	s	struct:android::MultiTouchInputMapper::Accumulator
PointerData	include/ui/InputReader.h	/^    struct PointerData {$/;"	s	class:android::TouchInputMapper
PointerDistanceHeapElement	include/ui/InputReader.h	/^    struct PointerDistanceHeapElement {$/;"	s	class:android::TouchInputMapper
PressureCalibration	include/ui/InputReader.h	/^        enum PressureCalibration {$/;"	g	struct:android::TouchInputMapper::Calibration
PressureSource	include/ui/InputReader.h	/^        enum PressureSource {$/;"	g	struct:android::TouchInputMapper::Calibration
ROTATION_0	include/ui/InputReader.h	/^        ROTATION_0 = 0,$/;"	e	enum:android::InputReaderPolicyInterface::__anon37
ROTATION_180	include/ui/InputReader.h	/^        ROTATION_180 = 2,$/;"	e	enum:android::InputReaderPolicyInterface::__anon37
ROTATION_270	include/ui/InputReader.h	/^        ROTATION_270 = 3$/;"	e	enum:android::InputReaderPolicyInterface::__anon37
ROTATION_90	include/ui/InputReader.h	/^        ROTATION_90 = 1,$/;"	e	enum:android::InputReaderPolicyInterface::__anon37
RawAxes	include/ui/InputReader.h	/^    struct RawAxes {$/;"	s	class:android::TouchInputMapper
SIZE_CALIBRATION_DEFAULT	include/ui/InputReader.h	/^            SIZE_CALIBRATION_DEFAULT,$/;"	e	enum:android::TouchInputMapper::Calibration::SizeCalibration
SIZE_CALIBRATION_NONE	include/ui/InputReader.h	/^            SIZE_CALIBRATION_NONE,$/;"	e	enum:android::TouchInputMapper::Calibration::SizeCalibration
SIZE_CALIBRATION_NORMALIZED	include/ui/InputReader.h	/^            SIZE_CALIBRATION_NORMALIZED,$/;"	e	enum:android::TouchInputMapper::Calibration::SizeCalibration
SKIP_TOUCH	include/ui/InputReader.h	/^        SKIP_TOUCH,$/;"	e	enum:android::TouchInputMapper::TouchResult
SingleTouchInputMapper	include/ui/InputReader.h	/^class SingleTouchInputMapper : public TouchInputMapper {$/;"	c	namespace:android
SizeCalibration	include/ui/InputReader.h	/^        enum SizeCalibration {$/;"	g	struct:android::TouchInputMapper::Calibration
SwitchInputMapper	include/ui/InputReader.h	/^class SwitchInputMapper : public InputMapper {$/;"	c	namespace:android
TOOL_SIZE_CALIBRATION_AREA	include/ui/InputReader.h	/^            TOOL_SIZE_CALIBRATION_AREA,$/;"	e	enum:android::TouchInputMapper::Calibration::ToolSizeCalibration
TOOL_SIZE_CALIBRATION_DEFAULT	include/ui/InputReader.h	/^            TOOL_SIZE_CALIBRATION_DEFAULT,$/;"	e	enum:android::TouchInputMapper::Calibration::ToolSizeCalibration
TOOL_SIZE_CALIBRATION_GEOMETRIC	include/ui/InputReader.h	/^            TOOL_SIZE_CALIBRATION_GEOMETRIC,$/;"	e	enum:android::TouchInputMapper::Calibration::ToolSizeCalibration
TOOL_SIZE_CALIBRATION_LINEAR	include/ui/InputReader.h	/^            TOOL_SIZE_CALIBRATION_LINEAR,$/;"	e	enum:android::TouchInputMapper::Calibration::ToolSizeCalibration
TOOL_SIZE_CALIBRATION_NONE	include/ui/InputReader.h	/^            TOOL_SIZE_CALIBRATION_NONE,$/;"	e	enum:android::TouchInputMapper::Calibration::ToolSizeCalibration
TOUCH_SIZE_CALIBRATION_DEFAULT	include/ui/InputReader.h	/^            TOUCH_SIZE_CALIBRATION_DEFAULT,$/;"	e	enum:android::TouchInputMapper::Calibration::TouchSizeCalibration
TOUCH_SIZE_CALIBRATION_GEOMETRIC	include/ui/InputReader.h	/^            TOUCH_SIZE_CALIBRATION_GEOMETRIC,$/;"	e	enum:android::TouchInputMapper::Calibration::TouchSizeCalibration
TOUCH_SIZE_CALIBRATION_NONE	include/ui/InputReader.h	/^            TOUCH_SIZE_CALIBRATION_NONE,$/;"	e	enum:android::TouchInputMapper::Calibration::TouchSizeCalibration
TOUCH_SIZE_CALIBRATION_PRESSURE	include/ui/InputReader.h	/^            TOUCH_SIZE_CALIBRATION_PRESSURE,$/;"	e	enum:android::TouchInputMapper::Calibration::TouchSizeCalibration
TRACKBALL_MOVEMENT_THRESHOLD	include/ui/InputReader.h	/^    static const int32_t TRACKBALL_MOVEMENT_THRESHOLD = 6;$/;"	m	class:android::TrackballInputMapper
ToolSizeCalibration	include/ui/InputReader.h	/^        enum ToolSizeCalibration {$/;"	g	struct:android::TouchInputMapper::Calibration
TouchData	include/ui/InputReader.h	/^    struct TouchData {$/;"	s	class:android::TouchInputMapper
TouchInputMapper	include/ui/InputReader.h	/^class TouchInputMapper : public InputMapper {$/;"	c	namespace:android
TouchResult	include/ui/InputReader.h	/^    enum TouchResult {$/;"	g	class:android::TouchInputMapper
TouchSizeCalibration	include/ui/InputReader.h	/^        enum TouchSizeCalibration {$/;"	g	struct:android::TouchInputMapper::Calibration
TrackballInputMapper	include/ui/InputReader.h	/^class TrackballInputMapper : public InputMapper {$/;"	c	namespace:android
VirtualKey	include/ui/InputReader.h	/^    struct VirtualKey {$/;"	s	class:android::TouchInputMapper
VirtualKeyDefinition	include/ui/InputReader.h	/^struct VirtualKeyDefinition {$/;"	s	namespace:android
_UI_INPUT_READER_H	include/ui/InputReader.h	18;"	d
absMTOrientation	include/ui/InputReader.h	/^            int32_t absMTOrientation;$/;"	m	struct:android::MultiTouchInputMapper::Accumulator::Pointer
absMTPositionX	include/ui/InputReader.h	/^            int32_t absMTPositionX;$/;"	m	struct:android::MultiTouchInputMapper::Accumulator::Pointer
absMTPositionY	include/ui/InputReader.h	/^            int32_t absMTPositionY;$/;"	m	struct:android::MultiTouchInputMapper::Accumulator::Pointer
absMTPressure	include/ui/InputReader.h	/^            int32_t absMTPressure;$/;"	m	struct:android::MultiTouchInputMapper::Accumulator::Pointer
absMTTouchMajor	include/ui/InputReader.h	/^            int32_t absMTTouchMajor;$/;"	m	struct:android::MultiTouchInputMapper::Accumulator::Pointer
absMTTouchMinor	include/ui/InputReader.h	/^            int32_t absMTTouchMinor;$/;"	m	struct:android::MultiTouchInputMapper::Accumulator::Pointer
absMTTrackingId	include/ui/InputReader.h	/^            int32_t absMTTrackingId;$/;"	m	struct:android::MultiTouchInputMapper::Accumulator::Pointer
absMTWidthMajor	include/ui/InputReader.h	/^            int32_t absMTWidthMajor;$/;"	m	struct:android::MultiTouchInputMapper::Accumulator::Pointer
absMTWidthMinor	include/ui/InputReader.h	/^            int32_t absMTWidthMinor;$/;"	m	struct:android::MultiTouchInputMapper::Accumulator::Pointer
absPressure	include/ui/InputReader.h	/^        int32_t absPressure;$/;"	m	struct:android::SingleTouchInputMapper::Accumulator
absToolWidth	include/ui/InputReader.h	/^        int32_t absToolWidth;$/;"	m	struct:android::SingleTouchInputMapper::Accumulator
absX	include/ui/InputReader.h	/^        int32_t absX;$/;"	m	struct:android::SingleTouchInputMapper::Accumulator
absY	include/ui/InputReader.h	/^        int32_t absY;$/;"	m	struct:android::SingleTouchInputMapper::Accumulator
android	include/ui/InputReader.h	/^namespace android {$/;"	n
btnMouse	include/ui/InputReader.h	/^        bool btnMouse;$/;"	m	struct:android::TrackballInputMapper::Accumulator
btnTouch	include/ui/InputReader.h	/^        bool btnTouch;$/;"	m	struct:android::SingleTouchInputMapper::Accumulator
centerX	include/ui/InputReader.h	/^    int32_t centerX;$/;"	m	struct:android::VirtualKeyDefinition
centerY	include/ui/InputReader.h	/^    int32_t centerY;$/;"	m	struct:android::VirtualKeyDefinition
clear	include/ui/InputReader.h	/^            inline void clear() {$/;"	f	struct:android::MultiTouchInputMapper::Accumulator::Pointer
clear	include/ui/InputReader.h	/^        inline void clear() {$/;"	f	struct:android::MultiTouchInputMapper::Accumulator
clear	include/ui/InputReader.h	/^        inline void clear() {$/;"	f	struct:android::SingleTouchInputMapper::Accumulator
clear	include/ui/InputReader.h	/^        inline void clear() {$/;"	f	struct:android::TouchInputMapper::TouchData
clear	include/ui/InputReader.h	/^        inline void clear() {$/;"	f	struct:android::TrackballInputMapper::Accumulator
copyFrom	include/ui/InputReader.h	/^        void copyFrom(const TouchData& other) {$/;"	f	struct:android::TouchInputMapper::TouchData
currentPointerIndex	include/ui/InputReader.h	/^        uint32_t currentPointerIndex : 8;$/;"	m	struct:android::TouchInputMapper::PointerDistanceHeapElement
currentVirtualKey	include/ui/InputReader.h	/^        } currentVirtualKey;$/;"	m	struct:android::TouchInputMapper::LockedState	typeref:struct:android::TouchInputMapper::LockedState::CurrentVirtualKeyState
distance	include/ui/InputReader.h	/^        uint64_t distance : 48; \/\/ squared distance$/;"	m	struct:android::TouchInputMapper::PointerDistanceHeapElement
down	include/ui/InputReader.h	/^            bool down;$/;"	m	struct:android::TouchInputMapper::LockedState::CurrentVirtualKeyState
down	include/ui/InputReader.h	/^        bool down;$/;"	m	struct:android::TrackballInputMapper::LockedState
downTime	include/ui/InputReader.h	/^            nsecs_t downTime;$/;"	m	struct:android::TouchInputMapper::LockedState::CurrentVirtualKeyState
downTime	include/ui/InputReader.h	/^        nsecs_t downTime; \/\/ time of most recent key down$/;"	m	struct:android::KeyboardInputMapper::LockedState
downTime	include/ui/InputReader.h	/^        nsecs_t downTime;$/;"	m	struct:android::TrackballInputMapper::LockedState
fields	include/ui/InputReader.h	/^            uint32_t fields;$/;"	m	struct:android::MultiTouchInputMapper::Accumulator::Pointer
fields	include/ui/InputReader.h	/^        uint32_t fields;$/;"	m	struct:android::SingleTouchInputMapper::Accumulator
fields	include/ui/InputReader.h	/^        uint32_t fields;$/;"	m	struct:android::TrackballInputMapper::Accumulator
flags	include/ui/InputReader.h	/^        uint32_t flags;$/;"	m	struct:android::TouchInputMapper::VirtualKey
geometricScale	include/ui/InputReader.h	/^        float geometricScale;$/;"	m	struct:android::TouchInputMapper::LockedState
getCalibration	include/ui/InputReader.h	/^    inline const InputDeviceCalibration& getCalibration() {$/;"	f	class:android::InputDevice
getContext	include/ui/InputReader.h	/^    inline InputReaderContext* getContext() { return mContext; }$/;"	f	class:android::InputDevice
getContext	include/ui/InputReader.h	/^    inline InputReaderContext* getContext() { return mContext; }$/;"	f	class:android::InputMapper
getDevice	include/ui/InputReader.h	/^    inline InputDevice* getDevice() { return mDevice; }$/;"	f	class:android::InputMapper
getDeviceId	include/ui/InputReader.h	/^    inline int32_t getDeviceId() { return mDevice->getId(); }$/;"	f	class:android::InputMapper
getDeviceName	include/ui/InputReader.h	/^    inline const String8 getDeviceName() { return mDevice->getName(); }$/;"	f	class:android::InputMapper
getDispatcher	include/ui/InputReader.h	/^    inline InputDispatcherInterface* getDispatcher() { return mContext->getDispatcher(); }$/;"	f	class:android::InputMapper
getDispatcher	include/ui/InputReader.h	/^    virtual InputDispatcherInterface* getDispatcher() { return mDispatcher.get(); }$/;"	f	class:android::InputReader
getEventHub	include/ui/InputReader.h	/^    inline EventHubInterface* getEventHub() { return mContext->getEventHub(); }$/;"	f	class:android::InputMapper
getEventHub	include/ui/InputReader.h	/^    virtual EventHubInterface* getEventHub() { return mEventHub.get(); }$/;"	f	class:android::InputReader
getId	include/ui/InputReader.h	/^    inline int32_t getId() { return mId; }$/;"	f	class:android::InputDevice
getName	include/ui/InputReader.h	/^    inline const String8& getName() { return mName; }$/;"	f	class:android::InputDevice
getPolicy	include/ui/InputReader.h	/^    inline InputReaderPolicyInterface* getPolicy() { return mContext->getPolicy(); }$/;"	f	class:android::InputMapper
getPolicy	include/ui/InputReader.h	/^    virtual InputReaderPolicyInterface* getPolicy() { return mPolicy.get(); }$/;"	f	class:android::InputReader
getSources	include/ui/InputReader.h	/^    inline uint32_t getSources() { return mSources; }$/;"	f	class:android::InputDevice
haveOrientation	include/ui/InputReader.h	/^            bool haveOrientation;$/;"	m	struct:android::TouchInputMapper::LockedState::OrientedRanges
havePressure	include/ui/InputReader.h	/^            bool havePressure;$/;"	m	struct:android::TouchInputMapper::LockedState::OrientedRanges
havePressureScale	include/ui/InputReader.h	/^        bool havePressureScale;$/;"	m	struct:android::TouchInputMapper::Calibration
haveSize	include/ui/InputReader.h	/^            bool haveSize;$/;"	m	struct:android::TouchInputMapper::LockedState::OrientedRanges
haveToolSize	include/ui/InputReader.h	/^            bool haveToolSize;$/;"	m	struct:android::TouchInputMapper::LockedState::OrientedRanges
haveToolSizeAreaBias	include/ui/InputReader.h	/^        bool haveToolSizeAreaBias;$/;"	m	struct:android::TouchInputMapper::Calibration
haveToolSizeAreaScale	include/ui/InputReader.h	/^        bool haveToolSizeAreaScale;$/;"	m	struct:android::TouchInputMapper::Calibration
haveToolSizeIsSummed	include/ui/InputReader.h	/^        bool haveToolSizeIsSummed;$/;"	m	struct:android::TouchInputMapper::Calibration
haveToolSizeLinearBias	include/ui/InputReader.h	/^        bool haveToolSizeLinearBias;$/;"	m	struct:android::TouchInputMapper::Calibration
haveToolSizeLinearScale	include/ui/InputReader.h	/^        bool haveToolSizeLinearScale;$/;"	m	struct:android::TouchInputMapper::Calibration
haveTouchSize	include/ui/InputReader.h	/^            bool haveTouchSize;$/;"	m	struct:android::TouchInputMapper::LockedState::OrientedRanges
height	include/ui/InputReader.h	/^    int32_t height;$/;"	m	struct:android::VirtualKeyDefinition
historyData	include/ui/InputReader.h	/^        } historyData[AVERAGING_HISTORY_SIZE];$/;"	m	struct:android::TouchInputMapper::AveragingTouchFilterState	typeref:struct:android::TouchInputMapper::AveragingTouchFilterState::__anon39
historyEnd	include/ui/InputReader.h	/^        uint32_t historyEnd[MAX_POINTERS];$/;"	m	struct:android::TouchInputMapper::AveragingTouchFilterState
historyStart	include/ui/InputReader.h	/^        uint32_t historyStart[MAX_POINTERS];$/;"	m	struct:android::TouchInputMapper::AveragingTouchFilterState
hitBottom	include/ui/InputReader.h	/^        int32_t hitBottom;$/;"	m	struct:android::TouchInputMapper::VirtualKey
hitLeft	include/ui/InputReader.h	/^        int32_t hitLeft;$/;"	m	struct:android::TouchInputMapper::VirtualKey
hitRight	include/ui/InputReader.h	/^        int32_t hitRight;$/;"	m	struct:android::TouchInputMapper::VirtualKey
hitTop	include/ui/InputReader.h	/^        int32_t hitTop;$/;"	m	struct:android::TouchInputMapper::VirtualKey
id	include/ui/InputReader.h	/^        uint32_t id;$/;"	m	struct:android::TouchInputMapper::PointerData
idBits	include/ui/InputReader.h	/^        BitSet32 idBits;$/;"	m	struct:android::TouchInputMapper::TouchData
idToIndex	include/ui/InputReader.h	/^        uint32_t idToIndex[MAX_POINTER_ID + 1];$/;"	m	struct:android::TouchInputMapper::TouchData
isHit	include/ui/InputReader.h	/^        inline bool isHit(int32_t x, int32_t y) const {$/;"	f	struct:android::TouchInputMapper::VirtualKey
isIgnored	include/ui/InputReader.h	/^    inline bool isIgnored() { return mMappers.isEmpty(); }$/;"	f	class:android::InputDevice
jumpyPointsDropped	include/ui/InputReader.h	/^        uint32_t jumpyPointsDropped;$/;"	m	struct:android::TouchInputMapper::JumpyTouchFilterState
keyCode	include/ui/InputReader.h	/^            int32_t keyCode;$/;"	m	struct:android::TouchInputMapper::LockedState::CurrentVirtualKeyState
keyCode	include/ui/InputReader.h	/^        int32_t keyCode;$/;"	m	struct:android::KeyboardInputMapper::KeyDown
keyCode	include/ui/InputReader.h	/^        int32_t keyCode;$/;"	m	struct:android::TouchInputMapper::VirtualKey
keyDowns	include/ui/InputReader.h	/^        Vector<KeyDown> keyDowns; \/\/ keys that are down$/;"	m	struct:android::KeyboardInputMapper::LockedState
lastPointerIndex	include/ui/InputReader.h	/^        uint32_t lastPointerIndex : 8;$/;"	m	struct:android::TouchInputMapper::PointerDistanceHeapElement
mAccumulator	include/ui/InputReader.h	/^    } mAccumulator;$/;"	m	class:android::MultiTouchInputMapper	typeref:struct:android::MultiTouchInputMapper::Accumulator
mAccumulator	include/ui/InputReader.h	/^    } mAccumulator;$/;"	m	class:android::SingleTouchInputMapper	typeref:struct:android::SingleTouchInputMapper::Accumulator
mAccumulator	include/ui/InputReader.h	/^    } mAccumulator;$/;"	m	class:android::TrackballInputMapper	typeref:struct:android::TrackballInputMapper::Accumulator
mAssociatedDisplayId	include/ui/InputReader.h	/^    int32_t mAssociatedDisplayId;$/;"	m	class:android::KeyboardInputMapper
mAssociatedDisplayId	include/ui/InputReader.h	/^    int32_t mAssociatedDisplayId;$/;"	m	class:android::TouchInputMapper
mAssociatedDisplayId	include/ui/InputReader.h	/^    int32_t mAssociatedDisplayId;$/;"	m	class:android::TrackballInputMapper
mAveragingTouchFilter	include/ui/InputReader.h	/^    } mAveragingTouchFilter;$/;"	m	class:android::TouchInputMapper	typeref:struct:android::TouchInputMapper::AveragingTouchFilterState
mCalibration	include/ui/InputReader.h	/^    InputDeviceCalibration mCalibration;$/;"	m	class:android::InputDevice
mCalibration	include/ui/InputReader.h	/^    } mCalibration;$/;"	m	class:android::TouchInputMapper	typeref:struct:android::TouchInputMapper::Calibration
mContext	include/ui/InputReader.h	/^    InputReaderContext* mContext;$/;"	m	class:android::InputDevice
mContext	include/ui/InputReader.h	/^    InputReaderContext* mContext;$/;"	m	class:android::InputMapper
mCurrentTouch	include/ui/InputReader.h	/^    TouchData mCurrentTouch;$/;"	m	class:android::TouchInputMapper
mDevice	include/ui/InputReader.h	/^    InputDevice* mDevice;$/;"	m	class:android::InputMapper
mDeviceRegistryLock	include/ui/InputReader.h	/^    RWLock mDeviceRegistryLock;$/;"	m	class:android::InputReader
mDevices	include/ui/InputReader.h	/^    KeyedVector<int32_t, InputDevice*> mDevices;$/;"	m	class:android::InputReader
mDisableVirtualKeysTimeout	include/ui/InputReader.h	/^    nsecs_t mDisableVirtualKeysTimeout;$/;"	m	class:android::InputReader
mDispatcher	include/ui/InputReader.h	/^    sp<InputDispatcherInterface> mDispatcher;$/;"	m	class:android::InputReader
mDown	include/ui/InputReader.h	/^    bool mDown;$/;"	m	class:android::SingleTouchInputMapper
mDownTime	include/ui/InputReader.h	/^    nsecs_t mDownTime;$/;"	m	class:android::TouchInputMapper
mEventHub	include/ui/InputReader.h	/^    sp<EventHubInterface> mEventHub;$/;"	m	class:android::InputReader
mGlobalMetaState	include/ui/InputReader.h	/^    int32_t mGlobalMetaState;$/;"	m	class:android::InputReader
mId	include/ui/InputReader.h	/^    int32_t mId;$/;"	m	class:android::InputDevice
mInputConfiguration	include/ui/InputReader.h	/^    InputConfiguration mInputConfiguration;$/;"	m	class:android::InputReader
mJumpyTouchFilter	include/ui/InputReader.h	/^    } mJumpyTouchFilter;$/;"	m	class:android::TouchInputMapper	typeref:struct:android::TouchInputMapper::JumpyTouchFilterState
mKeyboardType	include/ui/InputReader.h	/^    int32_t mKeyboardType;$/;"	m	class:android::KeyboardInputMapper
mLastTouch	include/ui/InputReader.h	/^    TouchData mLastTouch;$/;"	m	class:android::TouchInputMapper
mLock	include/ui/InputReader.h	/^    Mutex mLock;$/;"	m	class:android::KeyboardInputMapper
mLock	include/ui/InputReader.h	/^    Mutex mLock;$/;"	m	class:android::TouchInputMapper
mLock	include/ui/InputReader.h	/^    Mutex mLock;$/;"	m	class:android::TrackballInputMapper
mLocked	include/ui/InputReader.h	/^    } mLocked;$/;"	m	class:android::KeyboardInputMapper	typeref:struct:android::KeyboardInputMapper::LockedState
mLocked	include/ui/InputReader.h	/^    } mLocked;$/;"	m	class:android::TouchInputMapper	typeref:struct:android::TouchInputMapper::LockedState
mLocked	include/ui/InputReader.h	/^    } mLocked;$/;"	m	class:android::TrackballInputMapper	typeref:struct:android::TrackballInputMapper::LockedState
mMappers	include/ui/InputReader.h	/^    Vector<InputMapper*> mMappers;$/;"	m	class:android::InputDevice
mName	include/ui/InputReader.h	/^    String8 mName;$/;"	m	class:android::InputDevice
mParameters	include/ui/InputReader.h	/^    } mParameters;$/;"	m	class:android::TouchInputMapper	typeref:struct:android::TouchInputMapper::Parameters
mPolicy	include/ui/InputReader.h	/^    sp<InputReaderPolicyInterface> mPolicy;$/;"	m	class:android::InputReader
mPressure	include/ui/InputReader.h	/^    int32_t mPressure;$/;"	m	class:android::SingleTouchInputMapper
mProperties	include/ui/InputReader.h	/^    KeyedVector<String8, String8> mProperties;$/;"	m	class:android::InputDeviceCalibration
mRawAxes	include/ui/InputReader.h	/^    } mRawAxes;$/;"	m	class:android::TouchInputMapper	typeref:struct:android::TouchInputMapper::RawAxes
mReader	include/ui/InputReader.h	/^    sp<InputReaderInterface> mReader;$/;"	m	class:android::InputReaderThread
mSources	include/ui/InputReader.h	/^    uint32_t mSources;$/;"	m	class:android::InputDevice
mSources	include/ui/InputReader.h	/^    uint32_t mSources;$/;"	m	class:android::KeyboardInputMapper
mStateLock	include/ui/InputReader.h	/^    Mutex mStateLock;$/;"	m	class:android::InputReader
mToolWidth	include/ui/InputReader.h	/^    int32_t mToolWidth;$/;"	m	class:android::SingleTouchInputMapper
mX	include/ui/InputReader.h	/^    int32_t mX;$/;"	m	class:android::SingleTouchInputMapper
mXPrecision	include/ui/InputReader.h	/^    float mXPrecision;$/;"	m	class:android::TrackballInputMapper
mXScale	include/ui/InputReader.h	/^    float mXScale;$/;"	m	class:android::TrackballInputMapper
mY	include/ui/InputReader.h	/^    int32_t mY;$/;"	m	class:android::SingleTouchInputMapper
mYPrecision	include/ui/InputReader.h	/^    float mYPrecision;$/;"	m	class:android::TrackballInputMapper
mYScale	include/ui/InputReader.h	/^    float mYScale;$/;"	m	class:android::TrackballInputMapper
metaState	include/ui/InputReader.h	/^        int32_t metaState;$/;"	m	struct:android::KeyboardInputMapper::LockedState
operator !=	include/ui/InputReader.h	/^        inline bool operator!= (const PointerData& other) const {$/;"	f	struct:android::TouchInputMapper::PointerData
operator ==	include/ui/InputReader.h	/^        inline bool operator== (const PointerData& other) const {$/;"	f	struct:android::TouchInputMapper::PointerData
orientation	include/ui/InputReader.h	/^            InputDeviceInfo::MotionRange orientation;$/;"	m	struct:android::TouchInputMapper::LockedState::OrientedRanges
orientation	include/ui/InputReader.h	/^        RawAbsoluteAxisInfo orientation;$/;"	m	struct:android::TouchInputMapper::RawAxes
orientation	include/ui/InputReader.h	/^        int32_t orientation;$/;"	m	struct:android::TouchInputMapper::PointerData
orientationCalibration	include/ui/InputReader.h	/^        OrientationCalibration orientationCalibration;$/;"	m	struct:android::TouchInputMapper::Calibration
orientationScale	include/ui/InputReader.h	/^        float orientationScale;$/;"	m	struct:android::TouchInputMapper::LockedState
orientedRanges	include/ui/InputReader.h	/^        } orientedRanges;$/;"	m	struct:android::TouchInputMapper::LockedState	typeref:struct:android::TouchInputMapper::LockedState::OrientedRanges
orientedSurfaceHeight	include/ui/InputReader.h	/^        float orientedSurfaceWidth, orientedSurfaceHeight;$/;"	m	struct:android::TouchInputMapper::LockedState
orientedSurfaceWidth	include/ui/InputReader.h	/^        float orientedSurfaceWidth, orientedSurfaceHeight;$/;"	m	struct:android::TouchInputMapper::LockedState
orientedXPrecision	include/ui/InputReader.h	/^        float orientedXPrecision, orientedYPrecision;$/;"	m	struct:android::TouchInputMapper::LockedState
orientedYPrecision	include/ui/InputReader.h	/^        float orientedXPrecision, orientedYPrecision;$/;"	m	struct:android::TouchInputMapper::LockedState
pointerCount	include/ui/InputReader.h	/^        uint32_t pointerCount;$/;"	m	struct:android::MultiTouchInputMapper::Accumulator
pointerCount	include/ui/InputReader.h	/^        uint32_t pointerCount;$/;"	m	struct:android::TouchInputMapper::TouchData
pointers	include/ui/InputReader.h	/^            } pointers[MAX_POINTERS];$/;"	m	struct:android::TouchInputMapper::AveragingTouchFilterState::__anon39	typeref:struct:android::TouchInputMapper::AveragingTouchFilterState::__anon39::__anon40
pointers	include/ui/InputReader.h	/^        PointerData pointers[MAX_POINTERS];$/;"	m	struct:android::TouchInputMapper::TouchData
pointers	include/ui/InputReader.h	/^        } pointers[MAX_POINTERS + 1]; \/\/ + 1 to remove the need for extra range checks$/;"	m	struct:android::MultiTouchInputMapper::Accumulator	typeref:struct:android::MultiTouchInputMapper::Accumulator::Pointer
pressure	include/ui/InputReader.h	/^                int32_t pressure;$/;"	m	struct:android::TouchInputMapper::AveragingTouchFilterState::__anon39::__anon40
pressure	include/ui/InputReader.h	/^            InputDeviceInfo::MotionRange pressure;$/;"	m	struct:android::TouchInputMapper::LockedState::OrientedRanges
pressure	include/ui/InputReader.h	/^        RawAbsoluteAxisInfo pressure;$/;"	m	struct:android::TouchInputMapper::RawAxes
pressure	include/ui/InputReader.h	/^        int32_t pressure;$/;"	m	struct:android::TouchInputMapper::PointerData
pressureCalibration	include/ui/InputReader.h	/^        PressureCalibration pressureCalibration;$/;"	m	struct:android::TouchInputMapper::Calibration
pressureScale	include/ui/InputReader.h	/^        float pressureScale;$/;"	m	struct:android::TouchInputMapper::Calibration
pressureScale	include/ui/InputReader.h	/^        float pressureScale;$/;"	m	struct:android::TouchInputMapper::LockedState
pressureSource	include/ui/InputReader.h	/^        PressureSource pressureSource;$/;"	m	struct:android::TouchInputMapper::Calibration
relX	include/ui/InputReader.h	/^        int32_t relX;$/;"	m	struct:android::TrackballInputMapper::Accumulator
relY	include/ui/InputReader.h	/^        int32_t relY;$/;"	m	struct:android::TrackballInputMapper::Accumulator
scanCode	include/ui/InputReader.h	/^            int32_t scanCode;$/;"	m	struct:android::TouchInputMapper::LockedState::CurrentVirtualKeyState
scanCode	include/ui/InputReader.h	/^        int32_t scanCode;$/;"	m	struct:android::KeyboardInputMapper::KeyDown
scanCode	include/ui/InputReader.h	/^        int32_t scanCode;$/;"	m	struct:android::TouchInputMapper::VirtualKey
scanCode	include/ui/InputReader.h	/^    int32_t scanCode;$/;"	m	struct:android::VirtualKeyDefinition
size	include/ui/InputReader.h	/^            InputDeviceInfo::MotionRange size;$/;"	m	struct:android::TouchInputMapper::LockedState::OrientedRanges
sizeCalibration	include/ui/InputReader.h	/^        SizeCalibration sizeCalibration;$/;"	m	struct:android::TouchInputMapper::Calibration
sizeScale	include/ui/InputReader.h	/^        float sizeScale;$/;"	m	struct:android::TouchInputMapper::LockedState
surfaceHeight	include/ui/InputReader.h	/^        int32_t surfaceWidth, surfaceHeight;$/;"	m	struct:android::TouchInputMapper::LockedState
surfaceOrientation	include/ui/InputReader.h	/^        int32_t surfaceOrientation;$/;"	m	struct:android::TouchInputMapper::LockedState
surfaceWidth	include/ui/InputReader.h	/^        int32_t surfaceWidth, surfaceHeight;$/;"	m	struct:android::TouchInputMapper::LockedState
toolMajor	include/ui/InputReader.h	/^            InputDeviceInfo::MotionRange toolMajor;$/;"	m	struct:android::TouchInputMapper::LockedState::OrientedRanges
toolMajor	include/ui/InputReader.h	/^        RawAbsoluteAxisInfo toolMajor;$/;"	m	struct:android::TouchInputMapper::RawAxes
toolMajor	include/ui/InputReader.h	/^        int32_t toolMajor;$/;"	m	struct:android::TouchInputMapper::PointerData
toolMinor	include/ui/InputReader.h	/^            InputDeviceInfo::MotionRange toolMinor;$/;"	m	struct:android::TouchInputMapper::LockedState::OrientedRanges
toolMinor	include/ui/InputReader.h	/^        RawAbsoluteAxisInfo toolMinor;$/;"	m	struct:android::TouchInputMapper::RawAxes
toolMinor	include/ui/InputReader.h	/^        int32_t toolMinor;$/;"	m	struct:android::TouchInputMapper::PointerData
toolSizeAreaBias	include/ui/InputReader.h	/^        float toolSizeAreaBias;$/;"	m	struct:android::TouchInputMapper::Calibration
toolSizeAreaBias	include/ui/InputReader.h	/^        float toolSizeAreaBias;$/;"	m	struct:android::TouchInputMapper::LockedState
toolSizeAreaScale	include/ui/InputReader.h	/^        float toolSizeAreaScale;$/;"	m	struct:android::TouchInputMapper::Calibration
toolSizeAreaScale	include/ui/InputReader.h	/^        float toolSizeAreaScale;$/;"	m	struct:android::TouchInputMapper::LockedState
toolSizeCalibration	include/ui/InputReader.h	/^        ToolSizeCalibration toolSizeCalibration;$/;"	m	struct:android::TouchInputMapper::Calibration
toolSizeIsSummed	include/ui/InputReader.h	/^        int32_t toolSizeIsSummed;$/;"	m	struct:android::TouchInputMapper::Calibration
toolSizeLinearBias	include/ui/InputReader.h	/^        float toolSizeLinearBias;$/;"	m	struct:android::TouchInputMapper::Calibration
toolSizeLinearBias	include/ui/InputReader.h	/^        float toolSizeLinearBias;$/;"	m	struct:android::TouchInputMapper::LockedState
toolSizeLinearScale	include/ui/InputReader.h	/^        float toolSizeLinearScale;$/;"	m	struct:android::TouchInputMapper::Calibration
toolSizeLinearScale	include/ui/InputReader.h	/^        float toolSizeLinearScale;$/;"	m	struct:android::TouchInputMapper::LockedState
touchMajor	include/ui/InputReader.h	/^            InputDeviceInfo::MotionRange touchMajor;$/;"	m	struct:android::TouchInputMapper::LockedState::OrientedRanges
touchMajor	include/ui/InputReader.h	/^        RawAbsoluteAxisInfo touchMajor;$/;"	m	struct:android::TouchInputMapper::RawAxes
touchMajor	include/ui/InputReader.h	/^        int32_t touchMajor;$/;"	m	struct:android::TouchInputMapper::PointerData
touchMinor	include/ui/InputReader.h	/^            InputDeviceInfo::MotionRange touchMinor;$/;"	m	struct:android::TouchInputMapper::LockedState::OrientedRanges
touchMinor	include/ui/InputReader.h	/^        RawAbsoluteAxisInfo touchMinor;$/;"	m	struct:android::TouchInputMapper::RawAxes
touchMinor	include/ui/InputReader.h	/^        int32_t touchMinor;$/;"	m	struct:android::TouchInputMapper::PointerData
touchSizeCalibration	include/ui/InputReader.h	/^        TouchSizeCalibration touchSizeCalibration;$/;"	m	struct:android::TouchInputMapper::Calibration
useAveragingTouchFilter	include/ui/InputReader.h	/^        bool useAveragingTouchFilter;$/;"	m	struct:android::TouchInputMapper::Parameters
useBadTouchFilter	include/ui/InputReader.h	/^        bool useBadTouchFilter;$/;"	m	struct:android::TouchInputMapper::Parameters
useJumpyTouchFilter	include/ui/InputReader.h	/^        bool useJumpyTouchFilter;$/;"	m	struct:android::TouchInputMapper::Parameters
virtualKeyQuietTime	include/ui/InputReader.h	/^        nsecs_t virtualKeyQuietTime;$/;"	m	struct:android::TouchInputMapper::Parameters
virtualKeys	include/ui/InputReader.h	/^        Vector<VirtualKey> virtualKeys;$/;"	m	struct:android::TouchInputMapper::LockedState
width	include/ui/InputReader.h	/^    int32_t width;$/;"	m	struct:android::VirtualKeyDefinition
x	include/ui/InputReader.h	/^                int32_t x;$/;"	m	struct:android::TouchInputMapper::AveragingTouchFilterState::__anon39::__anon40
x	include/ui/InputReader.h	/^            InputDeviceInfo::MotionRange x;$/;"	m	struct:android::TouchInputMapper::LockedState::OrientedRanges
x	include/ui/InputReader.h	/^        RawAbsoluteAxisInfo x;$/;"	m	struct:android::TouchInputMapper::RawAxes
x	include/ui/InputReader.h	/^        int32_t x;$/;"	m	struct:android::TouchInputMapper::PointerData
xOrigin	include/ui/InputReader.h	/^        int32_t xOrigin;$/;"	m	struct:android::TouchInputMapper::LockedState
xPrecision	include/ui/InputReader.h	/^        float xPrecision;$/;"	m	struct:android::TouchInputMapper::LockedState
xScale	include/ui/InputReader.h	/^        float xScale;$/;"	m	struct:android::TouchInputMapper::LockedState
y	include/ui/InputReader.h	/^                int32_t y;$/;"	m	struct:android::TouchInputMapper::AveragingTouchFilterState::__anon39::__anon40
y	include/ui/InputReader.h	/^            InputDeviceInfo::MotionRange y;$/;"	m	struct:android::TouchInputMapper::LockedState::OrientedRanges
y	include/ui/InputReader.h	/^        RawAbsoluteAxisInfo y;$/;"	m	struct:android::TouchInputMapper::RawAxes
y	include/ui/InputReader.h	/^        int32_t y;$/;"	m	struct:android::TouchInputMapper::PointerData
yOrigin	include/ui/InputReader.h	/^        int32_t yOrigin;$/;"	m	struct:android::TouchInputMapper::LockedState
yPrecision	include/ui/InputReader.h	/^        float yPrecision;$/;"	m	struct:android::TouchInputMapper::LockedState
yScale	include/ui/InputReader.h	/^        float yScale;$/;"	m	struct:android::TouchInputMapper::LockedState
~InputReaderContext	include/ui/InputReader.h	/^    virtual ~InputReaderContext() { }$/;"	f	class:android::InputReaderContext
~InputReaderInterface	include/ui/InputReader.h	/^    virtual ~InputReaderInterface() { }$/;"	f	class:android::InputReaderInterface
~InputReaderPolicyInterface	include/ui/InputReader.h	/^    virtual ~InputReaderPolicyInterface() { }$/;"	f	class:android::InputReaderPolicyInterface
InputChannel	include/ui/InputTransport.h	/^class InputChannel : public RefBase {$/;"	c	namespace:android
InputConsumer	include/ui/InputTransport.h	/^class InputConsumer {$/;"	c	namespace:android
InputMessage	include/ui/InputTransport.h	/^struct InputMessage {$/;"	s	namespace:android
InputPublisher	include/ui/InputTransport.h	/^class InputPublisher {$/;"	c	namespace:android
SampleData	include/ui/InputTransport.h	/^    struct SampleData {$/;"	s	struct:android::InputMessage
_UI_INPUT_TRANSPORT_H	include/ui/InputTransport.h	18;"	d
action	include/ui/InputTransport.h	/^            int32_t action;$/;"	m	struct:android::InputMessage::__anon9::__anon10
action	include/ui/InputTransport.h	/^            int32_t action;$/;"	m	struct:android::InputMessage::__anon9::__anon11
android	include/ui/InputTransport.h	/^namespace android {$/;"	n
consumed	include/ui/InputTransport.h	/^    bool consumed;$/;"	m	struct:android::InputMessage
coords	include/ui/InputTransport.h	/^        PointerCoords coords[0]; \/\/ variable length$/;"	m	struct:android::InputMessage::SampleData
deviceId	include/ui/InputTransport.h	/^    int32_t deviceId;$/;"	m	struct:android::InputMessage
downTime	include/ui/InputTransport.h	/^            nsecs_t downTime;$/;"	m	struct:android::InputMessage::__anon9::__anon10
downTime	include/ui/InputTransport.h	/^            nsecs_t downTime;$/;"	m	struct:android::InputMessage::__anon9::__anon11
edgeFlags	include/ui/InputTransport.h	/^            int32_t edgeFlags;$/;"	m	struct:android::InputMessage::__anon9::__anon11
eventTime	include/ui/InputTransport.h	/^            nsecs_t eventTime;$/;"	m	struct:android::InputMessage::__anon9::__anon10
eventTime	include/ui/InputTransport.h	/^        nsecs_t eventTime;$/;"	m	struct:android::InputMessage::SampleData
flags	include/ui/InputTransport.h	/^            int32_t flags;$/;"	m	struct:android::InputMessage::__anon9::__anon10
flags	include/ui/InputTransport.h	/^            int32_t flags;$/;"	m	struct:android::InputMessage::__anon9::__anon11
getAshmemFd	include/ui/InputTransport.h	/^    inline int32_t getAshmemFd() const { return mAshmemFd; }$/;"	f	class:android::InputChannel
getChannel	include/ui/InputTransport.h	/^    inline sp<InputChannel> getChannel() { return mChannel; }$/;"	f	class:android::InputConsumer
getChannel	include/ui/InputTransport.h	/^    inline sp<InputChannel> getChannel() { return mChannel; }$/;"	f	class:android::InputPublisher
getName	include/ui/InputTransport.h	/^    inline String8 getName() const { return mName; }$/;"	f	class:android::InputChannel
getReceivePipeFd	include/ui/InputTransport.h	/^    inline int32_t getReceivePipeFd() const { return mReceivePipeFd; }$/;"	f	class:android::InputChannel
getSendPipeFd	include/ui/InputTransport.h	/^    inline int32_t getSendPipeFd() const { return mSendPipeFd; }$/;"	f	class:android::InputChannel
key	include/ui/InputTransport.h	/^        } key;$/;"	m	union:android::InputMessage::__anon9	typeref:struct:android::InputMessage::__anon9::__anon10
keyCode	include/ui/InputTransport.h	/^            int32_t keyCode;$/;"	m	struct:android::InputMessage::__anon9::__anon10
mAshmemFd	include/ui/InputTransport.h	/^    int32_t mAshmemFd;$/;"	m	class:android::InputChannel
mAshmemSize	include/ui/InputTransport.h	/^    size_t mAshmemSize;$/;"	m	class:android::InputConsumer
mAshmemSize	include/ui/InputTransport.h	/^    size_t mAshmemSize;$/;"	m	class:android::InputPublisher
mChannel	include/ui/InputTransport.h	/^    sp<InputChannel> mChannel;$/;"	m	class:android::InputConsumer
mChannel	include/ui/InputTransport.h	/^    sp<InputChannel> mChannel;$/;"	m	class:android::InputPublisher
mMotionEventPointerCount	include/ui/InputTransport.h	/^    size_t mMotionEventPointerCount;$/;"	m	class:android::InputPublisher
mMotionEventSampleDataStride	include/ui/InputTransport.h	/^    size_t mMotionEventSampleDataStride;$/;"	m	class:android::InputPublisher
mMotionEventSampleDataTail	include/ui/InputTransport.h	/^    InputMessage::SampleData* mMotionEventSampleDataTail;$/;"	m	class:android::InputPublisher
mName	include/ui/InputTransport.h	/^    String8 mName;$/;"	m	class:android::InputChannel
mPinned	include/ui/InputTransport.h	/^    bool mPinned;$/;"	m	class:android::InputPublisher
mReceivePipeFd	include/ui/InputTransport.h	/^    int32_t mReceivePipeFd;$/;"	m	class:android::InputChannel
mSemaphoreInitialized	include/ui/InputTransport.h	/^    bool mSemaphoreInitialized;$/;"	m	class:android::InputPublisher
mSendPipeFd	include/ui/InputTransport.h	/^    int32_t mSendPipeFd;$/;"	m	class:android::InputChannel
mSharedMessage	include/ui/InputTransport.h	/^    InputMessage* mSharedMessage;$/;"	m	class:android::InputConsumer
mSharedMessage	include/ui/InputTransport.h	/^    InputMessage* mSharedMessage;$/;"	m	class:android::InputPublisher
mWasDispatched	include/ui/InputTransport.h	/^    bool mWasDispatched;$/;"	m	class:android::InputPublisher
metaState	include/ui/InputTransport.h	/^            int32_t metaState;$/;"	m	struct:android::InputMessage::__anon9::__anon10
metaState	include/ui/InputTransport.h	/^            int32_t metaState;$/;"	m	struct:android::InputMessage::__anon9::__anon11
motion	include/ui/InputTransport.h	/^        } motion;$/;"	m	union:android::InputMessage::__anon9	typeref:struct:android::InputMessage::__anon9::__anon11
pointerCount	include/ui/InputTransport.h	/^            size_t pointerCount;$/;"	m	struct:android::InputMessage::__anon9::__anon11
pointerIds	include/ui/InputTransport.h	/^            int32_t pointerIds[MAX_POINTERS];$/;"	m	struct:android::InputMessage::__anon9::__anon11
repeatCount	include/ui/InputTransport.h	/^            int32_t repeatCount;$/;"	m	struct:android::InputMessage::__anon9::__anon10
sampleCount	include/ui/InputTransport.h	/^            size_t sampleCount;$/;"	m	struct:android::InputMessage::__anon9::__anon11
sampleData	include/ui/InputTransport.h	/^            SampleData sampleData[0]; \/\/ variable length$/;"	m	struct:android::InputMessage::__anon9::__anon11
sampleDataPtrIncrement	include/ui/InputTransport.h	/^    static inline SampleData* sampleDataPtrIncrement(SampleData* ptr, size_t stride) {$/;"	f	struct:android::InputMessage
sampleDataStride	include/ui/InputTransport.h	/^    static inline size_t sampleDataStride(size_t pointerCount) {$/;"	f	struct:android::InputMessage
scanCode	include/ui/InputTransport.h	/^            int32_t scanCode;$/;"	m	struct:android::InputMessage::__anon9::__anon10
semaphore	include/ui/InputTransport.h	/^    sem_t semaphore;$/;"	m	struct:android::InputMessage
source	include/ui/InputTransport.h	/^    int32_t source;$/;"	m	struct:android::InputMessage
type	include/ui/InputTransport.h	/^    int32_t type;$/;"	m	struct:android::InputMessage
xOffset	include/ui/InputTransport.h	/^            float xOffset;$/;"	m	struct:android::InputMessage::__anon9::__anon11
xPrecision	include/ui/InputTransport.h	/^            float xPrecision;$/;"	m	struct:android::InputMessage::__anon9::__anon11
yOffset	include/ui/InputTransport.h	/^            float yOffset;$/;"	m	struct:android::InputMessage::__anon9::__anon11
yPrecision	include/ui/InputTransport.h	/^            float yPrecision;$/;"	m	struct:android::InputMessage::__anon9::__anon11
Key	include/ui/KeyCharacterMap.h	/^    struct Key$/;"	s	class:KeyCharacterMap
KeyCharacterMap	include/ui/KeyCharacterMap.h	/^class KeyCharacterMap$/;"	c
META_MASK	include/ui/KeyCharacterMap.h	51;"	d
NUMERIC	include/ui/KeyCharacterMap.h	/^        NUMERIC = 1,$/;"	e	enum:KeyCharacterMap::__anon32
Q14	include/ui/KeyCharacterMap.h	/^        Q14 = 2,$/;"	e	enum:KeyCharacterMap::__anon32
QWERTY	include/ui/KeyCharacterMap.h	/^        QWERTY = 3 \/\/ or AZERTY or whatever$/;"	e	enum:KeyCharacterMap::__anon32
_UI_KEY_CHARACTER_MAP_H	include/ui/KeyCharacterMap.h	18;"	d
data	include/ui/KeyCharacterMap.h	/^        uint16_t data[META_MASK + 1];$/;"	m	struct:KeyCharacterMap::Key
display_label	include/ui/KeyCharacterMap.h	/^        uint16_t display_label;$/;"	m	struct:KeyCharacterMap::Key
getKeyboardType	include/ui/KeyCharacterMap.h	/^    inline unsigned int getKeyboardType() { return m_type; }$/;"	f	class:KeyCharacterMap
keycode	include/ui/KeyCharacterMap.h	/^        int32_t keycode;$/;"	m	struct:KeyCharacterMap::Key
m_keyCount	include/ui/KeyCharacterMap.h	/^    unsigned int m_keyCount;$/;"	m	class:KeyCharacterMap
m_keys	include/ui/KeyCharacterMap.h	/^    Key* m_keys;$/;"	m	class:KeyCharacterMap
m_type	include/ui/KeyCharacterMap.h	/^    unsigned int m_type;$/;"	m	class:KeyCharacterMap
number	include/ui/KeyCharacterMap.h	/^        uint16_t number;$/;"	m	struct:KeyCharacterMap::Key
FLAGS	include/ui/KeycodeLabels.h	/^static const KeycodeLabel FLAGS[] = {$/;"	v
KEYCODES	include/ui/KeycodeLabels.h	/^static const KeycodeLabel KEYCODES[] = {$/;"	v
KeycodeLabel	include/ui/KeycodeLabels.h	/^struct KeycodeLabel {$/;"	s
_UI_KEYCODE_LABELS_H	include/ui/KeycodeLabels.h	18;"	d
literal	include/ui/KeycodeLabels.h	/^    const char *literal;$/;"	m	struct:KeycodeLabel
value	include/ui/KeycodeLabels.h	/^    int value;$/;"	m	struct:KeycodeLabel
ANDROID_OVERLAY_H	include/ui/Overlay.h	18;"	d
Overlay	include/ui/Overlay.h	/^class Overlay : public virtual RefBase$/;"	c	namespace:android
OverlayRef	include/ui/Overlay.h	/^class OverlayRef : public LightRefBase<OverlayRef>$/;"	c	namespace:android
android	include/ui/Overlay.h	/^namespace android {$/;"	n
mFormat	include/ui/Overlay.h	/^    int32_t  mFormat;$/;"	m	class:android::OverlayRef
mHeight	include/ui/Overlay.h	/^    uint32_t mHeight;$/;"	m	class:android::OverlayRef
mHeightStride	include/ui/Overlay.h	/^    int32_t  mHeightStride;$/;"	m	class:android::OverlayRef
mOverlayChannel	include/ui/Overlay.h	/^    sp<IOverlay> mOverlayChannel;$/;"	m	class:android::OverlayRef
mOverlayData	include/ui/Overlay.h	/^    overlay_data_device_t *mOverlayData;$/;"	m	class:android::Overlay
mOverlayHandle	include/ui/Overlay.h	/^    overlay_handle_t mOverlayHandle;$/;"	m	class:android::OverlayRef
mOverlayRef	include/ui/Overlay.h	/^    sp<OverlayRef> mOverlayRef;$/;"	m	class:android::Overlay
mOwnHandle	include/ui/Overlay.h	/^    bool mOwnHandle;$/;"	m	class:android::OverlayRef
mStatus	include/ui/Overlay.h	/^    status_t mStatus;$/;"	m	class:android::Overlay
mWidth	include/ui/Overlay.h	/^    uint32_t mWidth;$/;"	m	class:android::OverlayRef
mWidthStride	include/ui/Overlay.h	/^    int32_t  mWidthStride;$/;"	m	class:android::OverlayRef
ALPHA	include/ui/PixelFormat.h	/^        ALPHA               = 1,$/;"	e	enum:android::PixelFormatInfo::__anon27
INDEX_ALPHA	include/ui/PixelFormat.h	/^        INDEX_ALPHA   = 0,$/;"	e	enum:android::PixelFormatInfo::__anon26
INDEX_BLUE	include/ui/PixelFormat.h	/^        INDEX_BLUE    = 3$/;"	e	enum:android::PixelFormatInfo::__anon26
INDEX_GREEN	include/ui/PixelFormat.h	/^        INDEX_GREEN   = 2,$/;"	e	enum:android::PixelFormatInfo::__anon26
INDEX_RED	include/ui/PixelFormat.h	/^        INDEX_RED     = 1,$/;"	e	enum:android::PixelFormatInfo::__anon26
LUMINANCE	include/ui/PixelFormat.h	/^        LUMINANCE           = 4,$/;"	e	enum:android::PixelFormatInfo::__anon27
LUMINANCE_ALPHA	include/ui/PixelFormat.h	/^        LUMINANCE_ALPHA     = 5,$/;"	e	enum:android::PixelFormatInfo::__anon27
OTHER	include/ui/PixelFormat.h	/^        OTHER               = 0xFF$/;"	e	enum:android::PixelFormatInfo::__anon27
PIXEL_FORMAT_A_8	include/ui/PixelFormat.h	/^    PIXEL_FORMAT_A_8         = GGL_PIXEL_FORMAT_A_8,        \/\/ 8-bit A$/;"	e	enum:android::__anon25
PIXEL_FORMAT_BGRA_8888	include/ui/PixelFormat.h	/^    PIXEL_FORMAT_BGRA_8888   = HAL_PIXEL_FORMAT_BGRA_8888,  \/\/ 4x8-bit BGRA$/;"	e	enum:android::__anon25
PIXEL_FORMAT_CUSTOM	include/ui/PixelFormat.h	/^    PIXEL_FORMAT_CUSTOM         = -4,$/;"	e	enum:android::__anon25
PIXEL_FORMAT_LA_88	include/ui/PixelFormat.h	/^    PIXEL_FORMAT_LA_88       = GGL_PIXEL_FORMAT_LA_88,      \/\/ 16-bit LA$/;"	e	enum:android::__anon25
PIXEL_FORMAT_L_8	include/ui/PixelFormat.h	/^    PIXEL_FORMAT_L_8         = GGL_PIXEL_FORMAT_L_8,        \/\/ 8-bit L (R=G=B=L)$/;"	e	enum:android::__anon25
PIXEL_FORMAT_NONE	include/ui/PixelFormat.h	/^    PIXEL_FORMAT_NONE       =   0,$/;"	e	enum:android::__anon25
PIXEL_FORMAT_OPAQUE	include/ui/PixelFormat.h	/^    PIXEL_FORMAT_OPAQUE         = -1,$/;"	e	enum:android::__anon25
PIXEL_FORMAT_RGBA_4444	include/ui/PixelFormat.h	/^    PIXEL_FORMAT_RGBA_4444   = HAL_PIXEL_FORMAT_RGBA_4444,  \/\/ 16-bit ARGB$/;"	e	enum:android::__anon25
PIXEL_FORMAT_RGBA_5551	include/ui/PixelFormat.h	/^    PIXEL_FORMAT_RGBA_5551   = HAL_PIXEL_FORMAT_RGBA_5551,  \/\/ 16-bit ARGB$/;"	e	enum:android::__anon25
PIXEL_FORMAT_RGBA_8888	include/ui/PixelFormat.h	/^    PIXEL_FORMAT_RGBA_8888   = HAL_PIXEL_FORMAT_RGBA_8888,  \/\/ 4x8-bit RGBA$/;"	e	enum:android::__anon25
PIXEL_FORMAT_RGBX_8888	include/ui/PixelFormat.h	/^    PIXEL_FORMAT_RGBX_8888   = HAL_PIXEL_FORMAT_RGBX_8888,  \/\/ 4x8-bit RGB0$/;"	e	enum:android::__anon25
PIXEL_FORMAT_RGB_332	include/ui/PixelFormat.h	/^    PIXEL_FORMAT_RGB_332     = GGL_PIXEL_FORMAT_RGB_332,    \/\/ 8-bit RGB$/;"	e	enum:android::__anon25
PIXEL_FORMAT_RGB_565	include/ui/PixelFormat.h	/^    PIXEL_FORMAT_RGB_565     = HAL_PIXEL_FORMAT_RGB_565,    \/\/ 16-bit RGB$/;"	e	enum:android::__anon25
PIXEL_FORMAT_RGB_888	include/ui/PixelFormat.h	/^    PIXEL_FORMAT_RGB_888     = HAL_PIXEL_FORMAT_RGB_888,    \/\/ 3x8-bit RGB$/;"	e	enum:android::__anon25
PIXEL_FORMAT_TRANSLUCENT	include/ui/PixelFormat.h	/^    PIXEL_FORMAT_TRANSLUCENT    = -3,$/;"	e	enum:android::__anon25
PIXEL_FORMAT_TRANSPARENT	include/ui/PixelFormat.h	/^    PIXEL_FORMAT_TRANSPARENT    = -2,$/;"	e	enum:android::__anon25
PIXEL_FORMAT_UNKNOWN	include/ui/PixelFormat.h	/^    PIXEL_FORMAT_UNKNOWN    =   0,$/;"	e	enum:android::__anon25
PixelFormat	include/ui/PixelFormat.h	/^typedef int32_t PixelFormat;$/;"	t	namespace:android
PixelFormatInfo	include/ui/PixelFormat.h	/^    inline PixelFormatInfo() : version(sizeof(PixelFormatInfo)) { }$/;"	f	struct:android::PixelFormatInfo
PixelFormatInfo	include/ui/PixelFormat.h	/^struct PixelFormatInfo$/;"	s	namespace:android
RGB	include/ui/PixelFormat.h	/^        RGB                 = 2,$/;"	e	enum:android::PixelFormatInfo::__anon27
RGBA	include/ui/PixelFormat.h	/^        RGBA                = 3,$/;"	e	enum:android::PixelFormatInfo::__anon27
UI_PIXELFORMAT_H	include/ui/PixelFormat.h	27;"	d
android	include/ui/PixelFormat.h	/^namespace android {$/;"	n
bitsPerPixel	include/ui/PixelFormat.h	/^    size_t      bitsPerPixel;$/;"	m	struct:android::PixelFormatInfo
bytesPerPixel	include/ui/PixelFormat.h	/^    size_t      bytesPerPixel;$/;"	m	struct:android::PixelFormatInfo
cinfo	include/ui/PixelFormat.h	/^        szinfo      cinfo[4];$/;"	m	union:android::PixelFormatInfo::__anon28
components	include/ui/PixelFormat.h	/^    uint8_t     components;$/;"	m	struct:android::PixelFormatInfo
format	include/ui/PixelFormat.h	/^    PixelFormat format;$/;"	m	struct:android::PixelFormatInfo
getSize	include/ui/PixelFormat.h	/^    size_t getSize(size_t ci) const { $/;"	f	struct:android::PixelFormatInfo
h	include/ui/PixelFormat.h	/^        uint8_t h;$/;"	m	struct:android::PixelFormatInfo::szinfo
h_alpha	include/ui/PixelFormat.h	/^            uint8_t     h_alpha;$/;"	m	struct:android::PixelFormatInfo::__anon28::__anon29
h_blue	include/ui/PixelFormat.h	/^            uint8_t     h_blue;$/;"	m	struct:android::PixelFormatInfo::__anon28::__anon29
h_green	include/ui/PixelFormat.h	/^            uint8_t     h_green;$/;"	m	struct:android::PixelFormatInfo::__anon28::__anon29
h_red	include/ui/PixelFormat.h	/^            uint8_t     h_red;$/;"	m	struct:android::PixelFormatInfo::__anon28::__anon29
l	include/ui/PixelFormat.h	/^        uint8_t l;$/;"	m	struct:android::PixelFormatInfo::szinfo
l_alpha	include/ui/PixelFormat.h	/^            uint8_t     l_alpha;    $/;"	m	struct:android::PixelFormatInfo::__anon28::__anon29
l_blue	include/ui/PixelFormat.h	/^            uint8_t     l_blue;$/;"	m	struct:android::PixelFormatInfo::__anon28::__anon29
l_green	include/ui/PixelFormat.h	/^            uint8_t     l_green;$/;"	m	struct:android::PixelFormatInfo::__anon28::__anon29
l_red	include/ui/PixelFormat.h	/^            uint8_t     l_red;$/;"	m	struct:android::PixelFormatInfo::__anon28::__anon29
reserved0	include/ui/PixelFormat.h	/^    uint8_t     reserved0[3];$/;"	m	struct:android::PixelFormatInfo
reserved1	include/ui/PixelFormat.h	/^    uint32_t    reserved1;$/;"	m	struct:android::PixelFormatInfo
szinfo	include/ui/PixelFormat.h	/^    struct szinfo {$/;"	s	struct:android::PixelFormatInfo
version	include/ui/PixelFormat.h	/^    size_t      version;$/;"	m	struct:android::PixelFormatInfo
ANDROID_UI_POINT	include/ui/Point.h	18;"	d
Point	include/ui/Point.h	/^    inline Point() {$/;"	f	class:android::Point
Point	include/ui/Point.h	/^    inline Point(int x, int y) : x(x), y(y) {$/;"	f	class:android::Point
Point	include/ui/Point.h	/^class Point$/;"	c	namespace:android
android	include/ui/Point.h	/^namespace android {$/;"	n
isOrigin	include/ui/Point.h	/^    inline bool isOrigin() const {$/;"	f	class:android::Point
operator !=	include/ui/Point.h	/^    inline bool operator != (const Point& rhs) const {$/;"	f	class:android::Point
operator +	include/ui/Point.h	/^    const Point operator + (const Point& rhs) const {$/;"	f	class:android::Point
operator +=	include/ui/Point.h	/^    inline Point& operator += (const Point& rhs) {$/;"	f	class:android::Point
operator -	include/ui/Point.h	/^    const Point operator - (const Point& rhs) const {$/;"	f	class:android::Point
operator -	include/ui/Point.h	/^    inline Point& operator - () {$/;"	f	class:android::Point
operator -=	include/ui/Point.h	/^    inline Point& operator -= (const Point& rhs) {$/;"	f	class:android::Point
operator <	include/ui/Point.h	/^    bool operator < (const Point& rhs) const {$/;"	f	class:android::Point
operator ==	include/ui/Point.h	/^    inline bool operator == (const Point& rhs) const {$/;"	f	class:android::Point
x	include/ui/Point.h	/^    int x;$/;"	m	class:android::Point
y	include/ui/Point.h	/^    int y;$/;"	m	class:android::Point
POWER_MANAGER_BUTTON_EVENT	include/ui/PowerManager.h	/^    POWER_MANAGER_BUTTON_EVENT = 5, \/\/ Button and trackball events.$/;"	e	enum:android::__anon24
POWER_MANAGER_CHEEK_EVENT	include/ui/PowerManager.h	/^    POWER_MANAGER_CHEEK_EVENT = 1,$/;"	e	enum:android::__anon24
POWER_MANAGER_LAST_EVENT	include/ui/PowerManager.h	/^    POWER_MANAGER_LAST_EVENT = POWER_MANAGER_BUTTON_EVENT, \/\/ Last valid event code.$/;"	e	enum:android::__anon24
POWER_MANAGER_LONG_TOUCH_EVENT	include/ui/PowerManager.h	/^    POWER_MANAGER_LONG_TOUCH_EVENT = 3,$/;"	e	enum:android::__anon24
POWER_MANAGER_OTHER_EVENT	include/ui/PowerManager.h	/^    POWER_MANAGER_OTHER_EVENT = 0,$/;"	e	enum:android::__anon24
POWER_MANAGER_TOUCH_EVENT	include/ui/PowerManager.h	/^    POWER_MANAGER_TOUCH_EVENT = 2, \/\/ touch events are TOUCH for 300ms, and then either$/;"	e	enum:android::__anon24
POWER_MANAGER_TOUCH_UP_EVENT	include/ui/PowerManager.h	/^    POWER_MANAGER_TOUCH_UP_EVENT = 4,$/;"	e	enum:android::__anon24
_UI_POWER_MANAGER_H	include/ui/PowerManager.h	18;"	d
android	include/ui/PowerManager.h	/^namespace android {$/;"	n
ANDROID_UI_RECT	include/ui/Rect.h	18;"	d
Rect	include/ui/Rect.h	/^    inline Rect() {$/;"	f	class:android::Rect
Rect	include/ui/Rect.h	/^    inline Rect(const Point& lt, const Point& rb) {$/;"	f	class:android::Rect
Rect	include/ui/Rect.h	/^    inline Rect(int32_t l, int32_t t, int32_t r, int32_t b) {$/;"	f	class:android::Rect
Rect	include/ui/Rect.h	/^    inline Rect(int32_t w, int32_t h) {$/;"	f	class:android::Rect
Rect	include/ui/Rect.h	/^class Rect : public ARect$/;"	c	namespace:android
android	include/ui/Rect.h	/^namespace android {$/;"	n
clear	include/ui/Rect.h	/^    inline void clear() {$/;"	f	class:android::Rect
height	include/ui/Rect.h	/^    inline int32_t height() const {$/;"	f	class:android::Rect
isEmpty	include/ui/Rect.h	/^    inline bool isEmpty() const {$/;"	f	class:android::Rect
isValid	include/ui/Rect.h	/^    inline bool isValid() const {$/;"	f	class:android::Rect
leftBottom	include/ui/Rect.h	/^    Point leftBottom() const {$/;"	f	class:android::Rect
leftTop	include/ui/Rect.h	/^    Point leftTop() const {$/;"	f	class:android::Rect
offsetBy	include/ui/Rect.h	/^    Rect& offsetBy(const Point& dp) {$/;"	f	class:android::Rect
offsetTo	include/ui/Rect.h	/^    Rect& offsetTo(const Point& p) {$/;"	f	class:android::Rect
offsetToOrigin	include/ui/Rect.h	/^    Rect& offsetToOrigin() {$/;"	f	class:android::Rect
operator !=	include/ui/Rect.h	/^    inline bool operator != (const Rect& rhs) const {$/;"	f	class:android::Rect
operator +=	include/ui/Rect.h	/^    Rect& operator += (const Point& rhs) {$/;"	f	class:android::Rect
operator -=	include/ui/Rect.h	/^    Rect& operator -= (const Point& rhs) {$/;"	f	class:android::Rect
operator ==	include/ui/Rect.h	/^    inline bool operator == (const Rect& rhs) const {$/;"	f	class:android::Rect
rightBottom	include/ui/Rect.h	/^    Point rightBottom() const {$/;"	f	class:android::Rect
rightTop	include/ui/Rect.h	/^    Point rightTop() const {$/;"	f	class:android::Rect
set	include/ui/Rect.h	/^    inline void set(const Rect& rhs) {$/;"	f	class:android::Rect
setLeftTop	include/ui/Rect.h	/^    void setLeftTop(const Point& lt) {$/;"	f	class:android::Rect
setRightBottom	include/ui/Rect.h	/^    void setRightBottom(const Point& rb) {$/;"	f	class:android::Rect
translate	include/ui/Rect.h	/^    void translate(int32_t dx, int32_t dy) { \/\/ legacy, don't use.$/;"	f	class:android::Rect
value_type	include/ui/Rect.h	/^    typedef int32_t value_type;$/;"	t	class:android::Rect
width	include/ui/Rect.h	/^    inline int32_t width() const {$/;"	f	class:android::Rect
ANDROID_UI_REGION_H	include/ui/Region.h	18;"	d
Region	include/ui/Region.h	/^class Region$/;"	c	namespace:android
android	include/ui/Region.h	/^namespace android {$/;"	n
b	include/ui/Region.h	/^    mutable Region::const_iterator b;$/;"	m	struct:android::region_iterator
bounds	include/ui/Region.h	/^    inline  Rect        bounds() const      { return getBounds(); }$/;"	f	class:android::Region
const_iterator	include/ui/Region.h	/^    typedef Rect const* const_iterator;$/;"	t	class:android::Region
e	include/ui/Region.h	/^    Region::const_iterator const e;$/;"	m	class:android::region_iterator::Region
getBounds	include/ui/Region.h	/^    inline  Rect        getBounds() const   { return mBounds; }$/;"	f	class:android::Region
isEmpty	include/ui/Region.h	/^    inline  bool        isEmpty() const     { return mBounds.isEmpty();  }$/;"	f	class:android::Region
isRect	include/ui/Region.h	/^    inline  bool        isRect() const      { return mStorage.isEmpty(); }$/;"	f	class:android::Region
iterate	include/ui/Region.h	/^    static int iterate(copybit_region_t const * self, copybit_rect_t* rect) {$/;"	f	struct:android::region_iterator
mBounds	include/ui/Region.h	/^    Rect            mBounds;$/;"	m	class:android::Region
mStorage	include/ui/Region.h	/^    Vector<Rect>    mStorage;$/;"	m	class:android::Region
operator &	include/ui/Region.h	/^const Region Region::operator & (const Region& rhs) const {$/;"	f	class:android::Region
operator &=	include/ui/Region.h	/^Region& Region::operator &= (const Region& rhs) {$/;"	f	class:android::Region
operator +	include/ui/Region.h	/^const Region Region::operator + (const Point& pt) const {$/;"	f	class:android::Region
operator +=	include/ui/Region.h	/^Region& Region::operator += (const Point& pt) {$/;"	f	class:android::Region
operator -	include/ui/Region.h	/^const Region Region::operator - (const Region& rhs) const {$/;"	f	class:android::Region
operator -=	include/ui/Region.h	/^Region& Region::operator -= (const Region& rhs) {$/;"	f	class:android::Region
operator |	include/ui/Region.h	/^const Region Region::operator | (const Region& rhs) const {$/;"	f	class:android::Region
operator |=	include/ui/Region.h	/^Region& Region::operator |= (const Region& rhs) {$/;"	f	class:android::Region
region_iterator	include/ui/Region.h	/^    region_iterator(const Region& region)$/;"	f	struct:android::region_iterator
region_iterator	include/ui/Region.h	/^struct region_iterator : public copybit_region_t {$/;"	s	namespace:android
ANDROID_ANDROID_NATIVES_PRIV_H	include/ui/android_native_buffer.h	18;"	d
android_native_buffer_t	include/ui/android_native_buffer.h	/^    android_native_buffer_t() { $/;"	f	struct:android_native_buffer_t
android_native_buffer_t	include/ui/android_native_buffer.h	/^typedef struct android_native_buffer_t$/;"	s
android_native_buffer_t	include/ui/android_native_buffer.h	/^} android_native_buffer_t;$/;"	t	typeref:struct:android_native_buffer_t
common	include/ui/android_native_buffer.h	/^    struct android_native_base_t common;$/;"	m	struct:android_native_buffer_t	typeref:struct:android_native_buffer_t::android_native_base_t
decStrong	include/ui/android_native_buffer.h	/^    void decStrong(const void* id) const {$/;"	f	struct:android_native_buffer_t
format	include/ui/android_native_buffer.h	/^    int format;$/;"	m	struct:android_native_buffer_t
handle	include/ui/android_native_buffer.h	/^    buffer_handle_t handle;$/;"	m	struct:android_native_buffer_t
height	include/ui/android_native_buffer.h	/^    int height;$/;"	m	struct:android_native_buffer_t
incStrong	include/ui/android_native_buffer.h	/^    void incStrong(const void* id) const {$/;"	f	struct:android_native_buffer_t
reserved	include/ui/android_native_buffer.h	/^    void* reserved[1];$/;"	m	struct:android_native_buffer_t
reserved_bytes	include/ui/android_native_buffer.h	/^    uint8_t reserved_bytes[3];$/;"	m	struct:android_native_buffer_t
reserved_proc	include/ui/android_native_buffer.h	/^    void* reserved_proc[8];$/;"	m	struct:android_native_buffer_t
stride	include/ui/android_native_buffer.h	/^    int stride;$/;"	m	struct:android_native_buffer_t
transform	include/ui/android_native_buffer.h	/^    uint8_t transform;$/;"	m	struct:android_native_buffer_t
usage	include/ui/android_native_buffer.h	/^    int usage;$/;"	m	struct:android_native_buffer_t
width	include/ui/android_native_buffer.h	/^    int width;$/;"	m	struct:android_native_buffer_t
ANDROID_ANDROID_NATIVES_H	include/ui/egl/android_natives.h	18;"	d
ANDROID_NATIVE_BUFFER_MAGIC	include/ui/egl/android_natives.h	39;"	d
ANDROID_NATIVE_MAKE_CONSTANT	include/ui/egl/android_natives.h	33;"	d
ANDROID_NATIVE_WINDOW_MAGIC	include/ui/egl/android_natives.h	36;"	d
ANativeWindow	include/ui/egl/android_natives.h	/^    ANativeWindow()$/;"	f	struct:ANativeWindow
ANativeWindow	include/ui/egl/android_natives.h	/^struct ANativeWindow $/;"	s
BASE	include/ui/egl/android_natives.h	/^    typedef EGLNativeBase<NATIVE_TYPE, TYPE, REF> BASE;$/;"	t	class:android::EGLNativeBase
EGLNativeBase	include/ui/egl/android_natives.h	/^    EGLNativeBase() : NATIVE_TYPE(), REF() {$/;"	f	class:android::EGLNativeBase
EGLNativeBase	include/ui/egl/android_natives.h	/^class EGLNativeBase : public NATIVE_TYPE, public REF$/;"	c	namespace:android
NATIVE_WINDOW_API_EGL	include/ui/egl/android_natives.h	/^    NATIVE_WINDOW_API_EGL = 1$/;"	e	enum:__anon14
NATIVE_WINDOW_CONNECT	include/ui/egl/android_natives.h	/^    NATIVE_WINDOW_CONNECT,$/;"	e	enum:__anon13
NATIVE_WINDOW_DISCONNECT	include/ui/egl/android_natives.h	/^    NATIVE_WINDOW_DISCONNECT,$/;"	e	enum:__anon13
NATIVE_WINDOW_FORMAT	include/ui/egl/android_natives.h	/^    NATIVE_WINDOW_FORMAT,$/;"	e	enum:__anon12
NATIVE_WINDOW_HEIGHT	include/ui/egl/android_natives.h	/^    NATIVE_WINDOW_HEIGHT,$/;"	e	enum:__anon12
NATIVE_WINDOW_SET_BUFFERS_GEOMETRY	include/ui/egl/android_natives.h	/^    NATIVE_WINDOW_SET_BUFFERS_GEOMETRY,$/;"	e	enum:__anon13
NATIVE_WINDOW_SET_BUFFERS_TRANSFORM	include/ui/egl/android_natives.h	/^    NATIVE_WINDOW_SET_BUFFERS_TRANSFORM,$/;"	e	enum:__anon13
NATIVE_WINDOW_SET_BUFFER_COUNT	include/ui/egl/android_natives.h	/^    NATIVE_WINDOW_SET_BUFFER_COUNT,$/;"	e	enum:__anon13
NATIVE_WINDOW_SET_CROP	include/ui/egl/android_natives.h	/^    NATIVE_WINDOW_SET_CROP,$/;"	e	enum:__anon13
NATIVE_WINDOW_SET_USAGE	include/ui/egl/android_natives.h	/^    NATIVE_WINDOW_SET_USAGE  = 0,$/;"	e	enum:__anon13
NATIVE_WINDOW_TRANSFORM_FLIP_H	include/ui/egl/android_natives.h	/^    NATIVE_WINDOW_TRANSFORM_FLIP_H = HAL_TRANSFORM_FLIP_H ,$/;"	e	enum:__anon15
NATIVE_WINDOW_TRANSFORM_FLIP_V	include/ui/egl/android_natives.h	/^    NATIVE_WINDOW_TRANSFORM_FLIP_V = HAL_TRANSFORM_FLIP_V,$/;"	e	enum:__anon15
NATIVE_WINDOW_TRANSFORM_ROT_180	include/ui/egl/android_natives.h	/^    NATIVE_WINDOW_TRANSFORM_ROT_180 = HAL_TRANSFORM_ROT_180,$/;"	e	enum:__anon15
NATIVE_WINDOW_TRANSFORM_ROT_270	include/ui/egl/android_natives.h	/^    NATIVE_WINDOW_TRANSFORM_ROT_270 = HAL_TRANSFORM_ROT_270,$/;"	e	enum:__anon15
NATIVE_WINDOW_TRANSFORM_ROT_90	include/ui/egl/android_natives.h	/^    NATIVE_WINDOW_TRANSFORM_ROT_90 = HAL_TRANSFORM_ROT_90,$/;"	e	enum:__anon15
NATIVE_WINDOW_WIDTH	include/ui/egl/android_natives.h	/^    NATIVE_WINDOW_WIDTH     = 0,$/;"	e	enum:__anon12
android	include/ui/egl/android_natives.h	/^namespace android {$/;"	n
android_native_base_t	include/ui/egl/android_natives.h	/^typedef struct android_native_base_t$/;"	s
android_native_base_t	include/ui/egl/android_natives.h	/^} android_native_base_t;$/;"	t	typeref:struct:android_native_base_t
android_native_rect_t	include/ui/egl/android_natives.h	/^typedef struct android_native_rect_t$/;"	s
android_native_rect_t	include/ui/egl/android_natives.h	/^} android_native_rect_t;$/;"	t	typeref:struct:android_native_rect_t
android_native_window_t	include/ui/egl/android_natives.h	/^typedef struct ANativeWindow android_native_window_t;$/;"	t	typeref:struct:ANativeWindow
bottom	include/ui/egl/android_natives.h	/^    int32_t bottom;$/;"	m	struct:android_native_rect_t
cancelBuffer	include/ui/egl/android_natives.h	/^    int     (*cancelBuffer)(struct ANativeWindow* window,$/;"	m	struct:ANativeWindow
common	include/ui/egl/android_natives.h	/^    struct android_native_base_t common;$/;"	m	struct:ANativeWindow	typeref:struct:ANativeWindow::android_native_base_t
compressedFormat	include/ui/egl/android_natives.h	/^        uint32_t    compressedFormat;$/;"	m	union:egl_native_pixmap_t::__anon16
data	include/ui/egl/android_natives.h	/^    uint8_t*    data;$/;"	m	struct:egl_native_pixmap_t
decRef	include/ui/egl/android_natives.h	/^    static void decRef(android_native_base_t* base) {$/;"	f	class:android::EGLNativeBase
decRef	include/ui/egl/android_natives.h	/^    void (*decRef)(struct android_native_base_t* base);$/;"	m	struct:android_native_base_t
decStrong	include/ui/egl/android_natives.h	/^    void decStrong(const void* id) const {$/;"	f	class:android::EGLNativeBase
decStrong	include/ui/egl/android_natives.h	/^    void decStrong(const void* id) const {$/;"	f	struct:ANativeWindow
dequeueBuffer	include/ui/egl/android_natives.h	/^    int     (*dequeueBuffer)(struct ANativeWindow* window,$/;"	m	struct:ANativeWindow
egl_native_pixmap_t	include/ui/egl/android_natives.h	/^typedef struct egl_native_pixmap_t$/;"	s
egl_native_pixmap_t	include/ui/egl/android_natives.h	/^} egl_native_pixmap_t;$/;"	t	typeref:struct:egl_native_pixmap_t
flags	include/ui/egl/android_natives.h	/^    const uint32_t flags;$/;"	m	struct:ANativeWindow
format	include/ui/egl/android_natives.h	/^    uint8_t     format;$/;"	m	struct:egl_native_pixmap_t
getSelf	include/ui/egl/android_natives.h	/^    static inline TYPE const * getSelf(android_native_base_t const* base) {$/;"	f	class:android::EGLNativeBase
getSelf	include/ui/egl/android_natives.h	/^    static inline TYPE const* getSelf(NATIVE_TYPE const* self) {$/;"	f	class:android::EGLNativeBase
getSelf	include/ui/egl/android_natives.h	/^    static inline TYPE* getSelf(NATIVE_TYPE* self) {$/;"	f	class:android::EGLNativeBase
getSelf	include/ui/egl/android_natives.h	/^    static inline TYPE* getSelf(android_native_base_t* base) {$/;"	f	class:android::EGLNativeBase
height	include/ui/egl/android_natives.h	/^    int32_t     height;$/;"	m	struct:egl_native_pixmap_t
incRef	include/ui/egl/android_natives.h	/^    static void incRef(android_native_base_t* base) {$/;"	f	class:android::EGLNativeBase
incRef	include/ui/egl/android_natives.h	/^    void (*incRef)(struct android_native_base_t* base);$/;"	m	struct:android_native_base_t
incStrong	include/ui/egl/android_natives.h	/^    void incStrong(const void* id) const {$/;"	f	class:android::EGLNativeBase
incStrong	include/ui/egl/android_natives.h	/^    void incStrong(const void* id) const {$/;"	f	struct:ANativeWindow
left	include/ui/egl/android_natives.h	/^    int32_t left;$/;"	m	struct:android_native_rect_t
lockBuffer	include/ui/egl/android_natives.h	/^    int     (*lockBuffer)(struct ANativeWindow* window,$/;"	m	struct:ANativeWindow
magic	include/ui/egl/android_natives.h	/^    int magic;$/;"	m	struct:android_native_base_t
maxSwapInterval	include/ui/egl/android_natives.h	/^    const int   maxSwapInterval;$/;"	m	struct:ANativeWindow
minSwapInterval	include/ui/egl/android_natives.h	/^    const int   minSwapInterval;$/;"	m	struct:ANativeWindow
native_window_connect	include/ui/egl/android_natives.h	/^static inline int native_window_connect($/;"	f
native_window_disconnect	include/ui/egl/android_natives.h	/^static inline int native_window_disconnect($/;"	f
native_window_set_buffer_count	include/ui/egl/android_natives.h	/^static inline int native_window_set_buffer_count($/;"	f
native_window_set_buffers_geometry	include/ui/egl/android_natives.h	/^static inline int native_window_set_buffers_geometry($/;"	f
native_window_set_buffers_transform	include/ui/egl/android_natives.h	/^static inline int native_window_set_buffers_transform($/;"	f
native_window_set_crop	include/ui/egl/android_natives.h	/^static inline int native_window_set_crop($/;"	f
native_window_set_usage	include/ui/egl/android_natives.h	/^static inline int native_window_set_usage($/;"	f
oem	include/ui/egl/android_natives.h	/^    intptr_t    oem[4];$/;"	m	struct:ANativeWindow
perform	include/ui/egl/android_natives.h	/^    int     (*perform)(struct ANativeWindow* window,$/;"	m	struct:ANativeWindow
query	include/ui/egl/android_natives.h	/^    int     (*query)(struct ANativeWindow* window,$/;"	m	struct:ANativeWindow
queueBuffer	include/ui/egl/android_natives.h	/^    int     (*queueBuffer)(struct ANativeWindow* window,$/;"	m	struct:ANativeWindow
reserved	include/ui/egl/android_natives.h	/^    int32_t     reserved;$/;"	m	struct:egl_native_pixmap_t
reserved	include/ui/egl/android_natives.h	/^    void* reserved[4];$/;"	m	struct:android_native_base_t
reserved_proc	include/ui/egl/android_natives.h	/^    void* reserved_proc[2];$/;"	m	struct:ANativeWindow
rfu	include/ui/egl/android_natives.h	/^    uint8_t     rfu[3];$/;"	m	struct:egl_native_pixmap_t
right	include/ui/egl/android_natives.h	/^    int32_t right;$/;"	m	struct:android_native_rect_t
setSwapInterval	include/ui/egl/android_natives.h	/^    int     (*setSwapInterval)(struct ANativeWindow* window,$/;"	m	struct:ANativeWindow
stride	include/ui/egl/android_natives.h	/^    int32_t     stride;$/;"	m	struct:egl_native_pixmap_t
top	include/ui/egl/android_natives.h	/^    int32_t top;$/;"	m	struct:android_native_rect_t
version	include/ui/egl/android_natives.h	/^    int version;$/;"	m	struct:android_native_base_t
version	include/ui/egl/android_natives.h	/^    int32_t     version;    \/* must be 32 *\/$/;"	m	struct:egl_native_pixmap_t
vstride	include/ui/egl/android_natives.h	/^        int32_t     vstride;$/;"	m	union:egl_native_pixmap_t::__anon16
width	include/ui/egl/android_natives.h	/^    int32_t     width;$/;"	m	struct:egl_native_pixmap_t
xdpi	include/ui/egl/android_natives.h	/^    const float xdpi;$/;"	m	struct:ANativeWindow
ydpi	include/ui/egl/android_natives.h	/^    const float ydpi;$/;"	m	struct:ANativeWindow
ACCESS_BUFFER	include/utils/Asset.h	/^        ACCESS_BUFFER,$/;"	e	enum:android::Asset::AccessMode
ACCESS_RANDOM	include/utils/Asset.h	/^        ACCESS_RANDOM,$/;"	e	enum:android::Asset::AccessMode
ACCESS_STREAMING	include/utils/Asset.h	/^        ACCESS_STREAMING,$/;"	e	enum:android::Asset::AccessMode
ACCESS_UNKNOWN	include/utils/Asset.h	/^        ACCESS_UNKNOWN = 0,$/;"	e	enum:android::Asset::AccessMode
AccessMode	include/utils/Asset.h	/^    typedef enum AccessMode {$/;"	g	class:android::Asset
AccessMode	include/utils/Asset.h	/^    } AccessMode;$/;"	t	class:android::Asset	typeref:enum:android::Asset::AccessMode
Asset	include/utils/Asset.h	/^class Asset {$/;"	c	namespace:android
_CompressedAsset	include/utils/Asset.h	/^class _CompressedAsset : public Asset {$/;"	c	namespace:android
_FileAsset	include/utils/Asset.h	/^class _FileAsset : public Asset {$/;"	c	namespace:android
__LIBS_ASSET_H	include/utils/Asset.h	22;"	d
android	include/utils/Asset.h	/^namespace android {$/;"	n
getAccessMode	include/utils/Asset.h	/^    AccessMode getAccessMode(void) const { return mAccessMode; }$/;"	f	class:android::Asset
getAssetSource	include/utils/Asset.h	/^    const char* getAssetSource(void) const { return mAssetSource.string(); }$/;"	f	class:android::Asset
getLength	include/utils/Asset.h	/^    virtual off_t getLength(void) const { return mLength; }$/;"	f	class:android::_FileAsset
getLength	include/utils/Asset.h	/^    virtual off_t getLength(void) const { return mUncompressedLen; }$/;"	f	class:android::_CompressedAsset
getRemainingLength	include/utils/Asset.h	/^    virtual off_t getRemainingLength(void) const { return mLength-mOffset; }$/;"	f	class:android::_FileAsset
getRemainingLength	include/utils/Asset.h	/^    virtual off_t getRemainingLength(void) const { return mUncompressedLen-mOffset; }$/;"	f	class:android::_CompressedAsset
isAllocated	include/utils/Asset.h	/^    virtual bool isAllocated(void) const { return false; }$/;"	f	class:android::Asset
isAllocated	include/utils/Asset.h	/^    virtual bool isAllocated(void) const { return mBuf != NULL; }$/;"	f	class:android::_CompressedAsset
isAllocated	include/utils/Asset.h	/^    virtual bool isAllocated(void) const { return mBuf != NULL; }$/;"	f	class:android::_FileAsset
kReadVsMapThreshold	include/utils/Asset.h	/^    enum { kReadVsMapThreshold = 4096 };$/;"	e	enum:android::_FileAsset::__anon228
mAccessMode	include/utils/Asset.h	/^    AccessMode  mAccessMode;        \/\/ how the asset was opened$/;"	m	class:android::Asset
mAssetSource	include/utils/Asset.h	/^    String8    mAssetSource;       \/\/ debug string$/;"	m	class:android::Asset
mBuf	include/utils/Asset.h	/^    unsigned char*  mBuf;       \/\/ for getBuffer()$/;"	m	class:android::_CompressedAsset
mBuf	include/utils/Asset.h	/^    unsigned char* mBuf;        \/\/ for read$/;"	m	class:android::_FileAsset
mCompressedLen	include/utils/Asset.h	/^    off_t       mCompressedLen; \/\/ length of the compressed data$/;"	m	class:android::_CompressedAsset
mFd	include/utils/Asset.h	/^    int         mFd;            \/\/ for file input$/;"	m	class:android::_CompressedAsset
mFileName	include/utils/Asset.h	/^    char*       mFileName;      \/\/ for opening$/;"	m	class:android::_FileAsset
mFp	include/utils/Asset.h	/^    FILE*       mFp;            \/\/ for read\/seek$/;"	m	class:android::_FileAsset
mLength	include/utils/Asset.h	/^    off_t       mLength;        \/\/ length of the chunk$/;"	m	class:android::_FileAsset
mMap	include/utils/Asset.h	/^    FileMap*    mMap;           \/\/ for memory map$/;"	m	class:android::_FileAsset
mMap	include/utils/Asset.h	/^    FileMap*    mMap;           \/\/ for memory-mapped input$/;"	m	class:android::_CompressedAsset
mNext	include/utils/Asset.h	/^    Asset*		mNext;				\/\/ linked list.$/;"	m	class:android::Asset
mOffset	include/utils/Asset.h	/^    off_t       mOffset;        \/\/ current local offset, 0 == mStart$/;"	m	class:android::_FileAsset
mOffset	include/utils/Asset.h	/^    off_t       mOffset;        \/\/ current offset, 0 == start of uncomp data$/;"	m	class:android::_CompressedAsset
mPrev	include/utils/Asset.h	/^    Asset*		mPrev;$/;"	m	class:android::Asset
mStart	include/utils/Asset.h	/^    off_t       mStart;         \/\/ absolute file offset of start of chunk$/;"	m	class:android::_FileAsset
mStart	include/utils/Asset.h	/^    off_t       mStart;         \/\/ offset to start of compressed data$/;"	m	class:android::_CompressedAsset
mUncompressedLen	include/utils/Asset.h	/^    off_t       mUncompressedLen; \/\/ length of the uncompressed data$/;"	m	class:android::_CompressedAsset
mZipInflater	include/utils/Asset.h	/^    class StreamingZipInflater* mZipInflater;  \/\/ for streaming large compressed assets$/;"	m	class:android::_CompressedAsset	typeref:class:android::_CompressedAsset::StreamingZipInflater
openFileDescriptor	include/utils/Asset.h	/^    virtual int openFileDescriptor(off_t* outStart, off_t* outLength) const { return -1; }$/;"	f	class:android::_CompressedAsset
setAssetSource	include/utils/Asset.h	/^    void setAssetSource(const String8& path) { mAssetSource = path; }$/;"	f	class:android::Asset
AssetDir	include/utils/AssetDir.h	/^    AssetDir(void)$/;"	f	class:android::AssetDir
AssetDir	include/utils/AssetDir.h	/^class AssetDir {$/;"	c	namespace:android
FileInfo	include/utils/AssetDir.h	/^        FileInfo(const FileInfo& src) {$/;"	f	class:android::AssetDir::FileInfo
FileInfo	include/utils/AssetDir.h	/^        FileInfo(const String8& path)      \/\/ useful for e.g. svect.indexOf$/;"	f	class:android::AssetDir::FileInfo
FileInfo	include/utils/AssetDir.h	/^        FileInfo(void) {}$/;"	f	class:android::AssetDir::FileInfo
FileInfo	include/utils/AssetDir.h	/^    class FileInfo {$/;"	c	class:android::AssetDir
__LIBS_ASSETDIR_H	include/utils/AssetDir.h	21;"	d
android	include/utils/AssetDir.h	/^namespace android {$/;"	n
copyMembers	include/utils/AssetDir.h	/^        void copyMembers(const FileInfo& src) {$/;"	f	class:android::AssetDir::FileInfo
getFileCount	include/utils/AssetDir.h	/^    size_t getFileCount(void) { return mFileInfo->size(); }$/;"	f	class:android::AssetDir
getFileName	include/utils/AssetDir.h	/^        const String8& getFileName(void) const { return mFileName; }$/;"	f	class:android::AssetDir::FileInfo
getFileName	include/utils/AssetDir.h	/^    const String8& getFileName(int idx) {$/;"	f	class:android::AssetDir
getFileType	include/utils/AssetDir.h	/^        FileType getFileType(void) const { return mFileType; }$/;"	f	class:android::AssetDir::FileInfo
getFileType	include/utils/AssetDir.h	/^    FileType getFileType(int idx) {$/;"	f	class:android::AssetDir
getSourceName	include/utils/AssetDir.h	/^        const String8& getSourceName(void) const { return mSourceName; }$/;"	f	class:android::AssetDir::FileInfo
getSourceName	include/utils/AssetDir.h	/^    const String8& getSourceName(int idx) {$/;"	f	class:android::AssetDir
mFileInfo	include/utils/AssetDir.h	/^    SortedVector<FileInfo>* mFileInfo;$/;"	m	class:android::AssetDir
mFileName	include/utils/AssetDir.h	/^        String8    mFileName;      \/\/ filename only$/;"	m	class:android::AssetDir::FileInfo
mFileType	include/utils/AssetDir.h	/^        FileType    mFileType;      \/\/ regular, directory, etc$/;"	m	class:android::AssetDir::FileInfo
mSourceName	include/utils/AssetDir.h	/^        String8    mSourceName;    \/\/ currently debug-only$/;"	m	class:android::AssetDir::FileInfo
operator <	include/utils/AssetDir.h	/^        bool operator< (const FileInfo& rhs) const {$/;"	f	class:android::AssetDir::FileInfo
operator =	include/utils/AssetDir.h	/^        const FileInfo& operator= (const FileInfo& src) {$/;"	f	class:android::AssetDir::FileInfo
operator ==	include/utils/AssetDir.h	/^        bool operator== (const FileInfo& rhs) const {$/;"	f	class:android::AssetDir::FileInfo
set	include/utils/AssetDir.h	/^        void set(const String8& path, FileType type) {$/;"	f	class:android::AssetDir::FileInfo
setFileList	include/utils/AssetDir.h	/^    void setFileList(SortedVector<FileInfo>* list) { mFileInfo = list; }$/;"	f	class:android::AssetDir
setFileName	include/utils/AssetDir.h	/^        void setFileName(const String8& path) { mFileName = path; }$/;"	f	class:android::AssetDir::FileInfo
setFileType	include/utils/AssetDir.h	/^        void setFileType(FileType type) { mFileType = type; }$/;"	f	class:android::AssetDir::FileInfo
setSourceName	include/utils/AssetDir.h	/^        void setSourceName(const String8& path) { mSourceName = path; }$/;"	f	class:android::AssetDir::FileInfo
~AssetDir	include/utils/AssetDir.h	/^    virtual ~AssetDir(void) {$/;"	f	class:android::AssetDir
~FileInfo	include/utils/AssetDir.h	/^        ~FileInfo(void) {}$/;"	f	class:android::AssetDir::FileInfo
AAssetManager	include/utils/AssetManager.h	/^struct AAssetManager { };$/;"	s
AccessMode	include/utils/AssetManager.h	/^    typedef Asset::AccessMode AccessMode;       \/\/ typing shortcut$/;"	t	class:android::AssetManager
AssetManager	include/utils/AssetManager.h	/^class AssetManager : public AAssetManager {$/;"	c	namespace:android
CACHE_DEFER	include/utils/AssetManager.h	/^        CACHE_DEFER,        \/\/ construct cache as pieces are needed$/;"	e	enum:android::AssetManager::CacheMode
CACHE_OFF	include/utils/AssetManager.h	/^        CACHE_OFF,          \/\/ don't try to cache file locations$/;"	e	enum:android::AssetManager::CacheMode
CACHE_UNKNOWN	include/utils/AssetManager.h	/^        CACHE_UNKNOWN = 0,$/;"	e	enum:android::AssetManager::CacheMode
CacheMode	include/utils/AssetManager.h	/^    typedef enum CacheMode {$/;"	g	class:android::AssetManager
CacheMode	include/utils/AssetManager.h	/^    } CacheMode;$/;"	t	class:android::AssetManager	typeref:enum:android::AssetManager::CacheMode
SharedZip	include/utils/AssetManager.h	/^    class SharedZip : public RefBase {$/;"	c	class:android::AssetManager
ZipSet	include/utils/AssetManager.h	/^    class ZipSet {$/;"	c	class:android::AssetManager
__LIBS_ASSETMANAGER_H	include/utils/AssetManager.h	21;"	d
android	include/utils/AssetManager.h	/^namespace android {$/;"	n
asset_path	include/utils/AssetManager.h	/^    struct asset_path$/;"	s	class:android::AssetManager
gLock	include/utils/AssetManager.h	/^        static Mutex gLock;$/;"	m	class:android::AssetManager::SharedZip
gOpen	include/utils/AssetManager.h	/^        static DefaultKeyedVector<String8, wp<SharedZip> > gOpen;$/;"	m	class:android::AssetManager::SharedZip
mAssetPaths	include/utils/AssetManager.h	/^    Vector<asset_path> mAssetPaths;$/;"	m	class:android::AssetManager
mCache	include/utils/AssetManager.h	/^    SortedVector<AssetDir::FileInfo> mCache;$/;"	m	class:android::AssetManager
mCacheMode	include/utils/AssetManager.h	/^    CacheMode       mCacheMode;         \/\/ is the cache enabled?$/;"	m	class:android::AssetManager
mCacheValid	include/utils/AssetManager.h	/^    bool            mCacheValid;        \/\/ clear when locale or vendor changes$/;"	m	class:android::AssetManager
mConfig	include/utils/AssetManager.h	/^    ResTable_config* mConfig;$/;"	m	class:android::AssetManager
mLocale	include/utils/AssetManager.h	/^    char*           mLocale;$/;"	m	class:android::AssetManager
mLock	include/utils/AssetManager.h	/^    mutable Mutex   mLock;$/;"	m	class:android::AssetManager
mModWhen	include/utils/AssetManager.h	/^        time_t mModWhen;$/;"	m	class:android::AssetManager::SharedZip
mPath	include/utils/AssetManager.h	/^        String8 mPath;$/;"	m	class:android::AssetManager::SharedZip
mResourceTable	include/utils/AssetManager.h	/^        ResTable* mResourceTable;$/;"	m	class:android::AssetManager::SharedZip
mResourceTableAsset	include/utils/AssetManager.h	/^        Asset* mResourceTableAsset;$/;"	m	class:android::AssetManager::SharedZip
mResources	include/utils/AssetManager.h	/^    mutable ResTable* mResources;$/;"	m	class:android::AssetManager
mVendor	include/utils/AssetManager.h	/^    char*           mVendor;$/;"	m	class:android::AssetManager
mZipFile	include/utils/AssetManager.h	/^        ZipFileRO* mZipFile;$/;"	m	class:android::AssetManager::SharedZip
mZipFile	include/utils/AssetManager.h	/^        mutable Vector<sp<SharedZip> > mZipFile;$/;"	m	class:android::AssetManager::ZipSet
mZipPath	include/utils/AssetManager.h	/^        mutable Vector<String8> mZipPath;$/;"	m	class:android::AssetManager::ZipSet
mZipSet	include/utils/AssetManager.h	/^    ZipSet          mZipSet;$/;"	m	class:android::AssetManager
path	include/utils/AssetManager.h	/^        String8 path;$/;"	m	struct:android::AssetManager::asset_path
purge	include/utils/AssetManager.h	/^    void purge(void) { purgeFileNameCacheLocked(); }$/;"	f	class:android::AssetManager
type	include/utils/AssetManager.h	/^        FileType type;$/;"	m	struct:android::AssetManager::asset_path
ANDROID_UTILS_ATOMIC_H	include/utils/Atomic.h	18;"	d
BACKUP_HEADER_ENTITY_V1	include/utils/BackupHelpers.h	/^    BACKUP_HEADER_ENTITY_V1 = 0x61746144, \/\/ Data (little endian)$/;"	e	enum:android::__anon300
BackupDataReader	include/utils/BackupHelpers.h	/^class BackupDataReader$/;"	c	namespace:android
BackupDataWriter	include/utils/BackupHelpers.h	/^class BackupDataWriter$/;"	c	namespace:android
FileRec	include/utils/BackupHelpers.h	/^struct FileRec {$/;"	s	namespace:android
FileState	include/utils/BackupHelpers.h	/^struct FileState {$/;"	s	namespace:android
RestoreHelperBase	include/utils/BackupHelpers.h	/^class RestoreHelperBase$/;"	c	namespace:android
SnapshotHeader	include/utils/BackupHelpers.h	/^struct SnapshotHeader {$/;"	s	namespace:android
TEST_BACKUP_HELPERS	include/utils/BackupHelpers.h	144;"	d
_UTILS_BACKUP_HELPERS_H	include/utils/BackupHelpers.h	18;"	d
android	include/utils/BackupHelpers.h	/^namespace android {$/;"	n
crc32	include/utils/BackupHelpers.h	/^    int crc32;$/;"	m	struct:android::FileState
dataSize	include/utils/BackupHelpers.h	/^    int dataSize; \/\/ size of the data, not including the padding, -1 means delete$/;"	m	struct:android::__anon301
deleted	include/utils/BackupHelpers.h	/^    bool deleted;$/;"	m	struct:android::FileRec
entity	include/utils/BackupHelpers.h	/^        entity_header_v1 entity;$/;"	m	union:android::BackupDataReader::__anon302
entity_header_v1	include/utils/BackupHelpers.h	/^} entity_header_v1;$/;"	t	namespace:android	typeref:struct:android::__anon301
file	include/utils/BackupHelpers.h	/^    String8 file;$/;"	m	struct:android::FileRec
fileCount	include/utils/BackupHelpers.h	/^    int fileCount;$/;"	m	struct:android::SnapshotHeader
keyLen	include/utils/BackupHelpers.h	/^    int keyLen; \/\/ length of the key name, not including the null terminator$/;"	m	struct:android::__anon301
m_buf	include/utils/BackupHelpers.h	/^    void* m_buf;$/;"	m	class:android::RestoreHelperBase
m_dataEndPos	include/utils/BackupHelpers.h	/^    ssize_t m_dataEndPos;$/;"	m	class:android::BackupDataReader
m_done	include/utils/BackupHelpers.h	/^    bool m_done;$/;"	m	class:android::BackupDataReader
m_entityCount	include/utils/BackupHelpers.h	/^    int m_entityCount;$/;"	m	class:android::BackupDataReader
m_entityCount	include/utils/BackupHelpers.h	/^    int m_entityCount;$/;"	m	class:android::BackupDataWriter
m_fd	include/utils/BackupHelpers.h	/^    int m_fd;$/;"	m	class:android::BackupDataReader
m_fd	include/utils/BackupHelpers.h	/^    int m_fd;$/;"	m	class:android::BackupDataWriter
m_files	include/utils/BackupHelpers.h	/^    KeyedVector<String8,FileRec> m_files;$/;"	m	class:android::RestoreHelperBase
m_header	include/utils/BackupHelpers.h	/^    } m_header;$/;"	m	class:android::BackupDataReader	typeref:union:android::BackupDataReader::__anon302
m_key	include/utils/BackupHelpers.h	/^    String8 m_key;$/;"	m	class:android::BackupDataReader
m_keyPrefix	include/utils/BackupHelpers.h	/^    String8 m_keyPrefix;$/;"	m	class:android::BackupDataWriter
m_loggedUnknownMetadata	include/utils/BackupHelpers.h	/^    bool m_loggedUnknownMetadata;$/;"	m	class:android::RestoreHelperBase
m_pos	include/utils/BackupHelpers.h	/^    ssize_t m_pos;$/;"	m	class:android::BackupDataReader
m_pos	include/utils/BackupHelpers.h	/^    ssize_t m_pos;$/;"	m	class:android::BackupDataWriter
m_status	include/utils/BackupHelpers.h	/^    status_t m_status;$/;"	m	class:android::BackupDataReader
m_status	include/utils/BackupHelpers.h	/^    status_t m_status;$/;"	m	class:android::BackupDataWriter
magic0	include/utils/BackupHelpers.h	/^    int magic0;$/;"	m	struct:android::SnapshotHeader
magic1	include/utils/BackupHelpers.h	/^    int magic1;$/;"	m	struct:android::SnapshotHeader
modTime_nsec	include/utils/BackupHelpers.h	/^    int modTime_nsec;$/;"	m	struct:android::FileState
modTime_sec	include/utils/BackupHelpers.h	/^    int modTime_sec;$/;"	m	struct:android::FileState
mode	include/utils/BackupHelpers.h	/^    int mode;$/;"	m	struct:android::FileState
nameLen	include/utils/BackupHelpers.h	/^    int nameLen;$/;"	m	struct:android::FileState
s	include/utils/BackupHelpers.h	/^    FileState s;$/;"	m	struct:android::FileRec
size	include/utils/BackupHelpers.h	/^    int size;$/;"	m	struct:android::FileState
totalSize	include/utils/BackupHelpers.h	/^    int totalSize;$/;"	m	struct:android::SnapshotHeader
type	include/utils/BackupHelpers.h	/^        int type;$/;"	m	union:android::BackupDataReader::__anon302
type	include/utils/BackupHelpers.h	/^    int type; \/\/ BACKUP_HEADER_ENTITY_V1$/;"	m	struct:android::__anon301
BitSet32	include/utils/BitSet.h	/^    explicit inline BitSet32(uint32_t value) : value(value) { }$/;"	f	struct:android::BitSet32
BitSet32	include/utils/BitSet.h	/^    inline BitSet32() : value(0) { }$/;"	f	struct:android::BitSet32
BitSet32	include/utils/BitSet.h	/^struct BitSet32 {$/;"	s	namespace:android
UTILS_BITSET_H	include/utils/BitSet.h	18;"	d
android	include/utils/BitSet.h	/^namespace android {$/;"	n
clear	include/utils/BitSet.h	/^    inline void clear() { value = 0; }$/;"	f	struct:android::BitSet32
clearBit	include/utils/BitSet.h	/^    inline void clearBit(uint32_t n) { value &= ~ valueForBit(n); }$/;"	f	struct:android::BitSet32
count	include/utils/BitSet.h	/^    inline uint32_t count() const { return __builtin_popcount(value); }$/;"	f	struct:android::BitSet32
firstMarkedBit	include/utils/BitSet.h	/^    inline uint32_t firstMarkedBit() const { return __builtin_clz(value); }$/;"	f	struct:android::BitSet32
firstUnmarkedBit	include/utils/BitSet.h	/^    inline uint32_t firstUnmarkedBit() const { return __builtin_clz(~ value); }$/;"	f	struct:android::BitSet32
hasBit	include/utils/BitSet.h	/^    inline bool hasBit(uint32_t n) const { return value & valueForBit(n); }$/;"	f	struct:android::BitSet32
isEmpty	include/utils/BitSet.h	/^    inline bool isEmpty() const { return ! value; }$/;"	f	struct:android::BitSet32
markBit	include/utils/BitSet.h	/^    inline void markBit(uint32_t n) { value |= valueForBit(n); }$/;"	f	struct:android::BitSet32
operator !=	include/utils/BitSet.h	/^    inline bool operator!= (const BitSet32& other) const { return value != other.value; }$/;"	f	struct:android::BitSet32
operator ==	include/utils/BitSet.h	/^    inline bool operator== (const BitSet32& other) const { return value == other.value; }$/;"	f	struct:android::BitSet32
value	include/utils/BitSet.h	/^    uint32_t value;$/;"	m	struct:android::BitSet32
valueForBit	include/utils/BitSet.h	/^    static inline uint32_t valueForBit(uint32_t n) { return 0x80000000 >> n; }$/;"	f	struct:android::BitSet32
ANDROID_BUFFEREDTEXTOUTPUT_H	include/utils/BufferedTextOutput.h	18;"	d
BufferedTextOutput	include/utils/BufferedTextOutput.h	/^class BufferedTextOutput : public TextOutput$/;"	c	namespace:android
MULTITHREADED	include/utils/BufferedTextOutput.h	/^        MULTITHREADED = 0x0001$/;"	e	enum:android::BufferedTextOutput::__anon298
android	include/utils/BufferedTextOutput.h	/^namespace android {$/;"	n
mFlags	include/utils/BufferedTextOutput.h	/^    uint32_t            mFlags;$/;"	m	class:android::BufferedTextOutput
mGlobalState	include/utils/BufferedTextOutput.h	/^    BufferState*        mGlobalState;$/;"	m	class:android::BufferedTextOutput
mIndex	include/utils/BufferedTextOutput.h	/^    const int32_t       mIndex;$/;"	m	class:android::BufferedTextOutput
mLock	include/utils/BufferedTextOutput.h	/^    Mutex               mLock;$/;"	m	class:android::BufferedTextOutput
mSeq	include/utils/BufferedTextOutput.h	/^    const int32_t       mSeq;$/;"	m	class:android::BufferedTextOutput
DEVICE_BYTE_ORDER	include/utils/ByteOrder.h	51;"	d
_LIBS_UTILS_BYTE_ORDER_H	include/utils/ByteOrder.h	20;"	d
android_swap_long	include/utils/ByteOrder.h	/^static inline uint32_t android_swap_long(uint32_t v)$/;"	f
android_swap_short	include/utils/ByteOrder.h	/^static inline uint16_t android_swap_short(uint16_t v)$/;"	f
dtohl	include/utils/ByteOrder.h	55;"	d
dtohl	include/utils/ByteOrder.h	62;"	d
dtohs	include/utils/ByteOrder.h	56;"	d
dtohs	include/utils/ByteOrder.h	63;"	d
fromlel	include/utils/ByteOrder.h	70;"	d
fromlel	include/utils/ByteOrder.h	75;"	d
fromles	include/utils/ByteOrder.h	71;"	d
fromles	include/utils/ByteOrder.h	76;"	d
htodl	include/utils/ByteOrder.h	57;"	d
htodl	include/utils/ByteOrder.h	64;"	d
htods	include/utils/ByteOrder.h	58;"	d
htods	include/utils/ByteOrder.h	65;"	d
tolel	include/utils/ByteOrder.h	72;"	d
tolel	include/utils/ByteOrder.h	77;"	d
toles	include/utils/ByteOrder.h	73;"	d
toles	include/utils/ByteOrder.h	78;"	d
ANDROID_CALLSTACK_H	include/utils/CallStack.h	18;"	d
CallStack	include/utils/CallStack.h	/^class CallStack$/;"	c	namespace:android
MAX_DEPTH	include/utils/CallStack.h	/^        MAX_DEPTH = 31$/;"	e	enum:android::CallStack::__anon253
android	include/utils/CallStack.h	/^namespace android {$/;"	n
mCount	include/utils/CallStack.h	/^    size_t      mCount;$/;"	m	class:android::CallStack
mStack	include/utils/CallStack.h	/^    const void* mStack[MAX_DEPTH];$/;"	m	class:android::CallStack
size	include/utils/CallStack.h	/^    size_t size() const { return mCount; }$/;"	f	class:android::CallStack
ANDROID_DEBUG_H	include/utils/Debug.h	18;"	d
COMPILE_TIME_ASSERT	include/utils/Debug.h	29;"	d
COMPILE_TIME_ASSERT_FUNCTION_SCOPE	include/utils/Debug.h	32;"	d
CompileTimeAssert	include/utils/Debug.h	/^template<> struct CompileTimeAssert<true> {};$/;"	s	namespace:android
CompileTimeIfElse	include/utils/Debug.h	/^struct CompileTimeIfElse<false, LHS, RHS> { typedef RHS TYPE; };$/;"	s	namespace:android
CompileTimeIfElse	include/utils/Debug.h	/^struct CompileTimeIfElse<true,  LHS, RHS> { typedef LHS TYPE; };$/;"	s	namespace:android
TYPE	include/utils/Debug.h	/^struct CompileTimeIfElse<false, LHS, RHS> { typedef RHS TYPE; };$/;"	t	struct:android::CompileTimeIfElse
TYPE	include/utils/Debug.h	/^struct CompileTimeIfElse<true,  LHS, RHS> { typedef LHS TYPE; };$/;"	t	struct:android::CompileTimeIfElse
android	include/utils/Debug.h	/^namespace android {$/;"	n
debugPrintFunc	include/utils/Debug.h	/^typedef void (*debugPrintFunc)(void* cookie, const char* txt);$/;"	t
_LIBS_UTILS_ENDIAN_H	include/utils/Endian.h	21;"	d
__BIG_ENDIAN	include/utils/Endian.h	29;"	d
__BYTE_ORDER	include/utils/Endian.h	33;"	d
__BYTE_ORDER	include/utils/Endian.h	35;"	d
__LITTLE_ENDIAN	include/utils/Endian.h	30;"	d
ALREADY_EXISTS	include/utils/Errors.h	/^    ALREADY_EXISTS      = -EEXIST,$/;"	e	enum:android::__anon254
ANDROID_ERRORS_H	include/utils/Errors.h	18;"	d
BAD_INDEX	include/utils/Errors.h	/^    BAD_INDEX           = -EOVERFLOW,$/;"	e	enum:android::__anon254
BAD_TYPE	include/utils/Errors.h	/^    BAD_TYPE            = 0x80000001,$/;"	e	enum:android::__anon254
BAD_VALUE	include/utils/Errors.h	/^    BAD_VALUE           = -EINVAL,$/;"	e	enum:android::__anon254
DEAD_OBJECT	include/utils/Errors.h	/^    DEAD_OBJECT         = -EPIPE,$/;"	e	enum:android::__anon254
FAILED_TRANSACTION	include/utils/Errors.h	/^    FAILED_TRANSACTION  = 0x80000002,$/;"	e	enum:android::__anon254
INVALID_OPERATION	include/utils/Errors.h	/^    INVALID_OPERATION   = -ENOSYS,$/;"	e	enum:android::__anon254
JPARKS_BROKE_IT	include/utils/Errors.h	/^    JPARKS_BROKE_IT     = -EPIPE,$/;"	e	enum:android::__anon254
NAME_NOT_FOUND	include/utils/Errors.h	/^    NAME_NOT_FOUND      = -ENOENT,$/;"	e	enum:android::__anon254
NOT_ENOUGH_DATA	include/utils/Errors.h	/^    NOT_ENOUGH_DATA     = -ENODATA,$/;"	e	enum:android::__anon254
NO_ERROR	include/utils/Errors.h	/^    NO_ERROR          = 0,    \/\/ No errors.$/;"	e	enum:android::__anon254
NO_ERROR	include/utils/Errors.h	42;"	d
NO_ERROR	include/utils/Errors.h	80;"	d
NO_INIT	include/utils/Errors.h	/^    NO_INIT             = -ENODEV,$/;"	e	enum:android::__anon254
NO_MEMORY	include/utils/Errors.h	/^    NO_MEMORY           = -ENOMEM,$/;"	e	enum:android::__anon254
OK	include/utils/Errors.h	/^    OK                = 0,    \/\/ Everything's swell.$/;"	e	enum:android::__anon254
PERMISSION_DENIED	include/utils/Errors.h	/^    PERMISSION_DENIED   = -EPERM,$/;"	e	enum:android::__anon254
TIMED_OUT	include/utils/Errors.h	/^    TIMED_OUT           = -ETIMEDOUT,$/;"	e	enum:android::__anon254
UNKNOWN_ERROR	include/utils/Errors.h	/^    UNKNOWN_ERROR       = 0x80000000,$/;"	e	enum:android::__anon254
UNKNOWN_TRANSACTION	include/utils/Errors.h	/^    UNKNOWN_TRANSACTION = -EBADMSG,$/;"	e	enum:android::__anon254
WOULD_BLOCK	include/utils/Errors.h	/^    WOULD_BLOCK         = -EWOULDBLOCK, $/;"	e	enum:android::__anon254
android	include/utils/Errors.h	/^namespace android {$/;"	n
status_t	include/utils/Errors.h	/^typedef int         status_t;$/;"	t	namespace:android
DONTNEED	include/utils/FileMap.h	/^        NORMAL, RANDOM, SEQUENTIAL, WILLNEED, DONTNEED$/;"	e	enum:android::FileMap::MapAdvice
FileMap	include/utils/FileMap.h	/^class FileMap {$/;"	c	namespace:android
MapAdvice	include/utils/FileMap.h	/^    enum MapAdvice {$/;"	g	class:android::FileMap
NORMAL	include/utils/FileMap.h	/^        NORMAL, RANDOM, SEQUENTIAL, WILLNEED, DONTNEED$/;"	e	enum:android::FileMap::MapAdvice
RANDOM	include/utils/FileMap.h	/^        NORMAL, RANDOM, SEQUENTIAL, WILLNEED, DONTNEED$/;"	e	enum:android::FileMap::MapAdvice
SEQUENTIAL	include/utils/FileMap.h	/^        NORMAL, RANDOM, SEQUENTIAL, WILLNEED, DONTNEED$/;"	e	enum:android::FileMap::MapAdvice
WILLNEED	include/utils/FileMap.h	/^        NORMAL, RANDOM, SEQUENTIAL, WILLNEED, DONTNEED$/;"	e	enum:android::FileMap::MapAdvice
__LIBS_FILE_MAP_H	include/utils/FileMap.h	21;"	d
acquire	include/utils/FileMap.h	/^    FileMap* acquire(void) { mRefCount++; return this; }$/;"	f	class:android::FileMap
android	include/utils/FileMap.h	/^namespace android {$/;"	n
getDataLength	include/utils/FileMap.h	/^    size_t getDataLength(void) const { return mDataLength; }$/;"	f	class:android::FileMap
getDataOffset	include/utils/FileMap.h	/^    off_t getDataOffset(void) const { return mDataOffset; }$/;"	f	class:android::FileMap
getDataPtr	include/utils/FileMap.h	/^    void* getDataPtr(void) const { return mDataPtr; }$/;"	f	class:android::FileMap
getFileName	include/utils/FileMap.h	/^    const char* getFileName(void) const { return mFileName; }$/;"	f	class:android::FileMap
mBaseLength	include/utils/FileMap.h	/^    size_t      mBaseLength;    \/\/ length, measured from "mBasePtr"$/;"	m	class:android::FileMap
mBasePtr	include/utils/FileMap.h	/^    void*       mBasePtr;       \/\/ base of mmap area; page aligned$/;"	m	class:android::FileMap
mDataLength	include/utils/FileMap.h	/^    size_t      mDataLength;    \/\/ length, measured from "mDataPtr"$/;"	m	class:android::FileMap
mDataOffset	include/utils/FileMap.h	/^    off_t       mDataOffset;    \/\/ offset used when map was created$/;"	m	class:android::FileMap
mDataPtr	include/utils/FileMap.h	/^    void*       mDataPtr;       \/\/ start of requested data, offset from base$/;"	m	class:android::FileMap
mFileHandle	include/utils/FileMap.h	/^    HANDLE      mFileHandle;    \/\/ Win32 file handle$/;"	m	class:android::FileMap
mFileMapping	include/utils/FileMap.h	/^    HANDLE      mFileMapping;   \/\/ Win32 file mapping handle$/;"	m	class:android::FileMap
mFileName	include/utils/FileMap.h	/^    char*       mFileName;      \/\/ original file name, if known$/;"	m	class:android::FileMap
mPageSize	include/utils/FileMap.h	/^    static long mPageSize;$/;"	m	class:android::FileMap
mRefCount	include/utils/FileMap.h	/^    int         mRefCount;      \/\/ reference count$/;"	m	class:android::FileMap
release	include/utils/FileMap.h	/^    void release(void) {$/;"	f	class:android::FileMap
ANDROID_UTILS_FLATTENABLE_H	include/utils/Flattenable.h	18;"	d
Flattenable	include/utils/Flattenable.h	/^class Flattenable$/;"	c	namespace:android
android	include/utils/Flattenable.h	/^namespace android {$/;"	n
ANDROID_KEYED_VECTOR_H	include/utils/KeyedVector.h	18;"	d
DefaultKeyedVector	include/utils/KeyedVector.h	/^DefaultKeyedVector<KEY,VALUE>::DefaultKeyedVector(const VALUE& defValue)$/;"	f	class:android::DefaultKeyedVector
DefaultKeyedVector	include/utils/KeyedVector.h	/^class DefaultKeyedVector : public KeyedVector<KEY, VALUE>$/;"	c	namespace:android
KeyedVector	include/utils/KeyedVector.h	/^KeyedVector<KEY,VALUE>::KeyedVector()$/;"	f	class:android::KeyedVector
KeyedVector	include/utils/KeyedVector.h	/^class KeyedVector$/;"	c	namespace:android
add	include/utils/KeyedVector.h	/^ssize_t KeyedVector<KEY,VALUE>::add(const KEY& key, const VALUE& value) {$/;"	f	class:android::KeyedVector
android	include/utils/KeyedVector.h	/^namespace android {$/;"	n
capacity	include/utils/KeyedVector.h	/^    inline  size_t          capacity() const            { return mVector.capacity(); }$/;"	f	class:android::KeyedVector
clear	include/utils/KeyedVector.h	/^    inline  void            clear()                     { mVector.clear(); }$/;"	f	class:android::KeyedVector
editValueAt	include/utils/KeyedVector.h	/^VALUE& KeyedVector<KEY,VALUE>::editValueAt(size_t index) {$/;"	f	class:android::KeyedVector
editValueFor	include/utils/KeyedVector.h	/^VALUE& KeyedVector<KEY,VALUE>::editValueFor(const KEY& key) {$/;"	f	class:android::KeyedVector
indexOfKey	include/utils/KeyedVector.h	/^ssize_t KeyedVector<KEY,VALUE>::indexOfKey(const KEY& key) const {$/;"	f	class:android::KeyedVector
isEmpty	include/utils/KeyedVector.h	/^    inline  bool            isEmpty() const             { return mVector.isEmpty(); }$/;"	f	class:android::KeyedVector
keyAt	include/utils/KeyedVector.h	/^const KEY& KeyedVector<KEY,VALUE>::keyAt(size_t index) const {$/;"	f	class:android::KeyedVector
key_type	include/utils/KeyedVector.h	/^    typedef KEY    key_type;$/;"	t	class:android::KeyedVector
mDefault	include/utils/KeyedVector.h	/^            VALUE                                           mDefault;$/;"	m	class:android::DefaultKeyedVector
mVector	include/utils/KeyedVector.h	/^            SortedVector< key_value_pair_t<KEY, VALUE> >    mVector;$/;"	m	class:android::KeyedVector
removeItem	include/utils/KeyedVector.h	/^ssize_t KeyedVector<KEY,VALUE>::removeItem(const KEY& key) {$/;"	f	class:android::KeyedVector
removeItemsAt	include/utils/KeyedVector.h	/^ssize_t KeyedVector<KEY, VALUE>::removeItemsAt(size_t index, size_t count) {$/;"	f	class:android::KeyedVector
replaceValueAt	include/utils/KeyedVector.h	/^ssize_t KeyedVector<KEY,VALUE>::replaceValueAt(size_t index, const VALUE& item) {$/;"	f	class:android::KeyedVector
replaceValueFor	include/utils/KeyedVector.h	/^ssize_t KeyedVector<KEY,VALUE>::replaceValueFor(const KEY& key, const VALUE& value) {$/;"	f	class:android::KeyedVector
setCapacity	include/utils/KeyedVector.h	/^    inline ssize_t          setCapacity(size_t size)    { return mVector.setCapacity(size); }$/;"	f	class:android::KeyedVector
size	include/utils/KeyedVector.h	/^    inline  size_t          size() const                { return mVector.size(); }$/;"	f	class:android::KeyedVector
valueAt	include/utils/KeyedVector.h	/^const VALUE& KeyedVector<KEY,VALUE>::valueAt(size_t index) const {$/;"	f	class:android::KeyedVector
valueFor	include/utils/KeyedVector.h	/^const VALUE& DefaultKeyedVector<KEY,VALUE>::valueFor(const KEY& key) const {$/;"	f	class:android::DefaultKeyedVector
valueFor	include/utils/KeyedVector.h	/^const VALUE& KeyedVector<KEY,VALUE>::valueFor(const KEY& key) const {$/;"	f	class:android::KeyedVector
value_type	include/utils/KeyedVector.h	/^    typedef VALUE  value_type;$/;"	t	class:android::KeyedVector
CONST_ITERATOR	include/utils/List.h	/^    struct CONST_ITERATOR {$/;"	s	class:android::List
List	include/utils/List.h	/^    List() {$/;"	f	class:android::List
List	include/utils/List.h	/^    List(const List<T>& src) {      \/\/ copy-constructor$/;"	f	class:android::List
List	include/utils/List.h	/^class List $/;"	c	namespace:android
NON_CONST_ITERATOR	include/utils/List.h	/^    struct NON_CONST_ITERATOR {$/;"	s	class:android::List
NodePtr	include/utils/List.h	/^        typedef _Node const * NodePtr;$/;"	t	struct:android::List::CONST_ITERATOR
NodePtr	include/utils/List.h	/^        typedef _Node* NodePtr;$/;"	t	struct:android::List::NON_CONST_ITERATOR
Type	include/utils/List.h	/^        typedef TYPE Type;$/;"	t	struct:android::List::NON_CONST_ITERATOR
Type	include/utils/List.h	/^        typedef const TYPE Type;$/;"	t	struct:android::List::CONST_ITERATOR
_Iter	include/utils/List.h	/^        typedef _ListIterator<U, Constness>     _Iter;$/;"	t	class:android::List::_ListIterator
_LIBS_UTILS_LIST_H	include/utils/List.h	28;"	d
_ListIterator	include/utils/List.h	/^        _ListIterator() {}$/;"	f	class:android::List::_ListIterator
_ListIterator	include/utils/List.h	/^        _ListIterator(const V& rhs) : mpNode(rhs.mpNode) {}$/;"	f	class:android::List::_ListIterator
_ListIterator	include/utils/List.h	/^        _ListIterator(const _Iter& rhs) : mpNode(rhs.mpNode) {}$/;"	f	class:android::List::_ListIterator
_ListIterator	include/utils/List.h	/^        explicit _ListIterator(_NodePtr ptr) : mpNode(ptr) {}$/;"	f	class:android::List::_ListIterator
_ListIterator	include/utils/List.h	/^    class _ListIterator {$/;"	c	class:android::List
_Node	include/utils/List.h	/^        explicit _Node(const T& val) : mVal(val) {}$/;"	f	class:android::List::_Node
_Node	include/utils/List.h	/^    class _Node {$/;"	c	class:android::List
_NodePtr	include/utils/List.h	/^        typedef typename Constness<U>::NodePtr  _NodePtr;$/;"	t	class:android::List::_ListIterator
_Type	include/utils/List.h	/^        typedef typename Constness<U>::Type     _Type;$/;"	t	class:android::List::_ListIterator
android	include/utils/List.h	/^namespace android {$/;"	n
begin	include/utils/List.h	/^    inline const_iterator begin() const { $/;"	f	class:android::List
begin	include/utils/List.h	/^    inline iterator begin() { $/;"	f	class:android::List
clear	include/utils/List.h	/^    void clear() {$/;"	f	class:android::List
const_iterator	include/utils/List.h	/^    typedef _ListIterator<T, CONST_ITERATOR> const_iterator;$/;"	t	class:android::List
distance	include/utils/List.h	/^    ptrdiff_t distance($/;"	f	class:android::List
empty	include/utils/List.h	/^    inline bool empty() const { return mpMiddle->getNext() == mpMiddle; }$/;"	f	class:android::List
end	include/utils/List.h	/^    inline const_iterator end() const { $/;"	f	class:android::List
end	include/utils/List.h	/^    inline iterator end() { $/;"	f	class:android::List
erase	include/utils/List.h	/^    iterator erase(iterator first, iterator last) {$/;"	f	class:android::List
erase	include/utils/List.h	/^    iterator erase(iterator posn) {$/;"	f	class:android::List
getNext	include/utils/List.h	/^        inline _Node* getNext() const { return mpNext; }$/;"	f	class:android::List::_Node
getNode	include/utils/List.h	/^        inline _NodePtr getNode() const { return mpNode; }$/;"	f	class:android::List::_ListIterator
getPrev	include/utils/List.h	/^        inline _Node* getPrev() const { return mpPrev; }$/;"	f	class:android::List::_Node
getRef	include/utils/List.h	/^        inline T& getRef() { return mVal; }$/;"	f	class:android::List::_Node
getRef	include/utils/List.h	/^        inline const T& getRef() const { return mVal; }$/;"	f	class:android::List::_Node
insert	include/utils/List.h	/^    iterator insert(iterator posn, const T& val) $/;"	f	class:android::List
insert	include/utils/List.h	/^    void insert(iterator posn, const_iterator first, const_iterator last) {$/;"	f	class:android::List
iterator	include/utils/List.h	/^    typedef _ListIterator<T, NON_CONST_ITERATOR> iterator;$/;"	t	class:android::List
mVal	include/utils/List.h	/^        T           mVal;$/;"	m	class:android::List::_Node
mpMiddle	include/utils/List.h	/^    _Node*      mpMiddle;$/;"	m	class:android::List
mpNext	include/utils/List.h	/^        _Node*      mpNext;$/;"	m	class:android::List::_Node
mpNode	include/utils/List.h	/^        _NodePtr mpNode;    \/* should be private, but older gcc fails *\/$/;"	m	class:android::List::_ListIterator
mpPrev	include/utils/List.h	/^        _Node*      mpPrev;$/;"	m	class:android::List::_Node
operator !=	include/utils/List.h	/^        inline bool operator!=(const OTHER& right) const { $/;"	f	class:android::List::_ListIterator
operator !=	include/utils/List.h	/^        inline bool operator!=(const _Iter& right) const { $/;"	f	class:android::List::_ListIterator
operator *	include/utils/List.h	/^        _Type& operator*() const { return mpNode->getRef(); }$/;"	f	class:android::List::_ListIterator
operator ++	include/utils/List.h	/^        const _Iter operator++(int) {    \/\/ post-increment$/;"	f	class:android::List::_ListIterator
operator ++	include/utils/List.h	/^        inline _Iter& operator++() {     \/\/ pre-increment$/;"	f	class:android::List::_ListIterator
operator --	include/utils/List.h	/^        const _Iter operator--(int) {   \/\/ post-increment$/;"	f	class:android::List::_ListIterator
operator --	include/utils/List.h	/^        inline _Iter& operator--() {     \/\/ pre-increment$/;"	f	class:android::List::_ListIterator
operator ->	include/utils/List.h	/^        _Type* operator->() const { return &(mpNode->getRef()); }$/;"	f	class:android::List::_ListIterator
operator =	include/utils/List.h	/^List<T>& List<T>::operator=(const List<T>& right)$/;"	f	class:android::List
operator ==	include/utils/List.h	/^        inline bool operator==(const OTHER& right) const { $/;"	f	class:android::List::_ListIterator
operator ==	include/utils/List.h	/^        inline bool operator==(const _Iter& right) const { $/;"	f	class:android::List::_ListIterator
prep	include/utils/List.h	/^    void prep() {$/;"	f	class:android::List
push_back	include/utils/List.h	/^    void push_back(const T& val) { insert(end(), val); }$/;"	f	class:android::List
push_front	include/utils/List.h	/^    void push_front(const T& val) { insert(begin(), val); }$/;"	f	class:android::List
setNext	include/utils/List.h	/^        inline void setNext(_Node* ptr) { mpNext = ptr; }$/;"	f	class:android::List::_Node
setPrev	include/utils/List.h	/^        inline void setPrev(_Node* ptr) { mpPrev = ptr; }$/;"	f	class:android::List::_Node
setVal	include/utils/List.h	/^        inline void setVal(const T& val) { mVal = val; }$/;"	f	class:android::List::_Node
size	include/utils/List.h	/^    size_t size() const {$/;"	f	class:android::List
~List	include/utils/List.h	/^    virtual ~List() {$/;"	f	class:android::List
~_ListIterator	include/utils/List.h	/^        ~_ListIterator() {}$/;"	f	class:android::List::_ListIterator
~_Node	include/utils/List.h	/^        ~_Node() {}$/;"	f	class:android::List::_Node
_LIBS_UTILS_LOG_H	include/utils/Log.h	29;"	d
ALooper	include/utils/Looper.h	/^struct ALooper {$/;"	s
LOOPER_USES_EPOLL	include/utils/Looper.h	28;"	d
Looper	include/utils/Looper.h	/^class Looper : public ALooper, public RefBase {$/;"	c	namespace:android
Request	include/utils/Looper.h	/^    struct Request {$/;"	s	class:android::Looper
Response	include/utils/Looper.h	/^    struct Response {$/;"	s	class:android::Looper
SAMPLED_POLLS_TO_AGGREGATE	include/utils/Looper.h	/^    static const int SAMPLED_POLLS_TO_AGGREGATE = 1000;$/;"	m	class:android::Looper
SAMPLED_WAKE_CYCLES_TO_AGGREGATE	include/utils/Looper.h	/^    static const int SAMPLED_WAKE_CYCLES_TO_AGGREGATE = 100;$/;"	m	class:android::Looper
UTILS_LOOPER_H	include/utils/Looper.h	18;"	d
android	include/utils/Looper.h	/^namespace android {$/;"	n
callback	include/utils/Looper.h	/^        ALooper_callbackFunc callback;$/;"	m	struct:android::Looper::Request
data	include/utils/Looper.h	/^        void* data;$/;"	m	struct:android::Looper::Request
events	include/utils/Looper.h	/^        int events;$/;"	m	struct:android::Looper::Response
fd	include/utils/Looper.h	/^        int fd;$/;"	m	struct:android::Looper::Request
ident	include/utils/Looper.h	/^        int ident;$/;"	m	struct:android::Looper::Request
mAllowNonCallbacks	include/utils/Looper.h	/^    const bool mAllowNonCallbacks; \/\/ immutable$/;"	m	class:android::Looper
mAwake	include/utils/Looper.h	/^    Condition mAwake;   \/\/ guarded by mLock$/;"	m	class:android::Looper
mEpollFd	include/utils/Looper.h	/^    int mEpollFd; \/\/ immutable$/;"	m	class:android::Looper
mLock	include/utils/Looper.h	/^    Mutex mLock;$/;"	m	class:android::Looper
mPendingWakeCount	include/utils/Looper.h	/^    int mPendingWakeCount;$/;"	m	class:android::Looper
mPendingWakeTime	include/utils/Looper.h	/^    nsecs_t mPendingWakeTime;$/;"	m	class:android::Looper
mPolling	include/utils/Looper.h	/^    bool mPolling;      \/\/ guarded by mLock$/;"	m	class:android::Looper
mRequestedFds	include/utils/Looper.h	/^    Vector<struct pollfd> mRequestedFds;  \/\/ must hold mLock and mPolling must be false to modify$/;"	m	class:android::Looper
mRequests	include/utils/Looper.h	/^    KeyedVector<int, Request> mRequests;  \/\/ guarded by mLock$/;"	m	class:android::Looper
mRequests	include/utils/Looper.h	/^    Vector<Request> mRequests;            \/\/ must hold mLock and mPolling must be false to modify$/;"	m	class:android::Looper
mResponseIndex	include/utils/Looper.h	/^    size_t mResponseIndex;$/;"	m	class:android::Looper
mResponses	include/utils/Looper.h	/^    Vector<Response> mResponses;$/;"	m	class:android::Looper
mResume	include/utils/Looper.h	/^    Condition mResume;  \/\/ guarded by mLock$/;"	m	class:android::Looper
mSampledPolls	include/utils/Looper.h	/^    int mSampledPolls;$/;"	m	class:android::Looper
mSampledTimeoutPollCount	include/utils/Looper.h	/^    int mSampledTimeoutPollCount;$/;"	m	class:android::Looper
mSampledTimeoutPollLatencySum	include/utils/Looper.h	/^    int mSampledTimeoutPollLatencySum;$/;"	m	class:android::Looper
mSampledWakeCountSum	include/utils/Looper.h	/^    int mSampledWakeCountSum;$/;"	m	class:android::Looper
mSampledWakeCycles	include/utils/Looper.h	/^    int mSampledWakeCycles;$/;"	m	class:android::Looper
mSampledWakeLatencySum	include/utils/Looper.h	/^    nsecs_t mSampledWakeLatencySum;$/;"	m	class:android::Looper
mSampledZeroPollCount	include/utils/Looper.h	/^    int mSampledZeroPollCount;$/;"	m	class:android::Looper
mSampledZeroPollLatencySum	include/utils/Looper.h	/^    int mSampledZeroPollLatencySum;$/;"	m	class:android::Looper
mWaiters	include/utils/Looper.h	/^    uint32_t mWaiters;  \/\/ guarded by mLock$/;"	m	class:android::Looper
mWakeReadPipeFd	include/utils/Looper.h	/^    int mWakeReadPipeFd;  \/\/ immutable$/;"	m	class:android::Looper
mWakeWritePipeFd	include/utils/Looper.h	/^    int mWakeWritePipeFd; \/\/ immutable$/;"	m	class:android::Looper
pollAll	include/utils/Looper.h	/^    inline int pollAll(int timeoutMillis) {$/;"	f	class:android::Looper
pollOnce	include/utils/Looper.h	/^    inline int pollOnce(int timeoutMillis) {$/;"	f	class:android::Looper
request	include/utils/Looper.h	/^        Request request;$/;"	m	struct:android::Looper::Response
OBBFILE_H_	include/utils/ObbFile.h	18;"	d
OBB_OVERLAY	include/utils/ObbFile.h	29;"	d
OBB_SALTED	include/utils/ObbFile.h	30;"	d
ObbFile	include/utils/ObbFile.h	/^class ObbFile : public RefBase {$/;"	c	namespace:android
android	include/utils/ObbFile.h	/^namespace android {$/;"	n
get4LE	include/utils/ObbFile.h	/^    static inline uint32_t get4LE(const unsigned char* buf) {$/;"	f	class:android::ObbFile
getFileName	include/utils/ObbFile.h	/^    const char* getFileName() const {$/;"	f	class:android::ObbFile
getFlags	include/utils/ObbFile.h	/^    int32_t getFlags() const {$/;"	f	class:android::ObbFile
getPackageName	include/utils/ObbFile.h	/^    const String8 getPackageName() const {$/;"	f	class:android::ObbFile
getSalt	include/utils/ObbFile.h	/^    const unsigned char* getSalt(size_t* length) const {$/;"	f	class:android::ObbFile
getVersion	include/utils/ObbFile.h	/^    int32_t getVersion() const {$/;"	f	class:android::ObbFile
isOverlay	include/utils/ObbFile.h	/^    bool isOverlay() {$/;"	f	class:android::ObbFile
mFileName	include/utils/ObbFile.h	/^    const char* mFileName;$/;"	m	class:android::ObbFile
mFileSize	include/utils/ObbFile.h	/^    size_t mFileSize;$/;"	m	class:android::ObbFile
mFlags	include/utils/ObbFile.h	/^    int32_t mFlags;$/;"	m	class:android::ObbFile
mFooterStart	include/utils/ObbFile.h	/^    size_t mFooterStart;$/;"	m	class:android::ObbFile
mPackageName	include/utils/ObbFile.h	/^    String8 mPackageName;$/;"	m	class:android::ObbFile
mReadBuf	include/utils/ObbFile.h	/^    unsigned char* mReadBuf;$/;"	m	class:android::ObbFile
mSalt	include/utils/ObbFile.h	/^    unsigned char mSalt[8];$/;"	m	class:android::ObbFile
mSalted	include/utils/ObbFile.h	/^    bool mSalted;$/;"	m	class:android::ObbFile
mVersion	include/utils/ObbFile.h	/^    int32_t mVersion;$/;"	m	class:android::ObbFile
put4LE	include/utils/ObbFile.h	/^    static inline void put4LE(unsigned char* buf, uint32_t val) {$/;"	f	class:android::ObbFile
setFlags	include/utils/ObbFile.h	/^    void setFlags(int32_t flags) {$/;"	f	class:android::ObbFile
setOverlay	include/utils/ObbFile.h	/^    void setOverlay(bool overlay) {$/;"	f	class:android::ObbFile
setPackageName	include/utils/ObbFile.h	/^    void setPackageName(String8 packageName) {$/;"	f	class:android::ObbFile
setSalt	include/utils/ObbFile.h	/^    bool setSalt(const unsigned char* salt, size_t length) {$/;"	f	class:android::ObbFile
setVersion	include/utils/ObbFile.h	/^    void setVersion(int32_t version) {$/;"	f	class:android::ObbFile
Pool	include/utils/Pool.h	/^    Pool() : PoolImpl(sizeof(T)) { }$/;"	f	class:android::Pool
Pool	include/utils/Pool.h	/^class Pool : private PoolImpl {$/;"	c	namespace:android
PoolImpl	include/utils/Pool.h	/^class PoolImpl {$/;"	c	namespace:android
UTILS_POOL_H	include/utils/Pool.h	18;"	d
alloc	include/utils/Pool.h	/^    inline T* alloc() {$/;"	f	class:android::Pool
android	include/utils/Pool.h	/^namespace android {$/;"	n
free	include/utils/Pool.h	/^    inline void free(T* obj) {$/;"	f	class:android::Pool
mObjSize	include/utils/Pool.h	/^    size_t mObjSize;$/;"	m	class:android::PoolImpl
~Pool	include/utils/Pool.h	/^    ~Pool() { }$/;"	f	class:android::Pool
ANDROID_REF_BASE_H	include/utils/RefBase.h	18;"	d
COMPARE	include/utils/RefBase.h	329;"	d
COMPARE	include/utils/RefBase.h	50;"	d
COMPARE_WEAK	include/utils/RefBase.h	330;"	d
COMPARE_WEAK	include/utils/RefBase.h	34;"	d
FIRST_INC_STRONG	include/utils/RefBase.h	/^        FIRST_INC_STRONG = 0x0001$/;"	e	enum:android::RefBase::__anon238
LightRefBase	include/utils/RefBase.h	/^    inline LightRefBase() : mCount(0) { }$/;"	f	class:android::LightRefBase
LightRefBase	include/utils/RefBase.h	/^class LightRefBase$/;"	c	namespace:android
OBJECT_LIFETIME_FOREVER	include/utils/RefBase.h	/^        OBJECT_LIFETIME_FOREVER = 0x0003$/;"	e	enum:android::RefBase::__anon237
OBJECT_LIFETIME_WEAK	include/utils/RefBase.h	/^        OBJECT_LIFETIME_WEAK    = 0x0001,$/;"	e	enum:android::RefBase::__anon237
RefBase	include/utils/RefBase.h	/^class RefBase$/;"	c	namespace:android
android	include/utils/RefBase.h	/^namespace android {$/;"	n
clear	include/utils/RefBase.h	/^void sp<T>::clear()$/;"	f	class:sp
clear	include/utils/RefBase.h	/^void wp<T>::clear()$/;"	f	class:wp
decStrong	include/utils/RefBase.h	/^    inline void decStrong(const void* id) const {$/;"	f	class:android::LightRefBase
force_set	include/utils/RefBase.h	/^void sp<T>::force_set(T* other)$/;"	f	class:sp
get	include/utils/RefBase.h	/^    inline  T*      get() const         { return m_ptr; }$/;"	f	class:android::sp
getStrongCount	include/utils/RefBase.h	/^    inline int32_t getStrongCount() const {$/;"	f	class:android::LightRefBase
incStrong	include/utils/RefBase.h	/^    inline void incStrong(const void* id) const {$/;"	f	class:android::LightRefBase
mCount	include/utils/RefBase.h	/^    mutable volatile int32_t mCount;$/;"	m	class:android::LightRefBase
mRefs	include/utils/RefBase.h	/^        weakref_impl* const mRefs;$/;"	m	class:android::RefBase
m_ptr	include/utils/RefBase.h	/^    T*              m_ptr;$/;"	m	namespace:android
m_refs	include/utils/RefBase.h	/^    weakref_type*   m_refs;$/;"	m	namespace:android
operator !=	include/utils/RefBase.h	/^                         inline bool operator != (const wp<T>& o) const { return m_refs != o.m_refs; }$/;"	f	namespace:android
operator !=	include/utils/RefBase.h	/^    template<typename U> inline bool operator != (const wp<U>& o) const { return !operator == (o); }$/;"	f	namespace:android
operator *	include/utils/RefBase.h	/^    inline  T&      operator* () const  { return *m_ptr; }$/;"	f	class:android::sp
operator ->	include/utils/RefBase.h	/^    inline  T*      operator-> () const { return m_ptr;  }$/;"	f	class:android::sp
operator <	include/utils/RefBase.h	/^    inline bool operator < (const wp<T>& o) const {$/;"	f	namespace:android
operator <	include/utils/RefBase.h	/^    inline bool operator < (const wp<U>& o) const {$/;"	f	namespace:android
operator <<	include/utils/RefBase.h	/^inline TextOutput& operator<<(TextOutput& to, const sp<T>& val)$/;"	f
operator <<	include/utils/RefBase.h	/^inline TextOutput& operator<<(TextOutput& to, const wp<T>& val)$/;"	f
operator <=	include/utils/RefBase.h	/^                         inline bool operator <= (const wp<T>& o) const { return !operator > (o); }$/;"	f	namespace:android
operator <=	include/utils/RefBase.h	/^    template<typename U> inline bool operator <= (const wp<U>& o) const { return !operator > (o); }$/;"	f	namespace:android
operator =	include/utils/RefBase.h	/^sp<T>& sp<T>::operator = (T* other)$/;"	f	class:sp
operator =	include/utils/RefBase.h	/^sp<T>& sp<T>::operator = (U* other)$/;"	f	class:sp
operator =	include/utils/RefBase.h	/^sp<T>& sp<T>::operator = (const sp<T>& other) {$/;"	f	class:sp
operator =	include/utils/RefBase.h	/^sp<T>& sp<T>::operator = (const sp<U>& other)$/;"	f	class:sp
operator =	include/utils/RefBase.h	/^wp<T>& wp<T>::operator = (T* other)$/;"	f	class:wp
operator =	include/utils/RefBase.h	/^wp<T>& wp<T>::operator = (U* other)$/;"	f	class:wp
operator =	include/utils/RefBase.h	/^wp<T>& wp<T>::operator = (const sp<T>& other)$/;"	f	class:wp
operator =	include/utils/RefBase.h	/^wp<T>& wp<T>::operator = (const sp<U>& other)$/;"	f	class:wp
operator =	include/utils/RefBase.h	/^wp<T>& wp<T>::operator = (const wp<T>& other)$/;"	f	class:wp
operator =	include/utils/RefBase.h	/^wp<T>& wp<T>::operator = (const wp<U>& other)$/;"	f	class:wp
operator >	include/utils/RefBase.h	/^    inline bool operator > (const wp<U>& o) const {$/;"	f	namespace:android
operator >=	include/utils/RefBase.h	/^                         inline bool operator >= (const wp<T>& o) const { return !operator < (o); }$/;"	f	namespace:android
operator >=	include/utils/RefBase.h	/^    template<typename U> inline bool operator >= (const wp<U>& o) const { return !operator < (o); }$/;"	f	namespace:android
printRefs	include/utils/RefBase.h	/^    inline  void            printRefs() const { getWeakRefs()->printRefs(); }$/;"	f	class:android::RefBase
promote	include/utils/RefBase.h	/^sp<T> wp<T>::promote() const$/;"	f	class:wp
set_object_and_refs	include/utils/RefBase.h	/^void wp<T>::set_object_and_refs(T* other, weakref_type* refs)$/;"	f	class:wp
sp	include/utils/RefBase.h	/^    inline sp() : m_ptr(0) { }$/;"	f	class:android::sp
sp	include/utils/RefBase.h	/^class sp$/;"	c	namespace:android
sp	include/utils/RefBase.h	/^sp<T>::sp(T* other)$/;"	f	class:sp
sp	include/utils/RefBase.h	/^sp<T>::sp(T* p, weakref_type* refs)$/;"	f	class:sp
sp	include/utils/RefBase.h	/^sp<T>::sp(U* other) : m_ptr(other)$/;"	f	class:sp
sp	include/utils/RefBase.h	/^sp<T>::sp(const sp<T>& other)$/;"	f	class:sp
sp	include/utils/RefBase.h	/^sp<T>::sp(const sp<U>& other)$/;"	f	class:sp
trackMe	include/utils/RefBase.h	/^    inline  void            trackMe(bool enable, bool retain)$/;"	f	class:android::RefBase
weakref_type	include/utils/RefBase.h	/^    class weakref_type$/;"	c	class:android::RefBase
weakref_type	include/utils/RefBase.h	/^    typedef typename RefBase::weakref_type weakref_type;$/;"	t	class:android::sp
wp	include/utils/RefBase.h	/^wp<T>::wp(T* other)$/;"	f	class:wp
wp	include/utils/RefBase.h	/^wp<T>::wp(U* other)$/;"	f	class:wp
wp	include/utils/RefBase.h	/^wp<T>::wp(const sp<T>& other)$/;"	f	class:wp
wp	include/utils/RefBase.h	/^wp<T>::wp(const sp<U>& other)$/;"	f	class:wp
wp	include/utils/RefBase.h	/^wp<T>::wp(const wp<T>& other)$/;"	f	class:wp
wp	include/utils/RefBase.h	/^wp<T>::wp(const wp<U>& other)$/;"	f	class:wp
~LightRefBase	include/utils/RefBase.h	/^    inline ~LightRefBase() { }$/;"	f	class:android::LightRefBase
~sp	include/utils/RefBase.h	/^sp<T>::~sp()$/;"	f	class:sp
~wp	include/utils/RefBase.h	/^wp<T>::~wp()$/;"	f	class:wp
ATTR_FEW	include/utils/ResourceTypes.h	/^        ATTR_FEW = Res_MAKEINTERNAL(8),$/;"	e	enum:android::ResTable_map::__anon293
ATTR_L10N	include/utils/ResourceTypes.h	/^        ATTR_L10N = Res_MAKEINTERNAL(3),$/;"	e	enum:android::ResTable_map::__anon293
ATTR_MANY	include/utils/ResourceTypes.h	/^        ATTR_MANY = Res_MAKEINTERNAL(9)$/;"	e	enum:android::ResTable_map::__anon293
ATTR_MAX	include/utils/ResourceTypes.h	/^        ATTR_MAX = Res_MAKEINTERNAL(2),$/;"	e	enum:android::ResTable_map::__anon293
ATTR_MIN	include/utils/ResourceTypes.h	/^        ATTR_MIN = Res_MAKEINTERNAL(1),$/;"	e	enum:android::ResTable_map::__anon293
ATTR_ONE	include/utils/ResourceTypes.h	/^        ATTR_ONE = Res_MAKEINTERNAL(6),$/;"	e	enum:android::ResTable_map::__anon293
ATTR_OTHER	include/utils/ResourceTypes.h	/^        ATTR_OTHER = Res_MAKEINTERNAL(4),$/;"	e	enum:android::ResTable_map::__anon293
ATTR_TWO	include/utils/ResourceTypes.h	/^        ATTR_TWO = Res_MAKEINTERNAL(7),$/;"	e	enum:android::ResTable_map::__anon293
ATTR_TYPE	include/utils/ResourceTypes.h	/^        ATTR_TYPE = Res_MAKEINTERNAL(0),$/;"	e	enum:android::ResTable_map::__anon293
ATTR_ZERO	include/utils/ResourceTypes.h	/^        ATTR_ZERO = Res_MAKEINTERNAL(5),$/;"	e	enum:android::ResTable_map::__anon293
Accessor	include/utils/ResourceTypes.h	/^    class Accessor$/;"	c	class:android::ResTable
BAD_DOCUMENT	include/utils/ResourceTypes.h	/^        BAD_DOCUMENT = -1,$/;"	e	enum:android::ResXMLParser::event_code_t
COMPLEX_MANTISSA_MASK	include/utils/ResourceTypes.h	/^        COMPLEX_MANTISSA_MASK = 0xffffff$/;"	e	enum:android::Res_value::__anon259
COMPLEX_MANTISSA_SHIFT	include/utils/ResourceTypes.h	/^        COMPLEX_MANTISSA_SHIFT = 8,$/;"	e	enum:android::Res_value::__anon259
COMPLEX_RADIX_0p23	include/utils/ResourceTypes.h	/^        COMPLEX_RADIX_0p23 = 3,$/;"	e	enum:android::Res_value::__anon259
COMPLEX_RADIX_16p7	include/utils/ResourceTypes.h	/^        COMPLEX_RADIX_16p7 = 1,$/;"	e	enum:android::Res_value::__anon259
COMPLEX_RADIX_23p0	include/utils/ResourceTypes.h	/^        COMPLEX_RADIX_23p0 = 0,$/;"	e	enum:android::Res_value::__anon259
COMPLEX_RADIX_8p15	include/utils/ResourceTypes.h	/^        COMPLEX_RADIX_8p15 = 2,$/;"	e	enum:android::Res_value::__anon259
COMPLEX_RADIX_MASK	include/utils/ResourceTypes.h	/^        COMPLEX_RADIX_MASK = 0x3,$/;"	e	enum:android::Res_value::__anon259
COMPLEX_RADIX_SHIFT	include/utils/ResourceTypes.h	/^        COMPLEX_RADIX_SHIFT = 4,$/;"	e	enum:android::Res_value::__anon259
COMPLEX_UNIT_DIP	include/utils/ResourceTypes.h	/^        COMPLEX_UNIT_DIP = 1,$/;"	e	enum:android::Res_value::__anon259
COMPLEX_UNIT_FRACTION	include/utils/ResourceTypes.h	/^        COMPLEX_UNIT_FRACTION = 0,$/;"	e	enum:android::Res_value::__anon259
COMPLEX_UNIT_FRACTION_PARENT	include/utils/ResourceTypes.h	/^        COMPLEX_UNIT_FRACTION_PARENT = 1,$/;"	e	enum:android::Res_value::__anon259
COMPLEX_UNIT_IN	include/utils/ResourceTypes.h	/^        COMPLEX_UNIT_IN = 4,$/;"	e	enum:android::Res_value::__anon259
COMPLEX_UNIT_MASK	include/utils/ResourceTypes.h	/^        COMPLEX_UNIT_MASK = 0xf,$/;"	e	enum:android::Res_value::__anon259
COMPLEX_UNIT_MM	include/utils/ResourceTypes.h	/^        COMPLEX_UNIT_MM = 5,$/;"	e	enum:android::Res_value::__anon259
COMPLEX_UNIT_PT	include/utils/ResourceTypes.h	/^        COMPLEX_UNIT_PT = 3,$/;"	e	enum:android::Res_value::__anon259
COMPLEX_UNIT_PX	include/utils/ResourceTypes.h	/^        COMPLEX_UNIT_PX = 0,$/;"	e	enum:android::Res_value::__anon259
COMPLEX_UNIT_SHIFT	include/utils/ResourceTypes.h	/^        COMPLEX_UNIT_SHIFT = 0,$/;"	e	enum:android::Res_value::__anon259
COMPLEX_UNIT_SP	include/utils/ResourceTypes.h	/^        COMPLEX_UNIT_SP = 2,$/;"	e	enum:android::Res_value::__anon259
CONFIG_DENSITY	include/utils/ResourceTypes.h	/^        CONFIG_DENSITY = ACONFIGURATION_DENSITY,$/;"	e	enum:android::ResTable_config::__anon289
CONFIG_KEYBOARD	include/utils/ResourceTypes.h	/^        CONFIG_KEYBOARD = ACONFIGURATION_KEYBOARD,$/;"	e	enum:android::ResTable_config::__anon289
CONFIG_KEYBOARD_HIDDEN	include/utils/ResourceTypes.h	/^        CONFIG_KEYBOARD_HIDDEN = ACONFIGURATION_KEYBOARD_HIDDEN,$/;"	e	enum:android::ResTable_config::__anon289
CONFIG_LOCALE	include/utils/ResourceTypes.h	/^        CONFIG_LOCALE = ACONFIGURATION_LOCALE,$/;"	e	enum:android::ResTable_config::__anon289
CONFIG_MCC	include/utils/ResourceTypes.h	/^        CONFIG_MCC = ACONFIGURATION_MCC,$/;"	e	enum:android::ResTable_config::__anon289
CONFIG_MNC	include/utils/ResourceTypes.h	/^        CONFIG_MNC = ACONFIGURATION_MCC,$/;"	e	enum:android::ResTable_config::__anon289
CONFIG_NAVIGATION	include/utils/ResourceTypes.h	/^        CONFIG_NAVIGATION = ACONFIGURATION_NAVIGATION,$/;"	e	enum:android::ResTable_config::__anon289
CONFIG_ORIENTATION	include/utils/ResourceTypes.h	/^        CONFIG_ORIENTATION = ACONFIGURATION_ORIENTATION,$/;"	e	enum:android::ResTable_config::__anon289
CONFIG_SCREEN_LAYOUT	include/utils/ResourceTypes.h	/^        CONFIG_SCREEN_LAYOUT = ACONFIGURATION_SCREEN_LAYOUT,$/;"	e	enum:android::ResTable_config::__anon289
CONFIG_SCREEN_SIZE	include/utils/ResourceTypes.h	/^        CONFIG_SCREEN_SIZE = ACONFIGURATION_SCREEN_SIZE,$/;"	e	enum:android::ResTable_config::__anon289
CONFIG_TOUCHSCREEN	include/utils/ResourceTypes.h	/^        CONFIG_TOUCHSCREEN = ACONFIGURATION_TOUCHSCREEN,$/;"	e	enum:android::ResTable_config::__anon289
CONFIG_UI_MODE	include/utils/ResourceTypes.h	/^        CONFIG_UI_MODE = ACONFIGURATION_UI_MODE$/;"	e	enum:android::ResTable_config::__anon289
CONFIG_VERSION	include/utils/ResourceTypes.h	/^        CONFIG_VERSION = ACONFIGURATION_VERSION,$/;"	e	enum:android::ResTable_config::__anon289
DENSITY_DEFAULT	include/utils/ResourceTypes.h	/^        DENSITY_DEFAULT = ACONFIGURATION_DENSITY_DEFAULT,$/;"	e	enum:android::ResTable_config::__anon268
DENSITY_HIGH	include/utils/ResourceTypes.h	/^        DENSITY_HIGH = ACONFIGURATION_DENSITY_HIGH,$/;"	e	enum:android::ResTable_config::__anon268
DENSITY_LOW	include/utils/ResourceTypes.h	/^        DENSITY_LOW = ACONFIGURATION_DENSITY_LOW,$/;"	e	enum:android::ResTable_config::__anon268
DENSITY_MEDIUM	include/utils/ResourceTypes.h	/^        DENSITY_MEDIUM = ACONFIGURATION_DENSITY_MEDIUM,$/;"	e	enum:android::ResTable_config::__anon268
DENSITY_NONE	include/utils/ResourceTypes.h	/^        DENSITY_NONE = ACONFIGURATION_DENSITY_NONE$/;"	e	enum:android::ResTable_config::__anon268
END	include/utils/ResourceTypes.h	/^        END = 0xFFFFFFFF$/;"	e	enum:android::ResStringPool_span::__anon261
END_DOCUMENT	include/utils/ResourceTypes.h	/^        END_DOCUMENT = 1,$/;"	e	enum:android::ResXMLParser::event_code_t
END_NAMESPACE	include/utils/ResourceTypes.h	/^        END_NAMESPACE = RES_XML_END_NAMESPACE_TYPE,$/;"	e	enum:android::ResXMLParser::event_code_t
END_TAG	include/utils/ResourceTypes.h	/^        END_TAG = RES_XML_END_ELEMENT_TYPE,$/;"	e	enum:android::ResXMLParser::event_code_t
FIRST_CHUNK_CODE	include/utils/ResourceTypes.h	/^        FIRST_CHUNK_CODE = RES_XML_FIRST_CHUNK_TYPE, $/;"	e	enum:android::ResXMLParser::event_code_t
FLAG_COMPLEX	include/utils/ResourceTypes.h	/^        FLAG_COMPLEX = 0x0001,$/;"	e	enum:android::ResTable_entry::__anon292
FLAG_PUBLIC	include/utils/ResourceTypes.h	/^        FLAG_PUBLIC = 0x0002$/;"	e	enum:android::ResTable_entry::__anon292
KEYBOARD_12KEY	include/utils/ResourceTypes.h	/^        KEYBOARD_12KEY  = ACONFIGURATION_KEYBOARD_12KEY,$/;"	e	enum:android::ResTable_config::__anon271
KEYBOARD_ANY	include/utils/ResourceTypes.h	/^        KEYBOARD_ANY  = ACONFIGURATION_KEYBOARD_ANY,$/;"	e	enum:android::ResTable_config::__anon271
KEYBOARD_NOKEYS	include/utils/ResourceTypes.h	/^        KEYBOARD_NOKEYS  = ACONFIGURATION_KEYBOARD_NOKEYS,$/;"	e	enum:android::ResTable_config::__anon271
KEYBOARD_QWERTY	include/utils/ResourceTypes.h	/^        KEYBOARD_QWERTY  = ACONFIGURATION_KEYBOARD_QWERTY,$/;"	e	enum:android::ResTable_config::__anon271
KEYSHIDDEN_ANY	include/utils/ResourceTypes.h	/^        KEYSHIDDEN_ANY = ACONFIGURATION_KEYSHIDDEN_ANY,$/;"	e	enum:android::ResTable_config::__anon273
KEYSHIDDEN_NO	include/utils/ResourceTypes.h	/^        KEYSHIDDEN_NO = ACONFIGURATION_KEYSHIDDEN_NO,$/;"	e	enum:android::ResTable_config::__anon273
KEYSHIDDEN_SOFT	include/utils/ResourceTypes.h	/^        KEYSHIDDEN_SOFT = ACONFIGURATION_KEYSHIDDEN_SOFT,$/;"	e	enum:android::ResTable_config::__anon273
KEYSHIDDEN_YES	include/utils/ResourceTypes.h	/^        KEYSHIDDEN_YES = ACONFIGURATION_KEYSHIDDEN_YES,$/;"	e	enum:android::ResTable_config::__anon273
L10N_NOT_REQUIRED	include/utils/ResourceTypes.h	/^        L10N_NOT_REQUIRED = 0,$/;"	e	enum:android::ResTable_map::__anon295
L10N_SUGGESTED	include/utils/ResourceTypes.h	/^        L10N_SUGGESTED    = 1$/;"	e	enum:android::ResTable_map::__anon295
MASK_KEYSHIDDEN	include/utils/ResourceTypes.h	/^        MASK_KEYSHIDDEN = 0x0003,$/;"	e	enum:android::ResTable_config::__anon273
MASK_NAVHIDDEN	include/utils/ResourceTypes.h	/^        MASK_NAVHIDDEN = 0x000c,$/;"	e	enum:android::ResTable_config::__anon274
MASK_SCREENLONG	include/utils/ResourceTypes.h	/^        MASK_SCREENLONG = 0x30,$/;"	e	enum:android::ResTable_config::__anon285
MASK_SCREENSIZE	include/utils/ResourceTypes.h	/^        MASK_SCREENSIZE = 0x0f,$/;"	e	enum:android::ResTable_config::__anon285
MASK_UI_MODE_NIGHT	include/utils/ResourceTypes.h	/^        MASK_UI_MODE_NIGHT = 0x30,$/;"	e	enum:android::ResTable_config::__anon286
MASK_UI_MODE_TYPE	include/utils/ResourceTypes.h	/^        MASK_UI_MODE_TYPE = 0x0f,$/;"	e	enum:android::ResTable_config::__anon286
MINORVERSION_ANY	include/utils/ResourceTypes.h	/^        MINORVERSION_ANY = 0$/;"	e	enum:android::ResTable_config::__anon282
NAVHIDDEN_ANY	include/utils/ResourceTypes.h	/^        NAVHIDDEN_ANY = ACONFIGURATION_NAVHIDDEN_ANY << SHIFT_NAVHIDDEN,$/;"	e	enum:android::ResTable_config::__anon274
NAVHIDDEN_NO	include/utils/ResourceTypes.h	/^        NAVHIDDEN_NO = ACONFIGURATION_NAVHIDDEN_NO << SHIFT_NAVHIDDEN,$/;"	e	enum:android::ResTable_config::__anon274
NAVHIDDEN_YES	include/utils/ResourceTypes.h	/^        NAVHIDDEN_YES = ACONFIGURATION_NAVHIDDEN_YES << SHIFT_NAVHIDDEN,$/;"	e	enum:android::ResTable_config::__anon274
NAVIGATION_ANY	include/utils/ResourceTypes.h	/^        NAVIGATION_ANY  = ACONFIGURATION_NAVIGATION_ANY,$/;"	e	enum:android::ResTable_config::__anon272
NAVIGATION_DPAD	include/utils/ResourceTypes.h	/^        NAVIGATION_DPAD  = ACONFIGURATION_NAVIGATION_DPAD,$/;"	e	enum:android::ResTable_config::__anon272
NAVIGATION_NONAV	include/utils/ResourceTypes.h	/^        NAVIGATION_NONAV  = ACONFIGURATION_NAVIGATION_NONAV,$/;"	e	enum:android::ResTable_config::__anon272
NAVIGATION_TRACKBALL	include/utils/ResourceTypes.h	/^        NAVIGATION_TRACKBALL  = ACONFIGURATION_NAVIGATION_TRACKBALL,$/;"	e	enum:android::ResTable_config::__anon272
NAVIGATION_WHEEL	include/utils/ResourceTypes.h	/^        NAVIGATION_WHEEL  = ACONFIGURATION_NAVIGATION_WHEEL,$/;"	e	enum:android::ResTable_config::__anon272
NO_COLOR	include/utils/ResourceTypes.h	/^        NO_COLOR = 0x00000001,$/;"	e	enum:android::Res_png_9patch::__anon256
NO_ENTRY	include/utils/ResourceTypes.h	/^        NO_ENTRY = 0xFFFFFFFF$/;"	e	enum:android::ResTable_type::__anon291
ORIENTATION_ANY	include/utils/ResourceTypes.h	/^        ORIENTATION_ANY  = ACONFIGURATION_ORIENTATION_ANY,$/;"	e	enum:android::ResTable_config::__anon266
ORIENTATION_LAND	include/utils/ResourceTypes.h	/^        ORIENTATION_LAND = ACONFIGURATION_ORIENTATION_LAND,$/;"	e	enum:android::ResTable_config::__anon266
ORIENTATION_PORT	include/utils/ResourceTypes.h	/^        ORIENTATION_PORT = ACONFIGURATION_ORIENTATION_PORT,$/;"	e	enum:android::ResTable_config::__anon266
ORIENTATION_SQUARE	include/utils/ResourceTypes.h	/^        ORIENTATION_SQUARE = ACONFIGURATION_ORIENTATION_SQUARE,$/;"	e	enum:android::ResTable_config::__anon266
RES_NULL_TYPE	include/utils/ResourceTypes.h	/^    RES_NULL_TYPE               = 0x0000,$/;"	e	enum:android::__anon257
RES_STRING_POOL_TYPE	include/utils/ResourceTypes.h	/^    RES_STRING_POOL_TYPE        = 0x0001,$/;"	e	enum:android::__anon257
RES_TABLE_PACKAGE_TYPE	include/utils/ResourceTypes.h	/^    RES_TABLE_PACKAGE_TYPE      = 0x0200,$/;"	e	enum:android::__anon257
RES_TABLE_TYPE	include/utils/ResourceTypes.h	/^    RES_TABLE_TYPE              = 0x0002,$/;"	e	enum:android::__anon257
RES_TABLE_TYPE_SPEC_TYPE	include/utils/ResourceTypes.h	/^    RES_TABLE_TYPE_SPEC_TYPE    = 0x0202$/;"	e	enum:android::__anon257
RES_TABLE_TYPE_TYPE	include/utils/ResourceTypes.h	/^    RES_TABLE_TYPE_TYPE         = 0x0201,$/;"	e	enum:android::__anon257
RES_XML_CDATA_TYPE	include/utils/ResourceTypes.h	/^    RES_XML_CDATA_TYPE          = 0x0104,$/;"	e	enum:android::__anon257
RES_XML_END_ELEMENT_TYPE	include/utils/ResourceTypes.h	/^    RES_XML_END_ELEMENT_TYPE    = 0x0103,$/;"	e	enum:android::__anon257
RES_XML_END_NAMESPACE_TYPE	include/utils/ResourceTypes.h	/^    RES_XML_END_NAMESPACE_TYPE  = 0x0101,$/;"	e	enum:android::__anon257
RES_XML_FIRST_CHUNK_TYPE	include/utils/ResourceTypes.h	/^    RES_XML_FIRST_CHUNK_TYPE    = 0x0100,$/;"	e	enum:android::__anon257
RES_XML_LAST_CHUNK_TYPE	include/utils/ResourceTypes.h	/^    RES_XML_LAST_CHUNK_TYPE     = 0x017f,$/;"	e	enum:android::__anon257
RES_XML_RESOURCE_MAP_TYPE	include/utils/ResourceTypes.h	/^    RES_XML_RESOURCE_MAP_TYPE   = 0x0180,$/;"	e	enum:android::__anon257
RES_XML_START_ELEMENT_TYPE	include/utils/ResourceTypes.h	/^    RES_XML_START_ELEMENT_TYPE  = 0x0102,$/;"	e	enum:android::__anon257
RES_XML_START_NAMESPACE_TYPE	include/utils/ResourceTypes.h	/^    RES_XML_START_NAMESPACE_TYPE= 0x0100,$/;"	e	enum:android::__anon257
RES_XML_TYPE	include/utils/ResourceTypes.h	/^    RES_XML_TYPE                = 0x0003,$/;"	e	enum:android::__anon257
ResChunk_header	include/utils/ResourceTypes.h	/^struct ResChunk_header$/;"	s	namespace:android
ResStringPool	include/utils/ResourceTypes.h	/^class ResStringPool$/;"	c	namespace:android
ResStringPool_header	include/utils/ResourceTypes.h	/^struct ResStringPool_header$/;"	s	namespace:android
ResStringPool_ref	include/utils/ResourceTypes.h	/^struct ResStringPool_ref$/;"	s	namespace:android
ResStringPool_span	include/utils/ResourceTypes.h	/^struct ResStringPool_span$/;"	s	namespace:android
ResTable	include/utils/ResourceTypes.h	/^class ResTable$/;"	c	namespace:android
ResTable_config	include/utils/ResourceTypes.h	/^struct ResTable_config$/;"	s	namespace:android
ResTable_entry	include/utils/ResourceTypes.h	/^struct ResTable_entry$/;"	s	namespace:android
ResTable_header	include/utils/ResourceTypes.h	/^struct ResTable_header$/;"	s	namespace:android
ResTable_map	include/utils/ResourceTypes.h	/^struct ResTable_map$/;"	s	namespace:android
ResTable_map_entry	include/utils/ResourceTypes.h	/^struct ResTable_map_entry : public ResTable_entry$/;"	s	namespace:android
ResTable_package	include/utils/ResourceTypes.h	/^struct ResTable_package$/;"	s	namespace:android
ResTable_ref	include/utils/ResourceTypes.h	/^struct ResTable_ref$/;"	s	namespace:android
ResTable_type	include/utils/ResourceTypes.h	/^struct ResTable_type$/;"	s	namespace:android
ResTable_typeSpec	include/utils/ResourceTypes.h	/^struct ResTable_typeSpec$/;"	s	namespace:android
ResXMLParser	include/utils/ResourceTypes.h	/^class ResXMLParser$/;"	c	namespace:android
ResXMLPosition	include/utils/ResourceTypes.h	/^    struct ResXMLPosition$/;"	s	class:android::ResXMLParser
ResXMLTree	include/utils/ResourceTypes.h	/^class ResXMLTree : public ResXMLParser$/;"	c	namespace:android
ResXMLTree_attrExt	include/utils/ResourceTypes.h	/^struct ResXMLTree_attrExt$/;"	s	namespace:android
ResXMLTree_attribute	include/utils/ResourceTypes.h	/^struct ResXMLTree_attribute$/;"	s	namespace:android
ResXMLTree_cdataExt	include/utils/ResourceTypes.h	/^struct ResXMLTree_cdataExt$/;"	s	namespace:android
ResXMLTree_endElementExt	include/utils/ResourceTypes.h	/^struct ResXMLTree_endElementExt$/;"	s	namespace:android
ResXMLTree_header	include/utils/ResourceTypes.h	/^struct ResXMLTree_header$/;"	s	namespace:android
ResXMLTree_namespaceExt	include/utils/ResourceTypes.h	/^struct ResXMLTree_namespaceExt$/;"	s	namespace:android
ResXMLTree_node	include/utils/ResourceTypes.h	/^struct ResXMLTree_node$/;"	s	namespace:android
Res_CHECKID	include/utils/ResourceTypes.h	207;"	d
Res_GETENTRY	include/utils/ResourceTypes.h	212;"	d
Res_GETPACKAGE	include/utils/ResourceTypes.h	210;"	d
Res_GETTYPE	include/utils/ResourceTypes.h	211;"	d
Res_INTERNALID	include/utils/ResourceTypes.h	214;"	d
Res_MAKEARRAY	include/utils/ResourceTypes.h	216;"	d
Res_MAKEID	include/utils/ResourceTypes.h	208;"	d
Res_MAKEINTERNAL	include/utils/ResourceTypes.h	215;"	d
Res_MAXPACKAGE	include/utils/ResourceTypes.h	218;"	d
Res_VALIDID	include/utils/ResourceTypes.h	206;"	d
Res_png_9patch	include/utils/ResourceTypes.h	/^    Res_png_9patch() : wasDeserialized(false), xDivs(NULL),$/;"	f	struct:android::Res_png_9patch
Res_png_9patch	include/utils/ResourceTypes.h	/^struct Res_png_9patch$/;"	s	namespace:android
Res_value	include/utils/ResourceTypes.h	/^struct Res_value$/;"	s	namespace:android
SCREENHEIGHT_ANY	include/utils/ResourceTypes.h	/^        SCREENHEIGHT_ANY = 0$/;"	e	enum:android::ResTable_config::__anon278
SCREENLONG_ANY	include/utils/ResourceTypes.h	/^        SCREENLONG_ANY = ACONFIGURATION_SCREENLONG_ANY << SHIFT_SCREENLONG,$/;"	e	enum:android::ResTable_config::__anon285
SCREENLONG_NO	include/utils/ResourceTypes.h	/^        SCREENLONG_NO = ACONFIGURATION_SCREENLONG_NO << SHIFT_SCREENLONG,$/;"	e	enum:android::ResTable_config::__anon285
SCREENLONG_YES	include/utils/ResourceTypes.h	/^        SCREENLONG_YES = ACONFIGURATION_SCREENLONG_YES << SHIFT_SCREENLONG,$/;"	e	enum:android::ResTable_config::__anon285
SCREENSIZE_ANY	include/utils/ResourceTypes.h	/^        SCREENSIZE_ANY = ACONFIGURATION_SCREENSIZE_ANY,$/;"	e	enum:android::ResTable_config::__anon285
SCREENSIZE_LARGE	include/utils/ResourceTypes.h	/^        SCREENSIZE_LARGE = ACONFIGURATION_SCREENSIZE_LARGE,$/;"	e	enum:android::ResTable_config::__anon285
SCREENSIZE_NORMAL	include/utils/ResourceTypes.h	/^        SCREENSIZE_NORMAL = ACONFIGURATION_SCREENSIZE_NORMAL,$/;"	e	enum:android::ResTable_config::__anon285
SCREENSIZE_SMALL	include/utils/ResourceTypes.h	/^        SCREENSIZE_SMALL = ACONFIGURATION_SCREENSIZE_SMALL,$/;"	e	enum:android::ResTable_config::__anon285
SCREENSIZE_XLARGE	include/utils/ResourceTypes.h	/^        SCREENSIZE_XLARGE = ACONFIGURATION_SCREENSIZE_XLARGE,$/;"	e	enum:android::ResTable_config::__anon285
SCREENWIDTH_ANY	include/utils/ResourceTypes.h	/^        SCREENWIDTH_ANY = 0$/;"	e	enum:android::ResTable_config::__anon277
SDKVERSION_ANY	include/utils/ResourceTypes.h	/^        SDKVERSION_ANY = 0$/;"	e	enum:android::ResTable_config::__anon281
SHIFT_NAVHIDDEN	include/utils/ResourceTypes.h	/^        SHIFT_NAVHIDDEN = 2,$/;"	e	enum:android::ResTable_config::__anon274
SHIFT_SCREENLONG	include/utils/ResourceTypes.h	/^        SHIFT_SCREENLONG = 4,$/;"	e	enum:android::ResTable_config::__anon285
SHIFT_UI_MODE_NIGHT	include/utils/ResourceTypes.h	/^        SHIFT_UI_MODE_NIGHT = 4,$/;"	e	enum:android::ResTable_config::__anon286
SORTED_FLAG	include/utils/ResourceTypes.h	/^        SORTED_FLAG = 1<<0,$/;"	e	enum:android::ResStringPool_header::__anon260
SPEC_PUBLIC	include/utils/ResourceTypes.h	/^        SPEC_PUBLIC = 0x40000000$/;"	e	enum:android::ResTable_typeSpec::__anon290
START_DOCUMENT	include/utils/ResourceTypes.h	/^        START_DOCUMENT = 0,$/;"	e	enum:android::ResXMLParser::event_code_t
START_NAMESPACE	include/utils/ResourceTypes.h	/^        START_NAMESPACE = RES_XML_START_NAMESPACE_TYPE,$/;"	e	enum:android::ResXMLParser::event_code_t
START_TAG	include/utils/ResourceTypes.h	/^        START_TAG = RES_XML_START_ELEMENT_TYPE,$/;"	e	enum:android::ResXMLParser::event_code_t
TEXT	include/utils/ResourceTypes.h	/^        TEXT = RES_XML_CDATA_TYPE$/;"	e	enum:android::ResXMLParser::event_code_t
TMP_BUFFER_SIZE	include/utils/ResourceTypes.h	/^        TMP_BUFFER_SIZE = 16$/;"	e	enum:android::ResTable::__anon296
TOUCHSCREEN_ANY	include/utils/ResourceTypes.h	/^        TOUCHSCREEN_ANY  = ACONFIGURATION_TOUCHSCREEN_ANY,$/;"	e	enum:android::ResTable_config::__anon267
TOUCHSCREEN_FINGER	include/utils/ResourceTypes.h	/^        TOUCHSCREEN_FINGER  = ACONFIGURATION_TOUCHSCREEN_FINGER,$/;"	e	enum:android::ResTable_config::__anon267
TOUCHSCREEN_NOTOUCH	include/utils/ResourceTypes.h	/^        TOUCHSCREEN_NOTOUCH  = ACONFIGURATION_TOUCHSCREEN_NOTOUCH,$/;"	e	enum:android::ResTable_config::__anon267
TOUCHSCREEN_STYLUS	include/utils/ResourceTypes.h	/^        TOUCHSCREEN_STYLUS  = ACONFIGURATION_TOUCHSCREEN_STYLUS,$/;"	e	enum:android::ResTable_config::__anon267
TRANSPARENT_COLOR	include/utils/ResourceTypes.h	/^        TRANSPARENT_COLOR = 0x00000000$/;"	e	enum:android::Res_png_9patch::__anon256
TYPE_ANY	include/utils/ResourceTypes.h	/^        TYPE_ANY = 0x0000FFFF,$/;"	e	enum:android::ResTable_map::__anon294
TYPE_ATTRIBUTE	include/utils/ResourceTypes.h	/^        TYPE_ATTRIBUTE = 0x02,$/;"	e	enum:android::Res_value::__anon258
TYPE_BOOLEAN	include/utils/ResourceTypes.h	/^        TYPE_BOOLEAN = 1<<3,$/;"	e	enum:android::ResTable_map::__anon294
TYPE_COLOR	include/utils/ResourceTypes.h	/^        TYPE_COLOR = 1<<4,$/;"	e	enum:android::ResTable_map::__anon294
TYPE_DIMENSION	include/utils/ResourceTypes.h	/^        TYPE_DIMENSION = 0x05,$/;"	e	enum:android::Res_value::__anon258
TYPE_DIMENSION	include/utils/ResourceTypes.h	/^        TYPE_DIMENSION = 1<<6,$/;"	e	enum:android::ResTable_map::__anon294
TYPE_ENUM	include/utils/ResourceTypes.h	/^        TYPE_ENUM = 1<<16,$/;"	e	enum:android::ResTable_map::__anon294
TYPE_FIRST_COLOR_INT	include/utils/ResourceTypes.h	/^        TYPE_FIRST_COLOR_INT = 0x1c,$/;"	e	enum:android::Res_value::__anon258
TYPE_FIRST_INT	include/utils/ResourceTypes.h	/^        TYPE_FIRST_INT = 0x10,$/;"	e	enum:android::Res_value::__anon258
TYPE_FLAGS	include/utils/ResourceTypes.h	/^        TYPE_FLAGS = 1<<17$/;"	e	enum:android::ResTable_map::__anon294
TYPE_FLOAT	include/utils/ResourceTypes.h	/^        TYPE_FLOAT = 0x04,$/;"	e	enum:android::Res_value::__anon258
TYPE_FLOAT	include/utils/ResourceTypes.h	/^        TYPE_FLOAT = 1<<5,$/;"	e	enum:android::ResTable_map::__anon294
TYPE_FRACTION	include/utils/ResourceTypes.h	/^        TYPE_FRACTION = 0x06,$/;"	e	enum:android::Res_value::__anon258
TYPE_FRACTION	include/utils/ResourceTypes.h	/^        TYPE_FRACTION = 1<<7,$/;"	e	enum:android::ResTable_map::__anon294
TYPE_INTEGER	include/utils/ResourceTypes.h	/^        TYPE_INTEGER = 1<<2,$/;"	e	enum:android::ResTable_map::__anon294
TYPE_INT_BOOLEAN	include/utils/ResourceTypes.h	/^        TYPE_INT_BOOLEAN = 0x12,$/;"	e	enum:android::Res_value::__anon258
TYPE_INT_COLOR_ARGB4	include/utils/ResourceTypes.h	/^        TYPE_INT_COLOR_ARGB4 = 0x1e,$/;"	e	enum:android::Res_value::__anon258
TYPE_INT_COLOR_ARGB8	include/utils/ResourceTypes.h	/^        TYPE_INT_COLOR_ARGB8 = 0x1c,$/;"	e	enum:android::Res_value::__anon258
TYPE_INT_COLOR_RGB4	include/utils/ResourceTypes.h	/^        TYPE_INT_COLOR_RGB4 = 0x1f,$/;"	e	enum:android::Res_value::__anon258
TYPE_INT_COLOR_RGB8	include/utils/ResourceTypes.h	/^        TYPE_INT_COLOR_RGB8 = 0x1d,$/;"	e	enum:android::Res_value::__anon258
TYPE_INT_DEC	include/utils/ResourceTypes.h	/^        TYPE_INT_DEC = 0x10,$/;"	e	enum:android::Res_value::__anon258
TYPE_INT_HEX	include/utils/ResourceTypes.h	/^        TYPE_INT_HEX = 0x11,$/;"	e	enum:android::Res_value::__anon258
TYPE_LAST_COLOR_INT	include/utils/ResourceTypes.h	/^        TYPE_LAST_COLOR_INT = 0x1f,$/;"	e	enum:android::Res_value::__anon258
TYPE_LAST_INT	include/utils/ResourceTypes.h	/^        TYPE_LAST_INT = 0x1f$/;"	e	enum:android::Res_value::__anon258
TYPE_NULL	include/utils/ResourceTypes.h	/^        TYPE_NULL = 0x00,$/;"	e	enum:android::Res_value::__anon258
TYPE_REFERENCE	include/utils/ResourceTypes.h	/^        TYPE_REFERENCE = 0x01,$/;"	e	enum:android::Res_value::__anon258
TYPE_REFERENCE	include/utils/ResourceTypes.h	/^        TYPE_REFERENCE = 1<<0,$/;"	e	enum:android::ResTable_map::__anon294
TYPE_STRING	include/utils/ResourceTypes.h	/^        TYPE_STRING = 0x03,$/;"	e	enum:android::Res_value::__anon258
TYPE_STRING	include/utils/ResourceTypes.h	/^        TYPE_STRING = 1<<1,$/;"	e	enum:android::ResTable_map::__anon294
Theme	include/utils/ResourceTypes.h	/^    class Theme {$/;"	c	class:android::ResTable
UI_MODE_NIGHT_ANY	include/utils/ResourceTypes.h	/^        UI_MODE_NIGHT_ANY = ACONFIGURATION_UI_MODE_NIGHT_ANY << SHIFT_UI_MODE_NIGHT,$/;"	e	enum:android::ResTable_config::__anon286
UI_MODE_NIGHT_NO	include/utils/ResourceTypes.h	/^        UI_MODE_NIGHT_NO = ACONFIGURATION_UI_MODE_NIGHT_NO << SHIFT_UI_MODE_NIGHT,$/;"	e	enum:android::ResTable_config::__anon286
UI_MODE_NIGHT_YES	include/utils/ResourceTypes.h	/^        UI_MODE_NIGHT_YES = ACONFIGURATION_UI_MODE_NIGHT_YES << SHIFT_UI_MODE_NIGHT,$/;"	e	enum:android::ResTable_config::__anon286
UI_MODE_TYPE_ANY	include/utils/ResourceTypes.h	/^        UI_MODE_TYPE_ANY = ACONFIGURATION_UI_MODE_TYPE_ANY,$/;"	e	enum:android::ResTable_config::__anon286
UI_MODE_TYPE_CAR	include/utils/ResourceTypes.h	/^        UI_MODE_TYPE_CAR = ACONFIGURATION_UI_MODE_TYPE_CAR,$/;"	e	enum:android::ResTable_config::__anon286
UI_MODE_TYPE_DESK	include/utils/ResourceTypes.h	/^        UI_MODE_TYPE_DESK = ACONFIGURATION_UI_MODE_TYPE_DESK,$/;"	e	enum:android::ResTable_config::__anon286
UI_MODE_TYPE_NORMAL	include/utils/ResourceTypes.h	/^        UI_MODE_TYPE_NORMAL = ACONFIGURATION_UI_MODE_TYPE_NORMAL,$/;"	e	enum:android::ResTable_config::__anon286
UTF8_FLAG	include/utils/ResourceTypes.h	/^        UTF8_FLAG = 1<<8$/;"	e	enum:android::ResStringPool_header::__anon260
_LIBS_UTILS_RESOURCE_TYPES_H	include/utils/ResourceTypes.h	21;"	d
android	include/utils/ResourceTypes.h	/^namespace android {$/;"	n
attributeCount	include/utils/ResourceTypes.h	/^    uint16_t attributeCount;$/;"	m	struct:android::ResXMLTree_attrExt
attributeSize	include/utils/ResourceTypes.h	/^    uint16_t attributeSize;$/;"	m	struct:android::ResXMLTree_attrExt
attributeStart	include/utils/ResourceTypes.h	/^    uint16_t attributeStart;$/;"	m	struct:android::ResXMLTree_attrExt
bag_entry	include/utils/ResourceTypes.h	/^    struct bag_entry {$/;"	s	class:android::ResTable
classIndex	include/utils/ResourceTypes.h	/^    uint16_t classIndex;$/;"	m	struct:android::ResXMLTree_attrExt
colors	include/utils/ResourceTypes.h	/^    uint32_t* colors;$/;"	m	struct:android::Res_png_9patch
comment	include/utils/ResourceTypes.h	/^    struct ResStringPool_ref comment;$/;"	m	struct:android::ResXMLTree_node	typeref:struct:android::ResXMLTree_node::ResStringPool_ref
compare	include/utils/ResourceTypes.h	/^    inline int compare(const ResTable_config& o) const {$/;"	f	struct:android::ResTable_config
config	include/utils/ResourceTypes.h	/^    ResTable_config config;$/;"	m	struct:android::ResTable_type
copyFromDeviceNoSwap	include/utils/ResourceTypes.h	/^    inline void copyFromDeviceNoSwap(const ResTable_config& o) {$/;"	f	struct:android::ResTable_config
copyFromDtoH	include/utils/ResourceTypes.h	/^    inline void copyFromDtoH(const ResTable_config& o) {$/;"	f	struct:android::ResTable_config
count	include/utils/ResourceTypes.h	/^    uint32_t count;$/;"	m	struct:android::ResTable_map_entry
country	include/utils/ResourceTypes.h	/^            char country[2];$/;"	m	struct:android::ResTable_config::__anon264::__anon265
curExt	include/utils/ResourceTypes.h	/^        const void*                 curExt;$/;"	m	struct:android::ResXMLParser::ResXMLPosition
curNode	include/utils/ResourceTypes.h	/^        const ResXMLTree_node*      curNode;$/;"	m	struct:android::ResXMLParser::ResXMLPosition
data	include/utils/ResourceTypes.h	/^    struct ResStringPool_ref data;$/;"	m	struct:android::ResXMLTree_cdataExt	typeref:struct:android::ResXMLTree_cdataExt::ResStringPool_ref
data	include/utils/ResourceTypes.h	/^    uint32_t data;$/;"	m	struct:android::Res_value
dataType	include/utils/ResourceTypes.h	/^    uint8_t dataType;$/;"	m	struct:android::Res_value
density	include/utils/ResourceTypes.h	/^            uint16_t density;$/;"	m	struct:android::ResTable_config::__anon269::__anon270
diff	include/utils/ResourceTypes.h	/^    inline int diff(const ResTable_config& o) const {$/;"	f	struct:android::ResTable_config
entries	include/utils/ResourceTypes.h	/^            theme_entry* entries;$/;"	m	struct:android::ResTable::Theme::type_info
entriesStart	include/utils/ResourceTypes.h	/^    uint32_t entriesStart;$/;"	m	struct:android::ResTable_type
entryCount	include/utils/ResourceTypes.h	/^    uint32_t entryCount;$/;"	m	struct:android::ResTable_type
entryCount	include/utils/ResourceTypes.h	/^    uint32_t entryCount;$/;"	m	struct:android::ResTable_typeSpec
eventCode	include/utils/ResourceTypes.h	/^        event_code_t                eventCode;$/;"	m	struct:android::ResXMLParser::ResXMLPosition
event_code_t	include/utils/ResourceTypes.h	/^    enum event_code_t {$/;"	g	class:android::ResXMLParser
firstChar	include/utils/ResourceTypes.h	/^    uint32_t firstChar, lastChar;$/;"	m	struct:android::ResStringPool_span
flags	include/utils/ResourceTypes.h	/^    uint16_t flags;$/;"	m	struct:android::ResTable_entry
flags	include/utils/ResourceTypes.h	/^    uint32_t flags;$/;"	m	struct:android::ResStringPool_header
getLocale	include/utils/ResourceTypes.h	/^    void getLocale(char str[6]) const {$/;"	f	struct:android::ResTable_config
getResTable	include/utils/ResourceTypes.h	/^        inline const ResTable& getResTable() const { return mTable; }$/;"	f	class:android::ResTable::Theme
getResource	include/utils/ResourceTypes.h	/^    inline ssize_t getResource(const ResTable_ref& res, Res_value* outValue,$/;"	f	class:android::ResTable
header	include/utils/ResourceTypes.h	/^    struct ResChunk_header header;$/;"	m	struct:android::ResStringPool_header	typeref:struct:android::ResStringPool_header::ResChunk_header
header	include/utils/ResourceTypes.h	/^    struct ResChunk_header header;$/;"	m	struct:android::ResTable_header	typeref:struct:android::ResTable_header::ResChunk_header
header	include/utils/ResourceTypes.h	/^    struct ResChunk_header header;$/;"	m	struct:android::ResTable_package	typeref:struct:android::ResTable_package::ResChunk_header
header	include/utils/ResourceTypes.h	/^    struct ResChunk_header header;$/;"	m	struct:android::ResTable_type	typeref:struct:android::ResTable_type::ResChunk_header
header	include/utils/ResourceTypes.h	/^    struct ResChunk_header header;$/;"	m	struct:android::ResTable_typeSpec	typeref:struct:android::ResTable_typeSpec::ResChunk_header
header	include/utils/ResourceTypes.h	/^    struct ResChunk_header header;$/;"	m	struct:android::ResXMLTree_header	typeref:struct:android::ResXMLTree_header::ResChunk_header
header	include/utils/ResourceTypes.h	/^    struct ResChunk_header header;$/;"	m	struct:android::ResXMLTree_node	typeref:struct:android::ResXMLTree_node::ResChunk_header
headerSize	include/utils/ResourceTypes.h	/^    uint16_t headerSize;$/;"	m	struct:android::ResChunk_header
id	include/utils/ResourceTypes.h	/^    uint32_t id;$/;"	m	struct:android::ResTable_package
id	include/utils/ResourceTypes.h	/^    uint8_t id;$/;"	m	struct:android::ResTable_type
id	include/utils/ResourceTypes.h	/^    uint8_t id;$/;"	m	struct:android::ResTable_typeSpec
idIndex	include/utils/ResourceTypes.h	/^    uint16_t idIndex;$/;"	m	struct:android::ResXMLTree_attrExt
ident	include/utils/ResourceTypes.h	/^    uint32_t ident;$/;"	m	struct:android::ResTable_ref
imsi	include/utils/ResourceTypes.h	/^        uint32_t imsi;$/;"	m	union:android::ResTable_config::__anon262
index	include/utils/ResourceTypes.h	/^    uint32_t index;$/;"	m	struct:android::ResStringPool_ref
input	include/utils/ResourceTypes.h	/^        uint32_t input;$/;"	m	union:android::ResTable_config::__anon275
inputFlags	include/utils/ResourceTypes.h	/^            uint8_t inputFlags;$/;"	m	struct:android::ResTable_config::__anon275::__anon276
inputPad0	include/utils/ResourceTypes.h	/^            uint8_t inputPad0;$/;"	m	struct:android::ResTable_config::__anon275::__anon276
isBetterThan	include/utils/ResourceTypes.h	/^    isBetterThan(const ResTable_config& o,$/;"	f	struct:android::ResTable_config
isMoreSpecificThan	include/utils/ResourceTypes.h	/^    isMoreSpecificThan(const ResTable_config& o) const {$/;"	f	struct:android::ResTable_config
key	include/utils/ResourceTypes.h	/^    struct ResStringPool_ref key;$/;"	m	struct:android::ResTable_entry	typeref:struct:android::ResTable_entry::ResStringPool_ref
keyStrings	include/utils/ResourceTypes.h	/^    uint32_t keyStrings;$/;"	m	struct:android::ResTable_package
keyboard	include/utils/ResourceTypes.h	/^            uint8_t keyboard;$/;"	m	struct:android::ResTable_config::__anon275::__anon276
language	include/utils/ResourceTypes.h	/^            char language[2];$/;"	m	struct:android::ResTable_config::__anon264::__anon265
lastChar	include/utils/ResourceTypes.h	/^    uint32_t firstChar, lastChar;$/;"	m	struct:android::ResStringPool_span
lastPublicKey	include/utils/ResourceTypes.h	/^    uint32_t lastPublicKey;$/;"	m	struct:android::ResTable_package
lastPublicType	include/utils/ResourceTypes.h	/^    uint32_t lastPublicType;$/;"	m	struct:android::ResTable_package
lineNumber	include/utils/ResourceTypes.h	/^    uint32_t lineNumber;$/;"	m	struct:android::ResXMLTree_node
locale	include/utils/ResourceTypes.h	/^        uint32_t locale;$/;"	m	union:android::ResTable_config::__anon264
mCache	include/utils/ResourceTypes.h	/^    char16_t**                  mCache;$/;"	m	class:android::ResStringPool
mCurExt	include/utils/ResourceTypes.h	/^    const void*                 mCurExt;$/;"	m	class:android::ResXMLParser
mCurNode	include/utils/ResourceTypes.h	/^    const ResXMLTree_node*      mCurNode;$/;"	m	class:android::ResXMLParser
mDataEnd	include/utils/ResourceTypes.h	/^    const uint8_t*              mDataEnd;$/;"	m	class:android::ResXMLTree
mDecodeLock	include/utils/ResourceTypes.h	/^    mutable Mutex               mDecodeLock;$/;"	m	class:android::ResStringPool
mEntries	include/utils/ResourceTypes.h	/^    const uint32_t*             mEntries;$/;"	m	class:android::ResStringPool
mEntryStyles	include/utils/ResourceTypes.h	/^    const uint32_t*             mEntryStyles;$/;"	m	class:android::ResStringPool
mError	include/utils/ResourceTypes.h	/^    status_t                    mError;$/;"	m	class:android::ResStringPool
mError	include/utils/ResourceTypes.h	/^    status_t                    mError;$/;"	m	class:android::ResTable
mError	include/utils/ResourceTypes.h	/^    status_t                    mError;$/;"	m	class:android::ResXMLTree
mEventCode	include/utils/ResourceTypes.h	/^    event_code_t                mEventCode;$/;"	m	class:android::ResXMLParser
mHeader	include/utils/ResourceTypes.h	/^    const ResStringPool_header* mHeader;$/;"	m	class:android::ResStringPool
mHeader	include/utils/ResourceTypes.h	/^    const ResXMLTree_header*    mHeader;$/;"	m	class:android::ResXMLTree
mHeaders	include/utils/ResourceTypes.h	/^    Vector<Header*>             mHeaders;$/;"	m	class:android::ResTable
mLock	include/utils/ResourceTypes.h	/^    mutable Mutex               mLock;$/;"	m	class:android::ResTable
mNumResIds	include/utils/ResourceTypes.h	/^    size_t                      mNumResIds;$/;"	m	class:android::ResXMLTree
mOwnedData	include/utils/ResourceTypes.h	/^    void*                       mOwnedData;$/;"	m	class:android::ResStringPool
mOwnedData	include/utils/ResourceTypes.h	/^    void*                       mOwnedData;$/;"	m	class:android::ResXMLTree
mPackageGroups	include/utils/ResourceTypes.h	/^    Vector<PackageGroup*>       mPackageGroups;$/;"	m	class:android::ResTable
mPackageMap	include/utils/ResourceTypes.h	/^    uint8_t                     mPackageMap[256];$/;"	m	class:android::ResTable
mPackages	include/utils/ResourceTypes.h	/^        package_info*   mPackages[Res_MAXPACKAGE];$/;"	m	class:android::ResTable::Theme
mParams	include/utils/ResourceTypes.h	/^    ResTable_config             mParams;$/;"	m	class:android::ResTable
mResIds	include/utils/ResourceTypes.h	/^    const uint32_t*             mResIds;$/;"	m	class:android::ResXMLTree
mRootCode	include/utils/ResourceTypes.h	/^    event_code_t                mRootCode;$/;"	m	class:android::ResXMLTree
mRootExt	include/utils/ResourceTypes.h	/^    const void*                 mRootExt;$/;"	m	class:android::ResXMLTree
mRootNode	include/utils/ResourceTypes.h	/^    const ResXMLTree_node*      mRootNode;$/;"	m	class:android::ResXMLTree
mSize	include/utils/ResourceTypes.h	/^    size_t                      mSize;$/;"	m	class:android::ResStringPool
mSize	include/utils/ResourceTypes.h	/^    size_t                      mSize;$/;"	m	class:android::ResXMLTree
mStringPoolSize	include/utils/ResourceTypes.h	/^    uint32_t                    mStringPoolSize;    \/\/ number of uint16_t$/;"	m	class:android::ResStringPool
mStrings	include/utils/ResourceTypes.h	/^    ResStringPool               mStrings;$/;"	m	class:android::ResXMLTree
mStrings	include/utils/ResourceTypes.h	/^    const void*                 mStrings;$/;"	m	class:android::ResStringPool
mStylePoolSize	include/utils/ResourceTypes.h	/^    uint32_t                    mStylePoolSize;    \/\/ number of uint32_t$/;"	m	class:android::ResStringPool
mStyles	include/utils/ResourceTypes.h	/^    const uint32_t*             mStyles;$/;"	m	class:android::ResStringPool
mTable	include/utils/ResourceTypes.h	/^        const ResTable& mTable;$/;"	m	class:android::ResTable::Theme
mTree	include/utils/ResourceTypes.h	/^    const ResXMLTree&           mTree;$/;"	m	class:android::ResXMLParser
map	include/utils/ResourceTypes.h	/^        ResTable_map map;$/;"	m	struct:android::ResTable::bag_entry
match	include/utils/ResourceTypes.h	/^    inline bool match(const ResTable_config& settings) const {$/;"	f	struct:android::ResTable_config
mcc	include/utils/ResourceTypes.h	/^            uint16_t mcc;$/;"	m	struct:android::ResTable_config::__anon262::__anon263
minorVersion	include/utils/ResourceTypes.h	/^            uint16_t minorVersion;$/;"	m	struct:android::ResTable_config::__anon283::__anon284
mnc	include/utils/ResourceTypes.h	/^            uint16_t mnc;$/;"	m	struct:android::ResTable_config::__anon262::__anon263
name	include/utils/ResourceTypes.h	/^        const char16_t* name;$/;"	m	struct:android::ResTable::resource_name
name	include/utils/ResourceTypes.h	/^    ResStringPool_ref name;$/;"	m	struct:android::ResStringPool_span
name	include/utils/ResourceTypes.h	/^    ResTable_ref name;$/;"	m	struct:android::ResTable_map
name	include/utils/ResourceTypes.h	/^    char16_t name[128];$/;"	m	struct:android::ResTable_package
name	include/utils/ResourceTypes.h	/^    struct ResStringPool_ref name;$/;"	m	struct:android::ResXMLTree_attrExt	typeref:struct:android::ResXMLTree_attrExt::ResStringPool_ref
name	include/utils/ResourceTypes.h	/^    struct ResStringPool_ref name;$/;"	m	struct:android::ResXMLTree_attribute	typeref:struct:android::ResXMLTree_attribute::ResStringPool_ref
name	include/utils/ResourceTypes.h	/^    struct ResStringPool_ref name;$/;"	m	struct:android::ResXMLTree_endElementExt	typeref:struct:android::ResXMLTree_endElementExt::ResStringPool_ref
nameLen	include/utils/ResourceTypes.h	/^        size_t nameLen;$/;"	m	struct:android::ResTable::resource_name
navigation	include/utils/ResourceTypes.h	/^            uint8_t navigation;$/;"	m	struct:android::ResTable_config::__anon275::__anon276
ns	include/utils/ResourceTypes.h	/^    struct ResStringPool_ref ns;$/;"	m	struct:android::ResXMLTree_attrExt	typeref:struct:android::ResXMLTree_attrExt::ResStringPool_ref
ns	include/utils/ResourceTypes.h	/^    struct ResStringPool_ref ns;$/;"	m	struct:android::ResXMLTree_attribute	typeref:struct:android::ResXMLTree_attribute::ResStringPool_ref
ns	include/utils/ResourceTypes.h	/^    struct ResStringPool_ref ns;$/;"	m	struct:android::ResXMLTree_endElementExt	typeref:struct:android::ResXMLTree_endElementExt::ResStringPool_ref
numColors	include/utils/ResourceTypes.h	/^    int8_t numColors;$/;"	m	struct:android::Res_png_9patch
numEntries	include/utils/ResourceTypes.h	/^            size_t numEntries;$/;"	m	struct:android::ResTable::Theme::type_info
numTypes	include/utils/ResourceTypes.h	/^            size_t numTypes;$/;"	m	struct:android::ResTable::Theme::package_info
numXDivs	include/utils/ResourceTypes.h	/^    int8_t numXDivs;$/;"	m	struct:android::Res_png_9patch
numYDivs	include/utils/ResourceTypes.h	/^    int8_t numYDivs;$/;"	m	struct:android::Res_png_9patch
orientation	include/utils/ResourceTypes.h	/^            uint8_t orientation;$/;"	m	struct:android::ResTable_config::__anon269::__anon270
package	include/utils/ResourceTypes.h	/^        const char16_t* package;$/;"	m	struct:android::ResTable::resource_name
packageCount	include/utils/ResourceTypes.h	/^    uint32_t packageCount;$/;"	m	struct:android::ResTable_header
packageLen	include/utils/ResourceTypes.h	/^        size_t packageLen;$/;"	m	struct:android::ResTable::resource_name
package_info	include/utils/ResourceTypes.h	/^        struct package_info {$/;"	s	class:android::ResTable::Theme
paddingBottom	include/utils/ResourceTypes.h	/^    int32_t paddingTop, paddingBottom;$/;"	m	struct:android::Res_png_9patch
paddingLeft	include/utils/ResourceTypes.h	/^    int32_t paddingLeft, paddingRight;$/;"	m	struct:android::Res_png_9patch
paddingRight	include/utils/ResourceTypes.h	/^    int32_t paddingLeft, paddingRight;$/;"	m	struct:android::Res_png_9patch
paddingTop	include/utils/ResourceTypes.h	/^    int32_t paddingTop, paddingBottom;$/;"	m	struct:android::Res_png_9patch
parent	include/utils/ResourceTypes.h	/^    ResTable_ref parent;$/;"	m	struct:android::ResTable_map_entry
prefix	include/utils/ResourceTypes.h	/^    struct ResStringPool_ref prefix;$/;"	m	struct:android::ResXMLTree_namespaceExt	typeref:struct:android::ResXMLTree_namespaceExt::ResStringPool_ref
rawValue	include/utils/ResourceTypes.h	/^    struct ResStringPool_ref rawValue;$/;"	m	struct:android::ResXMLTree_attribute	typeref:struct:android::ResXMLTree_attribute::ResStringPool_ref
res0	include/utils/ResourceTypes.h	/^    uint8_t res0;$/;"	m	struct:android::ResTable_type
res0	include/utils/ResourceTypes.h	/^    uint8_t res0;$/;"	m	struct:android::ResTable_typeSpec
res0	include/utils/ResourceTypes.h	/^    uint8_t res0;$/;"	m	struct:android::Res_value
res1	include/utils/ResourceTypes.h	/^    uint16_t res1;$/;"	m	struct:android::ResTable_type
res1	include/utils/ResourceTypes.h	/^    uint16_t res1;$/;"	m	struct:android::ResTable_typeSpec
resource_name	include/utils/ResourceTypes.h	/^    struct resource_name$/;"	s	class:android::ResTable
screenConfig	include/utils/ResourceTypes.h	/^        uint32_t screenConfig;$/;"	m	union:android::ResTable_config::__anon287
screenConfigPad1	include/utils/ResourceTypes.h	/^            uint8_t screenConfigPad1;$/;"	m	struct:android::ResTable_config::__anon287::__anon288
screenConfigPad2	include/utils/ResourceTypes.h	/^            uint8_t screenConfigPad2;$/;"	m	struct:android::ResTable_config::__anon287::__anon288
screenHeight	include/utils/ResourceTypes.h	/^            uint16_t screenHeight;$/;"	m	struct:android::ResTable_config::__anon279::__anon280
screenLayout	include/utils/ResourceTypes.h	/^            uint8_t screenLayout;$/;"	m	struct:android::ResTable_config::__anon287::__anon288
screenSize	include/utils/ResourceTypes.h	/^        uint32_t screenSize;$/;"	m	union:android::ResTable_config::__anon279
screenType	include/utils/ResourceTypes.h	/^        uint32_t screenType;$/;"	m	union:android::ResTable_config::__anon269
screenWidth	include/utils/ResourceTypes.h	/^            uint16_t screenWidth;$/;"	m	struct:android::ResTable_config::__anon279::__anon280
sdkVersion	include/utils/ResourceTypes.h	/^            uint16_t sdkVersion;$/;"	m	struct:android::ResTable_config::__anon283::__anon284
size	include/utils/ResourceTypes.h	/^    uint16_t size;$/;"	m	struct:android::ResTable_entry
size	include/utils/ResourceTypes.h	/^    uint16_t size;$/;"	m	struct:android::Res_value
size	include/utils/ResourceTypes.h	/^    uint32_t size;$/;"	m	struct:android::ResChunk_header
size	include/utils/ResourceTypes.h	/^    uint32_t size;$/;"	m	struct:android::ResTable_config
stringAt	include/utils/ResourceTypes.h	/^    inline const char16_t* stringAt(const ResStringPool_ref& ref, size_t* outLen) const {$/;"	f	class:android::ResStringPool
stringBlock	include/utils/ResourceTypes.h	/^            ssize_t stringBlock;$/;"	m	struct:android::ResTable::Theme::theme_entry
stringBlock	include/utils/ResourceTypes.h	/^        ssize_t stringBlock;$/;"	m	struct:android::ResTable::bag_entry
stringCount	include/utils/ResourceTypes.h	/^    uint32_t stringCount;$/;"	m	struct:android::ResStringPool_header
stringsStart	include/utils/ResourceTypes.h	/^    uint32_t stringsStart;$/;"	m	struct:android::ResStringPool_header
styleCount	include/utils/ResourceTypes.h	/^    uint32_t styleCount;$/;"	m	struct:android::ResStringPool_header
styleIndex	include/utils/ResourceTypes.h	/^    uint16_t styleIndex;$/;"	m	struct:android::ResXMLTree_attrExt
stylesStart	include/utils/ResourceTypes.h	/^    uint32_t stylesStart;$/;"	m	struct:android::ResStringPool_header
swapHtoD	include/utils/ResourceTypes.h	/^    inline void swapHtoD() {$/;"	f	struct:android::ResTable_config
theme_entry	include/utils/ResourceTypes.h	/^        struct theme_entry {$/;"	s	class:android::ResTable::Theme
toString	include/utils/ResourceTypes.h	/^    String8 toString() const {$/;"	f	struct:android::ResTable_config
touchscreen	include/utils/ResourceTypes.h	/^            uint8_t touchscreen;$/;"	m	struct:android::ResTable_config::__anon269::__anon270
type	include/utils/ResourceTypes.h	/^        const char16_t* type;$/;"	m	struct:android::ResTable::resource_name
type	include/utils/ResourceTypes.h	/^    uint16_t type;$/;"	m	struct:android::ResChunk_header
typeLen	include/utils/ResourceTypes.h	/^        size_t typeLen;$/;"	m	struct:android::ResTable::resource_name
typeSpecFlags	include/utils/ResourceTypes.h	/^            uint32_t typeSpecFlags;$/;"	m	struct:android::ResTable::Theme::theme_entry
typeStrings	include/utils/ResourceTypes.h	/^    uint32_t typeStrings;$/;"	m	struct:android::ResTable_package
type_info	include/utils/ResourceTypes.h	/^        struct type_info {$/;"	s	class:android::ResTable::Theme
typedData	include/utils/ResourceTypes.h	/^    struct Res_value typedData;$/;"	m	struct:android::ResXMLTree_cdataExt	typeref:struct:android::ResXMLTree_cdataExt::Res_value
typedValue	include/utils/ResourceTypes.h	/^    struct Res_value typedValue;$/;"	m	struct:android::ResXMLTree_attribute	typeref:struct:android::ResXMLTree_attribute::Res_value
types	include/utils/ResourceTypes.h	/^            type_info types[];$/;"	m	struct:android::ResTable::Theme::package_info
uiMode	include/utils/ResourceTypes.h	/^            uint8_t uiMode;$/;"	m	struct:android::ResTable_config::__anon287::__anon288
uri	include/utils/ResourceTypes.h	/^    struct ResStringPool_ref uri;$/;"	m	struct:android::ResXMLTree_namespaceExt	typeref:struct:android::ResXMLTree_namespaceExt::ResStringPool_ref
value	include/utils/ResourceTypes.h	/^            Res_value value;$/;"	m	struct:android::ResTable::Theme::theme_entry
value	include/utils/ResourceTypes.h	/^    Res_value value;$/;"	m	struct:android::ResTable_map
version	include/utils/ResourceTypes.h	/^        uint32_t version;$/;"	m	union:android::ResTable_config::__anon283
wasDeserialized	include/utils/ResourceTypes.h	/^    int8_t wasDeserialized;$/;"	m	struct:android::Res_png_9patch
xDivs	include/utils/ResourceTypes.h	/^    int32_t* xDivs;$/;"	m	struct:android::Res_png_9patch
yDivs	include/utils/ResourceTypes.h	/^    int32_t* yDivs;$/;"	m	struct:android::Res_png_9patch
~Accessor	include/utils/ResourceTypes.h	/^        inline virtual ~Accessor() { }$/;"	f	class:android::ResTable::Accessor
ANDROID_SHARED_BUFFER_H	include/utils/SharedBuffer.h	18;"	d
SharedBuffer	include/utils/SharedBuffer.h	/^        inline SharedBuffer() { }$/;"	f	class:android::SharedBuffer
SharedBuffer	include/utils/SharedBuffer.h	/^class SharedBuffer$/;"	c	namespace:android
android	include/utils/SharedBuffer.h	/^namespace android {$/;"	n
bufferFromData	include/utils/SharedBuffer.h	/^SharedBuffer* SharedBuffer::bufferFromData(void* data)$/;"	f	class:android::SharedBuffer
bufferFromData	include/utils/SharedBuffer.h	/^const SharedBuffer* SharedBuffer::bufferFromData(const void* data)$/;"	f	class:android::SharedBuffer
data	include/utils/SharedBuffer.h	/^const void* SharedBuffer::data() const {$/;"	f	class:android::SharedBuffer
data	include/utils/SharedBuffer.h	/^void* SharedBuffer::data() {$/;"	f	class:android::SharedBuffer
eKeepStorage	include/utils/SharedBuffer.h	/^        eKeepStorage = 0x00000001$/;"	e	enum:android::SharedBuffer::__anon255
mRefs	include/utils/SharedBuffer.h	/^        mutable int32_t        mRefs;$/;"	m	class:android::SharedBuffer
mReserved	include/utils/SharedBuffer.h	/^                uint32_t       mReserved[2];$/;"	m	class:android::SharedBuffer
mSize	include/utils/SharedBuffer.h	/^                size_t         mSize;$/;"	m	class:android::SharedBuffer
onlyOwner	include/utils/SharedBuffer.h	/^bool SharedBuffer::onlyOwner() const {$/;"	f	class:android::SharedBuffer
sharedBuffer	include/utils/SharedBuffer.h	/^const SharedBuffer* SharedBuffer::sharedBuffer(const void* data) {$/;"	f	class:android::SharedBuffer
size	include/utils/SharedBuffer.h	/^size_t SharedBuffer::size() const {$/;"	f	class:android::SharedBuffer
sizeFromData	include/utils/SharedBuffer.h	/^size_t SharedBuffer::sizeFromData(const void* data)$/;"	f	class:android::SharedBuffer
~SharedBuffer	include/utils/SharedBuffer.h	/^        inline ~SharedBuffer() { }$/;"	f	class:android::SharedBuffer
ANDROID_SINGLETON_STATIC_INSTANCE	include/utils/Singleton.h	61;"	d
ANDROID_UTILS_SINGLETON_H	include/utils/Singleton.h	18;"	d
Singleton	include/utils/Singleton.h	/^    Singleton() { };$/;"	f	class:android::Singleton
Singleton	include/utils/Singleton.h	/^class Singleton$/;"	c	namespace:android
android	include/utils/Singleton.h	/^namespace android {$/;"	n
getInstance	include/utils/Singleton.h	/^    static TYPE& getInstance() {$/;"	f	class:android::Singleton
sInstance	include/utils/Singleton.h	/^    static TYPE* sInstance;$/;"	m	class:android::Singleton
sLock	include/utils/Singleton.h	/^    static Mutex sLock;$/;"	m	class:android::Singleton
~Singleton	include/utils/Singleton.h	/^    ~Singleton() { };$/;"	f	class:android::Singleton
ANDROID_SORTED_VECTOR_H	include/utils/SortedVector.h	18;"	d
SortedVector	include/utils/SortedVector.h	/^SortedVector<TYPE>::SortedVector()$/;"	f	class:android::SortedVector
SortedVector	include/utils/SortedVector.h	/^SortedVector<TYPE>::SortedVector(const SortedVector<TYPE>& rhs)$/;"	f	class:android::SortedVector
SortedVector	include/utils/SortedVector.h	/^class SortedVector : private SortedVectorImpl$/;"	c	namespace:android
add	include/utils/SortedVector.h	/^ssize_t SortedVector<TYPE>::add(const TYPE& item) {$/;"	f	class:android::SortedVector
android	include/utils/SortedVector.h	/^namespace android {$/;"	n
array	include/utils/SortedVector.h	/^const TYPE* SortedVector<TYPE>::array() const {$/;"	f	class:android::SortedVector
capacity	include/utils/SortedVector.h	/^    inline  size_t          capacity() const            { return VectorImpl::capacity(); }$/;"	f	class:android::SortedVector
clear	include/utils/SortedVector.h	/^    inline  void            clear()             { VectorImpl::clear(); }$/;"	f	class:android::SortedVector
do_compare	include/utils/SortedVector.h	/^int SortedVector<TYPE>::do_compare(const void* lhs, const void* rhs) const {$/;"	f	class:android::SortedVector
do_construct	include/utils/SortedVector.h	/^void SortedVector<TYPE>::do_construct(void* storage, size_t num) const {$/;"	f	class:android::SortedVector
do_copy	include/utils/SortedVector.h	/^void SortedVector<TYPE>::do_copy(void* dest, const void* from, size_t num) const {$/;"	f	class:android::SortedVector
do_destroy	include/utils/SortedVector.h	/^void SortedVector<TYPE>::do_destroy(void* storage, size_t num) const {$/;"	f	class:android::SortedVector
do_move_backward	include/utils/SortedVector.h	/^void SortedVector<TYPE>::do_move_backward(void* dest, const void* from, size_t num) const {$/;"	f	class:android::SortedVector
do_move_forward	include/utils/SortedVector.h	/^void SortedVector<TYPE>::do_move_forward(void* dest, const void* from, size_t num) const {$/;"	f	class:android::SortedVector
do_splat	include/utils/SortedVector.h	/^void SortedVector<TYPE>::do_splat(void* dest, const void* item, size_t num) const {$/;"	f	class:android::SortedVector
editArray	include/utils/SortedVector.h	/^TYPE* SortedVector<TYPE>::editArray() {$/;"	f	class:android::SortedVector
editItemAt	include/utils/SortedVector.h	/^            TYPE&           editItemAt(size_t index) {$/;"	f	class:android::SortedVector
indexOf	include/utils/SortedVector.h	/^ssize_t SortedVector<TYPE>::indexOf(const TYPE& item) const {$/;"	f	class:android::SortedVector
isEmpty	include/utils/SortedVector.h	/^    inline  bool            isEmpty() const             { return VectorImpl::isEmpty(); }$/;"	f	class:android::SortedVector
itemAt	include/utils/SortedVector.h	/^const TYPE& SortedVector<TYPE>::itemAt(size_t index) const {$/;"	f	class:android::SortedVector
merge	include/utils/SortedVector.h	/^ssize_t SortedVector<TYPE>::merge(const SortedVector<TYPE>& vector) {$/;"	f	class:android::SortedVector
merge	include/utils/SortedVector.h	/^ssize_t SortedVector<TYPE>::merge(const Vector<TYPE>& vector) {$/;"	f	class:android::SortedVector
mirrorItemAt	include/utils/SortedVector.h	/^const TYPE& SortedVector<TYPE>::mirrorItemAt(ssize_t index) const {$/;"	f	class:android::SortedVector
operator =	include/utils/SortedVector.h	/^SortedVector<TYPE>& SortedVector<TYPE>::operator = (const SortedVector<TYPE>& rhs) {$/;"	f	class:android::SortedVector
operator =	include/utils/SortedVector.h	/^const SortedVector<TYPE>& SortedVector<TYPE>::operator = (const SortedVector<TYPE>& rhs) const {$/;"	f	class:android::SortedVector
operator []	include/utils/SortedVector.h	/^const TYPE& SortedVector<TYPE>::operator[](size_t index) const {$/;"	f	class:android::SortedVector
orderOf	include/utils/SortedVector.h	/^size_t SortedVector<TYPE>::orderOf(const TYPE& item) const {$/;"	f	class:android::SortedVector
remove	include/utils/SortedVector.h	/^ssize_t SortedVector<TYPE>::remove(const TYPE& item) {$/;"	f	class:android::SortedVector
removeAt	include/utils/SortedVector.h	/^    inline  ssize_t         removeAt(size_t index)  { return removeItemsAt(index); }$/;"	f	class:android::SortedVector
removeItemsAt	include/utils/SortedVector.h	/^ssize_t SortedVector<TYPE>::removeItemsAt(size_t index, size_t count) {$/;"	f	class:android::SortedVector
setCapacity	include/utils/SortedVector.h	/^    inline  ssize_t         setCapacity(size_t size)    { return VectorImpl::setCapacity(size); }$/;"	f	class:android::SortedVector
size	include/utils/SortedVector.h	/^    inline  size_t          size() const                { return VectorImpl::size(); }$/;"	f	class:android::SortedVector
top	include/utils/SortedVector.h	/^const TYPE& SortedVector<TYPE>::top() const {$/;"	f	class:android::SortedVector
value_type	include/utils/SortedVector.h	/^            typedef TYPE    value_type;$/;"	t	class:android::SortedVector
~SortedVector	include/utils/SortedVector.h	/^SortedVector<TYPE>::~SortedVector() {$/;"	f	class:android::SortedVector
ANDROID_STOPWATCH_H	include/utils/StopWatch.h	18;"	d
StopWatch	include/utils/StopWatch.h	/^class StopWatch$/;"	c	namespace:android
android	include/utils/StopWatch.h	/^namespace android {$/;"	n
lap_t	include/utils/StopWatch.h	/^    struct lap_t {$/;"	s	class:android::StopWatch
mClock	include/utils/StopWatch.h	/^    int             mClock;$/;"	m	class:android::StopWatch
mFlags	include/utils/StopWatch.h	/^    uint32_t        mFlags;$/;"	m	class:android::StopWatch
mLaps	include/utils/StopWatch.h	/^    lap_t           mLaps[8];$/;"	m	class:android::StopWatch
mName	include/utils/StopWatch.h	/^    const char*     mName;$/;"	m	class:android::StopWatch
mNumLaps	include/utils/StopWatch.h	/^    int             mNumLaps;$/;"	m	class:android::StopWatch
mStartTime	include/utils/StopWatch.h	/^    nsecs_t         mStartTime;$/;"	m	class:android::StopWatch
soFar	include/utils/StopWatch.h	/^        nsecs_t     soFar;$/;"	m	struct:android::StopWatch::lap_t
thisLap	include/utils/StopWatch.h	/^        nsecs_t     thisLap;$/;"	m	struct:android::StopWatch::lap_t
INPUT_CHUNK_SIZE	include/utils/StreamingZipInflater.h	/^    static const size_t INPUT_CHUNK_SIZE = 64 * 1024;$/;"	m	class:android::StreamingZipInflater
OUTPUT_CHUNK_SIZE	include/utils/StreamingZipInflater.h	/^    static const size_t OUTPUT_CHUNK_SIZE = 64 * 1024;$/;"	m	class:android::StreamingZipInflater
StreamingZipInflater	include/utils/StreamingZipInflater.h	/^class StreamingZipInflater {$/;"	c	namespace:android
__LIBS_STREAMINGZIPINFLATER_H	include/utils/StreamingZipInflater.h	18;"	d
android	include/utils/StreamingZipInflater.h	/^namespace android {$/;"	n
mDataMap	include/utils/StreamingZipInflater.h	/^    class FileMap* mDataMap;$/;"	m	class:android::StreamingZipInflater	typeref:class:android::StreamingZipInflater::FileMap
mFd	include/utils/StreamingZipInflater.h	/^    int mFd;$/;"	m	class:android::StreamingZipInflater
mInBuf	include/utils/StreamingZipInflater.h	/^    uint8_t* mInBuf;$/;"	m	class:android::StreamingZipInflater
mInBufSize	include/utils/StreamingZipInflater.h	/^    size_t mInBufSize;          \/\/ allocated size of mInBuf;$/;"	m	class:android::StreamingZipInflater
mInFileStart	include/utils/StreamingZipInflater.h	/^    off_t mInFileStart;         \/\/ where the compressed data lives in the file$/;"	m	class:android::StreamingZipInflater
mInNextChunkOffset	include/utils/StreamingZipInflater.h	/^    size_t mInNextChunkOffset;  \/\/ offset from start of blob at which the next input chunk lies$/;"	m	class:android::StreamingZipInflater
mInTotalSize	include/utils/StreamingZipInflater.h	/^    size_t mInTotalSize;        \/\/ total size of compressed data for this blob$/;"	m	class:android::StreamingZipInflater
mInflateState	include/utils/StreamingZipInflater.h	/^    z_stream mInflateState;$/;"	m	class:android::StreamingZipInflater
mOutBuf	include/utils/StreamingZipInflater.h	/^    uint8_t* mOutBuf;           \/\/ output buf for decompressed bytes$/;"	m	class:android::StreamingZipInflater
mOutBufSize	include/utils/StreamingZipInflater.h	/^    size_t mOutBufSize;         \/\/ allocated size of mOutBuf$/;"	m	class:android::StreamingZipInflater
mOutCurPosition	include/utils/StreamingZipInflater.h	/^    off_t mOutCurPosition;      \/\/ current position in total offset$/;"	m	class:android::StreamingZipInflater
mOutDeliverable	include/utils/StreamingZipInflater.h	/^    size_t mOutDeliverable;     \/\/ next undelivered byte of decoded output in mOutBuf$/;"	m	class:android::StreamingZipInflater
mOutLastDecoded	include/utils/StreamingZipInflater.h	/^    size_t mOutLastDecoded;     \/\/ last decoded byte + 1 in mOutbuf$/;"	m	class:android::StreamingZipInflater
mOutTotalSize	include/utils/StreamingZipInflater.h	/^    size_t mOutTotalSize;       \/\/ total uncompressed size of the blob$/;"	m	class:android::StreamingZipInflater
mStreamNeedsInit	include/utils/StreamingZipInflater.h	/^    bool mStreamNeedsInit;$/;"	m	class:android::StreamingZipInflater
ANDROID_STRING16_H	include/utils/String16.h	18;"	d
String16	include/utils/String16.h	/^class String16$/;"	c	namespace:android
android	include/utils/String16.h	/^namespace android {$/;"	n
char16_t	include/utils/String16.h	/^typedef uint16_t char16_t;$/;"	t
compare	include/utils/String16.h	/^inline int String16::compare(const String16& other) const$/;"	f	class:android::String16
compare_type	include/utils/String16.h	/^inline int compare_type(const String16& lhs, const String16& rhs)$/;"	f	namespace:android
mString	include/utils/String16.h	/^            const char16_t*     mString;$/;"	m	class:android::String16
operator !=	include/utils/String16.h	/^inline bool String16::operator!=(const String16& other) const$/;"	f	class:android::String16
operator !=	include/utils/String16.h	/^inline bool String16::operator!=(const char16_t* other) const$/;"	f	class:android::String16
operator +	include/utils/String16.h	/^inline String16 String16::operator+(const String16& other) const$/;"	f	class:android::String16
operator +=	include/utils/String16.h	/^inline String16& String16::operator+=(const String16& other)$/;"	f	class:android::String16
operator <	include/utils/String16.h	/^inline bool String16::operator<(const String16& other) const$/;"	f	class:android::String16
operator <	include/utils/String16.h	/^inline bool String16::operator<(const char16_t* other) const$/;"	f	class:android::String16
operator <=	include/utils/String16.h	/^inline bool String16::operator<=(const String16& other) const$/;"	f	class:android::String16
operator <=	include/utils/String16.h	/^inline bool String16::operator<=(const char16_t* other) const$/;"	f	class:android::String16
operator =	include/utils/String16.h	/^inline String16& String16::operator=(const String16& other)$/;"	f	class:android::String16
operator ==	include/utils/String16.h	/^inline bool String16::operator==(const String16& other) const$/;"	f	class:android::String16
operator ==	include/utils/String16.h	/^inline bool String16::operator==(const char16_t* other) const$/;"	f	class:android::String16
operator >	include/utils/String16.h	/^inline bool String16::operator>(const String16& other) const$/;"	f	class:android::String16
operator >	include/utils/String16.h	/^inline bool String16::operator>(const char16_t* other) const$/;"	f	class:android::String16
operator >=	include/utils/String16.h	/^inline bool String16::operator>=(const String16& other) const$/;"	f	class:android::String16
operator >=	include/utils/String16.h	/^inline bool String16::operator>=(const char16_t* other) const$/;"	f	class:android::String16
operator const char16_t*	include/utils/String16.h	/^inline String16::operator const char16_t*() const$/;"	f	class:android::String16
sharedBuffer	include/utils/String16.h	/^inline const SharedBuffer* String16::sharedBuffer() const$/;"	f	class:android::String16
size	include/utils/String16.h	/^inline size_t String16::size() const$/;"	f	class:android::String16
strictly_order_type	include/utils/String16.h	/^inline int strictly_order_type(const String16& lhs, const String16& rhs)$/;"	f	namespace:android
string	include/utils/String16.h	/^inline const char16_t* String16::string() const$/;"	f	class:android::String16
ANDROID_STRING8_H	include/utils/String8.h	18;"	d
String8	include/utils/String8.h	/^class String8$/;"	c	namespace:android
android	include/utils/String8.h	/^namespace android {$/;"	n
appendPath	include/utils/String8.h	/^    String8& appendPath(const String8& leaf)  { return appendPath(leaf.string()); }$/;"	f	class:android::String8
appendPathCopy	include/utils/String8.h	/^    String8 appendPathCopy(const String8& leaf) const { return appendPathCopy(leaf.string()); }$/;"	f	class:android::String8
appendPathCopy	include/utils/String8.h	/^    String8 appendPathCopy(const char* leaf) const$/;"	f	class:android::String8
bytes	include/utils/String8.h	/^inline size_t String8::bytes() const$/;"	f	class:android::String8
char32_t	include/utils/String8.h	/^typedef uint32_t char32_t;$/;"	t
compare	include/utils/String8.h	/^inline int String8::compare(const String8& other) const$/;"	f	class:android::String8
compare_type	include/utils/String8.h	/^inline int compare_type(const String8& lhs, const String8& rhs)$/;"	f	namespace:android
length	include/utils/String8.h	/^inline size_t String8::length() const$/;"	f	class:android::String8
mString	include/utils/String8.h	/^            const char* mString;$/;"	m	class:android::String8
operator !=	include/utils/String8.h	/^inline bool String8::operator!=(const String8& other) const$/;"	f	class:android::String8
operator !=	include/utils/String8.h	/^inline bool String8::operator!=(const char* other) const$/;"	f	class:android::String8
operator +	include/utils/String8.h	/^inline String8 String8::operator+(const String8& other) const$/;"	f	class:android::String8
operator +	include/utils/String8.h	/^inline String8 String8::operator+(const char* other) const$/;"	f	class:android::String8
operator +=	include/utils/String8.h	/^inline String8& String8::operator+=(const String8& other)$/;"	f	class:android::String8
operator +=	include/utils/String8.h	/^inline String8& String8::operator+=(const char* other)$/;"	f	class:android::String8
operator <	include/utils/String8.h	/^inline bool String8::operator<(const String8& other) const$/;"	f	class:android::String8
operator <	include/utils/String8.h	/^inline bool String8::operator<(const char* other) const$/;"	f	class:android::String8
operator <=	include/utils/String8.h	/^inline bool String8::operator<=(const String8& other) const$/;"	f	class:android::String8
operator <=	include/utils/String8.h	/^inline bool String8::operator<=(const char* other) const$/;"	f	class:android::String8
operator =	include/utils/String8.h	/^inline String8& String8::operator=(const String8& other)$/;"	f	class:android::String8
operator =	include/utils/String8.h	/^inline String8& String8::operator=(const char* other)$/;"	f	class:android::String8
operator ==	include/utils/String8.h	/^inline bool String8::operator==(const String8& other) const$/;"	f	class:android::String8
operator ==	include/utils/String8.h	/^inline bool String8::operator==(const char* other) const$/;"	f	class:android::String8
operator >	include/utils/String8.h	/^inline bool String8::operator>(const String8& other) const$/;"	f	class:android::String8
operator >	include/utils/String8.h	/^inline bool String8::operator>(const char* other) const$/;"	f	class:android::String8
operator >=	include/utils/String8.h	/^inline bool String8::operator>=(const String8& other) const$/;"	f	class:android::String8
operator >=	include/utils/String8.h	/^inline bool String8::operator>=(const char* other) const$/;"	f	class:android::String8
operator const char*	include/utils/String8.h	/^inline String8::operator const char*() const$/;"	f	class:android::String8
sharedBuffer	include/utils/String8.h	/^inline const SharedBuffer* String8::sharedBuffer() const$/;"	f	class:android::String8
size	include/utils/String8.h	/^inline size_t String8::size() const$/;"	f	class:android::String8
strictly_order_type	include/utils/String8.h	/^inline int strictly_order_type(const String8& lhs, const String8& rhs)$/;"	f	namespace:android
string	include/utils/String8.h	/^inline const char* String8::string() const$/;"	f	class:android::String8
StringArray	include/utils/StringArray.h	/^class StringArray {$/;"	c	namespace:android
_LIBS_UTILS_STRING_ARRAY_H	include/utils/StringArray.h	21;"	d
android	include/utils/StringArray.h	/^namespace android {$/;"	n
getEntry	include/utils/StringArray.h	/^    const char* getEntry(int idx) const {$/;"	f	class:android::StringArray
mArray	include/utils/StringArray.h	/^    char**  mArray;$/;"	m	class:android::StringArray
mCurrent	include/utils/StringArray.h	/^    int     mCurrent;$/;"	m	class:android::StringArray
mMax	include/utils/StringArray.h	/^    int     mMax;$/;"	m	class:android::StringArray
size	include/utils/StringArray.h	/^    inline int size(void) const { return mCurrent; }$/;"	f	class:android::StringArray
ANDROID_UTILS_SYSTEMCLOCK_H	include/utils/SystemClock.h	18;"	d
android	include/utils/SystemClock.h	/^namespace android {$/;"	n
ANDROID_TEXTOUTPUT_H	include/utils/TextOutput.h	18;"	d
Bundle	include/utils/TextOutput.h	/^        inline Bundle(TextOutput& to) : mTO(to) { to.pushBundle(); }$/;"	f	class:android::TextOutput::Bundle
Bundle	include/utils/TextOutput.h	/^    class Bundle {$/;"	c	class:android::TextOutput
HexDump	include/utils/TextOutput.h	/^class HexDump$/;"	c	namespace:android
TextOutput	include/utils/TextOutput.h	/^class TextOutput$/;"	c	namespace:android
TextOutputManipFunc	include/utils/TextOutput.h	/^typedef TextOutput& (*TextOutputManipFunc)(TextOutput&);$/;"	t	namespace:android
TypeCode	include/utils/TextOutput.h	/^class TypeCode $/;"	c	namespace:android
TypeCode	include/utils/TextOutput.h	/^inline TypeCode::TypeCode(uint32_t code) : mCode(code) { }$/;"	f	class:android::TypeCode
alignment	include/utils/TextOutput.h	/^inline size_t HexDump::alignment() const { return mAlignment; }$/;"	f	class:android::HexDump
android	include/utils/TextOutput.h	/^namespace android {$/;"	n
buffer	include/utils/TextOutput.h	/^inline const void* HexDump::buffer() const { return mBuffer; }$/;"	f	class:android::HexDump
bytesPerLine	include/utils/TextOutput.h	/^inline size_t HexDump::bytesPerLine() const { return mBytesPerLine; }$/;"	f	class:android::HexDump
carrayStyle	include/utils/TextOutput.h	/^inline bool HexDump::carrayStyle() const { return mCArrayStyle; }$/;"	f	class:android::HexDump
dedent	include/utils/TextOutput.h	/^inline TextOutput& dedent(TextOutput& to)$/;"	f	namespace:android
endl	include/utils/TextOutput.h	/^inline TextOutput& endl(TextOutput& to)$/;"	f	namespace:android
indent	include/utils/TextOutput.h	/^inline TextOutput& indent(TextOutput& to)$/;"	f	namespace:android
mAlignment	include/utils/TextOutput.h	/^    size_t mAlignment;$/;"	m	class:android::HexDump
mBuffer	include/utils/TextOutput.h	/^    const void* mBuffer;$/;"	m	class:android::HexDump
mBytesPerLine	include/utils/TextOutput.h	/^    size_t mBytesPerLine;$/;"	m	class:android::HexDump
mCArrayStyle	include/utils/TextOutput.h	/^    bool mCArrayStyle;$/;"	m	class:android::HexDump
mCode	include/utils/TextOutput.h	/^    uint32_t mCode;$/;"	m	class:android::TypeCode
mSingleLineCutoff	include/utils/TextOutput.h	/^    int32_t mSingleLineCutoff;$/;"	m	class:android::HexDump
mSize	include/utils/TextOutput.h	/^    size_t mSize;$/;"	m	class:android::HexDump
mTO	include/utils/TextOutput.h	/^        TextOutput&     mTO;$/;"	m	class:android::TextOutput::Bundle
operator <<	include/utils/TextOutput.h	/^inline TextOutput& operator<<(TextOutput& to, TextOutputManipFunc func)$/;"	f	namespace:android
operator <<	include/utils/TextOutput.h	/^inline TextOutput& operator<<(TextOutput& to, char c)$/;"	f	namespace:android
operator <<	include/utils/TextOutput.h	/^inline TextOutput& operator<<(TextOutput& to, const char* str)$/;"	f	namespace:android
setAlignment	include/utils/TextOutput.h	/^inline HexDump& HexDump::setAlignment(size_t alignment) {$/;"	f	class:android::HexDump
setBytesPerLine	include/utils/TextOutput.h	/^inline HexDump& HexDump::setBytesPerLine(size_t bytesPerLine) {$/;"	f	class:android::HexDump
setCArrayStyle	include/utils/TextOutput.h	/^inline HexDump& HexDump::setCArrayStyle(bool enabled) {$/;"	f	class:android::HexDump
setSingleLineCutoff	include/utils/TextOutput.h	/^inline HexDump& HexDump::setSingleLineCutoff(int32_t bytes) {$/;"	f	class:android::HexDump
singleLineCutoff	include/utils/TextOutput.h	/^inline int32_t HexDump::singleLineCutoff() const { return mSingleLineCutoff; }$/;"	f	class:android::HexDump
size	include/utils/TextOutput.h	/^inline size_t HexDump::size() const { return mSize; }$/;"	f	class:android::HexDump
typeCode	include/utils/TextOutput.h	/^inline uint32_t TypeCode::typeCode() const { return mCode; }$/;"	f	class:android::TypeCode
~Bundle	include/utils/TextOutput.h	/^        inline ~Bundle() { mTO.popBundle(); }$/;"	f	class:android::TextOutput::Bundle
~HexDump	include/utils/TextOutput.h	/^inline HexDump::~HexDump() { }$/;"	f	class:android::HexDump
~TypeCode	include/utils/TextOutput.h	/^inline TypeCode::~TypeCode() { }$/;"	f	class:android::TypeCode
DurationTimer	include/utils/Timers.h	/^    DurationTimer() {}$/;"	f	class:android::DurationTimer
DurationTimer	include/utils/Timers.h	/^class DurationTimer {$/;"	c	namespace:android
SYSTEM_TIME_MONOTONIC	include/utils/Timers.h	/^    SYSTEM_TIME_MONOTONIC = 1, \/\/ monotonic time since unspecified starting point$/;"	e	enum:__anon299
SYSTEM_TIME_PROCESS	include/utils/Timers.h	/^    SYSTEM_TIME_PROCESS = 2,   \/\/ high-resolution per-process clock$/;"	e	enum:__anon299
SYSTEM_TIME_REALTIME	include/utils/Timers.h	/^    SYSTEM_TIME_REALTIME = 0,  \/\/ system-wide realtime clock$/;"	e	enum:__anon299
SYSTEM_TIME_THREAD	include/utils/Timers.h	/^    SYSTEM_TIME_THREAD = 3     \/\/ high-resolution per-thread clock$/;"	e	enum:__anon299
_LIBS_UTILS_TIMERS_H	include/utils/Timers.h	21;"	d
android	include/utils/Timers.h	/^namespace android {$/;"	n
mStartWhen	include/utils/Timers.h	/^    struct timeval  mStartWhen;$/;"	m	class:android::DurationTimer	typeref:struct:android::DurationTimer::timeval
mStopWhen	include/utils/Timers.h	/^    struct timeval  mStopWhen;$/;"	m	class:android::DurationTimer	typeref:struct:android::DurationTimer::timeval
microseconds	include/utils/Timers.h	/^static inline nsecs_t microseconds(nsecs_t v) { return us2ns(v); }$/;"	f
microseconds_to_nanoseconds	include/utils/Timers.h	/^static inline nsecs_t microseconds_to_nanoseconds(nsecs_t secs)$/;"	f
milliseconds	include/utils/Timers.h	/^static inline nsecs_t milliseconds(nsecs_t v) { return ms2ns(v); }$/;"	f
milliseconds_to_nanoseconds	include/utils/Timers.h	/^static inline nsecs_t milliseconds_to_nanoseconds(nsecs_t secs)$/;"	f
ms2ns	include/utils/Timers.h	/^static inline nsecs_t ms2ns(nsecs_t v) {return milliseconds_to_nanoseconds(v);}$/;"	f
nanoseconds_to_microseconds	include/utils/Timers.h	/^static inline nsecs_t nanoseconds_to_microseconds(nsecs_t secs)$/;"	f
nanoseconds_to_milliseconds	include/utils/Timers.h	/^static inline nsecs_t nanoseconds_to_milliseconds(nsecs_t secs)$/;"	f
nanoseconds_to_seconds	include/utils/Timers.h	/^static inline nsecs_t nanoseconds_to_seconds(nsecs_t secs)$/;"	f
ns2ms	include/utils/Timers.h	/^static inline nsecs_t ns2ms(nsecs_t v) {return nanoseconds_to_milliseconds(v);}$/;"	f
ns2s	include/utils/Timers.h	/^static inline nsecs_t ns2s(nsecs_t v)  {return nanoseconds_to_seconds(v);}$/;"	f
ns2us	include/utils/Timers.h	/^static inline nsecs_t ns2us(nsecs_t v) {return nanoseconds_to_microseconds(v);}$/;"	f
nsecs_t	include/utils/Timers.h	/^typedef int64_t nsecs_t;       \/\/ nano-seconds$/;"	t
s2ns	include/utils/Timers.h	/^static inline nsecs_t s2ns(nsecs_t v)  {return seconds_to_nanoseconds(v);}$/;"	f
seconds	include/utils/Timers.h	/^static inline nsecs_t seconds(nsecs_t v)      { return s2ns(v); }$/;"	f
seconds_to_nanoseconds	include/utils/Timers.h	/^static inline nsecs_t seconds_to_nanoseconds(nsecs_t secs)$/;"	f
us2ns	include/utils/Timers.h	/^static inline nsecs_t us2ns(nsecs_t v) {return microseconds_to_nanoseconds(v);}$/;"	f
~DurationTimer	include/utils/Timers.h	/^    ~DurationTimer() {}$/;"	f	class:android::DurationTimer
ANDROID_BASIC_TYPES_TRAITS	include/utils/TypeHelpers.h	83;"	d
ANDROID_TYPE_HELPERS_H	include/utils/TypeHelpers.h	18;"	d
aggregate_traits	include/utils/TypeHelpers.h	/^struct aggregate_traits {$/;"	s	namespace:android
android	include/utils/TypeHelpers.h	/^namespace android {$/;"	n
compare_type	include/utils/TypeHelpers.h	/^int compare_type(const TYPE& lhs, const TYPE& rhs) {$/;"	f	namespace:android
construct_type	include/utils/TypeHelpers.h	/^void construct_type(TYPE* p, size_t n) {$/;"	f	namespace:android
copy_type	include/utils/TypeHelpers.h	/^void copy_type(TYPE* d, const TYPE* s, size_t n) {$/;"	f	namespace:android
destroy_type	include/utils/TypeHelpers.h	/^void destroy_type(TYPE* p, size_t n) {$/;"	f	namespace:android
has_trivial_copy	include/utils/TypeHelpers.h	/^        has_trivial_copy    = $/;"	e	enum:android::aggregate_traits::__anon248
has_trivial_copy	include/utils/TypeHelpers.h	/^        has_trivial_copy    = is_pointer || trait_trivial_copy<TYPE>::value,$/;"	e	enum:android::traits::__anon247
has_trivial_ctor	include/utils/TypeHelpers.h	/^        has_trivial_ctor    = $/;"	e	enum:android::aggregate_traits::__anon248
has_trivial_ctor	include/utils/TypeHelpers.h	/^        has_trivial_ctor    = is_pointer || trait_trivial_ctor<TYPE>::value,$/;"	e	enum:android::traits::__anon247
has_trivial_dtor	include/utils/TypeHelpers.h	/^        has_trivial_dtor    = $/;"	e	enum:android::aggregate_traits::__anon248
has_trivial_dtor	include/utils/TypeHelpers.h	/^        has_trivial_dtor    = is_pointer || trait_trivial_dtor<TYPE>::value,$/;"	e	enum:android::traits::__anon247
has_trivial_move	include/utils/TypeHelpers.h	/^        has_trivial_move    = $/;"	e	enum:android::aggregate_traits::__anon248
has_trivial_move	include/utils/TypeHelpers.h	/^        has_trivial_move    = is_pointer || trait_trivial_move<TYPE>::value$/;"	e	enum:android::traits::__anon247
is_pointer	include/utils/TypeHelpers.h	/^        is_pointer          = false,$/;"	e	enum:android::aggregate_traits::__anon248
is_pointer	include/utils/TypeHelpers.h	/^        is_pointer          = trait_pointer<TYPE>::value,$/;"	e	enum:android::traits::__anon247
key	include/utils/TypeHelpers.h	/^    KEY     key;$/;"	m	struct:android::key_value_pair_t
key_value_pair_t	include/utils/TypeHelpers.h	/^    key_value_pair_t() { }$/;"	f	struct:android::key_value_pair_t
key_value_pair_t	include/utils/TypeHelpers.h	/^    key_value_pair_t(const KEY& k) : key(k) { }$/;"	f	struct:android::key_value_pair_t
key_value_pair_t	include/utils/TypeHelpers.h	/^    key_value_pair_t(const KEY& k, const VALUE& v) : key(k), value(v)  { }$/;"	f	struct:android::key_value_pair_t
key_value_pair_t	include/utils/TypeHelpers.h	/^    key_value_pair_t(const key_value_pair_t& o) : key(o.key), value(o.value) { }$/;"	f	struct:android::key_value_pair_t
key_value_pair_t	include/utils/TypeHelpers.h	/^struct key_value_pair_t {$/;"	s	namespace:android
move_backward_type	include/utils/TypeHelpers.h	/^void move_backward_type(TYPE* d, const TYPE* s, size_t n = 1) {$/;"	f	namespace:android
move_forward_type	include/utils/TypeHelpers.h	/^void move_forward_type(TYPE* d, const TYPE* s, size_t n = 1) {$/;"	f	namespace:android
operator <	include/utils/TypeHelpers.h	/^    inline bool operator < (const key_value_pair_t& o) const {$/;"	f	struct:android::key_value_pair_t
splat_type	include/utils/TypeHelpers.h	/^void splat_type(TYPE* where, const TYPE* what, size_t n) {$/;"	f	namespace:android
strictly_order_type	include/utils/TypeHelpers.h	/^int strictly_order_type(const TYPE& lhs, const TYPE& rhs) {$/;"	f	namespace:android
trait_pointer	include/utils/TypeHelpers.h	/^template <typename T> struct trait_pointer      { enum { value = false }; };    $/;"	s	namespace:android
trait_pointer	include/utils/TypeHelpers.h	/^template <typename T> struct trait_pointer<T*>  { enum { value = true }; };$/;"	s	namespace:android
trait_trivial_copy	include/utils/TypeHelpers.h	/^struct trait_trivial_copy< key_value_pair_t<K, V> >$/;"	s	namespace:android
trait_trivial_copy	include/utils/TypeHelpers.h	/^template <typename T> struct trait_trivial_copy { enum { value = false }; };$/;"	s	namespace:android
trait_trivial_ctor	include/utils/TypeHelpers.h	/^struct trait_trivial_ctor< key_value_pair_t<K, V> >$/;"	s	namespace:android
trait_trivial_ctor	include/utils/TypeHelpers.h	/^template <typename T> struct trait_trivial_ctor { enum { value = false }; };$/;"	s	namespace:android
trait_trivial_dtor	include/utils/TypeHelpers.h	/^struct trait_trivial_dtor< key_value_pair_t<K, V> >$/;"	s	namespace:android
trait_trivial_dtor	include/utils/TypeHelpers.h	/^template <typename T> struct trait_trivial_dtor { enum { value = false }; };$/;"	s	namespace:android
trait_trivial_move	include/utils/TypeHelpers.h	/^struct trait_trivial_move< key_value_pair_t<K, V> >$/;"	s	namespace:android
trait_trivial_move	include/utils/TypeHelpers.h	/^template <typename T> struct trait_trivial_move { enum { value = false }; };$/;"	s	namespace:android
trait_trivial_move	include/utils/TypeHelpers.h	/^template <typename T> struct trait_trivial_move< sp<T> >{$/;"	s	namespace:android
trait_trivial_move	include/utils/TypeHelpers.h	/^template <typename T> struct trait_trivial_move< wp<T> >{ $/;"	s	namespace:android
traits	include/utils/TypeHelpers.h	/^struct traits {$/;"	s	namespace:android
value	include/utils/TypeHelpers.h	/^    VALUE   value;$/;"	m	struct:android::key_value_pair_t
value	include/utils/TypeHelpers.h	/^    enum { value = true }; $/;"	e	enum:android::trait_trivial_move::__anon245
value	include/utils/TypeHelpers.h	/^    enum { value = true }; $/;"	e	enum:android::trait_trivial_move::__anon246
value	include/utils/TypeHelpers.h	/^template <typename T> struct trait_pointer      { enum { value = false }; };    $/;"	e	enum:android::trait_pointer::__anon243
value	include/utils/TypeHelpers.h	/^template <typename T> struct trait_pointer<T*>  { enum { value = true }; };$/;"	e	enum:android::trait_pointer::__anon244
value	include/utils/TypeHelpers.h	/^template <typename T> struct trait_trivial_copy { enum { value = false }; };$/;"	e	enum:android::trait_trivial_copy::__anon241
value	include/utils/TypeHelpers.h	/^template <typename T> struct trait_trivial_ctor { enum { value = false }; };$/;"	e	enum:android::trait_trivial_ctor::__anon239
value	include/utils/TypeHelpers.h	/^template <typename T> struct trait_trivial_dtor { enum { value = false }; };$/;"	e	enum:android::trait_trivial_dtor::__anon240
value	include/utils/TypeHelpers.h	/^template <typename T> struct trait_trivial_move { enum { value = false }; };$/;"	e	enum:android::trait_trivial_move::__anon242
value	include/utils/TypeHelpers.h	/^{ enum { value = aggregate_traits<K,V>::has_trivial_copy }; };$/;"	e	enum:android::trait_trivial_copy::__anon251
value	include/utils/TypeHelpers.h	/^{ enum { value = aggregate_traits<K,V>::has_trivial_ctor }; };$/;"	e	enum:android::trait_trivial_ctor::__anon249
value	include/utils/TypeHelpers.h	/^{ enum { value = aggregate_traits<K,V>::has_trivial_dtor }; };$/;"	e	enum:android::trait_trivial_dtor::__anon250
value	include/utils/TypeHelpers.h	/^{ enum { value = aggregate_traits<K,V>::has_trivial_move }; };$/;"	e	enum:android::trait_trivial_move::__anon252
ANDROID_VECTOR_H	include/utils/Vector.h	18;"	d
Vector	include/utils/Vector.h	/^Vector<TYPE>::Vector()$/;"	f	class:android::Vector
Vector	include/utils/Vector.h	/^Vector<TYPE>::Vector(const Vector<TYPE>& rhs)$/;"	f	class:android::Vector
Vector	include/utils/Vector.h	/^class Vector : private VectorImpl$/;"	c	namespace:android
add	include/utils/Vector.h	/^ssize_t Vector<TYPE>::add() {$/;"	f	class:android::Vector
add	include/utils/Vector.h	/^ssize_t Vector<TYPE>::add(const TYPE& item) {$/;"	f	class:android::Vector
android	include/utils/Vector.h	/^namespace android {$/;"	n
appendArray	include/utils/Vector.h	/^ssize_t Vector<TYPE>::appendArray(const TYPE* array, size_t length) {$/;"	f	class:android::Vector
appendVector	include/utils/Vector.h	/^ssize_t Vector<TYPE>::appendVector(const Vector<TYPE>& vector) {$/;"	f	class:android::Vector
array	include/utils/Vector.h	/^const TYPE* Vector<TYPE>::array() const {$/;"	f	class:android::Vector
capacity	include/utils/Vector.h	/^    inline  size_t          capacity() const            { return VectorImpl::capacity(); }$/;"	f	class:android::Vector
clear	include/utils/Vector.h	/^    inline  void            clear()             { VectorImpl::clear(); }$/;"	f	class:android::Vector
compar_r_t	include/utils/Vector.h	/^     typedef int (*compar_r_t)(const TYPE* lhs, const TYPE* rhs, void* state);$/;"	t	class:android::Vector
compar_t	include/utils/Vector.h	/^     typedef int (*compar_t)(const TYPE* lhs, const TYPE* rhs);$/;"	t	class:android::Vector
do_construct	include/utils/Vector.h	/^void Vector<TYPE>::do_construct(void* storage, size_t num) const {$/;"	f	class:android::Vector
do_copy	include/utils/Vector.h	/^void Vector<TYPE>::do_copy(void* dest, const void* from, size_t num) const {$/;"	f	class:android::Vector
do_destroy	include/utils/Vector.h	/^void Vector<TYPE>::do_destroy(void* storage, size_t num) const {$/;"	f	class:android::Vector
do_move_backward	include/utils/Vector.h	/^void Vector<TYPE>::do_move_backward(void* dest, const void* from, size_t num) const {$/;"	f	class:android::Vector
do_move_forward	include/utils/Vector.h	/^void Vector<TYPE>::do_move_forward(void* dest, const void* from, size_t num) const {$/;"	f	class:android::Vector
do_splat	include/utils/Vector.h	/^void Vector<TYPE>::do_splat(void* dest, const void* item, size_t num) const {$/;"	f	class:android::Vector
editArray	include/utils/Vector.h	/^TYPE* Vector<TYPE>::editArray() {$/;"	f	class:android::Vector
editItemAt	include/utils/Vector.h	/^TYPE& Vector<TYPE>::editItemAt(size_t index) {$/;"	f	class:android::Vector
editTop	include/utils/Vector.h	/^TYPE& Vector<TYPE>::editTop() {$/;"	f	class:android::Vector
insertArrayAt	include/utils/Vector.h	/^ssize_t Vector<TYPE>::insertArrayAt(const TYPE* array, size_t index, size_t length) {$/;"	f	class:android::Vector
insertAt	include/utils/Vector.h	/^ssize_t Vector<TYPE>::insertAt(const TYPE& item, size_t index, size_t numItems) {$/;"	f	class:android::Vector
insertAt	include/utils/Vector.h	/^ssize_t Vector<TYPE>::insertAt(size_t index, size_t numItems) {$/;"	f	class:android::Vector
insertVectorAt	include/utils/Vector.h	/^ssize_t Vector<TYPE>::insertVectorAt(const Vector<TYPE>& vector, size_t index) {$/;"	f	class:android::Vector
isEmpty	include/utils/Vector.h	/^    inline  bool            isEmpty() const             { return VectorImpl::isEmpty(); }$/;"	f	class:android::Vector
itemAt	include/utils/Vector.h	/^const TYPE& Vector<TYPE>::itemAt(size_t index) const {$/;"	f	class:android::Vector
mirrorItemAt	include/utils/Vector.h	/^const TYPE& Vector<TYPE>::mirrorItemAt(ssize_t index) const {$/;"	f	class:android::Vector
operator =	include/utils/Vector.h	/^Vector<TYPE>& Vector<TYPE>::operator = (const Vector<TYPE>& rhs) {$/;"	f	class:android::Vector
operator =	include/utils/Vector.h	/^const Vector<TYPE>& Vector<TYPE>::operator = (const Vector<TYPE>& rhs) const {$/;"	f	class:android::Vector
operator []	include/utils/Vector.h	/^const TYPE& Vector<TYPE>::operator[](size_t index) const {$/;"	f	class:android::Vector
pop	include/utils/Vector.h	/^void Vector<TYPE>::pop() {$/;"	f	class:android::Vector
push	include/utils/Vector.h	/^void Vector<TYPE>::push() {$/;"	f	class:android::Vector
push	include/utils/Vector.h	/^void Vector<TYPE>::push(const TYPE& item) {$/;"	f	class:android::Vector
removeAt	include/utils/Vector.h	/^    inline  ssize_t         removeAt(size_t index)  { return removeItemsAt(index); }$/;"	f	class:android::Vector
removeItemsAt	include/utils/Vector.h	/^ssize_t Vector<TYPE>::removeItemsAt(size_t index, size_t count) {$/;"	f	class:android::Vector
replaceAt	include/utils/Vector.h	/^ssize_t Vector<TYPE>::replaceAt(const TYPE& item, size_t index) {$/;"	f	class:android::Vector
replaceAt	include/utils/Vector.h	/^ssize_t Vector<TYPE>::replaceAt(size_t index) {$/;"	f	class:android::Vector
setCapacity	include/utils/Vector.h	/^    inline  ssize_t         setCapacity(size_t size)    { return VectorImpl::setCapacity(size); }$/;"	f	class:android::Vector
size	include/utils/Vector.h	/^    inline  size_t          size() const                { return VectorImpl::size(); }$/;"	f	class:android::Vector
sort	include/utils/Vector.h	/^status_t Vector<TYPE>::sort(Vector<TYPE>::compar_r_t cmp, void* state) {$/;"	f	class:android::Vector
sort	include/utils/Vector.h	/^status_t Vector<TYPE>::sort(Vector<TYPE>::compar_t cmp) {$/;"	f	class:android::Vector
top	include/utils/Vector.h	/^const TYPE& Vector<TYPE>::top() const {$/;"	f	class:android::Vector
value_type	include/utils/Vector.h	/^            typedef TYPE    value_type;$/;"	t	class:android::Vector
~Vector	include/utils/Vector.h	/^Vector<TYPE>::~Vector() {$/;"	f	class:android::Vector
ANDROID_VECTOR_IMPL_H	include/utils/VectorImpl.h	18;"	d
HAS_TRIVIAL_COPY	include/utils/VectorImpl.h	/^        HAS_TRIVIAL_COPY    = 0x00000004,$/;"	e	enum:android::VectorImpl::__anon227
HAS_TRIVIAL_CTOR	include/utils/VectorImpl.h	/^        HAS_TRIVIAL_CTOR    = 0x00000001,$/;"	e	enum:android::VectorImpl::__anon227
HAS_TRIVIAL_DTOR	include/utils/VectorImpl.h	/^        HAS_TRIVIAL_DTOR    = 0x00000002,$/;"	e	enum:android::VectorImpl::__anon227
SortedVectorImpl	include/utils/VectorImpl.h	/^class SortedVectorImpl : public VectorImpl$/;"	c	namespace:android
VectorImpl	include/utils/VectorImpl.h	/^class VectorImpl$/;"	c	namespace:android
android	include/utils/VectorImpl.h	/^namespace android {$/;"	n
arrayImpl	include/utils/VectorImpl.h	/^    inline  const void*     arrayImpl() const       { return mStorage; }$/;"	f	class:android::VectorImpl
compar_r_t	include/utils/VectorImpl.h	/^            typedef int (*compar_r_t)(const void* lhs, const void* rhs, void* state);$/;"	t	class:android::VectorImpl
compar_t	include/utils/VectorImpl.h	/^            typedef int (*compar_t)(const void* lhs, const void* rhs);$/;"	t	class:android::VectorImpl
isEmpty	include/utils/VectorImpl.h	/^    inline  bool            isEmpty() const     { return mCount == 0; }$/;"	f	class:android::VectorImpl
mCount	include/utils/VectorImpl.h	/^            size_t      mCount;     \/\/ number of items$/;"	m	class:android::VectorImpl
mFlags	include/utils/VectorImpl.h	/^    const   uint32_t    mFlags;$/;"	m	class:android::VectorImpl
mItemSize	include/utils/VectorImpl.h	/^    const   size_t      mItemSize;$/;"	m	class:android::VectorImpl
mStorage	include/utils/VectorImpl.h	/^            void *      mStorage;   \/\/ base address of the vector$/;"	m	class:android::VectorImpl
size	include/utils/VectorImpl.h	/^    inline  size_t          size() const        { return mCount; }$/;"	f	class:android::VectorImpl
ZipEntryCRO	include/utils/ZipFileCRO.h	/^typedef void* ZipEntryCRO;$/;"	t
ZipFileCRO	include/utils/ZipFileCRO.h	/^typedef void* ZipFileCRO;$/;"	t
__LIBS_ZIPFILECRO_H	include/utils/ZipFileCRO.h	21;"	d
HashEntry	include/utils/ZipFileRO.h	/^    typedef struct HashEntry {$/;"	s	class:android::ZipFileRO
HashEntry	include/utils/ZipFileRO.h	/^    } HashEntry;$/;"	t	class:android::ZipFileRO	typeref:struct:android::ZipFileRO::HashEntry
ZipEntryRO	include/utils/ZipFileRO.h	/^typedef void* ZipEntryRO;$/;"	t	namespace:android
ZipFileRO	include/utils/ZipFileRO.h	/^    ZipFileRO()$/;"	f	class:android::ZipFileRO
ZipFileRO	include/utils/ZipFileRO.h	/^class ZipFileRO {$/;"	c	namespace:android
__LIBS_ZIPFILERO_H	include/utils/ZipFileRO.h	31;"	d
android	include/utils/ZipFileRO.h	/^namespace android {$/;"	n
get2LE	include/utils/ZipFileRO.h	/^    static inline unsigned short get2LE(const unsigned char* buf) {$/;"	f	class:android::ZipFileRO
get4LE	include/utils/ZipFileRO.h	/^    static inline unsigned long get4LE(const unsigned char* buf) {$/;"	f	class:android::ZipFileRO
getNumEntries	include/utils/ZipFileRO.h	/^    int getNumEntries(void) const {$/;"	f	class:android::ZipFileRO
kCompressDeflated	include/utils/ZipFileRO.h	/^        kCompressDeflated   = 8,        \/\/ standard deflate$/;"	e	enum:android::ZipFileRO::__anon297
kCompressStored	include/utils/ZipFileRO.h	/^        kCompressStored     = 0,        \/\/ no compression$/;"	e	enum:android::ZipFileRO::__anon297
mDirectoryMap	include/utils/ZipFileRO.h	/^    FileMap*    mDirectoryMap;$/;"	m	class:android::ZipFileRO
mDirectoryOffset	include/utils/ZipFileRO.h	/^    off_t       mDirectoryOffset;$/;"	m	class:android::ZipFileRO
mFd	include/utils/ZipFileRO.h	/^    int         mFd;$/;"	m	class:android::ZipFileRO
mFdLock	include/utils/ZipFileRO.h	/^    mutable Mutex mFdLock;$/;"	m	class:android::ZipFileRO
mFileLength	include/utils/ZipFileRO.h	/^    size_t      mFileLength;$/;"	m	class:android::ZipFileRO
mFileName	include/utils/ZipFileRO.h	/^    char*       mFileName;$/;"	m	class:android::ZipFileRO
mHashTable	include/utils/ZipFileRO.h	/^    HashEntry*  mHashTable;$/;"	m	class:android::ZipFileRO
mHashTableSize	include/utils/ZipFileRO.h	/^    int         mHashTableSize;$/;"	m	class:android::ZipFileRO
mNumEntries	include/utils/ZipFileRO.h	/^    int         mNumEntries;$/;"	m	class:android::ZipFileRO
name	include/utils/ZipFileRO.h	/^        const char*     name;$/;"	m	struct:android::ZipFileRO::HashEntry
nameLen	include/utils/ZipFileRO.h	/^        unsigned short  nameLen;$/;"	m	struct:android::ZipFileRO::HashEntry
ZipUtils	include/utils/ZipUtils.h	/^    ZipUtils() {}$/;"	f	class:android::ZipUtils
ZipUtils	include/utils/ZipUtils.h	/^class ZipUtils {$/;"	c	namespace:android
__LIBS_ZIPUTILS_H	include/utils/ZipUtils.h	21;"	d
android	include/utils/ZipUtils.h	/^namespace android {$/;"	n
~ZipUtils	include/utils/ZipUtils.h	/^    ~ZipUtils() {}$/;"	f	class:android::ZipUtils
ASHMEM_GET_NAME	include/utils/ashmem.h	31;"	d
ASHMEM_GET_PROT_MASK	include/utils/ashmem.h	35;"	d
ASHMEM_GET_SIZE	include/utils/ashmem.h	33;"	d
ASHMEM_ISPINNED	include/utils/ashmem.h	38;"	d
ASHMEM_NAME_DEF	include/utils/ashmem.h	18;"	d
ASHMEM_NAME_LEN	include/utils/ashmem.h	16;"	d
ASHMEM_NOT_REAPED	include/utils/ashmem.h	21;"	d
ASHMEM_NOW_PINNED	include/utils/ashmem.h	26;"	d
ASHMEM_NOW_UNPINNED	include/utils/ashmem.h	25;"	d
ASHMEM_PIN	include/utils/ashmem.h	36;"	d
ASHMEM_PURGE_ALL_CACHES	include/utils/ashmem.h	39;"	d
ASHMEM_SET_NAME	include/utils/ashmem.h	30;"	d
ASHMEM_SET_PROT_MASK	include/utils/ashmem.h	34;"	d
ASHMEM_SET_SIZE	include/utils/ashmem.h	32;"	d
ASHMEM_UNPIN	include/utils/ashmem.h	37;"	d
ASHMEM_WAS_REAPED	include/utils/ashmem.h	22;"	d
_UTILS_ASHMEM_H	include/utils/ashmem.h	11;"	d
__ASHMEMIOC	include/utils/ashmem.h	28;"	d
FileType	include/utils/misc.h	/^typedef enum FileType {$/;"	g	namespace:android
FileType	include/utils/misc.h	/^} FileType;$/;"	t	namespace:android	typeref:enum:android::FileType
NELEM	include/utils/misc.h	30;"	d
_LIBS_UTILS_MISC_H	include/utils/misc.h	21;"	d
android	include/utils/misc.h	/^namespace android {$/;"	n
kFileTypeBlockDev	include/utils/misc.h	/^    kFileTypeBlockDev,$/;"	e	enum:android::FileType
kFileTypeCharDev	include/utils/misc.h	/^    kFileTypeCharDev,$/;"	e	enum:android::FileType
kFileTypeDirectory	include/utils/misc.h	/^    kFileTypeDirectory,$/;"	e	enum:android::FileType
kFileTypeFifo	include/utils/misc.h	/^    kFileTypeFifo,$/;"	e	enum:android::FileType
kFileTypeNonexistent	include/utils/misc.h	/^    kFileTypeNonexistent,       \/\/ i.e. ENOENT$/;"	e	enum:android::FileType
kFileTypeRegular	include/utils/misc.h	/^    kFileTypeRegular,$/;"	e	enum:android::FileType
kFileTypeSocket	include/utils/misc.h	/^    kFileTypeSocket,$/;"	e	enum:android::FileType
kFileTypeSymlink	include/utils/misc.h	/^    kFileTypeSymlink,$/;"	e	enum:android::FileType
kFileTypeUnknown	include/utils/misc.h	/^    kFileTypeUnknown = 0,$/;"	e	enum:android::FileType
ANDROID_PRIORITY_AUDIO	include/utils/threads.h	/^    ANDROID_PRIORITY_AUDIO          = -16,$/;"	e	enum:__anon229
ANDROID_PRIORITY_BACKGROUND	include/utils/threads.h	/^    ANDROID_PRIORITY_BACKGROUND     =  10,$/;"	e	enum:__anon229
ANDROID_PRIORITY_DEFAULT	include/utils/threads.h	/^    ANDROID_PRIORITY_DEFAULT        = ANDROID_PRIORITY_NORMAL,$/;"	e	enum:__anon229
ANDROID_PRIORITY_DISPLAY	include/utils/threads.h	/^    ANDROID_PRIORITY_DISPLAY        =  -4,$/;"	e	enum:__anon229
ANDROID_PRIORITY_FOREGROUND	include/utils/threads.h	/^    ANDROID_PRIORITY_FOREGROUND     =  -2,$/;"	e	enum:__anon229
ANDROID_PRIORITY_HIGHEST	include/utils/threads.h	/^    ANDROID_PRIORITY_HIGHEST        = -20,$/;"	e	enum:__anon229
ANDROID_PRIORITY_LESS_FAVORABLE	include/utils/threads.h	/^    ANDROID_PRIORITY_LESS_FAVORABLE = +1,$/;"	e	enum:__anon229
ANDROID_PRIORITY_LOWEST	include/utils/threads.h	/^    ANDROID_PRIORITY_LOWEST         =  19,$/;"	e	enum:__anon229
ANDROID_PRIORITY_MORE_FAVORABLE	include/utils/threads.h	/^    ANDROID_PRIORITY_MORE_FAVORABLE = -1,$/;"	e	enum:__anon229
ANDROID_PRIORITY_NORMAL	include/utils/threads.h	/^    ANDROID_PRIORITY_NORMAL         =   0,$/;"	e	enum:__anon229
ANDROID_PRIORITY_URGENT_AUDIO	include/utils/threads.h	/^    ANDROID_PRIORITY_URGENT_AUDIO   = -19,$/;"	e	enum:__anon229
ANDROID_PRIORITY_URGENT_DISPLAY	include/utils/threads.h	/^    ANDROID_PRIORITY_URGENT_DISPLAY =  -8,$/;"	e	enum:__anon229
ANDROID_TGROUP_BG_NONINTERACT	include/utils/threads.h	/^    ANDROID_TGROUP_BG_NONINTERACT   = 1,$/;"	e	enum:__anon230
ANDROID_TGROUP_DEFAULT	include/utils/threads.h	/^    ANDROID_TGROUP_DEFAULT          = 0,$/;"	e	enum:__anon230
ANDROID_TGROUP_FG_BOOST	include/utils/threads.h	/^    ANDROID_TGROUP_FG_BOOST         = 2,$/;"	e	enum:__anon230
ANDROID_TGROUP_MAX	include/utils/threads.h	/^    ANDROID_TGROUP_MAX              = ANDROID_TGROUP_FG_BOOST,$/;"	e	enum:__anon230
AutoMutex	include/utils/threads.h	/^typedef Mutex::Autolock AutoMutex;$/;"	t	namespace:android
AutoRLock	include/utils/threads.h	/^        inline AutoRLock(RWLock& rwlock) : mLock(rwlock)  { mLock.readLock(); }$/;"	f	class:android::RWLock::AutoRLock
AutoRLock	include/utils/threads.h	/^    class AutoRLock {$/;"	c	class:android::RWLock
AutoWLock	include/utils/threads.h	/^        inline AutoWLock(RWLock& rwlock) : mLock(rwlock)  { mLock.writeLock(); }$/;"	f	class:android::RWLock::AutoWLock
AutoWLock	include/utils/threads.h	/^    class AutoWLock {$/;"	c	class:android::RWLock
Autolock	include/utils/threads.h	/^        inline Autolock(Mutex& mutex) : mLock(mutex)  { mLock.lock(); }$/;"	f	class:android::Mutex::Autolock
Autolock	include/utils/threads.h	/^        inline Autolock(Mutex* mutex) : mLock(*mutex) { mLock.lock(); }$/;"	f	class:android::Mutex::Autolock
Autolock	include/utils/threads.h	/^    class Autolock {$/;"	c	class:android::Mutex
Condition	include/utils/threads.h	/^class Condition {$/;"	c	namespace:android
Condition	include/utils/threads.h	/^inline Condition::Condition() {$/;"	f	class:android::Condition
Condition	include/utils/threads.h	/^inline Condition::Condition(int type) {$/;"	f	class:android::Condition
Mutex	include/utils/threads.h	/^class Mutex {$/;"	c	namespace:android
Mutex	include/utils/threads.h	/^inline Mutex::Mutex() {$/;"	f	class:android::Mutex
Mutex	include/utils/threads.h	/^inline Mutex::Mutex(const char* name) {$/;"	f	class:android::Mutex
Mutex	include/utils/threads.h	/^inline Mutex::Mutex(int type, const char* name) {$/;"	f	class:android::Mutex
PRIORITY_AUDIO	include/utils/threads.h	/^    PRIORITY_AUDIO          = ANDROID_PRIORITY_AUDIO,$/;"	e	enum:android::__anon231
PRIORITY_BACKGROUND	include/utils/threads.h	/^    PRIORITY_BACKGROUND     = ANDROID_PRIORITY_BACKGROUND,$/;"	e	enum:android::__anon231
PRIORITY_DEFAULT	include/utils/threads.h	/^    PRIORITY_DEFAULT        = ANDROID_PRIORITY_DEFAULT,$/;"	e	enum:android::__anon231
PRIORITY_DISPLAY	include/utils/threads.h	/^    PRIORITY_DISPLAY        = ANDROID_PRIORITY_DISPLAY,$/;"	e	enum:android::__anon231
PRIORITY_FOREGROUND	include/utils/threads.h	/^    PRIORITY_FOREGROUND     = ANDROID_PRIORITY_FOREGROUND,$/;"	e	enum:android::__anon231
PRIORITY_HIGHEST	include/utils/threads.h	/^    PRIORITY_HIGHEST        = ANDROID_PRIORITY_HIGHEST,$/;"	e	enum:android::__anon231
PRIORITY_LESS_FAVORABLE	include/utils/threads.h	/^    PRIORITY_LESS_FAVORABLE = ANDROID_PRIORITY_LESS_FAVORABLE,$/;"	e	enum:android::__anon231
PRIORITY_LOWEST	include/utils/threads.h	/^    PRIORITY_LOWEST         = ANDROID_PRIORITY_LOWEST,$/;"	e	enum:android::__anon231
PRIORITY_MORE_FAVORABLE	include/utils/threads.h	/^    PRIORITY_MORE_FAVORABLE = ANDROID_PRIORITY_MORE_FAVORABLE,$/;"	e	enum:android::__anon231
PRIORITY_NORMAL	include/utils/threads.h	/^    PRIORITY_NORMAL         = ANDROID_PRIORITY_NORMAL,$/;"	e	enum:android::__anon231
PRIORITY_URGENT_AUDIO	include/utils/threads.h	/^    PRIORITY_URGENT_AUDIO   = ANDROID_PRIORITY_URGENT_AUDIO,$/;"	e	enum:android::__anon231
PRIORITY_URGENT_DISPLAY	include/utils/threads.h	/^    PRIORITY_URGENT_DISPLAY = ANDROID_PRIORITY_URGENT_DISPLAY,$/;"	e	enum:android::__anon231
PRIVATE	include/utils/threads.h	/^        PRIVATE = 0,$/;"	e	enum:android::Condition::__anon234
PRIVATE	include/utils/threads.h	/^        PRIVATE = 0,$/;"	e	enum:android::Mutex::__anon232
PRIVATE	include/utils/threads.h	/^        PRIVATE = 0,$/;"	e	enum:android::RWLock::__anon233
RWLock	include/utils/threads.h	/^class RWLock {$/;"	c	namespace:android
RWLock	include/utils/threads.h	/^inline RWLock::RWLock() {$/;"	f	class:android::RWLock
RWLock	include/utils/threads.h	/^inline RWLock::RWLock(const char* name) {$/;"	f	class:android::RWLock
RWLock	include/utils/threads.h	/^inline RWLock::RWLock(int type, const char* name) {$/;"	f	class:android::RWLock
SHARED	include/utils/threads.h	/^        SHARED = 1$/;"	e	enum:android::Condition::__anon234
SHARED	include/utils/threads.h	/^        SHARED = 1$/;"	e	enum:android::Mutex::__anon232
SHARED	include/utils/threads.h	/^        SHARED = 1$/;"	e	enum:android::RWLock::__anon233
Thread	include/utils/threads.h	/^class Thread : virtual public RefBase$/;"	c	namespace:android
_LIBS_UTILS_THREADS_H	include/utils/threads.h	18;"	d
android	include/utils/threads.h	/^namespace android {$/;"	n
android_create_thread_fn	include/utils/threads.h	/^typedef int (*android_create_thread_fn)(android_thread_func_t entryFunction,$/;"	t
android_thread_func_t	include/utils/threads.h	/^typedef int (*android_thread_func_t)(void*);$/;"	t
android_thread_id_t	include/utils/threads.h	/^typedef void* android_thread_id_t;$/;"	t
broadcast	include/utils/threads.h	/^inline void Condition::broadcast() {$/;"	f	class:android::Condition
createThread	include/utils/threads.h	/^inline bool createThread(thread_func_t f, void *a) {$/;"	f	namespace:android
createThreadEtc	include/utils/threads.h	/^inline bool createThreadEtc(thread_func_t entryFunction,$/;"	f	namespace:android
getThreadId	include/utils/threads.h	/^inline thread_id_t getThreadId() {$/;"	f	namespace:android
lock	include/utils/threads.h	/^inline status_t Mutex::lock() {$/;"	f	class:android::Mutex
mCanCallJava	include/utils/threads.h	/^    const   bool            mCanCallJava;$/;"	m	class:android::Thread
mCond	include/utils/threads.h	/^    pthread_cond_t mCond;$/;"	m	class:android::Condition
mExitPending	include/utils/threads.h	/^    volatile bool           mExitPending;$/;"	m	class:android::Thread
mHoldSelf	include/utils/threads.h	/^            sp<Thread>      mHoldSelf;$/;"	m	class:android::Thread
mLock	include/utils/threads.h	/^            Mutex           mLock;$/;"	m	class:android::Thread
mLock	include/utils/threads.h	/^        Mutex& mLock;$/;"	m	class:android::Mutex::Autolock
mLock	include/utils/threads.h	/^        RWLock& mLock;$/;"	m	class:android::RWLock::AutoRLock
mLock	include/utils/threads.h	/^        RWLock& mLock;$/;"	m	class:android::RWLock::AutoWLock
mMutex	include/utils/threads.h	/^    pthread_mutex_t mMutex;$/;"	m	class:android::Mutex
mRWLock	include/utils/threads.h	/^   pthread_rwlock_t mRWLock;$/;"	m	class:android::RWLock
mRunning	include/utils/threads.h	/^    volatile bool           mRunning;$/;"	m	class:android::Thread
mState	include/utils/threads.h	/^    void*   mState;$/;"	m	class:android::Condition
mState	include/utils/threads.h	/^    void*   mState;$/;"	m	class:android::Mutex
mStatus	include/utils/threads.h	/^            status_t        mStatus;$/;"	m	class:android::Thread
mThread	include/utils/threads.h	/^            thread_id_t     mThread;$/;"	m	class:android::Thread
mThreadExitedCondition	include/utils/threads.h	/^            Condition       mThreadExitedCondition;$/;"	m	class:android::Thread
mTid	include/utils/threads.h	/^            int             mTid;$/;"	m	class:android::Thread
readLock	include/utils/threads.h	/^inline status_t RWLock::readLock() {$/;"	f	class:android::RWLock
signal	include/utils/threads.h	/^inline void Condition::signal() {$/;"	f	class:android::Condition
thread_func_t	include/utils/threads.h	/^typedef android_thread_func_t thread_func_t;$/;"	t	namespace:android
thread_id_t	include/utils/threads.h	/^typedef android_thread_id_t thread_id_t;$/;"	t	namespace:android
tryLock	include/utils/threads.h	/^inline status_t Mutex::tryLock() {$/;"	f	class:android::Mutex
tryReadLock	include/utils/threads.h	/^inline status_t RWLock::tryReadLock() {$/;"	f	class:android::RWLock
tryWriteLock	include/utils/threads.h	/^inline status_t RWLock::tryWriteLock() {$/;"	f	class:android::RWLock
unlock	include/utils/threads.h	/^inline void Mutex::unlock() {$/;"	f	class:android::Mutex
unlock	include/utils/threads.h	/^inline void RWLock::unlock() {$/;"	f	class:android::RWLock
wait	include/utils/threads.h	/^inline status_t Condition::wait(Mutex& mutex) {$/;"	f	class:android::Condition
waitRelative	include/utils/threads.h	/^inline status_t Condition::waitRelative(Mutex& mutex, nsecs_t reltime) {$/;"	f	class:android::Condition
writeLock	include/utils/threads.h	/^inline status_t RWLock::writeLock() {$/;"	f	class:android::RWLock
~AutoRLock	include/utils/threads.h	/^        inline ~AutoRLock() { mLock.unlock(); }$/;"	f	class:android::RWLock::AutoRLock
~AutoWLock	include/utils/threads.h	/^        inline ~AutoWLock() { mLock.unlock(); }$/;"	f	class:android::RWLock::AutoWLock
~Autolock	include/utils/threads.h	/^        inline ~Autolock() { mLock.unlock(); }$/;"	f	class:android::Mutex::Autolock
~Condition	include/utils/threads.h	/^inline Condition::~Condition() {$/;"	f	class:android::Condition
~Mutex	include/utils/threads.h	/^inline Mutex::~Mutex() {$/;"	f	class:android::Mutex
~RWLock	include/utils/threads.h	/^inline RWLock::~RWLock() {$/;"	f	class:android::RWLock
_ZIPFILE_ZIPFILE_H	include/zipfile/zipfile.h	18;"	d
zipentry_t	include/zipfile/zipfile.h	/^typedef void* zipentry_t;$/;"	t
zipfile_t	include/zipfile/zipfile.h	/^typedef void* zipfile_t;$/;"	t
